{"version":3,"sources":["webpack://dgrid_wrapper_app/WeakMap.ts","webpack://dgrid_wrapper_app/Set.ts","webpack://dgrid_wrapper_app/object.ts","webpack://dgrid_wrapper_app/Map.ts","webpack://dgrid_wrapper_app/Destroyable.ts","webpack://dgrid_wrapper_app/Evented.ts","webpack://dgrid_wrapper_app/Registry.ts","webpack://dgrid_wrapper_app/diff.ts","webpack://dgrid_wrapper_app/RegistryHandler.ts","webpack://dgrid_wrapper_app/vdom.ts","webpack://dgrid_wrapper_app/NodeHandler.ts","webpack://dgrid_wrapper_app/WidgetBase.ts","webpack://dgrid_wrapper_app/util.ts","webpack://dgrid_wrapper_app/handleDecorator.ts","webpack://dgrid_wrapper_app/diffProperty.ts","webpack://dgrid_wrapper_app/DgridWrapper.ts","webpack://dgrid_wrapper_app/./src/widgets/App.ts","webpack://dgrid_wrapper_app/./src/main.ts"],"names":["shim_WeakMap","global","WeakMap","shim_Set","Set","object_assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","is","keys","getOwnPropertyDescriptors","entries","values","Object","assign","Map","shim_Map","noop","Promise","resolve","destroyed","Error","Destroyable_Destroyable","[object Object]","this","handles","handle","_handles","push","splice","indexOf","destroy","forEach","own","regexMap","Evented_Evented","listenersMap","event","methods","type","globString","targetString","regex","has","get","RegExp","replace","set","test","isGlobMatch","method","call","listener","Array","isArray","map","_addListener","listeners","WIDGET_BASE_TYPE","isWidgetBaseConstructor","item","Boolean","_type","isWidgetFunction","isWidget","isWNodeFactory","node","isFactory","Registry_Registry","widgetLabel","emit","action","label","undefined","_widgetRegistry","toString","then","widgetCtor","emitLoadedEvent","error","injectorFactory","_injectorRegistry","invalidator","injectorItem","injector","promise","hasOwnProperty","default","isWidgetConstructorDefaultExport","hasInjector","isObjectOrArray","value","prototype","reference","previousProperty","newProperty","changed","auto","result","ignore","diff_shallow","depth","validOldProperty","validNewProperty","previousKeys","newKeys","length","some","key","core_RegistryHandler","super","_registry","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","delete","base","widget","define","defineInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","i","registry","registeredLabels","on","EMPTY_ARRAY","nodeOperations","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","WNODE","VNODE","DOMVNODE","isTextNode","nodeType","isWNodeWrapper","child","isWNode","isVNodeWrapper","isVNode","isVirtualWrapper","tag","isBodyWrapper","wrapper","isDomVNode","isElementNode","tagName","w","widgetConstructorOrNode","properties","children","widgetConstructor","v","propertiesOrChildren","deferredPropertiesCallback","classes","styles","newProperties","__rest","_a","nodeClasses","nodeStyles","nodeProperties","REGISTRY_ITEM","FromRegistry","buildPreviousProperties","domNode","current","diffType","attributes","deferredProperties","events","propName","attrName","getAttribute","reduce","props","property","same","dnode1","dnode2","widgetConstructor1","registryItem","widgetConstructor2","instance","findIndexOfChild","sameAs","start","createClassPropValue","classNames","className","updateAttribute","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","arrayFrom","arr","slice","createFactory","callback","middlewares","factory","returns","create","widgetInstanceMap","widgetMetaMap","requestedDomNodes","wrapperId","metaId","addNodeToMap","id","widgetMeta","nodeMap","destroyHandles","destroyMap","clear","widgetId","split","add","propertyName","diff","customDiffMap","customDiffProperties","propertyDiffMap","destroyFunction","registryHandler","isDeferred","deferRefs","NodeEventType","vdom","renderer","_renderScheduled","parentInvalidate","_mountOptions","sync","merge","transition","document","body","_invalidationQueue","_processQueue","_deferredProcessQueue","_applicationQueue","_eventMap","_idToWrapperMap","_wrapperSiblingMap","_idToChildrenWrappers","_insertBeforeMap","_nodeToWrapperMap","_idleCallbacks","_deferredRenderCallbacks","_allMergedNodes","nodeOperation","propValue","previousValue","updateEvent","eventName","currentValue","previousEvent","removeEventListener","evt","target","addEventListener","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","eventCallback","resolveRegistryItem","owningNode","instanceData","registryLabel","isLazyDefine","renderedToWrapper","rendered","parent","currentParent","requiresInsertBefore","hasPreviousSiblings","wrappedRendered","hasParentWNode","hasVirtualParentNode","hasCurrentParentChildren","insertBefore","previousItem","nodes","pop","mapNodeToInstance","renderedItem","text","order","parentId","exitAnimation","hasAnimations","nextParent","owningId","runDeferredProperties","next","processProperties","findInsertBefore","searchNode","nextSibling","childDomWrapperId","childWrapper","parentNode","setValue","domValue","onInputValue","onSelectValue","setProperties","currentProperties","nextWrapper","includesEventsAndAttributes","propNames","propCount","previousClassString","currentClassString","merged","domClasses","styleNames","styleCount","j","styleName","newStyleValue","style","lastIndexOf","previousAttributes","attrNames","attrCount","updateAttributes","_schedule","_runInvalidationQueue","requestAnimationFrame","getWNodeWrapper","invalidationQueue","previouslyRendered","sort","a","b","_runProcessQueue","sibling","_updateWidget","_runDomInstructionQueue","_cleanUpMergedNodes","_runCallbacks","mergedNode","removeChild","setDomNodeOnParentWrapper","meta","_process","reverse","parentDomNode","onAttach","parentElement","enterAnimation","enterAnimationActive","enter","owningWrapper","nodeHandler","inserted","currentDomNode","replaceChild","exitAnimationActive","exit","attached","addRoot","onDetach","callbacks","run","shift","requestIdleCallback","setTimeout","runAfterRenderCallbacks","runDeferredRenderCallbacks","createKeyMap","wrappers","mergeNodes","oldIndex","newIndex","currentLength","nextLength","instructions","currentKeys","nextKeys","currentWrapper","domElement","toUpperCase","mergeNodeIndex","_processMergeNodes","_processOne","dom","currentNode","parentWrapper","findParentDomNode","isVirtual","isBody","data","createTextNode","childNodes","createElementNS","createElement","_createDom","invalidate","Constructor","dirty","rendering","__setProperties__","__setChildren__","__render__","middleware","resolveMiddleware","results","uniqueId","payload","resolvedMiddleware","_createWidget","currentChildren","_updateDom","remove","bodyIds","wrapperChildren","_removeDom","processResult","_removeWidget","didRender","size","diffMap","runDiffs","ignoreProperties","propertyNames","propertiesDiff","nextChildren","mount","mountOptions","renderResult","wrapNodes","siblingId","core_NodeHandler","_nodeMap","element","Widget","Projector","decoratorMap","builtDecoratorMap","boundAuto","bind","IGNORE_LIST","getPrototypeOf","autoBindCache","WidgetBase_WidgetBase","_initialProperties","_changedPropertyKeys","_nodeHandler","_children","_decoratorCache","_properties","_boundRenderFunc","render","_boundInvalidate","inputProperties","_runAfterConstructors","MetaType","_metaMap","cached","changedPropertyKeys","originalProperties","_runBeforeProperties","registeredDiffPropertyNames","getDecorator","constructor","ownKeys","filter","k","boundFunc","defineProperty","configurable","autoBind","allProperties","checkedProperties","diffPropertyResults","runReactions","diffFunctions","reactionFunctions","executedReactions","reaction","propertyChanged","reactionRun","_runBeforeRenders","_runAfterRenders","decoratorKey","decoratorList","specificDecoratorList","decorators","allDecorators","instanceMap","unshift","buildDecorators","decoratorCache","_buildDecoratorList","beforeProperties","beforePropertiesFunction","beforeRenders","beforeRenderFunction","updatedRender","console","warn","dNode","afterRenders","afterRenderFunction","afterRender","isDomMeta","afterConstructors","afterConstructor","core_WidgetBase","util_hasOwnProperty","shouldDeepCopyObject","copyArray","array","inherited","_mixin","deep","sources","kwArgs","copied","copiedClone","source","targetValue","deepMixin","handleDecorator","handler","propertyKey","descriptor","diffProperty_diffProperty","diffFunction","reactionFunction","addDecorator","SelectionMode","constructionKeys","SelectionType","duplicate","buildSelectEvent","selectionType","rows","row","cell","rowData","cells","cellData","field","column","buildCellFocus","parentType","DgridWrapper_DgridInnerWrapper","grid","_grid","setChangedGridProperites","initGrid","registerGridEvents","attrs","toLowerCase","vdom_dom","restoreGridState","startup","onGridState","currentPage","_currentPage","emitGridState","pagination","keyboard","selection","selector","tree","columnHider","columnReorder","columnResizer","compoundColumns","columnSet","features","mixins","overrides","Grid_","Pagination_","_updateNavigation","total","arguments","OnDemandGrid_","Tree_","Keyboard_","Selection_","CellSelection_","Selector_","ColumnHider_","ColumnReorder_","ColumnResizer_","CompoundColumns_","ColumnSet_","declare_","buildConstructor","filterProperties","gridState","gotoPage","DgridWrapper_rest","columnsSpec","collection","treeEnabled","Memory_","Trackable_","external_dstore_Tree_","getRootCollection","root","buildCollection","columnSets","subRows","subRow","columns","columnSpec","changeProperties","onSelect","onDeselect","onColumnStateChange","hidden","buildColumnStateChange","onColumnReorder","buildColumnReorder","onColumnResize","width","columnId","buildColumnResize","onCellFocusIn","onCellFocusOut","onSort","onError","buildSort","buildError","DgridWrapper_DgridWrapper","_gridState","dgrid_DgridWrapper","__decorate","prevColumnSpec","newColumnSpec","prevIsArray","prevColumnArray","newColumnArray","previousColumnDef","buildToggleLabel","widgets_App","_data","first","last","hasChildren","_columnSets","_compoundColumns","_paginationOn","_rowsPerPage","_previousNextArrows","_firstLastArrows","_pagingLinks","_columnToggle","_columnDefs","renderExpando","_keyboardOn","_pageSkip","_deselectOnRefresh","_allowSelectAll","_selectionMode","single","_allowTextSelection","_treeOn","_collapseOnRefresh","_enableTreeTransitions","_treeIndentWidth","_columnHiderOn","_columnReorderOn","_columnResizerOn","_compoundColumnsOn","_columnSetsOn","_selectionType","rowsPerPage","previousNextArrows","firstLastArrows","pagingLinks","pageSkip","tabIndex","deselectOnRefresh","allowSelectAll","selectionMode","allowTextSelection","selected","selections","log","deselected","collapseOnRefresh","enableTreeTransitions","treeIndentWidth","columnStateData","onclick","addData","swapColumnDef","togglePagination","renderPaginationButtons","toggleKeyboard","renderKeyboardButtons","toggleSelectionOnOff","renderSelectionButtons","toggleTree","renderTreeButtons","toggleColumnHider","toggleColumnReorder","toggleColumnResizer","toggleCompoundColumns","toggleColumnSets","updateRowsPerPage","nextRowsPerPage","togglePreviousNextArrows","toggleFirstLastArrows","updatePagingLinks","nextPagingLinks","App_duplicate","updatePageSkip","nextPageSkip","toggleSelectionType","toggleDeselectOnRefresh","toggleAllowSelectAll","toggleAllowTextSelection","setSelectionModeNone","setSelectionModeMultiple","setSelectionModeExtended","setSelectionModeSingle","none","multiple","extended","toggleCollapseOnRefresh","toggleEnableTreeTransitions","updateTreeIndentWidth","nextTreeIndentWidth"],"mappings":"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","file":"main.4d802c6026f90a122d01.bundle.js","sourcesContent":["import global from './global';\n`!has('es6-iterator')`;\nimport { isArrayLike, Iterable } from './iterator';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface WeakMap<K extends object, V> {\n\t/**\n\t * Remove a `key` from the map\n\t *\n\t * @param key The key to remove\n\t * @return `true` if the value was removed, otherwise `false`\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Retrieve the value, based on the supplied `key`\n\t *\n\t * @param key The key to retrieve the `value` for\n\t * @return the `value` based on the `key` if found, otherwise `false`\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Determines if a `key` is present in the map\n\t *\n\t * @param key The `key` to check\n\t * @return `true` if the key is part of the map, otherwise `false`.\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Set a `value` for a particular `key`.\n\t *\n\t * @param key The `key` to set the `value` for\n\t * @param value The `value` to set\n\t * @return the instances\n\t */\n\tset(key: K, value: V): this;\n\n\treadonly [Symbol.toStringTag]: 'WeakMap';\n}\n\nexport interface WeakMapConstructor {\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t */\n\tnew (): WeakMap<object, any>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable?: [K, V][]): WeakMap<K, V>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable: Iterable<[K, V]>): WeakMap<K, V>;\n\n\treadonly prototype: WeakMap<object, any>;\n}\n\nexport let WeakMap: WeakMapConstructor = global.WeakMap;\n\ninterface Entry<K, V> {\n\tkey: K;\n\tvalue: V;\n}\n\nif (!has('es6-weakmap')) {\n\tconst DELETED: any = {};\n\n\tconst getUID = function getUID(): number {\n\t\treturn Math.floor(Math.random() * 100000000);\n\t};\n\n\tconst generateName = (function() {\n\t\tlet startId = Math.floor(Date.now() % 100000000);\n\n\t\treturn function generateName(): string {\n\t\t\treturn '__wm' + getUID() + (startId++ + '__');\n\t\t};\n\t})();\n\n\tWeakMap = global.WeakMap = class WeakMap<K, V> {\n\t\tprivate readonly _name: string;\n\t\tprivate readonly _frozenEntries: Entry<K, V>[];\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tthis._name = generateName();\n\n\t\t\tthis._frozenEntries = [];\n\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst item = iterable[i];\n\t\t\t\t\t\tthis.set(item[0], item[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const [key, value] of iterable) {\n\t\t\t\t\t\tthis.set(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _getFrozenEntryIndex(key: any): number {\n\t\t\tfor (let i = 0; i < this._frozenEntries.length; i++) {\n\t\t\t\tif (this._frozenEntries[i].key === key) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t}\n\n\t\tdelete(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\tentry.value = DELETED;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\tthis._frozenEntries.splice(frozenIndex, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tget(key: any): V | undefined {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\treturn entry.value;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn this._frozenEntries[frozenIndex].value;\n\t\t\t}\n\t\t}\n\n\t\thas(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tset(key: any, value?: any): this {\n\t\t\tif (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n\t\t\t\tthrow new TypeError('Invalid value used as weak map key');\n\t\t\t}\n\t\t\tlet entry: Entry<K, V> = key[this._name];\n\t\t\tif (!entry || entry.key !== key) {\n\t\t\t\tentry = Object.create(null, {\n\t\t\t\t\tkey: { value: key }\n\t\t\t\t});\n\n\t\t\t\tif (Object.isFrozen(key)) {\n\t\t\t\t\tthis._frozenEntries.push(entry);\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty(key, this._name, {\n\t\t\t\t\t\tvalue: entry\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tentry.value = value;\n\t\t\treturn this;\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'WeakMap' = 'WeakMap';\n\t};\n}\n\nexport default WeakMap;\n","import global from './global';\n`!has('es6-iterator')`;\nimport { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface Set<T> {\n\t/**\n\t * Adds a `value` to the `Set`\n\t *\n\t * @param value The value to add to the set\n\t * @returns The instance of the `Set`\n\t */\n\tadd(value: T): this;\n\n\t/**\n\t * Removes all the values from the `Set`.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Removes a `value` from the set\n\t *\n\t * @param value The value to be removed\n\t * @returns `true` if the value was removed\n\t */\n\tdelete(value: T): boolean;\n\n\t/**\n\t * Returns an iterator that yields each entry.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[T, T]>;\n\n\t/**\n\t * Executes a given function for each set entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated `Set` instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void;\n\n\t/**\n\t * Identifies if a value is part of the set.\n\t *\n\t * @param value The value to check\n\t * @returns `true` if the value is part of the set otherwise `false`\n\t */\n\thas(value: T): boolean;\n\n\t/**\n\t * Despite its name, returns an iterable of the values in the set,\n\t */\n\tkeys(): IterableIterator<T>;\n\n\t/**\n\t * Returns the number of values in the `Set`.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterable of values in the set.\n\t */\n\tvalues(): IterableIterator<T>;\n\n\t/** Iterates over values in the set. */\n\t[Symbol.iterator](): IterableIterator<T>;\n\n\treadonly [Symbol.toStringTag]: 'Set';\n}\n\nexport interface SetConstructor {\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t */\n\tnew (): Set<any>;\n\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t *\n\t * @param iterator The iterable structure to initialize the set with\n\t */\n\tnew <T>(iterator?: T[]): Set<T>;\n\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t *\n\t * @param iterator The iterable structure to initialize the set with\n\t */\n\tnew <T>(iterator: Iterable<T>): Set<T>;\n\n\treadonly prototype: Set<any>;\n}\n\nexport let Set: SetConstructor = global.Set;\n\nif (!has('es6-set')) {\n\tSet = global.Set = class Set<T> {\n\t\tprivate readonly _setData: T[] = [];\n\n\t\tstatic [Symbol.species] = Set;\n\n\t\tconstructor(iterable?: ArrayLike<T> | Iterable<T>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tthis.add(iterable[i]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tadd(value: T): this {\n\t\t\tif (this.has(value)) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis._setData.push(value);\n\t\t\treturn this;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._setData.length = 0;\n\t\t}\n\n\t\tdelete(value: T): boolean {\n\t\t\tconst idx = this._setData.indexOf(value);\n\t\t\tif (idx === -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._setData.splice(idx, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[T, T]> {\n\t\t\treturn new ShimIterator<[any, any]>(this._setData.map<[any, any]>((value) => [value, value]));\n\t\t}\n\n\t\tforEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void {\n\t\t\tconst iterator = this.values();\n\t\t\tlet result = iterator.next();\n\t\t\twhile (!result.done) {\n\t\t\t\tcallbackfn.call(thisArg, result.value, result.value, this);\n\t\t\t\tresult = iterator.next();\n\t\t\t}\n\t\t}\n\n\t\thas(value: T): boolean {\n\t\t\treturn this._setData.indexOf(value) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._setData.length;\n\t\t}\n\n\t\tvalues(): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Set' = 'Set';\n\t};\n}\n\nexport default Set;\n","import has from '../core/has';\n\nexport interface ObjectAssign {\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source The source object from which to copy properties.\n\t */\n\t<T, U>(target: T, source: U): T & U;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t */\n\t<T, U, V>(target: T, source1: U, source2: V): T & U & V;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t * @param source3 The third source object from which to copy properties.\n\t */\n\t<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param sources One or more source objects from which to copy properties\n\t */\n\t(target: object, ...sources: any[]): any;\n}\n\nexport interface ObjectEnteries {\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T extends { [key: string]: any }, K extends keyof T>(o: T): [keyof T, T[K]][];\n\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): [string, any][];\n}\n\nexport interface ObjectGetOwnPropertyDescriptors {\n\t<T>(o: T): { [K in keyof T]: PropertyDescriptor };\n\t(o: any): { [key: string]: PropertyDescriptor };\n}\n\nexport interface ObjectValues {\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T>(o: { [s: string]: T }): T[];\n\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): any[];\n}\n\nexport let assign: ObjectAssign;\n\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor: <T, K extends keyof T>(o: T, propertyKey: K) => PropertyDescriptor | undefined;\n\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames: (o: any) => string[];\n\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols: (o: any) => symbol[];\n\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is: (value1: any, value2: any) => boolean;\n\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys: (o: object) => string[];\n\n/* ES7 Object static methods */\n\nexport let getOwnPropertyDescriptors: ObjectGetOwnPropertyDescriptors;\n\nexport let entries: ObjectEnteries;\n\nexport let values: ObjectValues;\n\nif (!has('es6-object')) {\n\tconst keys = Object.keys.bind(Object);\n\tObject.keys = function symbolAwareKeys(o: object): string[] {\n\t\treturn keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tObject.assign = function assign(target: any, ...sources: any[]) {\n\t\tif (target == null) {\n\t\t\t// TypeError if undefined or null\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t}\n\n\t\tconst to = Object(target);\n\t\tsources.forEach((nextSource) => {\n\t\t\tif (nextSource) {\n\t\t\t\t// Skip over if undefined or null\n\t\t\t\tkeys(nextSource).forEach((nextKey) => {\n\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn to;\n\t};\n\n\tconst getOwnPropertyNames = Object.getOwnPropertyNames.bind(Object);\n\tObject.getOwnPropertyNames = function symbolAwareGetOwnPropertyNames(o: any): string[] {\n\t\treturn getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tObject.getOwnPropertySymbols = function getOwnPropertySymbols(o: any): symbol[] {\n\t\treturn getOwnPropertyNames(o)\n\t\t\t.filter((key) => Boolean(key.match(/^@@.+/)))\n\t\t\t.map((key) => Symbol.for(key.substring(2)));\n\t};\n\n\tObject.is = function is(value1: any, value2: any): boolean {\n\t\tif (value1 === value2) {\n\t\t\treturn value1 !== 0 || 1 / value1 === 1 / value2; // -0\n\t\t}\n\t\treturn value1 !== value1 && value2 !== value2; // NaN\n\t};\n}\n\nif (!has('es2017-object')) {\n\tObject.getOwnPropertyDescriptors = function getOwnPropertyDescriptors<T>(\n\t\to: T\n\t): { [P in keyof T]: TypedPropertyDescriptor<T[P]> } & { [x: string]: PropertyDescriptor } {\n\t\treturn Object.getOwnPropertyNames(o).reduce(\n\t\t\t(previous, key) => {\n\t\t\t\tprevious[key] = Object.getOwnPropertyDescriptor(o, key)!;\n\t\t\t\treturn previous;\n\t\t\t},\n\t\t\t{} as { [P in keyof T]: TypedPropertyDescriptor<T[P]> } & { [x: string]: PropertyDescriptor }\n\t\t);\n\t};\n\n\tObject.entries = function entries(o: any): [string, any][] {\n\t\treturn keys(o).map((key) => [key, o[key]] as [string, any]);\n\t};\n\n\tObject.values = function values(o: any): any[] {\n\t\treturn keys(o).map((key) => o[key]);\n\t};\n}\n\nassign = Object.assign;\ngetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\ngetOwnPropertyNames = Object.getOwnPropertyNames;\ngetOwnPropertySymbols = Object.getOwnPropertySymbols;\nis = Object.is;\nkeys = Object.keys;\ngetOwnPropertyDescriptors = Object.getOwnPropertyDescriptors;\nentries = Object.entries;\nvalues = Object.values;\n\nexport default Object;\n","`!has('es6-iterator')`;\nimport { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface Map<K, V> {\n\t/**\n\t * Deletes all keys and their associated values.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Deletes a given key and its associated value.\n\t *\n\t * @param key The key to delete\n\t * @return true if the key exists, false if it does not\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Returns an iterator that yields each key/value pair as an array.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[K, V]>;\n\n\t/**\n\t * Executes a given function for each map entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated Map instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;\n\n\t/**\n\t * Returns the value associated with a given key.\n\t *\n\t * @param key The key to look up\n\t * @return The value if one exists or undefined\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Returns an iterator that yields each key in the map.\n\t *\n\t * @return An iterator containing the instance's keys.\n\t */\n\tkeys(): IterableIterator<K>;\n\n\t/**\n\t * Checks for the presence of a given key.\n\t *\n\t * @param key The key to check for\n\t * @return true if the key exists, false if it does not\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Sets the value associated with a given key.\n\t *\n\t * @param key The key to define a value to\n\t * @param value The value to assign\n\t * @return The Map instance\n\t */\n\tset(key: K, value: V): this;\n\n\t/**\n\t * Returns the number of key / value pairs in the Map.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterator that yields each value in the map.\n\t *\n\t * @return An iterator containing the instance's values.\n\t */\n\tvalues(): IterableIterator<V>;\n\n\t/** Returns an iterable of entries in the map. */\n\t[Symbol.iterator](): IterableIterator<[K, V]>;\n\n\treadonly [Symbol.toStringTag]: string;\n}\n\nexport interface MapConstructor {\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t */\n\tnew (): Map<any, any>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator?: [K, V][]): Map<K, V>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator: Iterable<[K, V]>): Map<K, V>;\n\n\treadonly prototype: Map<any, any>;\n\n\treadonly [Symbol.species]: MapConstructor;\n}\n\nexport let Map: MapConstructor = global.Map;\n\nif (!has('es6-map')) {\n\tMap = global.Map = class Map<K, V> {\n\t\tprotected readonly _keys: K[] = [];\n\t\tprotected readonly _values: V[] = [];\n\n\t\t/**\n\t\t * An alternative to Array.prototype.indexOf using Object.is\n\t\t * to check for equality. See http://mzl.la/1zuKO2V\n\t\t */\n\t\tprotected _indexOfKey(keys: K[], key: K): number {\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tif (objectIs(keys[i], key)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\tstatic [Symbol.species] = Map;\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst value = iterable[i];\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._keys.length;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._keys.length = this._values.length = 0;\n\t\t}\n\n\t\tdelete(key: K): boolean {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\tif (index < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._keys.splice(index, 1);\n\t\t\tthis._values.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[K, V]> {\n\t\t\tconst values = this._keys.map(\n\t\t\t\t(key: K, i: number): [K, V] => {\n\t\t\t\t\treturn [key, this._values[i]];\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn new ShimIterator(values);\n\t\t}\n\n\t\tforEach(callback: (value: V, key: K, mapInstance: Map<K, V>) => any, context?: {}) {\n\t\t\tconst keys = this._keys;\n\t\t\tconst values = this._values;\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tcallback.call(context, values[i], keys[i], this);\n\t\t\t}\n\t\t}\n\n\t\tget(key: K): V | undefined {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\treturn index < 0 ? undefined : this._values[index];\n\t\t}\n\n\t\thas(key: K): boolean {\n\t\t\treturn this._indexOfKey(this._keys, key) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<K> {\n\t\t\treturn new ShimIterator(this._keys);\n\t\t}\n\n\t\tset(key: K, value: V): Map<K, V> {\n\t\t\tlet index = this._indexOfKey(this._keys, key);\n\t\t\tindex = index < 0 ? this._keys.length : index;\n\t\t\tthis._keys[index] = key;\n\t\t\tthis._values[index] = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tvalues(): IterableIterator<V> {\n\t\t\treturn new ShimIterator(this._values);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\t\treturn this.entries();\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Map' = 'Map';\n\t};\n}\n\nexport default Map;\n","import Promise from '../shim/Promise';\n\n/**\n * Used through the toolkit as a consistent API to manage how callers can \"cleanup\"\n * when doing a function.\n */\nexport interface Handle {\n\t/**\n\t * Perform the destruction/cleanup logic associated with this Handle\n\t */\n\tdestroy(): void;\n}\n\n/**\n * No op function used to replace a Destroyable instance's `destroy` method, once the instance has been destroyed\n */\nfunction noop(): Promise<boolean> {\n\treturn Promise.resolve(false);\n}\n\n/**\n * No op function used to replace a Destroyable instance's `own` method, once the instance has been destroyed\n */\nfunction destroyed(): never {\n\tthrow new Error('Call made to destroyed method');\n}\n\nexport class Destroyable {\n\t/**\n\t * The instance's handles\n\t */\n\tprivate handles: Handle[];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.handles = [];\n\t}\n\n\t/**\n\t * Register handles for the instance that will be destroyed when `this.destroy` is called\n\t *\n\t * @param {Handle} handle The handle to add for the instance\n\t * @returns {Handle} A wrapper Handle. When the wrapper Handle's `destroy` method is invoked, the original handle is\n\t *                   removed from the instance, and its `destroy` method is invoked.\n\t */\n\town(handle: Handle): Handle {\n\t\tconst { handles: _handles } = this;\n\t\t_handles.push(handle);\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\t_handles.splice(_handles.indexOf(handle));\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Destroys all handlers registered for the instance\n\t *\n\t * @returns {Promise<any} A Promise that resolves once all handles have been destroyed\n\t */\n\tdestroy(): Promise<any> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.handles.forEach((handle) => {\n\t\t\t\thandle && handle.destroy && handle.destroy();\n\t\t\t});\n\t\t\tthis.destroy = noop;\n\t\t\tthis.own = destroyed;\n\t\t\tresolve(true);\n\t\t});\n\t}\n}\n\nexport default Destroyable;\n","import Map from '../shim/Map';\nimport { Destroyable, Handle } from './Destroyable';\n\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map<string, RegExp>();\n\nexport type EventType = string | symbol;\n\n/**\n * The base event object, which provides a `type` property\n */\nexport interface EventObject<T = EventType> {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: T;\n}\n\n/**\n * Determines if the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString: string | symbol, targetString: string | symbol): boolean {\n\tif (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n\t\tlet regex: RegExp;\n\t\tif (regexMap.has(globString)) {\n\t\t\tregex = regexMap.get(globString)!;\n\t\t} else {\n\t\t\tregex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n\t\t\tregexMap.set(globString, regex);\n\t\t}\n\t\treturn regex.test(targetString);\n\t} else {\n\t\treturn globString === targetString;\n\t}\n}\n\nexport type EventedCallback<T = EventType, E extends EventObject<T> = EventObject<T>> = {\n\t/**\n\t * A callback that takes an `event` argument\n\t *\n\t * @param event The event object\n\t */\n\n\t(event: E): boolean | void;\n};\n\nexport interface CustomEventTypes<T extends EventObject<any> = EventObject<any>> {\n\t[index: string]: T;\n}\n\n/**\n * A type which is either a targeted event listener or an array of listeners\n * @template T The type of target for the events\n * @template E The event type for the events\n */\nexport type EventedCallbackOrArray<T = EventType, E extends EventObject<T> = EventObject<T>> =\n\t| EventedCallback<T, E>\n\t| EventedCallback<T, E>[];\n\n/**\n * Event Class\n */\nexport class Evented<\n\tM extends CustomEventTypes = {},\n\tT = EventType,\n\tO extends EventObject<T> = EventObject<T>\n> extends Destroyable {\n\t// The following member is purely so TypeScript remembers the type of `M` when extending so\n\t// that the utilities in `on.ts` will work https://github.com/Microsoft/TypeScript/issues/20348\n\t// tslint:disable-next-line\n\tprotected __typeMap__?: M;\n\t/**\n\t * map of listeners keyed by event type\n\t */\n\tprotected listenersMap: Map<T | keyof M, EventedCallback<T, O>[]> = new Map();\n\n\t/**\n\t * Emits the event object for the specified type\n\t *\n\t * @param event the event to emit\n\t */\n\temit<K extends keyof M>(event: M[K]): void;\n\temit(event: O): void;\n\temit(event: any): void {\n\t\tthis.listenersMap.forEach((methods, type) => {\n\t\t\tif (isGlobMatch(type as any, event.type)) {\n\t\t\t\t[...methods].forEach((method) => {\n\t\t\t\t\tmethod.call(this, event);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Catch all handler for various call signatures. The signatures are defined in\n\t * `BaseEventedEvents`.  You can add your own event type -> handler types by extending\n\t * `BaseEventedEvents`.  See example for details.\n\t *\n\t * @param args\n\t *\n\t * @example\n\t *\n\t * interface WidgetBaseEvents extends BaseEventedEvents {\n\t *     (type: 'properties:changed', handler: PropertiesChangedHandler): Handle;\n\t * }\n\t * class WidgetBase extends Evented {\n\t *    on: WidgetBaseEvents;\n\t * }\n\t *\n\t * @return {any}\n\t */\n\ton<K extends keyof M>(type: K, listener: EventedCallbackOrArray<K, M[K]>): Handle;\n\ton(type: T, listener: EventedCallbackOrArray<T, O>): Handle;\n\ton(type: any, listener: EventedCallbackOrArray<any, any>): Handle {\n\t\tif (Array.isArray(listener)) {\n\t\t\tconst handles = listener.map((listener) => this._addListener(type, listener));\n\t\t\treturn {\n\t\t\t\tdestroy() {\n\t\t\t\t\thandles.forEach((handle) => handle.destroy());\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn this._addListener(type, listener);\n\t}\n\n\tprivate _addListener(type: T | keyof M, listener: EventedCallback<T, O>) {\n\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\tlisteners.push(listener);\n\t\tthis.listenersMap.set(type, listeners);\n\t\treturn {\n\t\t\tdestroy: () => {\n\t\t\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport default Evented;\n","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport {\n\tConstructor,\n\tInjectorFactory,\n\tInjectorItem,\n\tRegistryLabel,\n\tWidgetBaseConstructor,\n\tWidgetBaseInterface,\n\tESMDefaultWidgetBase,\n\tWidgetBaseConstructorFunction,\n\tESMDefaultWidgetBaseFunction,\n\tCallback,\n\tWNodeFactory,\n\tRenderResult,\n\tWidgetBaseTypes\n} from './interfaces';\n\nexport type RegistryItem =\n\t| WidgetBaseConstructor\n\t| WNodeFactory<any>\n\t| Promise<WidgetBaseConstructor | WNodeFactory<any>>\n\t| WidgetBaseConstructorFunction\n\t| ESMDefaultWidgetBaseFunction;\n\n/**\n * Widget base type\n */\nexport const WIDGET_BASE_TYPE = '__widget_base_type';\n\nexport interface RegistryEventObject extends EventObject<RegistryLabel> {\n\taction: string;\n\titem: WNodeFactory<any> | WidgetBaseConstructor | InjectorItem;\n}\n/**\n * Widget Registry Interface\n */\nexport interface RegistryInterface {\n\t/**\n\t * Define a WidgetRegistryItem against a label\n\t *\n\t * @param label The label of the widget to register\n\t * @param registryItem The registry item to define\n\t */\n\tdefine(label: RegistryLabel, registryItem: RegistryItem): void;\n\n\t/**\n\t * Return a RegistryItem for the given label, null if an entry doesn't exist\n\t *\n\t * @param widgetLabel The label of the widget to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tget(label: RegistryLabel): WNodeFactory<any> | Callback<any, any, RenderResult> | Constructor<any> | null;\n\tget<T extends WNodeFactory<any>>(label: RegistryLabel): T | null;\n\tget<T extends Callback<any, any, RenderResult>>(label: RegistryLabel): T | null;\n\tget<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\n\t/**\n\t * Returns a boolean if an entry for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a widget registry item exists\n\t */\n\thas(label: RegistryLabel): boolean;\n\n\t/**\n\t * Define an Injector against a label\n\t *\n\t * @param label The label of the injector to register\n\t * @param registryItem The injector factory\n\t */\n\tdefineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void;\n\n\t/**\n\t * Return an Injector registry item for the given label, null if an entry doesn't exist\n\t *\n\t * @param label The label of the injector to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tgetInjector<T>(label: RegistryLabel): InjectorItem<T> | null;\n\n\t/**\n\t * Returns a boolean if an injector for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a injector registry item exists\n\t */\n\thasInjector(label: RegistryLabel): boolean;\n}\n\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor<T extends WidgetBaseInterface = any>(item: any): item is Constructor<T> {\n\treturn Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\n\nexport function isWidgetFunction(item: any): item is Callback<any, any, RenderResult> {\n\treturn Boolean(item && item.isWidget);\n}\n\nexport function isWNodeFactory<W extends WidgetBaseTypes>(node: any): node is WNodeFactory<W> {\n\tif (typeof node === 'function' && node.isFactory) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function isWidget<T extends WidgetBaseInterface = any>(\n\titem: any\n): item is Constructor<T> | Callback<any, any, RenderResult> {\n\treturn isWidgetBaseConstructor(item) || isWidgetFunction(item);\n}\n\nexport function isWidgetConstructorDefaultExport<T extends WidgetBaseTypes>(\n\titem: any\n): item is ESMDefaultWidgetBase<T> {\n\treturn Boolean(\n\t\titem &&\n\t\t\titem.hasOwnProperty('__esModule') &&\n\t\t\titem.hasOwnProperty('default') &&\n\t\t\t(isWidget(item.default) || isWNodeFactory(item.default))\n\t);\n}\n\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented<{}, RegistryLabel, RegistryEventObject> implements RegistryInterface {\n\t/**\n\t * internal map of labels and RegistryItem\n\t */\n\tprivate _widgetRegistry: Map<RegistryLabel, RegistryItem> | undefined;\n\n\tprivate _injectorRegistry: Map<RegistryLabel, InjectorItem> | undefined;\n\n\t/**\n\t * Emit loaded event for registry label\n\t */\n\tprivate emitLoadedEvent(\n\t\twidgetLabel: RegistryLabel,\n\t\titem: WNodeFactory<any> | WidgetBaseConstructor | InjectorItem\n\t): void {\n\t\tthis.emit({\n\t\t\ttype: widgetLabel,\n\t\t\taction: 'loaded',\n\t\t\titem\n\t\t});\n\t}\n\n\tpublic define(label: RegistryLabel, item: RegistryItem): void {\n\t\tif (this._widgetRegistry === undefined) {\n\t\t\tthis._widgetRegistry = new Map();\n\t\t}\n\n\t\tif (this._widgetRegistry.has(label)) {\n\t\t\tthrow new Error(`widget has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tthis._widgetRegistry.set(label, item);\n\n\t\tif (item instanceof Promise) {\n\t\t\titem.then(\n\t\t\t\t(widgetCtor) => {\n\t\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\t\treturn widgetCtor;\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (isWidgetBaseConstructor(item)) {\n\t\t\tthis.emitLoadedEvent(label, item);\n\t\t}\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void {\n\t\tif (this._injectorRegistry === undefined) {\n\t\t\tthis._injectorRegistry = new Map();\n\t\t}\n\n\t\tif (this._injectorRegistry.has(label)) {\n\t\t\tthrow new Error(`injector has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tconst invalidator = new Evented();\n\n\t\tconst injectorItem: InjectorItem = {\n\t\t\tinjector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n\t\t\tinvalidator\n\t\t};\n\n\t\tthis._injectorRegistry.set(label, injectorItem);\n\t\tthis.emitLoadedEvent(label, injectorItem);\n\t}\n\n\tpublic get(label: RegistryLabel): WNodeFactory<any> | Callback<any, any, RenderResult> | Constructor<any> | null;\n\tpublic get<T extends WNodeFactory<any>>(label: RegistryLabel): T | null;\n\tpublic get<T extends Callback<any, any, RenderResult>>(label: RegistryLabel): T | null;\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel\n\t): WNodeFactory<T> | Callback<any, any, RenderResult> | Constructor<T> | null {\n\t\tif (!this._widgetRegistry || !this.has(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst item = this._widgetRegistry.get(label);\n\n\t\tif (isWidget<T>(item) || isWNodeFactory(item)) {\n\t\t\treturn item;\n\t\t}\n\n\t\tif (item instanceof Promise) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst promise = (<WidgetBaseConstructorFunction>item)();\n\t\tthis._widgetRegistry.set(label, promise);\n\n\t\tpromise.then(\n\t\t\t(widgetCtor) => {\n\t\t\t\tif (isWidgetConstructorDefaultExport<T>(widgetCtor)) {\n\t\t\t\t\twidgetCtor = widgetCtor.default;\n\t\t\t\t}\n\n\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\treturn widgetCtor;\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t);\n\n\t\treturn null;\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel): InjectorItem<T> | null {\n\t\tif (!this._injectorRegistry || !this.hasInjector(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._injectorRegistry.get(label)!;\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n\t}\n}\n\nexport default Registry;\n","import { Column, ColumnSpec } from 'dgrid/Grid';\nimport { PropertyChangeRecord } from '@dojo/framework/core/interfaces';\nimport { auto } from '@dojo/framework/core/diff';\n\nexport function columnsDiff(prevColumnSpec: ColumnSpec, newColumnSpec: ColumnSpec): PropertyChangeRecord {\n\tlet changed = true;\n\tconst prevIsArray = Array.isArray(prevColumnSpec);\n\tconst newIsArrary = Array.isArray(newColumnSpec);\n\n\tif (prevIsArray === newIsArrary) {\n\t\tif (prevIsArray) {\n\t\t\tconst prevColumnArray = prevColumnSpec as Column[];\n\t\t\tconst newColumnArray = newColumnSpec as Column[];\n\t\t\tif (prevColumnArray.length === newColumnArray.length) {\n\t\t\t\tchanged = prevColumnArray.some((previousColumnDef, i) => {\n\t\t\t\t\treturn auto(previousColumnDef, newColumnArray[i]).changed;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tchanged = auto(prevColumnSpec, newColumnSpec).changed;\n\t\t}\n\t}\n\n\treturn {\n\t\tchanged,\n\t\tvalue: newColumnSpec\n\t};\n}\n","import { Map } from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport { Constructor, InjectorFactory, InjectorItem, RegistryLabel, WidgetBaseInterface } from './interfaces';\nimport { Registry, RegistryEventObject, RegistryItem } from './Registry';\n\nexport type RegistryHandlerEventMap = {\n\tinvalidate: EventObject<'invalidate'>;\n};\n\nexport class RegistryHandler extends Evented<RegistryHandlerEventMap> {\n\tprivate _registry = new Registry();\n\tprivate _registryWidgetLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprivate _registryInjectorLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprotected baseRegistry!: Registry;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.own(this._registry);\n\t\tconst destroy = () => {\n\t\t\tif (this.baseRegistry) {\n\t\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis.baseRegistry = undefined as any;\n\t\t\t}\n\t\t};\n\t\tthis.own({ destroy });\n\t}\n\n\tpublic set base(baseRegistry: Registry) {\n\t\tif (this.baseRegistry) {\n\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t}\n\t\tthis.baseRegistry = baseRegistry;\n\t}\n\n\tpublic get base(): Registry {\n\t\treturn this.baseRegistry;\n\t}\n\n\tpublic define(label: RegistryLabel, widget: RegistryItem): void {\n\t\tthis._registry.define(label, widget);\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injector: InjectorFactory): void {\n\t\tthis._registry.defineInjector(label, injector);\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean = false\n\t): Constructor<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel, globalPrecedence: boolean = false): InjectorItem<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n\t}\n\n\tprivate _get(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean,\n\t\tgetFunctionName: 'getInjector' | 'get',\n\t\tlabelMap: Map<Registry, RegistryLabel[]>\n\t): any {\n\t\tconst registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n\t\tfor (let i = 0; i < registries.length; i++) {\n\t\t\tconst registry: any = registries[i];\n\t\t\tif (!registry) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst item = registry[getFunctionName](label);\n\t\t\tconst registeredLabels = labelMap.get(registry) || [];\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t} else if (registeredLabels.indexOf(label) === -1) {\n\t\t\t\tconst handle = registry.on(label, (event: RegistryEventObject) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.action === 'loaded' &&\n\t\t\t\t\t\t(this as any)[getFunctionName](label, globalPrecedence) === event.item\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.emit({ type: 'invalidate' });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.own(handle);\n\t\t\t\tlabelMap.set(registry, [...registeredLabels, label]);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default RegistryHandler;\n","import global from '../shim/global';\nimport has from '../core/has';\nimport WeakMap from '../shim/WeakMap';\nimport Set from '../shim/Set';\nimport Map from '../shim/Map';\nimport {\n\tWNode,\n\tVNode,\n\tDNode,\n\tVNodeProperties,\n\tTransitionStrategy,\n\tSupportedClassName,\n\tDomVNode,\n\tLazyDefine,\n\tConstructor,\n\tRenderResult,\n\tWidgetBaseInterface,\n\tCallback,\n\tMiddlewareMap,\n\tWNodeFactory,\n\tUnionToIntersection,\n\tWidgetProperties,\n\tMiddlewareResultFactory,\n\tWidgetBaseTypes,\n\tRegistryLabel,\n\tDeferredVirtualProperties,\n\tDomOptions\n} from './interfaces';\nimport { Registry, isWidget, isWidgetBaseConstructor, isWidgetFunction, isWNodeFactory } from './Registry';\nimport { auto } from './diff';\nimport RegistryHandler from './RegistryHandler';\nimport { NodeHandler } from './NodeHandler';\n\ndeclare global {\n\tnamespace JSX {\n\t\ttype Element = WNode;\n\t\tinterface ElementAttributesProperty {\n\t\t\tproperties: {};\n\t\t}\n\t\tinterface IntrinsicElements {\n\t\t\t[key: string]: VNodeProperties;\n\t\t}\n\t}\n}\n\nexport interface BaseNodeWrapper {\n\tid: string;\n\towningId: string;\n\tnode: WNode<any> | VNode;\n\tdomNode?: Node;\n\tdepth: number;\n\torder: number;\n\trequiresInsertBefore?: boolean;\n\thasPreviousSiblings?: boolean;\n\thasParentWNode?: boolean;\n\tnamespace?: string;\n\thasAnimations?: boolean;\n\tparentId: string;\n\tchildDomWrapperId?: string;\n}\n\nexport interface WNodeWrapper extends BaseNodeWrapper {\n\tnode: WNode<any>;\n\tinstance?: any;\n\tmergeNodes?: Node[];\n\tnodeHandlerCalled?: boolean;\n\tregistryItem?: Callback<any, any, RenderResult> | Constructor<any> | null;\n\tproperties: any;\n}\n\nexport interface WidgetMeta {\n\tdirty: boolean;\n\tinvalidator: () => void;\n\tmiddleware?: any;\n\tregistryHandler?: RegistryHandler;\n\tregistry: Registry;\n\tproperties: any;\n\tchildren?: DNode[];\n\trendering: boolean;\n\tnodeMap?: Map<string | number, HTMLElement>;\n\tdestroyMap?: Map<string, () => void>;\n\tdeferRefs: number;\n\tcustomDiffProperties?: Set<string>;\n\tcustomDiffMap?: Map<string, Map<string, (current: any, next: any) => void>>;\n}\n\nexport interface WidgetData {\n\tonDetach: () => void;\n\tonAttach: () => void;\n\tdirty: boolean;\n\tnodeHandler: NodeHandler;\n\tinvalidate?: Function;\n\trendering: boolean;\n\tinputProperties: any;\n\tregistry: RegistryHandler;\n}\n\nexport interface VNodeWrapper extends BaseNodeWrapper {\n\tnode: VNode | DomVNode;\n\tmerged?: boolean;\n\tinserted?: boolean;\n\tdeferredProperties?: VNodeProperties;\n}\n\nexport type DNodeWrapper = VNodeWrapper | WNodeWrapper;\n\nexport interface MountOptions {\n\tsync: boolean;\n\tmerge: boolean;\n\ttransition?: TransitionStrategy;\n\tdomNode: HTMLElement;\n\tregistry: Registry;\n}\n\nexport interface Renderer {\n\tinvalidate(): void;\n\tmount(mountOptions?: Partial<MountOptions>): void;\n}\n\ninterface ProcessItem {\n\tcurrent?: (WNodeWrapper | VNodeWrapper)[];\n\tnext?: (WNodeWrapper | VNodeWrapper)[];\n\tmeta: ProcessMeta;\n}\n\ninterface ProcessResult {\n\titem?: ProcessItem;\n\twidget?: AttachApplication | DetachApplication;\n\tdom?: ApplicationInstruction;\n}\n\ninterface ProcessMeta {\n\tmergeNodes?: Node[];\n\toldIndex?: number;\n\tnewIndex?: number;\n}\n\ninterface InvalidationQueueItem {\n\tid: string;\n\tdepth: number;\n\torder: number;\n}\n\ninterface Instruction {\n\tcurrent: undefined | DNodeWrapper;\n\tnext: undefined | DNodeWrapper;\n}\n\ninterface CreateWidgetInstruction {\n\tnext: WNodeWrapper;\n}\n\ninterface UpdateWidgetInstruction {\n\tcurrent: WNodeWrapper;\n\tnext: WNodeWrapper;\n}\n\ninterface RemoveWidgetInstruction {\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomInstruction {\n\tnext: VNodeWrapper;\n}\n\ninterface UpdateDomInstruction {\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface RemoveDomInstruction {\n\tcurrent: VNodeWrapper;\n}\n\ninterface AttachApplication {\n\ttype: 'attach';\n\tid: string;\n\tinstance?: WidgetBaseInterface;\n\tattached?: boolean;\n}\n\ninterface DetachApplication {\n\ttype: 'detach';\n\tcurrent: WNodeWrapper;\n\tinstance?: WidgetBaseInterface;\n}\n\ninterface CreateDomApplication {\n\ttype: 'create';\n\tcurrent?: VNodeWrapper;\n\tnext: VNodeWrapper;\n\tparentDomNode: Node;\n}\n\ninterface DeleteDomApplication {\n\ttype: 'delete';\n\tcurrent: VNodeWrapper;\n}\n\ninterface UpdateDomApplication {\n\ttype: 'update';\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface PreviousProperties {\n\tproperties: any;\n\tattributes?: any;\n\tevents?: any;\n}\n\ntype ApplicationInstruction =\n\t| CreateDomApplication\n\t| UpdateDomApplication\n\t| DeleteDomApplication\n\t| Required<AttachApplication>\n\t| DetachApplication;\n\nconst EMPTY_ARRAY: DNodeWrapper[] = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\nconst WNODE = '__WNODE_TYPE';\nconst VNODE = '__VNODE_TYPE';\nconst DOMVNODE = '__DOMVNODE_TYPE';\n\nexport function isTextNode(item: any): item is Text {\n\treturn item && item.nodeType === 3;\n}\n\nfunction isLazyDefine(item: any): item is LazyDefine<any> {\n\treturn Boolean(item && item.label);\n}\n\nfunction isWNodeWrapper(child: DNodeWrapper): child is WNodeWrapper {\n\treturn child && isWNode(child.node);\n}\n\nfunction isVNodeWrapper(child?: DNodeWrapper | null): child is VNodeWrapper {\n\treturn !!child && isVNode(child.node);\n}\n\nfunction isVirtualWrapper(child?: DNodeWrapper | null): boolean {\n\treturn isVNodeWrapper(child) && child.node.tag === 'virtual';\n}\n\nfunction isBodyWrapper(wrapper?: DNodeWrapper): boolean {\n\treturn isVNodeWrapper(wrapper) && wrapper.node.tag === 'body';\n}\n\nfunction isAttachApplication(value: any): value is AttachApplication | DetachApplication {\n\treturn !!value.type;\n}\n\nexport function isWNode<W extends WidgetBaseTypes = any>(child: any): child is WNode<W> {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === WNODE);\n}\n\nexport function isVNode(child: DNode): child is VNode {\n\treturn Boolean(\n\t\tchild && child !== true && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE)\n\t);\n}\n\nexport function isDomVNode(child: DNode): child is DomVNode {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === DOMVNODE);\n}\n\nexport function isElementNode(value: any): value is Element {\n\treturn !!value.tagName;\n}\n\nfunction toTextVNode(data: any): VNode {\n\treturn {\n\t\ttag: '',\n\t\tproperties: {},\n\t\tchildren: undefined,\n\t\ttext: `${data}`,\n\t\ttype: VNODE\n\t};\n}\n\nfunction updateAttributes(\n\tdomNode: Element,\n\tpreviousAttributes: { [index: string]: string | undefined },\n\tattributes: { [index: string]: string | undefined },\n\tnamespace?: string\n) {\n\tconst attrNames = Object.keys(attributes);\n\tconst attrCount = attrNames.length;\n\tfor (let i = 0; i < attrCount; i++) {\n\t\tconst attrName = attrNames[i];\n\t\tconst attrValue = attributes[attrName];\n\t\tconst previousAttrValue = previousAttributes[attrName];\n\t\tif (attrValue !== previousAttrValue) {\n\t\t\tupdateAttribute(domNode, attrName, attrValue, namespace);\n\t\t}\n\t}\n}\n\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w<W extends WidgetBaseTypes>(\n\tnode: WNode<W>,\n\tproperties: Partial<W['properties']>,\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseTypes>(\n\twidgetConstructor: Constructor<W> | RegistryLabel | WNodeFactory<W> | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseTypes>(\n\twidgetConstructorOrNode:\n\t\t| Constructor<W>\n\t\t| RegistryLabel\n\t\t| WNodeFactory<W>\n\t\t| WNode<W>\n\t\t| LazyDefine<W>\n\t\t| Callback<any, any, RenderResult>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W> {\n\tif (isWNodeFactory<W>(widgetConstructorOrNode)) {\n\t\treturn widgetConstructorOrNode(properties, children);\n\t}\n\n\tif (isWNode<W>(widgetConstructorOrNode)) {\n\t\tproperties = { ...(widgetConstructorOrNode.properties as any), ...(properties as any) };\n\t\tchildren = children ? children : widgetConstructorOrNode.children;\n\t\twidgetConstructorOrNode = widgetConstructorOrNode.widgetConstructor;\n\t}\n\n\treturn {\n\t\tchildren: children || [],\n\t\twidgetConstructor: widgetConstructorOrNode,\n\t\tproperties,\n\t\ttype: WNODE\n\t};\n}\n\n/**\n * Wrapper function for calls to create VNodes.\n */\nexport function v(node: VNode, properties: VNodeProperties, children: undefined | DNode[]): VNode;\nexport function v(node: VNode, properties: VNodeProperties): VNode;\nexport function v(tag: string, children: undefined | DNode[]): VNode;\nexport function v<K extends keyof HTMLElementTagNameMap>(\n\ttag: K,\n\tproperties: DeferredVirtualProperties | VNodeProperties<HTMLElementTagNameMap[K]>,\n\tchildren?: DNode[]\n): VNode;\nexport function v(tag: string, properties: DeferredVirtualProperties | VNodeProperties, children?: DNode[]): VNode;\nexport function v(tag: string): VNode;\nexport function v(\n\ttag: string | VNode,\n\tpropertiesOrChildren: VNodeProperties | DeferredVirtualProperties | DNode[] = {},\n\tchildren: undefined | DNode[] = undefined\n): VNode {\n\tlet properties: VNodeProperties | DeferredVirtualProperties = propertiesOrChildren;\n\tlet deferredPropertiesCallback;\n\n\tif (Array.isArray(propertiesOrChildren)) {\n\t\tchildren = propertiesOrChildren;\n\t\tproperties = {};\n\t}\n\n\tif (typeof properties === 'function') {\n\t\tdeferredPropertiesCallback = properties;\n\t\tproperties = {};\n\t}\n\n\tif (isVNode(tag)) {\n\t\tlet { classes = [], styles = {}, ...newProperties } = properties;\n\t\tlet { classes: nodeClasses = [], styles: nodeStyles = {}, ...nodeProperties } = tag.properties;\n\t\tnodeClasses = Array.isArray(nodeClasses) ? nodeClasses : [nodeClasses];\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tstyles = { ...nodeStyles, ...styles };\n\t\tproperties = { ...nodeProperties, ...newProperties, classes: [...nodeClasses, ...classes], styles };\n\t\tchildren = children ? children : tag.children;\n\t\ttag = tag.tag;\n\t}\n\n\treturn {\n\t\ttag,\n\t\tdeferredPropertiesCallback,\n\t\tchildren,\n\t\tproperties,\n\t\ttype: VNODE\n\t};\n}\n\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom(\n\t{ node, attrs = {}, props = {}, on = {}, diffType = 'none', onAttach }: DomOptions,\n\tchildren?: DNode[]\n): DomVNode {\n\treturn {\n\t\ttag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n\t\tproperties: props,\n\t\tattributes: attrs,\n\t\tevents: on,\n\t\tchildren,\n\t\ttype: DOMVNODE,\n\t\tdomNode: node,\n\t\ttext: isElementNode(node) ? undefined : node.data,\n\t\tdiffType,\n\t\tonAttach\n\t};\n}\n\nexport const REGISTRY_ITEM = '__registry_item';\n\nexport class FromRegistry<P> {\n\tstatic type = REGISTRY_ITEM;\n\tproperties: P = {} as P;\n\tname: string | undefined;\n}\n\nexport function fromRegistry<P>(tag: string): Constructor<FromRegistry<P>> {\n\treturn class extends FromRegistry<P> {\n\t\tproperties: P = {} as P;\n\t\tstatic type = REGISTRY_ITEM;\n\t\tname = tag;\n\t};\n}\n\nfunction spreadChildren(children: any[], child: any): any[] {\n\tif (Array.isArray(child)) {\n\t\treturn child.reduce(spreadChildren, children);\n\t} else {\n\t\treturn [...children, child];\n\t}\n}\n\nexport function tsx(tag: any, properties = {}, ...children: any[]): DNode {\n\tchildren = children.reduce(spreadChildren, []);\n\tproperties = properties === null ? {} : properties;\n\tif (typeof tag === 'string') {\n\t\treturn v(tag, properties, children);\n\t} else if (tag.type === 'registry' && (properties as any).__autoRegistryItem) {\n\t\tconst name = (properties as any).__autoRegistryItem;\n\t\tdelete (properties as any).__autoRegistryItem;\n\t\treturn w(name, properties, children);\n\t} else if (tag.type === REGISTRY_ITEM) {\n\t\tconst registryItem = new tag();\n\t\treturn w(registryItem.name, properties, children);\n\t} else {\n\t\treturn w(tag, properties, children);\n\t}\n}\n\nexport function propertiesDiff(current: any, next: any, invalidator: () => void, ignoreProperties: string[]) {\n\tconst propertyNames = [...Object.keys(current), ...Object.keys(next)];\n\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\tif (ignoreProperties.indexOf(propertyNames[i]) > -1) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst result = auto(current[propertyNames[i]], next[propertyNames[i]]);\n\t\tif (result.changed) {\n\t\t\tinvalidator();\n\t\t\tbreak;\n\t\t}\n\t\tignoreProperties.push(propertyNames[i]);\n\t}\n}\n\nfunction buildPreviousProperties(domNode: any, current: VNodeWrapper) {\n\tconst {\n\t\tnode: { diffType, properties, attributes }\n\t} = current;\n\tif (!diffType || diffType === 'vdom') {\n\t\treturn {\n\t\t\tproperties: current.deferredProperties\n\t\t\t\t? { ...current.deferredProperties, ...current.node.properties }\n\t\t\t\t: current.node.properties,\n\t\t\tattributes: current.node.attributes,\n\t\t\tevents: current.node.events\n\t\t};\n\t} else if (diffType === 'none') {\n\t\treturn {\n\t\t\tproperties: {},\n\t\t\tattributes: current.node.attributes ? {} : undefined,\n\t\t\tevents: current.node.events\n\t\t};\n\t}\n\tlet newProperties: any = {\n\t\tproperties: {}\n\t};\n\tif (attributes) {\n\t\tnewProperties.attributes = {};\n\t\tnewProperties.events = current.node.events;\n\t\tObject.keys(properties).forEach((propName) => {\n\t\t\tnewProperties.properties[propName] = domNode[propName];\n\t\t});\n\t\tObject.keys(attributes).forEach((attrName) => {\n\t\t\tnewProperties.attributes[attrName] = domNode.getAttribute(attrName);\n\t\t});\n\t\treturn newProperties;\n\t}\n\tnewProperties.properties = Object.keys(properties).reduce(\n\t\t(props, property) => {\n\t\t\tprops[property] = domNode.getAttribute(property) || domNode[property];\n\t\t\treturn props;\n\t\t},\n\t\t{} as any\n\t);\n\treturn newProperties;\n}\n\nfunction checkDistinguishable(wrappers: DNodeWrapper[], index: number, parentWNodeWrapper?: WNodeWrapper) {\n\tconst wrapperToCheck = wrappers[index];\n\tif (isVNodeWrapper(wrapperToCheck) && !wrapperToCheck.node.tag) {\n\t\treturn;\n\t}\n\tconst { key } = wrapperToCheck.node.properties;\n\tlet parentName = 'unknown';\n\tif (parentWNodeWrapper) {\n\t\tconst {\n\t\t\tnode: { widgetConstructor }\n\t\t} = parentWNodeWrapper;\n\t\tparentName = (widgetConstructor as any).name || 'unknown';\n\t}\n\n\tif (key === undefined || key === null) {\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tif (i !== index) {\n\t\t\t\tconst wrapper = wrappers[i];\n\t\t\t\tif (same(wrapper, wrapperToCheck)) {\n\t\t\t\t\tlet nodeIdentifier: string;\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\tnodeIdentifier = (wrapper.node.widgetConstructor as any).name || 'unknown';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodeIdentifier = wrapper.node.tag;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`A widget (${parentName}) has had a child added or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction same(dnode1: DNodeWrapper, dnode2: DNodeWrapper): boolean {\n\tif (isVNodeWrapper(dnode1) && isVNodeWrapper(dnode2)) {\n\t\tif (isDomVNode(dnode1.node) && isDomVNode(dnode2.node)) {\n\t\t\tif (dnode1.node.domNode !== dnode2.node.domNode) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (dnode1.node.tag !== dnode2.node.tag) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t} else if (isWNodeWrapper(dnode1) && isWNodeWrapper(dnode2)) {\n\t\tconst widgetConstructor1 = dnode1.registryItem || dnode1.node.widgetConstructor;\n\t\tconst widgetConstructor2 = dnode2.registryItem || dnode2.node.widgetConstructor;\n\t\tif (dnode1.instance === undefined && typeof widgetConstructor2 === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (widgetConstructor1 !== widgetConstructor2) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction findIndexOfChild(children: DNodeWrapper[], sameAs: DNodeWrapper, start: number) {\n\tfor (let i = start; i < children.length; i++) {\n\t\tif (same(children[i], sameAs)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction createClassPropValue(classes: SupportedClassName | SupportedClassName[] = []) {\n\tlet classNames = '';\n\tif (Array.isArray(classes)) {\n\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\tlet className = classes[i];\n\t\t\tif (className && className !== true) {\n\t\t\t\tclassNames = classNames ? `${classNames} ${className}` : className;\n\t\t\t}\n\t\t}\n\t\treturn classNames;\n\t}\n\tif (classes && classes !== true) {\n\t\tclassNames = classes;\n\t}\n\treturn classNames;\n}\n\nfunction updateAttribute(domNode: Element, attrName: string, attrValue: string | undefined, namespace?: string) {\n\tif (namespace === NAMESPACE_SVG && attrName === 'href' && attrValue) {\n\t\tdomNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n\t} else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n\t\tdomNode.removeAttribute(attrName);\n\t} else {\n\t\tdomNode.setAttribute(attrName, attrValue);\n\t}\n}\n\nfunction arrayFrom(arr: any) {\n\treturn Array.prototype.slice.call(arr);\n}\n\nfunction createFactory(callback: any, middlewares: any): any {\n\tconst factory = (properties: any, children?: any) => {\n\t\tif (properties) {\n\t\t\tconst result = w(callback, properties, children);\n\t\t\tcallback.isWidget = true;\n\t\t\tcallback.middlewares = middlewares;\n\t\t\treturn result;\n\t\t}\n\t\treturn {\n\t\t\tmiddlewares,\n\t\t\tcallback\n\t\t};\n\t};\n\tfactory.isFactory = true;\n\treturn factory;\n}\n\nexport function create<T extends MiddlewareMap, MiddlewareProps = ReturnType<T[keyof T]>['properties']>(\n\tmiddlewares: T = {} as T\n) {\n\tfunction properties<Props extends {}>() {\n\t\tfunction returns<ReturnValue>(\n\t\t\tcallback: Callback<WidgetProperties & Props & UnionToIntersection<MiddlewareProps>, T, ReturnValue>\n\t\t): ReturnValue extends RenderResult\n\t\t\t? WNodeFactory<{\n\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\tchildren: DNode[];\n\t\t\t  }>\n\t\t\t: MiddlewareResultFactory<WidgetProperties & Props & UnionToIntersection<MiddlewareProps>, T, ReturnValue> {\n\t\t\treturn createFactory(callback, middlewares);\n\t\t}\n\t\treturn returns;\n\t}\n\n\tfunction returns<ReturnValue>(\n\t\tcallback: Callback<WidgetProperties & UnionToIntersection<MiddlewareProps>, T, ReturnValue>\n\t): ReturnValue extends RenderResult\n\t\t? WNodeFactory<{\n\t\t\t\tproperties: WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\tchildren: DNode[];\n\t\t  }>\n\t\t: MiddlewareResultFactory<WidgetProperties & UnionToIntersection<MiddlewareProps>, T, ReturnValue> {\n\t\treturn createFactory(callback, middlewares);\n\t}\n\treturns.properties = properties;\n\treturn returns;\n}\n\nconst factory = create();\n\nfunction wrapNodes(renderer: () => RenderResult) {\n\tconst result = renderer();\n\tconst isWNodeWrapper = isWNode(result);\n\tconst callback = () => {\n\t\treturn result;\n\t};\n\tcallback.isWNodeWrapper = isWNodeWrapper;\n\treturn factory(callback);\n}\n\nexport const widgetInstanceMap = new WeakMap<WidgetBaseInterface, WidgetData>();\nconst widgetMetaMap = new Map<string, WidgetMeta>();\nconst requestedDomNodes = new Set();\nlet wrapperId = 0;\nlet metaId = 0;\n\nfunction addNodeToMap(id: string, key: string | number, node: HTMLElement) {\n\tconst widgetMeta = widgetMetaMap.get(id);\n\tif (widgetMeta) {\n\t\twidgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n\t\tconst existingNode = widgetMeta.nodeMap.get(key);\n\t\tif (!existingNode) {\n\t\t\twidgetMeta.nodeMap.set(key, node);\n\t\t}\n\t\tif (requestedDomNodes.has(`${id}-${key}`)) {\n\t\t\twidgetMeta.invalidator();\n\t\t\trequestedDomNodes.delete(`${id}-${key}`);\n\t\t}\n\t}\n}\n\nfunction destroyHandles(destroyMap: Map<string, () => void>) {\n\tdestroyMap.forEach((destroy) => destroy());\n\tdestroyMap.clear();\n}\n\nfunction runDiffs(meta: WidgetMeta, current: any, next: any) {\n\tmeta.customDiffMap = meta.customDiffMap || new Map();\n\tif (meta.customDiffMap.size) {\n\t\tmeta.customDiffMap.forEach((diffMap) => {\n\t\t\tdiffMap.forEach((diff) => diff({ ...current }, { ...next }));\n\t\t});\n\t}\n}\n\nexport const invalidator = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\treturn () => {\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\treturn widgetMeta.invalidator();\n\t\t}\n\t};\n});\n\nexport const node = factory(({ id }) => {\n\treturn {\n\t\tget(key: string | number): HTMLElement | null {\n\t\t\tconst [widgetId] = id.split('-');\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n\t\t\t\tconst node = widgetMeta.nodeMap.get(key);\n\t\t\t\tif (node) {\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t\trequestedDomNodes.add(`${widgetId}-${key}`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n});\n\nexport const diffProperty = factory(({ id }) => {\n\treturn (propertyName: string, diff: (current: any, next: any) => void) => {\n\t\tconst [widgetId] = id.split('-');\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\twidgetMeta.customDiffMap = widgetMeta.customDiffMap || new Map();\n\t\t\twidgetMeta.customDiffProperties = widgetMeta.customDiffProperties || new Set();\n\t\t\tconst propertyDiffMap = widgetMeta.customDiffMap.get(id) || new Map();\n\t\t\tif (!propertyDiffMap.has(propertyName)) {\n\t\t\t\tpropertyDiffMap.set(propertyName, diff);\n\t\t\t\twidgetMeta.customDiffProperties.add(propertyName);\n\t\t\t}\n\t\t\twidgetMeta.customDiffMap.set(id, propertyDiffMap);\n\t\t}\n\t};\n});\n\nexport const destroy = factory(({ id }) => {\n\treturn (destroyFunction: () => void): void => {\n\t\tconst [widgetId] = id.split('-');\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\twidgetMeta.destroyMap = widgetMeta.destroyMap || new Map();\n\t\t\tif (!widgetMeta.destroyMap.has(id)) {\n\t\t\t\twidgetMeta.destroyMap.set(id, destroyFunction);\n\t\t\t}\n\t\t}\n\t};\n});\n\nexport const getRegistry = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\treturn (): RegistryHandler | null => {\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\tif (!widgetMeta.registryHandler) {\n\t\t\t\twidgetMeta.registryHandler = new RegistryHandler();\n\t\t\t\twidgetMeta.registryHandler.base = widgetMeta.registry;\n\t\t\t\twidgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n\t\t\t}\n\t\t\twidgetMeta.registryHandler = widgetMeta.registryHandler || new RegistryHandler();\n\t\t\treturn widgetMeta.registryHandler;\n\t\t}\n\t\treturn null;\n\t};\n});\n\nexport const defer = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\tlet isDeferred = false;\n\treturn {\n\t\tpause() {\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (!isDeferred && widgetMeta) {\n\t\t\t\twidgetMeta.deferRefs = widgetMeta.deferRefs + 1;\n\t\t\t\tisDeferred = true;\n\t\t\t}\n\t\t},\n\t\tresume() {\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (isDeferred && widgetMeta) {\n\t\t\t\twidgetMeta.deferRefs = widgetMeta.deferRefs - 1;\n\t\t\t\tisDeferred = false;\n\t\t\t}\n\t\t}\n\t};\n});\n\nexport function renderer(renderer: () => RenderResult): Renderer {\n\tlet _mountOptions: MountOptions = {\n\t\tsync: false,\n\t\tmerge: true,\n\t\ttransition: undefined,\n\t\tdomNode: global.document.body,\n\t\tregistry: new Registry()\n\t};\n\tlet _invalidationQueue: InvalidationQueueItem[] = [];\n\tlet _processQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _deferredProcessQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _applicationQueue: ApplicationInstruction[] = [];\n\tlet _eventMap = new WeakMap<Function, EventListener>();\n\tlet _idToWrapperMap = new Map<string, DNodeWrapper>();\n\tlet _wrapperSiblingMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _idToChildrenWrappers = new Map<string, DNodeWrapper[]>();\n\tlet _insertBeforeMap: undefined | WeakMap<DNodeWrapper, Node> = new WeakMap<DNodeWrapper, Node>();\n\tlet _nodeToWrapperMap = new WeakMap<VNode | WNode<any>, WNodeWrapper>();\n\tlet _renderScheduled: number | undefined;\n\tlet _idleCallbacks: Function[] = [];\n\tlet _deferredRenderCallbacks: Function[] = [];\n\tlet parentInvalidate: () => void;\n\tlet _allMergedNodes: Node[] = [];\n\n\tfunction nodeOperation(\n\t\tpropName: string,\n\t\tpropValue: (() => boolean) | boolean,\n\t\tpreviousValue: boolean,\n\t\tdomNode: HTMLElement & { [index: string]: any }\n\t): void {\n\t\tlet result = propValue && !previousValue;\n\t\tif (typeof propValue === 'function') {\n\t\t\tresult = propValue();\n\t\t}\n\t\tif (result === true) {\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tdomNode[propName]();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction updateEvent(\n\t\tdomNode: Node,\n\t\teventName: string,\n\t\tcurrentValue: (event: Event) => void,\n\t\tpreviousValue?: Function\n\t) {\n\t\tif (previousValue) {\n\t\t\tconst previousEvent = _eventMap.get(previousValue);\n\t\t\tpreviousEvent && domNode.removeEventListener(eventName, previousEvent);\n\t\t}\n\n\t\tlet callback = currentValue;\n\n\t\tif (eventName === 'input') {\n\t\t\tcallback = function(this: any, evt: Event) {\n\t\t\t\tcurrentValue.call(this, evt);\n\t\t\t\t(evt.target as any)['oninput-value'] = (evt.target as HTMLInputElement).value;\n\t\t\t};\n\t\t}\n\n\t\tdomNode.addEventListener(eventName, callback);\n\t\t_eventMap.set(currentValue, callback);\n\t}\n\n\tfunction removeOrphanedEvents(\n\t\tdomNode: Element,\n\t\tpreviousProperties: VNodeProperties,\n\t\tproperties: VNodeProperties,\n\t\tonlyEvents: boolean = false\n\t) {\n\t\tObject.keys(previousProperties).forEach((propName) => {\n\t\t\tconst isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n\t\t\tconst eventName = onlyEvents ? propName : propName.substr(2);\n\t\t\tif (isEvent && !properties[propName]) {\n\t\t\t\tconst eventCallback = _eventMap.get(previousProperties[propName]);\n\t\t\t\tif (eventCallback) {\n\t\t\t\t\tdomNode.removeEventListener(eventName, eventCallback);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction resolveRegistryItem(wrapper: WNodeWrapper, instance?: any, id?: string) {\n\t\tif (!isWidget(wrapper.node.widgetConstructor)) {\n\t\t\tconst owningNode = _nodeToWrapperMap.get(wrapper.node);\n\t\t\tif (owningNode) {\n\t\t\t\tif (owningNode.instance) {\n\t\t\t\t\tinstance = owningNode.instance;\n\t\t\t\t} else {\n\t\t\t\t\tid = owningNode.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet registry: RegistryHandler | undefined;\n\t\t\tif (instance) {\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance);\n\t\t\t\tif (instanceData) {\n\t\t\t\t\tregistry = instanceData.registry;\n\t\t\t\t}\n\t\t\t} else if (id !== undefined) {\n\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\tif (widgetMeta) {\n\t\t\t\t\tif (!widgetMeta.registryHandler) {\n\t\t\t\t\t\twidgetMeta.registryHandler = new RegistryHandler();\n\t\t\t\t\t\twidgetMeta.registryHandler.base = widgetMeta.registry;\n\t\t\t\t\t\twidgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n\t\t\t\t\t}\n\t\t\t\t\tregistry = widgetMeta.registryHandler;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (registry) {\n\t\t\t\tlet registryLabel: symbol | string;\n\t\t\t\tif (isLazyDefine(wrapper.node.widgetConstructor)) {\n\t\t\t\t\tconst { label, registryItem } = wrapper.node.widgetConstructor;\n\t\t\t\t\tif (!registry.has(label)) {\n\t\t\t\t\t\tregistry.define(label, registryItem);\n\t\t\t\t\t}\n\t\t\t\t\tregistryLabel = label;\n\t\t\t\t} else {\n\t\t\t\t\tregistryLabel = wrapper.node.widgetConstructor as any;\n\t\t\t\t}\n\t\t\t\tlet item = registry.get(registryLabel) as any;\n\t\t\t\tif (isWNodeFactory(item)) {\n\t\t\t\t\tconst node = item(wrapper.node.properties, wrapper.node.children);\n\t\t\t\t\tif (isWidgetFunction(node.widgetConstructor)) {\n\t\t\t\t\t\twrapper.registryItem = node.widgetConstructor;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twrapper.registryItem = item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction mapNodeToInstance(nodes: DNode[], wrapper: WNodeWrapper) {\n\t\twhile (nodes.length) {\n\t\t\tlet node = nodes.pop();\n\t\t\tif (isWNode(node) || isVNode(node)) {\n\t\t\t\tif (!_nodeToWrapperMap.has(node)) {\n\t\t\t\t\t_nodeToWrapperMap.set(node, wrapper);\n\t\t\t\t\tif (node.children && node.children.length) {\n\t\t\t\t\t\tnodes = [...nodes, ...node.children];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction renderedToWrapper(\n\t\trendered: DNode[],\n\t\tparent: DNodeWrapper,\n\t\tcurrentParent: DNodeWrapper | null\n\t): DNodeWrapper[] {\n\t\tconst { requiresInsertBefore, hasPreviousSiblings, namespace, depth } = parent;\n\t\tconst wrappedRendered: DNodeWrapper[] = [];\n\t\tconst hasParentWNode = isWNodeWrapper(parent);\n\t\tconst hasVirtualParentNode = isVirtualWrapper(parent);\n\t\tconst currentParentChildren =\n\t\t\t(isVNodeWrapper(currentParent) && _idToChildrenWrappers.get(currentParent.id)) || [];\n\t\tconst hasCurrentParentChildren = currentParentChildren.length > 0;\n\t\tconst insertBefore =\n\t\t\t((requiresInsertBefore || hasPreviousSiblings !== false) && (hasParentWNode || hasVirtualParentNode)) ||\n\t\t\t(hasCurrentParentChildren && rendered.length > 1);\n\t\tlet previousItem: DNodeWrapper | undefined;\n\t\tif (isWNodeWrapper(parent) && rendered.length) {\n\t\t\tmapNodeToInstance([...rendered], parent);\n\t\t}\n\t\tfor (let i = 0; i < rendered.length; i++) {\n\t\t\tlet renderedItem = rendered[i];\n\t\t\tif (!renderedItem || renderedItem === true) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof renderedItem === 'string') {\n\t\t\t\trenderedItem = toTextVNode(renderedItem);\n\t\t\t}\n\t\t\tconst owningNode = _nodeToWrapperMap.get(renderedItem);\n\t\t\tconst wrapper: DNodeWrapper = {\n\t\t\t\tnode: renderedItem,\n\t\t\t\tdepth: depth + 1,\n\t\t\t\torder: i,\n\t\t\t\tparentId: parent.id,\n\t\t\t\trequiresInsertBefore: insertBefore,\n\t\t\t\thasParentWNode,\n\t\t\t\tnamespace: namespace\n\t\t\t} as DNodeWrapper;\n\t\t\tif (isVNode(renderedItem)) {\n\t\t\t\tif (renderedItem.deferredPropertiesCallback) {\n\t\t\t\t\t(wrapper as VNodeWrapper).deferredProperties = renderedItem.deferredPropertiesCallback(false);\n\t\t\t\t}\n\t\t\t\tif (renderedItem.properties.exitAnimation) {\n\t\t\t\t\tparent.hasAnimations = true;\n\t\t\t\t\tlet nextParent = _idToWrapperMap.get(parent.parentId);\n\t\t\t\t\twhile (nextParent) {\n\t\t\t\t\t\tif (nextParent.hasAnimations) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextParent.hasAnimations = true;\n\t\t\t\t\t\tnextParent = _idToWrapperMap.get(nextParent.parentId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (owningNode) {\n\t\t\t\twrapper.owningId = owningNode.id;\n\t\t\t}\n\t\t\tif (isWNode(renderedItem)) {\n\t\t\t\tresolveRegistryItem(wrapper as WNodeWrapper, (parent as any).instance, (parent as any).id);\n\t\t\t}\n\t\t\tif (previousItem) {\n\t\t\t\t_wrapperSiblingMap.set(previousItem, wrapper);\n\t\t\t}\n\t\t\twrappedRendered.push(wrapper);\n\t\t\tpreviousItem = wrapper;\n\t\t}\n\t\treturn wrappedRendered;\n\t}\n\n\tfunction findParentDomNode(currentNode: DNodeWrapper): Node | undefined {\n\t\tlet parentDomNode: Node | undefined;\n\t\tlet parentWrapper = _idToWrapperMap.get(currentNode.parentId);\n\n\t\twhile (!parentDomNode && parentWrapper) {\n\t\t\tif (\n\t\t\t\t!parentDomNode &&\n\t\t\t\tisVNodeWrapper(parentWrapper) &&\n\t\t\t\t!isVirtualWrapper(parentWrapper) &&\n\t\t\t\tparentWrapper.domNode\n\t\t\t) {\n\t\t\t\tparentDomNode = parentWrapper.domNode;\n\t\t\t}\n\t\t\tparentWrapper = _idToWrapperMap.get(parentWrapper.parentId);\n\t\t}\n\t\treturn parentDomNode;\n\t}\n\n\tfunction runDeferredProperties(next: VNodeWrapper) {\n\t\tconst { deferredPropertiesCallback } = next.node;\n\t\tif (deferredPropertiesCallback) {\n\t\t\tconst properties = next.node.properties;\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tif (_idToWrapperMap.has(next.owningId)) {\n\t\t\t\t\tconst deferredProperties = next.deferredProperties;\n\t\t\t\t\tnext.deferredProperties = deferredPropertiesCallback(true);\n\t\t\t\t\tprocessProperties(next, {\n\t\t\t\t\t\tproperties: { ...deferredProperties, ...properties }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction findInsertBefore(next: DNodeWrapper) {\n\t\tlet insertBefore: Node | null = null;\n\t\tlet searchNode: DNodeWrapper | undefined = next;\n\t\twhile (!insertBefore) {\n\t\t\tconst nextSibling = _wrapperSiblingMap.get(searchNode);\n\t\t\tif (nextSibling) {\n\t\t\t\tlet domNode = nextSibling.domNode;\n\t\t\t\tif ((isWNodeWrapper(nextSibling) || isVirtualWrapper(nextSibling)) && nextSibling.childDomWrapperId) {\n\t\t\t\t\tconst childWrapper = _idToWrapperMap.get(nextSibling.childDomWrapperId);\n\t\t\t\t\tif (childWrapper) {\n\t\t\t\t\t\tdomNode = childWrapper.domNode;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (domNode && domNode.parentNode) {\n\t\t\t\t\tinsertBefore = domNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsearchNode = nextSibling;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsearchNode = searchNode && _idToWrapperMap.get(searchNode.parentId);\n\t\t\tif (!searchNode || (isVNodeWrapper(searchNode) && !isVirtualWrapper(searchNode))) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn insertBefore;\n\t}\n\n\tfunction setValue(domNode: any, propValue?: any, previousValue?: any) {\n\t\tconst domValue = domNode.value;\n\t\tconst onInputValue = domNode['oninput-value'];\n\t\tconst onSelectValue = domNode['select-value'];\n\n\t\tif (onSelectValue && domValue !== onSelectValue) {\n\t\t\tdomNode.value = onSelectValue;\n\t\t\tif (domNode.value === onSelectValue) {\n\t\t\t\tdomNode['select-value'] = undefined;\n\t\t\t}\n\t\t} else if ((onInputValue && domValue === onInputValue) || propValue !== previousValue) {\n\t\t\tdomNode.value = propValue;\n\t\t\tdomNode['oninput-value'] = undefined;\n\t\t}\n\t}\n\n\tfunction setProperties(\n\t\tdomNode: HTMLElement,\n\t\tcurrentProperties: VNodeProperties = {},\n\t\tnextWrapper: VNodeWrapper,\n\t\tincludesEventsAndAttributes = true\n\t): void {\n\t\tconst properties = nextWrapper.deferredProperties\n\t\t\t? { ...nextWrapper.deferredProperties, ...nextWrapper.node.properties }\n\t\t\t: nextWrapper.node.properties;\n\t\tconst propNames = Object.keys(properties);\n\t\tconst propCount = propNames.length;\n\t\tif (propNames.indexOf('classes') === -1 && currentProperties.classes) {\n\t\t\tdomNode.removeAttribute('class');\n\t\t}\n\n\t\tincludesEventsAndAttributes && removeOrphanedEvents(domNode, currentProperties, properties);\n\n\t\tfor (let i = 0; i < propCount; i++) {\n\t\t\tconst propName = propNames[i];\n\t\t\tlet propValue = properties[propName];\n\t\t\tconst previousValue = currentProperties[propName];\n\t\t\tif (propName === 'classes') {\n\t\t\t\tconst previousClassString = createClassPropValue(previousValue);\n\t\t\t\tlet currentClassString = createClassPropValue(propValue);\n\t\t\t\tif (previousClassString !== currentClassString) {\n\t\t\t\t\tif (currentClassString) {\n\t\t\t\t\t\tif (nextWrapper.merged) {\n\t\t\t\t\t\t\tconst domClasses = (domNode.getAttribute('class') || '').split(' ');\n\t\t\t\t\t\t\tfor (let i = 0; i < domClasses.length; i++) {\n\t\t\t\t\t\t\t\tif (currentClassString.indexOf(domClasses[i]) === -1) {\n\t\t\t\t\t\t\t\t\tcurrentClassString = `${domClasses[i]} ${currentClassString}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdomNode.setAttribute('class', currentClassString);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdomNode.removeAttribute('class');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (nodeOperations.indexOf(propName) !== -1) {\n\t\t\t\tnodeOperation(propName, propValue, previousValue, domNode);\n\t\t\t} else if (propName === 'styles') {\n\t\t\t\tconst styleNames = Object.keys(propValue);\n\t\t\t\tconst styleCount = styleNames.length;\n\t\t\t\tfor (let j = 0; j < styleCount; j++) {\n\t\t\t\t\tconst styleName = styleNames[j];\n\t\t\t\t\tconst newStyleValue = propValue[styleName];\n\t\t\t\t\tconst oldStyleValue = previousValue && previousValue[styleName];\n\t\t\t\t\tif (newStyleValue === oldStyleValue) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t(domNode.style as any)[styleName] = newStyleValue || '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!propValue && typeof previousValue === 'string') {\n\t\t\t\t\tpropValue = '';\n\t\t\t\t}\n\t\t\t\tif (propName === 'value') {\n\t\t\t\t\tif ((domNode as HTMLElement).tagName === 'SELECT') {\n\t\t\t\t\t\t(domNode as any)['select-value'] = propValue;\n\t\t\t\t\t}\n\t\t\t\t\tsetValue(domNode, propValue, previousValue);\n\t\t\t\t} else if (propName !== 'key' && propValue !== previousValue) {\n\t\t\t\t\tconst type = typeof propValue;\n\t\t\t\t\tif (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateEvent(domNode, propName.substr(2), propValue, previousValue);\n\t\t\t\t\t} else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateAttribute(domNode, propName, propValue, nextWrapper.namespace);\n\t\t\t\t\t} else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n\t\t\t\t\t\tif ((domNode as any)[propName] !== propValue) {\n\t\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runDeferredRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _deferredRenderCallbacks;\n\t\t_deferredRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tglobal.requestAnimationFrame(run);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runAfterRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _idleCallbacks;\n\t\t_idleCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tif (global.requestIdleCallback) {\n\t\t\t\t\tglobal.requestIdleCallback(run);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(run);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction processProperties(next: VNodeWrapper, previousProperties: PreviousProperties) {\n\t\tif (next.node.attributes && next.node.events) {\n\t\t\tupdateAttributes(\n\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\tpreviousProperties.attributes || {},\n\t\t\t\tnext.node.attributes,\n\t\t\t\tnext.namespace\n\t\t\t);\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next, false);\n\t\t\tconst events = next.node.events || {};\n\t\t\tif (previousProperties.events) {\n\t\t\t\tremoveOrphanedEvents(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tpreviousProperties.events || {},\n\t\t\t\t\tnext.node.events,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t\tpreviousProperties.events = previousProperties.events || {};\n\t\t\tObject.keys(events).forEach((event) => {\n\t\t\t\tupdateEvent(next.domNode as HTMLElement, event, events[event], previousProperties.events[event]);\n\t\t\t});\n\t\t} else {\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next);\n\t\t}\n\t}\n\n\tfunction mount(mountOptions: Partial<MountOptions> = {}) {\n\t\t_mountOptions = { ..._mountOptions, ...mountOptions };\n\t\tconst { domNode } = _mountOptions;\n\t\tconst renderResult = wrapNodes(renderer)({});\n\t\tconst nextWrapper = {\n\t\t\tid: `${wrapperId++}`,\n\t\t\tnode: renderResult,\n\t\t\torder: 0,\n\t\t\tdepth: 1,\n\t\t\towningId: '-1',\n\t\t\tparentId: '-1',\n\t\t\tsiblingId: '-1',\n\t\t\tproperties: {}\n\t\t};\n\t\t_idToWrapperMap.set('-1', {\n\t\t\tid: `-1`,\n\t\t\tdepth: 0,\n\t\t\torder: 0,\n\t\t\towningId: '',\n\t\t\tdomNode,\n\t\t\tnode: v('fake'),\n\t\t\tparentId: '-1'\n\t\t});\n\t\t_processQueue.push({\n\t\t\tcurrent: [],\n\t\t\tnext: [nextWrapper],\n\t\t\tmeta: { mergeNodes: arrayFrom(domNode.childNodes) }\n\t\t});\n\t\t_runProcessQueue();\n\t\t_runDomInstructionQueue();\n\t\t_cleanUpMergedNodes();\n\t\t_insertBeforeMap = undefined;\n\t\t_runCallbacks();\n\t}\n\n\tfunction invalidate() {\n\t\tparentInvalidate && parentInvalidate();\n\t}\n\n\tfunction _schedule(): void {\n\t\tconst { sync } = _mountOptions;\n\t\tif (sync) {\n\t\t\t_runInvalidationQueue();\n\t\t} else if (!_renderScheduled) {\n\t\t\t_renderScheduled = global.requestAnimationFrame(() => {\n\t\t\t\t_runInvalidationQueue();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction getWNodeWrapper(id: string) {\n\t\tconst wrapper = _idToWrapperMap.get(id);\n\t\tif (wrapper && isWNodeWrapper(wrapper)) {\n\t\t\treturn wrapper;\n\t\t}\n\t}\n\n\tfunction _runInvalidationQueue() {\n\t\t_renderScheduled = undefined;\n\t\tlet invalidationQueue = [..._invalidationQueue];\n\t\tconst previouslyRendered = [];\n\t\t_invalidationQueue = [];\n\t\tinvalidationQueue.sort((a, b) => {\n\t\t\tlet result = b.depth - a.depth;\n\t\t\tif (result === 0) {\n\t\t\t\tresult = b.order - a.order;\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t\tif (_deferredProcessQueue.length) {\n\t\t\t_processQueue = [..._deferredProcessQueue];\n\t\t\t_deferredProcessQueue = [];\n\t\t\t_runProcessQueue();\n\t\t\tif (_deferredProcessQueue.length) {\n\t\t\t\t_invalidationQueue = [...invalidationQueue];\n\t\t\t\tinvalidationQueue = [];\n\t\t\t}\n\t\t}\n\t\tlet item: InvalidationQueueItem | undefined;\n\t\twhile ((item = invalidationQueue.pop())) {\n\t\t\tlet { id } = item;\n\t\t\tconst current = getWNodeWrapper(id);\n\t\t\tif (!current || previouslyRendered.indexOf(id) !== -1 || !_idToWrapperMap.has(current.parentId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpreviouslyRendered.push(id);\n\t\t\tconst sibling = _wrapperSiblingMap.get(current);\n\t\t\tconst next = {\n\t\t\t\tnode: {\n\t\t\t\t\ttype: WNODE,\n\t\t\t\t\twidgetConstructor: current.node.widgetConstructor,\n\t\t\t\t\tproperties: current.properties || {},\n\t\t\t\t\tchildren: current.node.children || []\n\t\t\t\t},\n\t\t\t\tinstance: current.instance,\n\t\t\t\tid: current.id,\n\t\t\t\tproperties: current.properties,\n\t\t\t\tdepth: current.depth,\n\t\t\t\torder: current.order,\n\t\t\t\towningId: current.owningId,\n\t\t\t\tparentId: current.parentId,\n\t\t\t\tregistryItem: current.registryItem\n\t\t\t};\n\n\t\t\tsibling && _wrapperSiblingMap.set(next, sibling);\n\t\t\tconst result = _updateWidget({ current, next });\n\t\t\tif (result && result.item) {\n\t\t\t\t_processQueue.push(result.item);\n\t\t\t\t_idToWrapperMap.set(id, next);\n\t\t\t\t_runProcessQueue();\n\t\t\t}\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_cleanUpMergedNodes();\n\t\t_runCallbacks();\n\t}\n\n\tfunction _cleanUpMergedNodes() {\n\t\tif (_deferredProcessQueue.length === 0) {\n\t\t\tlet mergedNode: Node | undefined;\n\t\t\twhile ((mergedNode = _allMergedNodes.pop())) {\n\t\t\t\tmergedNode.parentNode && mergedNode.parentNode.removeChild(mergedNode);\n\t\t\t}\n\t\t\t_mountOptions.merge = false;\n\t\t}\n\t}\n\n\tfunction _runProcessQueue() {\n\t\tlet item: DetachApplication | AttachApplication | ProcessItem | undefined;\n\t\twhile ((item = _processQueue.pop())) {\n\t\t\tif (isAttachApplication(item)) {\n\t\t\t\titem.type === 'attach' && setDomNodeOnParentWrapper(item.id);\n\t\t\t\tif (item.instance) {\n\t\t\t\t\t_applicationQueue.push(item as any);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst { current, next, meta } = item;\n\t\t\t\t_process(current || EMPTY_ARRAY, next || EMPTY_ARRAY, meta);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runDomInstructionQueue(): void {\n\t\t_applicationQueue.reverse();\n\t\tlet item: ApplicationInstruction | undefined;\n\t\twhile ((item = _applicationQueue.pop())) {\n\t\t\tif (item.type === 'create') {\n\t\t\t\tconst {\n\t\t\t\t\tparentDomNode,\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode, merged, requiresInsertBefore, node }\n\t\t\t\t} = item;\n\n\t\t\t\tprocessProperties(next, { properties: {} });\n\t\t\t\trunDeferredProperties(next);\n\t\t\t\tif (!merged) {\n\t\t\t\t\tlet insertBefore: any;\n\t\t\t\t\tif (requiresInsertBefore) {\n\t\t\t\t\t\tinsertBefore = findInsertBefore(next);\n\t\t\t\t\t} else if (_insertBeforeMap) {\n\t\t\t\t\t\tinsertBefore = _insertBeforeMap.get(next);\n\t\t\t\t\t}\n\t\t\t\t\tparentDomNode.insertBefore(domNode!, insertBefore);\n\t\t\t\t\tif (isDomVNode(next.node) && next.node.onAttach) {\n\t\t\t\t\t\tnext.node.onAttach();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((domNode as HTMLElement).tagName === 'OPTION' && domNode!.parentElement) {\n\t\t\t\t\tsetValue(domNode!.parentElement);\n\t\t\t\t}\n\t\t\t\tconst { enterAnimation, enterAnimationActive } = node.properties;\n\t\t\t\tif (_mountOptions.transition && enterAnimation && enterAnimation !== true) {\n\t\t\t\t\t_mountOptions.transition.enter(domNode as HTMLElement, enterAnimation, enterAnimationActive);\n\t\t\t\t}\n\t\t\t\tconst owningWrapper = _nodeToWrapperMap.get(next.node);\n\t\t\t\tif (owningWrapper && node.properties.key != null) {\n\t\t\t\t\tif (owningWrapper.instance) {\n\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(owningWrapper.instance);\n\t\t\t\t\t\tinstanceData && instanceData.nodeHandler.add(domNode as HTMLElement, `${node.properties.key}`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddNodeToMap(owningWrapper.id, node.properties.key, domNode as HTMLElement);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\titem.next.inserted = true;\n\t\t\t} else if (item.type === 'update') {\n\t\t\t\tconst {\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode },\n\t\t\t\t\tcurrent,\n\t\t\t\t\tcurrent: { domNode: currentDomNode }\n\t\t\t\t} = item;\n\t\t\t\tif (isTextNode(domNode) && isTextNode(currentDomNode) && domNode !== currentDomNode) {\n\t\t\t\t\tcurrentDomNode.parentNode && currentDomNode.parentNode.replaceChild(domNode, currentDomNode);\n\t\t\t\t} else {\n\t\t\t\t\tconst previousProperties = buildPreviousProperties(domNode, current);\n\t\t\t\t\tprocessProperties(next, previousProperties);\n\t\t\t\t\trunDeferredProperties(next);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'delete') {\n\t\t\t\tconst { current } = item;\n\t\t\t\tconst { exitAnimation, exitAnimationActive } = current.node.properties;\n\t\t\t\tif (_mountOptions.transition && exitAnimation && exitAnimation !== true) {\n\t\t\t\t\t_mountOptions.transition.exit(current.domNode as HTMLElement, exitAnimation, exitAnimationActive);\n\t\t\t\t} else {\n\t\t\t\t\tcurrent.domNode!.parentNode!.removeChild(current.domNode!);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'attach') {\n\t\t\t\tconst { instance, attached } = item;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance);\n\t\t\t\tif (instanceData) {\n\t\t\t\t\tinstanceData.nodeHandler.addRoot();\n\t\t\t\t\tattached && instanceData.onAttach();\n\t\t\t\t}\n\t\t\t} else if (item.type === 'detach') {\n\t\t\t\tif (item.current.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(item.current.instance);\n\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t}\n\t\t\t\titem.current.instance = undefined;\n\t\t\t}\n\t\t}\n\t\tif (_deferredProcessQueue.length === 0) {\n\t\t\t_nodeToWrapperMap = new WeakMap();\n\t\t}\n\t}\n\n\tfunction _runCallbacks() {\n\t\trunAfterRenderCallbacks();\n\t\trunDeferredRenderCallbacks();\n\t}\n\n\tfunction _processMergeNodes(next: DNodeWrapper, mergeNodes: Node[]) {\n\t\tconst { merge } = _mountOptions;\n\t\tif (merge && mergeNodes.length) {\n\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\tlet {\n\t\t\t\t\tnode: { tag }\n\t\t\t\t} = next;\n\t\t\t\tfor (let i = 0; i < mergeNodes.length; i++) {\n\t\t\t\t\tconst domElement = mergeNodes[i] as Element;\n\t\t\t\t\tconst tagName = domElement.tagName || '';\n\t\t\t\t\tif (tag.toUpperCase() === tagName.toUpperCase()) {\n\t\t\t\t\t\tconst mergeNodeIndex = _allMergedNodes.indexOf(domElement);\n\t\t\t\t\t\tif (mergeNodeIndex !== -1) {\n\t\t\t\t\t\t\t_allMergedNodes.splice(mergeNodeIndex, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmergeNodes.splice(i, 1);\n\t\t\t\t\t\tnext.domNode = domElement;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnext.mergeNodes = mergeNodes;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction registerDistinguishableCallback(childNodes: DNodeWrapper[], index: number) {\n\t\t_idleCallbacks.push(() => {\n\t\t\tconst parentWNodeWrapper = getWNodeWrapper(childNodes[index].owningId);\n\t\t\tcheckDistinguishable(childNodes, index, parentWNodeWrapper);\n\t\t});\n\t}\n\n\tfunction createKeyMap(wrappers: DNodeWrapper[]): (string | number)[] | false {\n\t\tconst keys: (string | number)[] = [];\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tconst wrapper = wrappers[i];\n\t\t\tif (wrapper.node.properties.key != null) {\n\t\t\t\tkeys.push(wrapper.node.properties.key);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn keys;\n\t}\n\n\tfunction _process(current: DNodeWrapper[], next: DNodeWrapper[], meta: ProcessMeta = {}): void {\n\t\tlet { mergeNodes = [], oldIndex = 0, newIndex = 0 } = meta;\n\t\tconst currentLength = current.length;\n\t\tconst nextLength = next.length;\n\t\tconst hasPreviousSiblings = currentLength > 1 || (currentLength > 0 && currentLength < nextLength);\n\t\tlet instructions: Instruction[] = [];\n\t\tlet replace = false;\n\t\tif (oldIndex === 0 && newIndex === 0 && currentLength) {\n\t\t\tconst currentKeys = createKeyMap(current);\n\t\t\tif (currentKeys) {\n\t\t\t\tconst nextKeys = createKeyMap(next);\n\t\t\t\tif (nextKeys) {\n\t\t\t\t\tfor (let i = 0; i < currentKeys.length; i++) {\n\t\t\t\t\t\tif (nextKeys.indexOf(currentKeys[i]) !== -1) {\n\t\t\t\t\t\t\tinstructions = [];\n\t\t\t\t\t\t\treplace = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplace = true;\n\t\t\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (replace || (currentLength === 0 && !_mountOptions.merge)) {\n\t\t\tfor (let i = 0; i < next.length; i++) {\n\t\t\t\tinstructions.push({ current: undefined, next: next[i] });\n\t\t\t}\n\t\t} else {\n\t\t\tif (newIndex < nextLength) {\n\t\t\t\tlet currentWrapper = oldIndex < currentLength ? current[oldIndex] : undefined;\n\t\t\t\tconst nextWrapper = next[newIndex];\n\t\t\t\tnextWrapper.hasPreviousSiblings = hasPreviousSiblings;\n\n\t\t\t\t_processMergeNodes(nextWrapper, mergeNodes);\n\n\t\t\t\tif (currentWrapper && same(currentWrapper, nextWrapper)) {\n\t\t\t\t\toldIndex++;\n\t\t\t\t\tnewIndex++;\n\t\t\t\t\tif (isVNodeWrapper(currentWrapper) && isVNodeWrapper(nextWrapper)) {\n\t\t\t\t\t\tnextWrapper.inserted = currentWrapper.inserted;\n\t\t\t\t\t}\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: nextWrapper });\n\t\t\t\t} else if (!currentWrapper || findIndexOfChild(current, nextWrapper, oldIndex + 1) === -1) {\n\t\t\t\t\thas('dojo-debug') && current.length && registerDistinguishableCallback(next, newIndex);\n\t\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\t\tnewIndex++;\n\t\t\t\t} else if (findIndexOfChild(next, currentWrapper, newIndex + 1) === -1) {\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\t\toldIndex++;\n\t\t\t\t} else {\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(next, newIndex);\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\t\toldIndex++;\n\t\t\t\t\tnewIndex++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newIndex < nextLength) {\n\t\t\t\t_processQueue.push({ current, next, meta: { mergeNodes, oldIndex, newIndex } });\n\t\t\t}\n\t\t\tif (currentLength > oldIndex && newIndex >= nextLength) {\n\t\t\t\tfor (let i = oldIndex; i < currentLength; i++) {\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, i);\n\t\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < instructions.length; i++) {\n\t\t\tconst result = _processOne(instructions[i]);\n\t\t\tif (result === false) {\n\t\t\t\tif (_mountOptions.merge && mergeNodes.length) {\n\t\t\t\t\tif (newIndex < nextLength) {\n\t\t\t\t\t\t_processQueue.pop();\n\t\t\t\t\t}\n\t\t\t\t\t_processQueue.push({ next, current, meta });\n\t\t\t\t\t_deferredProcessQueue = _processQueue;\n\t\t\t\t\t_processQueue = [];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst { widget, item, dom } = result;\n\t\t\twidget && _processQueue.push(widget);\n\t\t\titem && _processQueue.push(item);\n\t\t\tdom && _applicationQueue.push(dom);\n\t\t}\n\t}\n\n\tfunction _processOne({ current, next }: Instruction): ProcessResult | false {\n\t\tif (current !== next) {\n\t\t\tif (!current && next) {\n\t\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\t\treturn _createDom({ next });\n\t\t\t\t} else {\n\t\t\t\t\treturn _createWidget({ next });\n\t\t\t\t}\n\t\t\t} else if (current && next) {\n\t\t\t\tif (isVNodeWrapper(current) && isVNodeWrapper(next)) {\n\t\t\t\t\treturn _updateDom({ current, next });\n\t\t\t\t} else if (isWNodeWrapper(current) && isWNodeWrapper(next)) {\n\t\t\t\t\treturn _updateWidget({ current, next });\n\t\t\t\t}\n\t\t\t} else if (current && !next) {\n\t\t\t\tif (isVNodeWrapper(current)) {\n\t\t\t\t\treturn _removeDom({ current });\n\t\t\t\t} else if (isWNodeWrapper(current)) {\n\t\t\t\t\treturn _removeWidget({ current });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t}\n\n\tfunction resolveMiddleware(middlewares: any, id: string): any {\n\t\tconst keys = Object.keys(middlewares);\n\t\tconst results: any = {};\n\t\tconst uniqueId = `${id}-${metaId++}`;\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst middleware = middlewares[keys[i]]();\n\t\t\tconst payload: any = {\n\t\t\t\tid: uniqueId,\n\t\t\t\tproperties: () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\treturn { ...widgetMeta.properties };\n\t\t\t\t\t}\n\t\t\t\t\treturn {};\n\t\t\t\t},\n\t\t\t\tchildren: () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\treturn widgetMeta.children;\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (middleware.middlewares) {\n\t\t\t\tconst resolvedMiddleware = resolveMiddleware(middleware.middlewares, id);\n\t\t\t\tpayload.middleware = resolvedMiddleware;\n\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t} else {\n\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\tfunction _createWidget({ next }: CreateWidgetInstruction): ProcessResult | false {\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tlet { registry } = _mountOptions;\n\t\tlet Constructor = next.registryItem || widgetConstructor;\n\t\tif (!isWidget(Constructor)) {\n\t\t\tresolveRegistryItem(next);\n\t\t\tif (!next.registryItem) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tConstructor = next.registryItem;\n\t\t}\n\n\t\tlet rendered: RenderResult;\n\t\tlet invalidate: () => void;\n\t\tnext.properties = next.node.properties;\n\t\tnext.id = next.id || `${wrapperId++}`;\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tconst { id, depth, order } = next;\n\t\tif (!isWidgetBaseConstructor(Constructor)) {\n\t\t\tlet widgetMeta = widgetMetaMap.get(id);\n\t\t\tif (!widgetMeta) {\n\t\t\t\tinvalidate = () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t\t\tif (!widgetMeta.rendering && _idToWrapperMap.has(id)) {\n\t\t\t\t\t\t\t_invalidationQueue.push({ id, depth, order });\n\t\t\t\t\t\t\t_schedule();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\twidgetMeta = {\n\t\t\t\t\tdirty: false,\n\t\t\t\t\tinvalidator: invalidate,\n\t\t\t\t\tproperties: next.node.properties,\n\t\t\t\t\tchildren: next.node.children,\n\t\t\t\t\tdeferRefs: 0,\n\t\t\t\t\trendering: true,\n\t\t\t\t\tregistry: _mountOptions.registry\n\t\t\t\t};\n\n\t\t\t\twidgetMetaMap.set(next.id, widgetMeta);\n\t\t\t\twidgetMeta.middleware = (Constructor as any).middlewares\n\t\t\t\t\t? resolveMiddleware((Constructor as any).middlewares, id)\n\t\t\t\t\t: {};\n\t\t\t} else {\n\t\t\t\tinvalidate = widgetMeta.invalidator;\n\t\t\t}\n\n\t\t\trendered = Constructor({\n\t\t\t\tid,\n\t\t\t\tproperties: () => next.node.properties,\n\t\t\t\tchildren: () => next.node.children,\n\t\t\t\tmiddleware: widgetMeta.middleware\n\t\t\t});\n\t\t\twidgetMeta.rendering = false;\n\t\t\tif (widgetMeta.deferRefs > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tlet instance = new Constructor() as WidgetBaseInterface & {\n\t\t\t\tinvalidate: any;\n\t\t\t\tregistry: any;\n\t\t\t};\n\t\t\tinstance.registry.base = registry;\n\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\tinvalidate = () => {\n\t\t\t\tinstanceData.dirty = true;\n\t\t\t\tif (!instanceData.rendering && _idToWrapperMap.has(id)) {\n\t\t\t\t\t_invalidationQueue.push({ id, depth, order });\n\t\t\t\t\t_schedule();\n\t\t\t\t}\n\t\t\t};\n\t\t\tinstanceData.invalidate = invalidate;\n\t\t\tinstanceData.rendering = true;\n\t\t\tinstance.__setProperties__(next.node.properties);\n\t\t\tinstance.__setChildren__(next.node.children);\n\t\t\tnext.instance = instance;\n\t\t\trendered = instance.__render__();\n\t\t\tinstanceData.rendering = false;\n\t\t}\n\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tchildren = renderedToWrapper(rendered, next, null);\n\t\t\t_idToChildrenWrappers.set(id, children);\n\t\t}\n\n\t\tif (!parentInvalidate && !(Constructor as any).isWNodeWrapper) {\n\t\t\tparentInvalidate = invalidate;\n\t\t}\n\n\t\treturn {\n\t\t\titem: {\n\t\t\t\tnext: children,\n\t\t\t\tmeta: { mergeNodes: next.mergeNodes }\n\t\t\t},\n\t\t\twidget: { type: 'attach', instance: next.instance, id, attached: true }\n\t\t};\n\t}\n\n\tfunction _updateWidget({ current, next }: UpdateWidgetInstruction): ProcessResult {\n\t\tcurrent = getWNodeWrapper(current.id) || current;\n\t\tconst { instance, domNode, hasAnimations } = current;\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tconst Constructor = next.registryItem || widgetConstructor;\n\n\t\tif (!isWidget(Constructor)) {\n\t\t\treturn {};\n\t\t}\n\t\tlet rendered: RenderResult;\n\t\tlet processResult: ProcessResult = {};\n\t\tlet didRender = false;\n\t\tlet currentChildren = _idToChildrenWrappers.get(current.id);\n\t\tnext.hasAnimations = hasAnimations;\n\t\tnext.id = current.id;\n\t\tnext.childDomWrapperId = current.childDomWrapperId;\n\t\tnext.properties = next.node.properties;\n\t\t_wrapperSiblingMap.delete(current);\n\t\tif (domNode && domNode.parentNode) {\n\t\t\tnext.domNode = domNode;\n\t\t}\n\n\t\tif (!isWidgetBaseConstructor(Constructor)) {\n\t\t\tconst widgetMeta = widgetMetaMap.get(next.id);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.properties = next.properties;\n\t\t\t\twidgetMeta.rendering = true;\n\t\t\t\trunDiffs(widgetMeta, current.properties, next.properties);\n\t\t\t\tif (current.node.children.length > 0 || next.node.children.length > 0) {\n\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t}\n\t\t\t\tif (!widgetMeta.dirty) {\n\t\t\t\t\tpropertiesDiff(\n\t\t\t\t\t\tcurrent.properties,\n\t\t\t\t\t\tnext.properties,\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidgetMeta.customDiffProperties ? [...widgetMeta.customDiffProperties.values()] : []\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (widgetMeta.dirty) {\n\t\t\t\t\t_idToChildrenWrappers.delete(next.id);\n\t\t\t\t\tdidRender = true;\n\t\t\t\t\twidgetMeta.dirty = false;\n\t\t\t\t\trendered = Constructor({\n\t\t\t\t\t\tid: next.id,\n\t\t\t\t\t\tproperties: () => next.node.properties,\n\t\t\t\t\t\tchildren: () => next.node.children,\n\t\t\t\t\t\tmiddleware: widgetMeta.middleware\n\t\t\t\t\t});\n\t\t\t\t\tif (widgetMeta.deferRefs > 0) {\n\t\t\t\t\t\trendered = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twidgetMeta.rendering = false;\n\t\t\t}\n\t\t} else {\n\t\t\tconst instanceData = widgetInstanceMap.get(instance!)!;\n\t\t\tnext.instance = instance;\n\t\t\tinstanceData.rendering = true;\n\t\t\tinstance!.__setProperties__(next.node.properties);\n\t\t\tinstance!.__setChildren__(next.node.children);\n\t\t\tif (instanceData.dirty) {\n\t\t\t\tdidRender = true;\n\t\t\t\t_idToChildrenWrappers.delete(next.id);\n\t\t\t\trendered = instance!.__render__();\n\t\t\t}\n\t\t\tinstanceData.rendering = false;\n\t\t}\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tprocessResult.widget = { type: 'attach', instance, id: next.id, attached: false };\n\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tchildren = renderedToWrapper(rendered, next, current);\n\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t}\n\n\t\tif (didRender) {\n\t\t\tprocessResult.item = {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tnext: children,\n\t\t\t\tmeta: {}\n\t\t\t};\n\t\t}\n\t\treturn processResult;\n\t}\n\n\tfunction _removeWidget({ current }: RemoveWidgetInstruction): ProcessResult {\n\t\tcurrent = getWNodeWrapper(current.id) || current;\n\t\t_idToWrapperMap.delete(current.id);\n\t\tconst meta = widgetMetaMap.get(current.id);\n\t\tlet currentChildren = _idToChildrenWrappers.get(current.id);\n\t\t_idToChildrenWrappers.delete(current.id);\n\t\t_wrapperSiblingMap.delete(current);\n\t\tlet processResult: ProcessResult = {\n\t\t\titem: {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tmeta: {}\n\t\t\t}\n\t\t};\n\t\tif (meta) {\n\t\t\tmeta.registryHandler && meta.registryHandler.destroy();\n\t\t\tmeta.destroyMap && destroyHandles(meta.destroyMap);\n\t\t\twidgetMetaMap.delete(current.id);\n\t\t} else {\n\t\t\tprocessResult.widget = { type: 'detach', current, instance: current.instance };\n\t\t}\n\n\t\treturn processResult;\n\t}\n\n\tfunction setDomNodeOnParentWrapper(id: string) {\n\t\tlet wrapper = _idToWrapperMap.get(id)!;\n\t\tlet children = [...(_idToChildrenWrappers.get(id) || [])];\n\t\tlet child: DNodeWrapper | undefined;\n\t\twhile (children.length && !wrapper.domNode) {\n\t\t\tchild = children.shift();\n\t\t\tif (child) {\n\t\t\t\tif (child.domNode) {\n\t\t\t\t\twrapper.childDomWrapperId = child.id;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet nextChildren = _idToChildrenWrappers.get(child.id);\n\t\t\t\tif (nextChildren) {\n\t\t\t\t\tchildren = [...nextChildren, ...children];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _createDom({ next }: CreateDomInstruction): ProcessResult {\n\t\tconst parentDomNode = findParentDomNode(next)!;\n\t\tconst isVirtual = isVirtualWrapper(next);\n\t\tconst isBody = isBodyWrapper(next);\n\t\tlet mergeNodes: Node[] = [];\n\t\tnext.id = `${wrapperId++}`;\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tif (!next.domNode) {\n\t\t\tif ((next.node as any).domNode) {\n\t\t\t\tnext.domNode = (next.node as any).domNode;\n\t\t\t} else {\n\t\t\t\tif (next.node.tag === 'svg') {\n\t\t\t\t\tnext.namespace = NAMESPACE_SVG;\n\t\t\t\t}\n\t\t\t\tif (isBody) {\n\t\t\t\t\tnext.domNode = global.document.body;\n\t\t\t\t} else if (next.node.tag && !isVirtual) {\n\t\t\t\t\tif (next.namespace) {\n\t\t\t\t\t\tnext.domNode = global.document.createElementNS(next.namespace, next.node.tag);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext.domNode = global.document.createElement(next.node.tag);\n\t\t\t\t\t}\n\t\t\t\t} else if (next.node.text != null) {\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_insertBeforeMap && _allMergedNodes.length) {\n\t\t\t\tif (parentDomNode === _allMergedNodes[0].parentNode) {\n\t\t\t\t\t_insertBeforeMap.set(next, _allMergedNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (_mountOptions.merge) {\n\t\t\tnext.merged = true;\n\t\t\tif (isTextNode(next.domNode)) {\n\t\t\t\tif (next.domNode.data !== next.node.text) {\n\t\t\t\t\t_allMergedNodes = [next.domNode, ..._allMergedNodes];\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t\tnext.merged = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmergeNodes = arrayFrom(next.domNode.childNodes);\n\t\t\t\t_allMergedNodes = [..._allMergedNodes, ...mergeNodes];\n\t\t\t}\n\t\t}\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (next.domNode || isVirtual) {\n\t\t\tif (next.node.children && next.node.children.length) {\n\t\t\t\tchildren = renderedToWrapper(next.node.children, next, null);\n\t\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t\t}\n\t\t}\n\t\tconst dom: ApplicationInstruction | undefined =\n\t\t\tisVirtual || isBody\n\t\t\t\t? undefined\n\t\t\t\t: {\n\t\t\t\t\t\tnext: next!,\n\t\t\t\t\t\tparentDomNode: parentDomNode,\n\t\t\t\t\t\ttype: 'create'\n\t\t\t\t  };\n\t\tif (children) {\n\t\t\treturn {\n\t\t\t\titem: {\n\t\t\t\t\tcurrent: [],\n\t\t\t\t\tnext: children,\n\t\t\t\t\tmeta: { mergeNodes }\n\t\t\t\t},\n\t\t\t\tdom,\n\t\t\t\twidget: isVirtual ? { type: 'attach', id: (next as any).id, attached: false } : undefined\n\t\t\t};\n\t\t}\n\t\treturn { dom };\n\t}\n\n\tfunction _updateDom({ current, next }: UpdateDomInstruction): ProcessResult {\n\t\tnext.domNode = current.domNode;\n\t\tnext.namespace = current.namespace;\n\t\tnext.id = current.id;\n\t\tnext.childDomWrapperId = current.childDomWrapperId;\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tlet currentChildren = _idToChildrenWrappers.get(next.id);\n\t\tif (next.node.text != null && next.node.text !== current.node.text) {\n\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t} else if (next.node.children) {\n\t\t\tchildren = renderedToWrapper(next.node.children, next, current);\n\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t}\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_idToWrapperMap.set(next.id, next);\n\t\treturn {\n\t\t\titem: {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tnext: children,\n\t\t\t\tmeta: {}\n\t\t\t},\n\t\t\tdom: { type: 'update', next, current }\n\t\t};\n\t}\n\n\tfunction _removeDom({ current }: RemoveDomInstruction): ProcessResult {\n\t\tconst isVirtual = isVirtualWrapper(current);\n\t\tconst isBody = isBodyWrapper(current);\n\t\tconst children = _idToChildrenWrappers.get(current.id);\n\t\t_idToChildrenWrappers.delete(current.id);\n\t\t_idToWrapperMap.delete(current.id);\n\t\t_wrapperSiblingMap.delete(current);\n\t\tif (current.node.properties.key) {\n\t\t\tconst widgetMeta = widgetMetaMap.get(current.owningId);\n\t\t\tconst parentWrapper = getWNodeWrapper(current.owningId);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.nodeMap && widgetMeta.nodeMap.delete(current.node.properties.key);\n\t\t\t} else if (parentWrapper && parentWrapper.instance) {\n\t\t\t\tconst instanceData = widgetInstanceMap.get(parentWrapper.instance);\n\t\t\t\tinstanceData && instanceData.nodeHandler.remove(current.node.properties.key);\n\t\t\t}\n\t\t}\n\t\tif (current.hasAnimations || isVirtual || isBody) {\n\t\t\treturn {\n\t\t\t\titem: { current: children, meta: {} },\n\t\t\t\tdom: isVirtual || isBody ? undefined : { type: 'delete', current }\n\t\t\t};\n\t\t}\n\n\t\tif (children) {\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tlet wrappers = children || [];\n\t\t\t\tlet wrapper: DNodeWrapper | undefined;\n\t\t\t\tlet bodyIds = [];\n\t\t\t\twhile ((wrapper = wrappers.pop())) {\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\twrapper = getWNodeWrapper(wrapper.id) || wrapper;\n\t\t\t\t\t\tif (wrapper.instance) {\n\t\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(wrapper.instance);\n\t\t\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t\t\t\twrapper.instance = undefined;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst meta = widgetMetaMap.get(wrapper.id);\n\t\t\t\t\t\t\tif (meta) {\n\t\t\t\t\t\t\t\tmeta.registryHandler && meta.registryHandler.destroy();\n\t\t\t\t\t\t\t\tmeta.destroyMap && destroyHandles(meta.destroyMap);\n\t\t\t\t\t\t\t\twidgetMetaMap.delete(wrapper.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet wrapperChildren = _idToChildrenWrappers.get(wrapper.id);\n\t\t\t\t\tif (wrapperChildren) {\n\t\t\t\t\t\twrappers.push(...wrapperChildren);\n\t\t\t\t\t}\n\t\t\t\t\tif (isBodyWrapper(wrapper)) {\n\t\t\t\t\t\tbodyIds.push(wrapper.id);\n\t\t\t\t\t} else if (bodyIds.indexOf(wrapper.parentId) !== -1) {\n\t\t\t\t\t\tif (isWNodeWrapper(wrapper) || isVirtualWrapper(wrapper)) {\n\t\t\t\t\t\t\tbodyIds.push(wrapper.id);\n\t\t\t\t\t\t} else if (wrapper.domNode && wrapper.domNode.parentNode) {\n\t\t\t\t\t\t\twrapper.domNode.parentNode.removeChild(wrapper.domNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t_idToChildrenWrappers.delete(wrapper.id);\n\t\t\t\t\t_idToWrapperMap.delete(wrapper.id);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tdom: { type: 'delete', current }\n\t\t};\n\t}\n\n\treturn {\n\t\tmount,\n\t\tinvalidate\n\t};\n}\n\nexport default renderer;\n","import { Evented, EventObject } from '../core/Evented';\nimport Map from '../shim/Map';\nimport { NodeHandlerInterface } from './interfaces';\n\n/**\n * Enum to identify the type of event.\n * Listening to 'Projector' will notify when projector is created or updated\n * Listening to 'Widget' will notify when widget root is created or updated\n */\nexport enum NodeEventType {\n\tProjector = 'Projector',\n\tWidget = 'Widget'\n}\n\nexport type NodeHandlerEventMap = {\n\tProjector: EventObject<NodeEventType.Projector>;\n\tWidget: EventObject<NodeEventType.Widget>;\n};\n\nexport class NodeHandler extends Evented<NodeHandlerEventMap> implements NodeHandlerInterface {\n\tprivate _nodeMap = new Map<string | number, Element>();\n\n\tpublic get(key: string | number): Element | undefined {\n\t\treturn this._nodeMap.get(key);\n\t}\n\n\tpublic has(key: string | number): boolean {\n\t\treturn this._nodeMap.has(key);\n\t}\n\n\tpublic add(element: Element, key: string | number): void {\n\t\tthis._nodeMap.set(key, element);\n\t\tthis.emit({ type: `${key}` });\n\t}\n\n\tpublic addRoot(): void {\n\t\tthis.emit({ type: NodeEventType.Widget });\n\t}\n\n\tpublic remove(key: string | number) {\n\t\tthis._nodeMap.delete(key);\n\t}\n\n\tpublic addProjector(): void {\n\t\tthis.emit({ type: NodeEventType.Projector });\n\t}\n\n\tpublic clear(): void {\n\t\tthis._nodeMap.clear();\n\t}\n}\n\nexport default NodeHandler;\n","import Map from '../shim/Map';\nimport WeakMap from '../shim/WeakMap';\nimport { auto } from './diff';\nimport {\n\tAfterRender,\n\tBeforeProperties,\n\tBeforeRender,\n\tDiffPropertyReaction,\n\tDNode,\n\tRender,\n\tWidgetMetaConstructor,\n\tWidgetBaseInterface,\n\tWidgetProperties,\n\tMetaBase,\n\tRenderResult\n} from './interfaces';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { WIDGET_BASE_TYPE } from './Registry';\nimport { Handle } from '../core/Destroyable';\nimport { Base } from './meta/Base';\nimport { widgetInstanceMap, v } from './vdom';\n\ninterface ReactionFunctionConfig {\n\tpropertyName: string;\n\treaction: DiffPropertyReaction;\n}\n\nexport type BoundFunctionData = { boundFunc: (...args: any[]) => any; scope: any };\n\nconst decoratorMap = new WeakMap<Function, Map<string, any[]>>();\nconst builtDecoratorMap = new WeakMap<Function, Map<string, any[]>>();\nconst boundAuto = auto.bind(null);\n\nfunction isDomMeta(meta: any): meta is Base {\n\treturn Boolean(meta.afterRender);\n}\n\nconst IGNORE_LIST: (string | symbol)[] = ['render', ...Object.getOwnPropertyNames(Object.getPrototypeOf({}))];\n\nconst autoBindCache = new Map<any, string[]>();\n\nfunction autoBind(instance: any) {\n\tlet prototype = instance.constructor.prototype;\n\n\tlet keys: string[] = [];\n\n\tif (autoBindCache.has(prototype)) {\n\t\tkeys = autoBindCache.get(prototype) as string[];\n\t} else {\n\t\twhile (prototype) {\n\t\t\tconst ownKeys = Object.getOwnPropertyNames(prototype);\n\n\t\t\tif (prototype.constructor.hasOwnProperty('_type')) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tkeys = [...keys, ...ownKeys];\n\n\t\t\tprototype = Object.getPrototypeOf(prototype);\n\t\t}\n\n\t\tkeys = keys.filter((k) => typeof instance[k] === 'function' && IGNORE_LIST.indexOf(k) === -1);\n\n\t\tautoBindCache.set(prototype, keys);\n\t}\n\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i];\n\n\t\tconst boundFunc = instance[key].bind(instance);\n\t\tObject.defineProperty(instance, key, {\n\t\t\tconfigurable: true,\n\t\t\tget() {\n\t\t\t\treturn boundFunc;\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase<P = WidgetProperties, C extends DNode = DNode> implements WidgetBaseInterface<P, C> {\n\t/**\n\t * static identifier\n\t */\n\tstatic _type = WIDGET_BASE_TYPE;\n\n\t/**\n\t * children array\n\t */\n\tprivate _children: (C | null)[];\n\n\t/**\n\t * Indicates if it is the initial set properties cycle\n\t */\n\tprivate _initialProperties = true;\n\n\t/**\n\t * internal widget properties\n\t */\n\tprivate _properties: P & WidgetProperties & { [index: string]: any };\n\n\t/**\n\t * Array of property keys considered changed from the previous set properties\n\t */\n\tprivate _changedPropertyKeys: string[] = [];\n\n\t/**\n\t * map of decorators that are applied to this widget\n\t */\n\tprivate _decoratorCache: Map<string, any[]>;\n\n\tprivate _registry: RegistryHandler = new RegistryHandler();\n\n\tprivate _metaMap: Map<WidgetMetaConstructor<any>, MetaBase> | undefined;\n\n\tprivate _boundRenderFunc: Render;\n\n\tprivate _boundInvalidate: () => void;\n\n\tprivate _nodeHandler: NodeHandler = new NodeHandler();\n\n\tprivate _handles: Handle[] = [];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis._children = [];\n\t\tthis._decoratorCache = new Map<string, any[]>();\n\t\tthis._properties = {} as P;\n\t\tthis._boundRenderFunc = this.render.bind(this);\n\t\tthis._boundInvalidate = this.invalidate.bind(this);\n\t\tthis.own(this._registry);\n\t\tthis.own(this._registry.on('invalidate', this._boundInvalidate));\n\n\t\twidgetInstanceMap.set(this, {\n\t\t\tdirty: true,\n\t\t\tonAttach: (): void => {\n\t\t\t\tthis.onAttach();\n\t\t\t},\n\t\t\tonDetach: (): void => {\n\t\t\t\tthis.onDetach();\n\t\t\t\tthis.destroy();\n\t\t\t},\n\t\t\tnodeHandler: this._nodeHandler,\n\t\t\trendering: false,\n\t\t\tinputProperties: {},\n\t\t\tregistry: this.registry\n\t\t});\n\n\t\tthis.own({\n\t\t\tdestroy: () => {\n\t\t\t\twidgetInstanceMap.delete(this);\n\t\t\t\tthis._nodeHandler.clear();\n\t\t\t\tthis._nodeHandler.destroy();\n\t\t\t}\n\t\t});\n\n\t\tthis._runAfterConstructors();\n\t}\n\n\tprotected meta<T extends MetaBase>(MetaType: WidgetMetaConstructor<T>): T {\n\t\tif (this._metaMap === undefined) {\n\t\t\tthis._metaMap = new Map<WidgetMetaConstructor<any>, MetaBase>();\n\t\t}\n\t\tlet cached = this._metaMap.get(MetaType);\n\t\tif (!cached) {\n\t\t\tcached = new MetaType({\n\t\t\t\tinvalidate: this._boundInvalidate,\n\t\t\t\tnodeHandler: this._nodeHandler,\n\t\t\t\tbind: this\n\t\t\t});\n\t\t\tthis.own(cached);\n\t\t\tthis._metaMap.set(MetaType, cached);\n\t\t}\n\n\t\treturn cached as T;\n\t}\n\n\tprotected onAttach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tprotected onDetach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tpublic get properties(): Readonly<P> & Readonly<WidgetProperties> {\n\t\treturn this._properties;\n\t}\n\n\tpublic get changedPropertyKeys(): string[] {\n\t\treturn [...this._changedPropertyKeys];\n\t}\n\n\tpublic __setProperties__(originalProperties: this['properties']): void {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData) {\n\t\t\tinstanceData.inputProperties = originalProperties;\n\t\t}\n\t\tconst properties = this._runBeforeProperties(originalProperties);\n\t\tconst registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n\t\tconst changedPropertyKeys: string[] = [];\n\t\tconst propertyNames = Object.keys(properties);\n\n\t\tif (this._initialProperties) {\n\t\t\tautoBind(this);\n\t\t}\n\n\t\tif (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n\t\t\tconst allProperties = [...propertyNames, ...Object.keys(this._properties)];\n\t\t\tconst checkedProperties: (string | number)[] = [];\n\t\t\tconst diffPropertyResults: any = {};\n\t\t\tlet runReactions = false;\n\n\t\t\tfor (let i = 0; i < allProperties.length; i++) {\n\t\t\t\tconst propertyName = allProperties[i];\n\t\t\t\tif (checkedProperties.indexOf(propertyName) !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcheckedProperties.push(propertyName);\n\t\t\t\tconst previousProperty = this._properties[propertyName];\n\t\t\t\tconst newProperty = properties[propertyName];\n\t\t\t\tif (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n\t\t\t\t\trunReactions = true;\n\t\t\t\t\tconst diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n\t\t\t\t\tfor (let i = 0; i < diffFunctions.length; i++) {\n\t\t\t\t\t\tconst result = diffFunctions[i](previousProperty, newProperty);\n\t\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst result = boundAuto(previousProperty, newProperty);\n\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (runReactions) {\n\t\t\t\tconst reactionFunctions: ReactionFunctionConfig[] = this.getDecorator('diffReaction');\n\t\t\t\tconst executedReactions: Function[] = [];\n\t\t\t\treactionFunctions.forEach(({ reaction, propertyName }) => {\n\t\t\t\t\tconst propertyChanged = changedPropertyKeys.indexOf(propertyName) !== -1;\n\t\t\t\t\tconst reactionRun = executedReactions.indexOf(reaction) !== -1;\n\t\t\t\t\tif (propertyChanged && !reactionRun) {\n\t\t\t\t\t\treaction.call(this, this._properties, diffPropertyResults);\n\t\t\t\t\t\texecutedReactions.push(reaction);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._properties = diffPropertyResults;\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t} else {\n\t\t\tthis._initialProperties = false;\n\t\t\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\t\t\tconst propertyName = propertyNames[i];\n\t\t\t\tif (typeof properties[propertyName] === 'function') {\n\t\t\t\t\tproperties[propertyName] = properties[propertyName];\n\t\t\t\t} else {\n\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t\tthis._properties = { ...properties };\n\t\t}\n\n\t\tif (this._changedPropertyKeys.length > 0) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tpublic get children(): (C | null)[] {\n\t\treturn this._children;\n\t}\n\n\tpublic __setChildren__(children: (C | null)[]): void {\n\t\tif (this._children.length > 0 || children.length > 0) {\n\t\t\tthis._children = children;\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tpublic __render__(): RenderResult {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData) {\n\t\t\tinstanceData.dirty = false;\n\t\t}\n\t\tconst render = this._runBeforeRenders();\n\t\tconst dNode = this._runAfterRenders(render());\n\t\treturn dNode;\n\t}\n\n\tpublic invalidate(): void {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData && instanceData.invalidate) {\n\t\t\tinstanceData.invalidate();\n\t\t}\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\treturn v('div', {}, this.children);\n\t}\n\n\t/**\n\t * Function to add decorators to WidgetBase\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @param value The value of the decorator\n\t */\n\tprotected addDecorator(decoratorKey: string, value: any): void {\n\t\tvalue = Array.isArray(value) ? value : [value];\n\t\tif (this.hasOwnProperty('constructor')) {\n\t\t\tlet decoratorList = decoratorMap.get(this.constructor);\n\t\t\tif (!decoratorList) {\n\t\t\t\tdecoratorList = new Map<string, any[]>();\n\t\t\t\tdecoratorMap.set(this.constructor, decoratorList);\n\t\t\t}\n\n\t\t\tlet specificDecoratorList = decoratorList.get(decoratorKey);\n\t\t\tif (!specificDecoratorList) {\n\t\t\t\tspecificDecoratorList = [];\n\t\t\t\tdecoratorList.set(decoratorKey, specificDecoratorList);\n\t\t\t}\n\t\t\tspecificDecoratorList.push(...value);\n\t\t} else {\n\t\t\tconst decorators = this.getDecorator(decoratorKey);\n\t\t\tthis._decoratorCache.set(decoratorKey, [...decorators, ...value]);\n\t\t}\n\t}\n\n\t/**\n\t * Function to build the list of decorators from the global decorator map.\n\t *\n\t * @param decoratorKey  The key of the decorator\n\t * @return An array of decorator values\n\t * @private\n\t */\n\tprivate _buildDecoratorList(decoratorKey: string): any[] {\n\t\tconst allDecorators = [];\n\n\t\tlet constructor = this.constructor;\n\n\t\twhile (constructor) {\n\t\t\tconst instanceMap = decoratorMap.get(constructor);\n\t\t\tif (instanceMap) {\n\t\t\t\tconst decorators = instanceMap.get(decoratorKey);\n\n\t\t\t\tif (decorators) {\n\t\t\t\t\tallDecorators.unshift(...decorators);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconstructor = Object.getPrototypeOf(constructor);\n\t\t}\n\n\t\tconst buildDecorators = builtDecoratorMap.get(this.constructor) || new Map();\n\t\tbuildDecorators.set(decoratorKey, allDecorators);\n\t\tbuiltDecoratorMap.set(this.constructor, buildDecorators);\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Function to retrieve decorator values\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @returns An array of decorator values\n\t */\n\tprotected getDecorator(decoratorKey: string): any[] {\n\t\tlet decoratorCache = builtDecoratorMap.get(this.constructor);\n\t\tlet allDecorators =\n\t\t\tthis._decoratorCache.get(decoratorKey) || (decoratorCache && decoratorCache.get(decoratorKey));\n\n\t\tif (allDecorators !== undefined) {\n\t\t\treturn allDecorators;\n\t\t}\n\n\t\tallDecorators = this._buildDecoratorList(decoratorKey);\n\n\t\tallDecorators = [...allDecorators];\n\t\tthis._decoratorCache.set(decoratorKey, allDecorators);\n\t\treturn allDecorators;\n\t}\n\n\tpublic get registry(): RegistryHandler {\n\t\treturn this._registry;\n\t}\n\n\tprivate _runBeforeProperties(properties: any) {\n\t\tconst beforeProperties: BeforeProperties[] = this.getDecorator('beforeProperties');\n\t\tif (beforeProperties.length > 0) {\n\t\t\treturn beforeProperties.reduce(\n\t\t\t\t(properties, beforePropertiesFunction) => {\n\t\t\t\t\treturn { ...properties, ...beforePropertiesFunction.call(this, properties) };\n\t\t\t\t},\n\t\t\t\t{ ...properties }\n\t\t\t);\n\t\t}\n\t\treturn properties;\n\t}\n\n\t/**\n\t * Run all registered before renders and return the updated render method\n\t */\n\tprivate _runBeforeRenders(): Render {\n\t\tconst beforeRenders = this.getDecorator('beforeRender');\n\n\t\tif (beforeRenders.length > 0) {\n\t\t\treturn beforeRenders.reduce((render: Render, beforeRenderFunction: BeforeRender) => {\n\t\t\t\tconst updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n\t\t\t\tif (!updatedRender) {\n\t\t\t\t\tconsole.warn('Render function not returned from beforeRender, using previous render');\n\t\t\t\t\treturn render;\n\t\t\t\t}\n\t\t\t\treturn updatedRender;\n\t\t\t}, this._boundRenderFunc);\n\t\t}\n\t\treturn this._boundRenderFunc;\n\t}\n\n\t/**\n\t * Run all registered after renders and return the decorated DNodes\n\t *\n\t * @param dNode The DNodes to run through the after renders\n\t */\n\tprivate _runAfterRenders(dNode: DNode | DNode[]): DNode | DNode[] {\n\t\tconst afterRenders = this.getDecorator('afterRender');\n\n\t\tif (afterRenders.length > 0) {\n\t\t\tdNode = afterRenders.reduce((dNode: DNode | DNode[], afterRenderFunction: AfterRender) => {\n\t\t\t\treturn afterRenderFunction.call(this, dNode);\n\t\t\t}, dNode);\n\t\t}\n\n\t\tif (this._metaMap !== undefined) {\n\t\t\tthis._metaMap.forEach((meta) => {\n\t\t\t\tisDomMeta(meta) && meta.afterRender();\n\t\t\t});\n\t\t}\n\n\t\treturn dNode;\n\t}\n\n\tprivate _runAfterConstructors(): void {\n\t\tconst afterConstructors = this.getDecorator('afterConstructor');\n\n\t\tif (afterConstructors.length > 0) {\n\t\t\tafterConstructors.forEach((afterConstructor) => afterConstructor.call(this));\n\t\t}\n\t}\n\n\tprotected own(handle: Handle): void {\n\t\tthis._handles.push(handle);\n\t}\n\n\tprotected destroy() {\n\t\twhile (this._handles.length > 0) {\n\t\t\tconst handle = this._handles.pop();\n\t\t\tif (handle) {\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default WidgetBase;\n","import { Handle } from './Destroyable';\nimport { DNode, RenderResult } from './interfaces';\nimport { isWNode, isVNode } from './vdom';\n\nconst slice = Array.prototype.slice;\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport interface Modifier<T extends DNode> {\n\t(dNode: T, breaker: () => void): void;\n}\n\nexport interface Predicate<T extends DNode> {\n\t(dNode: DNode): dNode is T;\n}\n\nexport interface DecorateOptions<T extends DNode> {\n\tmodifier: Modifier<T>;\n\tpredicate?: Predicate<T>;\n\tshallow?: boolean;\n}\n\n/**\n * Type guard that ensures that the value can be coerced to Object\n * to weed out host objects that do not derive from Object.\n * This function is used to check if we want to deep copy an object or not.\n * Note: In ES6 it is possible to modify an object's Symbol.toStringTag property, which will\n * change the value returned by `toString`. This is a rare edge case that is difficult to handle,\n * so it is not handled here.\n * @param  value The value to check\n * @return       If the value is coercible into an Object\n */\nfunction shouldDeepCopyObject(value: any): value is Object {\n\treturn Object.prototype.toString.call(value) === '[object Object]';\n}\n\nfunction copyArray<T>(array: T[], inherited: boolean): T[] {\n\treturn array.map(function(item: T): T {\n\t\tif (Array.isArray(item)) {\n\t\t\treturn copyArray(item, inherited) as any;\n\t\t}\n\n\t\treturn !shouldDeepCopyObject(item)\n\t\t\t? item\n\t\t\t: _mixin({\n\t\t\t\t\tdeep: true,\n\t\t\t\t\tinherited: inherited,\n\t\t\t\t\tsources: <Array<T>>[item],\n\t\t\t\t\ttarget: <T>{}\n\t\t\t  });\n\t});\n}\n\ninterface MixinArgs<T extends {}, U extends {}> {\n\tdeep: boolean;\n\tinherited: boolean;\n\tsources: (U | null | undefined)[];\n\ttarget: T;\n\tcopied?: any[];\n}\n\nfunction _mixin<T extends {}, U extends {}>(kwArgs: MixinArgs<T, U>): T & U {\n\tconst deep = kwArgs.deep;\n\tconst inherited = kwArgs.inherited;\n\tconst target: any = kwArgs.target;\n\tconst copied = kwArgs.copied || [];\n\tconst copiedClone = [...copied];\n\n\tfor (let i = 0; i < kwArgs.sources.length; i++) {\n\t\tconst source = kwArgs.sources[i];\n\n\t\tif (source === null || source === undefined) {\n\t\t\tcontinue;\n\t\t}\n\t\tfor (let key in source) {\n\t\t\tif (inherited || hasOwnProperty.call(source, key)) {\n\t\t\t\tlet value: any = source[key];\n\n\t\t\t\tif (copiedClone.indexOf(value) !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (deep) {\n\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\tvalue = copyArray(value, inherited);\n\t\t\t\t\t} else if (shouldDeepCopyObject(value)) {\n\t\t\t\t\t\tconst targetValue: any = target[key] || {};\n\t\t\t\t\t\tcopied.push(source);\n\t\t\t\t\t\tvalue = _mixin({\n\t\t\t\t\t\t\tdeep: true,\n\t\t\t\t\t\t\tinherited: inherited,\n\t\t\t\t\t\t\tsources: [value],\n\t\t\t\t\t\t\ttarget: targetValue,\n\t\t\t\t\t\t\tcopied\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttarget[key] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn <T & U>target;\n}\n\n/**\n * Copies the values of all enumerable own properties of one or more source objects to the target object,\n * recursively copying all nested objects and arrays as well.\n *\n * @param target The target object to receive values from source objects\n * @param sources Any number of objects whose enumerable own properties will be copied to the target object\n * @return The modified target object\n */\nexport function deepAssign<\n\tT extends {},\n\tU extends {},\n\tV extends {},\n\tW extends {},\n\tX extends {},\n\tY extends {},\n\tZ extends {}\n>(target: T, source1: U, source2: V, source3: W, source4: X, source5: Y, source6: Z): T & U & V & W & X & Y & Z;\nexport function deepAssign<T extends {}, U extends {}, V extends {}, W extends {}, X extends {}, Y extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W,\n\tsource4: X,\n\tsource5: Y\n): T & U & V & W & X & Y;\nexport function deepAssign<T extends {}, U extends {}, V extends {}, W extends {}, X extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W,\n\tsource4: X\n): T & U & V & W & X;\nexport function deepAssign<T extends {}, U extends {}, V extends {}, W extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W\n): T & U & V & W;\nexport function deepAssign<T extends {}, U extends {}, V extends {}>(target: T, source1: U, source2: V): T & U & V;\nexport function deepAssign<T extends {}, U extends {}>(target: T, source: U): T & U;\nexport function deepAssign(target: any, ...sources: any[]): any {\n\treturn _mixin({\n\t\tdeep: true,\n\t\tinherited: false,\n\t\tsources: sources,\n\t\ttarget: target\n\t});\n}\n\n/**\n * Copies the values of all enumerable (own or inherited) properties of one or more source objects to the\n * target object, recursively copying all nested objects and arrays as well.\n *\n * @param target The target object to receive values from source objects\n * @param sources Any number of objects whose enumerable properties will be copied to the target object\n * @return The modified target object\n */\nexport function deepMixin<\n\tT extends {},\n\tU extends {},\n\tV extends {},\n\tW extends {},\n\tX extends {},\n\tY extends {},\n\tZ extends {}\n>(target: T, source1: U, source2: V, source3: W, source4: X, source5: Y, source6: Z): T & U & V & W & X & Y & Z;\nexport function deepMixin<T extends {}, U extends {}, V extends {}, W extends {}, X extends {}, Y extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W,\n\tsource4: X,\n\tsource5: Y\n): T & U & V & W & X & Y;\nexport function deepMixin<T extends {}, U extends {}, V extends {}, W extends {}, X extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W,\n\tsource4: X\n): T & U & V & W & X;\nexport function deepMixin<T extends {}, U extends {}, V extends {}, W extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W\n): T & U & V & W;\nexport function deepMixin<T extends {}, U extends {}, V extends {}>(target: T, source1: U, source2: V): T & U & V;\nexport function deepMixin<T extends {}, U extends {}>(target: T, source: U): T & U;\nexport function deepMixin(target: any, ...sources: any[]): any {\n\treturn _mixin({\n\t\tdeep: true,\n\t\tinherited: true,\n\t\tsources: sources,\n\t\ttarget: target\n\t});\n}\n\n/**\n * Copies the values of all enumerable (own or inherited) properties of one or more source objects to the\n * target object.\n *\n * @return The modified target object\n */\nexport function mixin<T extends {}, U extends {}, V extends {}, W extends {}, X extends {}, Y extends {}, Z extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W,\n\tsource4: X,\n\tsource5: Y,\n\tsource6: Z\n): T & U & V & W & X & Y & Z;\nexport function mixin<T extends {}, U extends {}, V extends {}, W extends {}, X extends {}, Y extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W,\n\tsource4: X,\n\tsource5: Y\n): T & U & V & W & X & Y;\nexport function mixin<T extends {}, U extends {}, V extends {}, W extends {}, X extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W,\n\tsource4: X\n): T & U & V & W & X;\nexport function mixin<T extends {}, U extends {}, V extends {}, W extends {}>(\n\ttarget: T,\n\tsource1: U,\n\tsource2: V,\n\tsource3: W\n): T & U & V & W;\nexport function mixin<T extends {}, U extends {}, V extends {}>(target: T, source1: U, source2: V): T & U & V;\nexport function mixin<T extends {}, U extends {}>(target: T, source: U): T & U;\nexport function mixin(target: any, ...sources: any[]): any {\n\treturn _mixin({\n\t\tdeep: false,\n\t\tinherited: true,\n\t\tsources: sources,\n\t\ttarget: target\n\t});\n}\n\n/**\n * Returns a function which invokes the given function with the given arguments prepended to its argument list.\n * Like `Function.prototype.bind`, but does not alter execution context.\n *\n * @param targetFunction The function that needs to be bound\n * @param suppliedArgs An optional array of arguments to prepend to the `targetFunction` arguments list\n * @return The bound function\n */\nexport function partial(targetFunction: (...args: any[]) => any, ...suppliedArgs: any[]): (...args: any[]) => any {\n\treturn function(this: any) {\n\t\tconst args: any[] = arguments.length ? suppliedArgs.concat(slice.call(arguments)) : suppliedArgs;\n\n\t\treturn targetFunction.apply(this, args);\n\t};\n}\n\nexport function guaranteeMinimumTimeout(callback: (...args: any[]) => void, delay?: number): Handle {\n\tconst startTime = Date.now();\n\tlet timerId: any;\n\n\tfunction timeoutHandler() {\n\t\tconst delta = Date.now() - startTime;\n\t\tif (delay == null || delta >= delay) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\ttimerId = setTimeout(timeoutHandler, delay - delta);\n\t\t}\n\t}\n\ttimerId = setTimeout(timeoutHandler, delay);\n\treturn {\n\t\tdestroy: () => {\n\t\t\tif (timerId != null) {\n\t\t\t\tclearTimeout(timerId);\n\t\t\t\ttimerId = null;\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function debounce<T extends (this: any, ...args: any[]) => void>(callback: T, delay: number): T {\n\tlet timer: Handle | null;\n\n\treturn <T>function() {\n\t\ttimer && timer.destroy();\n\n\t\tlet context = this;\n\t\tlet args: any | null = arguments;\n\n\t\ttimer = guaranteeMinimumTimeout(function() {\n\t\t\tcallback.apply(context, args);\n\t\t\targs = context = timer = null;\n\t\t}, delay);\n\t};\n}\n\nexport function throttle<T extends (this: any, ...args: any[]) => void>(callback: T, delay: number): T {\n\tlet ran: boolean | null;\n\n\treturn <T>function() {\n\t\tif (ran) {\n\t\t\treturn;\n\t\t}\n\n\t\tran = true;\n\t\tlet args: any | null = arguments;\n\n\t\tcallback.apply(this, args);\n\t\tguaranteeMinimumTimeout(function() {\n\t\t\tran = null;\n\t\t}, delay);\n\t};\n}\n\nexport function uuid(): string {\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t\tconst r = (Math.random() * 16) | 0,\n\t\t\tv = c === 'x' ? r : (r & 0x3) | 0x8;\n\t\treturn v.toString(16);\n\t});\n}\n\n/**\n * Generic decorate function for DNodes. The nodes are modified in place based on the provided predicate\n * and modifier functions.\n *\n * The children of each node are flattened and added to the array for decoration.\n *\n * If no predicate is supplied then the modifier will be executed on all nodes. A `breaker` function is passed to the\n * modifier which will drain the nodes array and exit the decoration.\n *\n * When the `shallow` options is set to `true` the only the top node or nodes will be decorated (only supported using\n * `DecorateOptions`).\n */\nexport function decorate<T extends DNode>(dNodes: DNode, options: DecorateOptions<T>): DNode;\nexport function decorate<T extends DNode>(dNodes: DNode[], options: DecorateOptions<T>): DNode[];\nexport function decorate<T extends DNode>(dNodes: DNode | DNode[], options: DecorateOptions<T>): DNode | DNode[];\nexport function decorate<T extends DNode>(dNodes: DNode, modifier: Modifier<T>, predicate: Predicate<T>): DNode;\nexport function decorate<T extends DNode>(dNodes: DNode[], modifier: Modifier<T>, predicate: Predicate<T>): DNode[];\nexport function decorate<T extends DNode>(\n\tdNodes: RenderResult,\n\tmodifier: Modifier<T>,\n\tpredicate: Predicate<T>\n): RenderResult;\nexport function decorate(dNodes: DNode, modifier: Modifier<DNode>): DNode;\nexport function decorate(dNodes: DNode[], modifier: Modifier<DNode>): DNode[];\nexport function decorate(dNodes: RenderResult, modifier: Modifier<DNode>): RenderResult;\nexport function decorate(\n\tdNodes: DNode | DNode[],\n\toptionsOrModifier: Modifier<DNode> | DecorateOptions<DNode>,\n\tpredicate?: Predicate<DNode>\n): DNode | DNode[] {\n\tlet shallow = false;\n\tlet modifier;\n\tif (typeof optionsOrModifier === 'function') {\n\t\tmodifier = optionsOrModifier;\n\t} else {\n\t\tmodifier = optionsOrModifier.modifier;\n\t\tpredicate = optionsOrModifier.predicate;\n\t\tshallow = optionsOrModifier.shallow || false;\n\t}\n\n\tlet nodes = Array.isArray(dNodes) ? [...dNodes] : [dNodes];\n\tfunction breaker() {\n\t\tnodes = [];\n\t}\n\twhile (nodes.length) {\n\t\tconst node = nodes.shift();\n\t\tif (node && node !== true) {\n\t\t\tif (!shallow && (isWNode(node) || isVNode(node)) && node.children) {\n\t\t\t\tnodes = [...nodes, ...node.children];\n\t\t\t}\n\t\t\tif (!predicate || predicate(node)) {\n\t\t\t\tmodifier(node, breaker);\n\t\t\t}\n\t\t}\n\t}\n\treturn dNodes;\n}\n","export type DecoratorHandler = (target: any, propertyKey?: string) => void;\n\n/**\n * Generic decorator handler to take care of whether or not the decorator was called at the class level\n * or the method level.\n *\n * @param handler\n */\nexport function handleDecorator(handler: DecoratorHandler) {\n\treturn function(target: any, propertyKey?: string, descriptor?: PropertyDescriptor) {\n\t\tif (typeof target === 'function') {\n\t\t\thandler(target.prototype, undefined);\n\t\t} else {\n\t\t\thandler(target, propertyKey);\n\t\t}\n\t};\n}\n\nexport default handleDecorator;\n","import { handleDecorator } from './handleDecorator';\nimport { DiffPropertyFunction } from './../interfaces';\nimport { auto } from './../diff';\n\n/**\n * Decorator that can be used to register a function as a specific property diff\n *\n * @param propertyName  The name of the property of which the diff function is applied\n * @param diffType      The diff type, default is DiffType.AUTO.\n * @param diffFunction  A diff function to run if diffType if DiffType.CUSTOM\n */\nexport function diffProperty(\n\tpropertyName: string,\n\tdiffFunction: DiffPropertyFunction = auto,\n\treactionFunction?: Function\n) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\ttarget.addDecorator(`diffProperty:${propertyName}`, diffFunction.bind(null));\n\t\ttarget.addDecorator('registeredDiffProperty', propertyName);\n\t\tif (reactionFunction || propertyKey) {\n\t\t\ttarget.addDecorator('diffReaction', {\n\t\t\t\tpropertyName,\n\t\t\t\treaction: propertyKey ? target[propertyKey] : reactionFunction\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport default diffProperty;\n","import { deepMixin } from '@dojo/framework/core/util';\nimport * as Grid from 'dgrid/Grid';\nimport * as declare from 'dojo/_base/declare';\nimport * as CellSelection from 'dgrid/CellSelection';\nimport * as Selector from 'dgrid/Selector';\nimport * as ColumnHider from 'dgrid/extensions/ColumnHider';\nimport * as ColumnReorder from 'dgrid/extensions/ColumnReorder';\nimport * as ColumnResizer from 'dgrid/extensions/ColumnResizer';\nimport * as CompoundColumns from 'dgrid/extensions/CompoundColumns';\nimport * as ColumnSet from 'dgrid/ColumnSet';\nimport * as Tree from 'dgrid/Tree';\nimport * as MemoryStore from 'dstore/Memory';\nimport * as TreeStore from 'dstore/Tree';\nimport * as Trackable from 'dstore/Trackable';\nimport * as StoreMixin from 'dgrid/_StoreMixin';\nimport * as OnDemandGrid from 'dgrid/OnDemandGrid';\nimport * as Keyboard from 'dgrid/Keyboard';\nimport * as Pagination from 'dgrid/extensions/Pagination';\nimport * as Selection from 'dgrid/Selection';\nimport { DNode, WidgetProperties } from '@dojo/framework/core/interfaces';\nimport { WidgetBase } from '@dojo/framework/core/WidgetBase';\nimport { diffProperty } from '@dojo/framework/core/decorators/diffProperty';\nimport { w, dom } from '@dojo/framework/core/vdom';\nimport { columnsDiff } from './diff';\n\nexport enum SelectionMode {\n\tnone = 'none',\n\tmultiple = 'multiple',\n\tsingle = 'single',\n\textended = 'extended'\n}\n\nexport interface Selections {\n\t[id: string]: boolean;\n}\n\nexport interface DgridWrapperFeatures {\n\t// Setting pagination to true turns off infinite scrolling and displays rows in discrete pages.\n\tpagination?: boolean;\n\t// Add keyboard navigation capability.\n\tkeyboard?: boolean;\n\t// Add selection capabilities to a grid.\n\tselection?: SelectionType;\n\t// Add selector column to the grid.  selection must be set as well.\n\tselector?: boolean;\n\t// Support hierarchical data\n\t// When tree is enabled, the items in the data array are expected to have the following properties:\n\t//  - hasChildren: boolean, true indicates this item has children\n\t//  - parent: ID, if this item is a child, parent is the ID of the parent item.\n\ttree?: boolean;\n\t// Enable the column hider extension.\n\tcolumnHider?: boolean;\n\t// Enable the column reorder extension.\n\tcolumnReorder?: boolean;\n\t// Enable the column resizer extension.\n\tcolumnResizer?: boolean;\n\t// Enable the compound column extension.\n\tcompoundColumns?: boolean;\n\t// Enable the column set mixin.\n\tcolumnSet?: boolean;\n}\n\nexport interface DgridWrapperProperties extends WidgetProperties {\n\tfeatures?: DgridWrapperFeatures;\n\n\t// Grid properties\n\tcolumns?: ColumnSpec;\n\tsubRows?: Array<Column[]>;\n\n\t// An array of data items that will be pushed into a Memory store and passed to the dgrid grid.\n\tdata: {}[];\n\n\t// Grid Events\n\t// See https://github.com/SitePen/dgrid/blob/master/doc/usage/Working-with-Events.md\n\tonSort?: (sort: SortData) => void;\n\tonError?: (error: ErrorData) => void;\n\n\t// _StoreMixin properties\n\t// See https://github.com/SitePen/dgrid/blob/master/_StoreMixin.js for documentation and default values.\n\tnoDataMessage?: string;\n\tloadingMessage?: string;\n\n\t// Pagination properties\n\t// See https://github.com/SitePen/dgrid/blob/master/extensions/Pagination.js for documentation and default values.\n\trowsPerPage?: number;\n\tpagingTextBox?: boolean;\n\tpreviousNextArrows?: boolean;\n\tfirstLastArrows?: boolean;\n\tpagingLinks?: number;\n\tpageSizeOptions?: number[];\n\tshowLoadingMessage?: boolean;\n\n\t// Keyboard properties\n\t// See https://github.com/SitePen/dgrid/blob/master/Keyboard.js for documentation and default values.\n\tpageSkip?: number;\n\ttabIndex?: number;\n\tonCellFocusIn?: (focused: CellFocusData) => void;\n\tonCellFocusOut?: (focused: CellFocusData) => void;\n\n\t// Selection properties\n\t// See https://github.com/SitePen/dgrid/blob/master/Selection.js for documentation and default values.\n\tdeselectOnRefresh?: boolean;\n\tallowSelectAll?: boolean;\n\tselection?: Selections;\n\tselectionMode?: SelectionMode;\n\tallowTextSelection?: boolean;\n\tonSelect?: (selected: SelectionData, selections: Selections) => void;\n\tonDeselect?: (deselected: SelectionData, selections: Selections) => void;\n\n\t// Tree properties\n\t// See https://github.com/SitePen/dgrid/blob/master/Tree.js for documentation and default values.\n\tcollapseOnRefresh?: boolean;\n\tenableTreeTransitions?: boolean;\n\ttreeIndentWidth?: number;\n\n\t// Column Hider properties\n\t// See https://github.com/SitePen/dgrid/blob/master/extensions/ColumnHider.js for documentation and default values.\n\tonColumnStateChange?: (columnChange: ColumnStateChangeData) => void;\n\n\t// Column Reorder properties\n\t// See https://github.com/SitePen/dgrid/blob/master/extensions/ColumnReorder.js for documentation and default values.\n\tonColumnReorder?: (columnReorder: ColumnReorderData) => void;\n\n\t// Column Resizer properties\n\t// See https://github.com/SitePen/dgrid/blob/master/extensions/ColumnResizer.js for documentation and default values.\n\tonColumnResize?: (columnResize: ColumnResizeData) => void;\n\n\tminWidth?: number;\n\tadjustLastColumn?: boolean;\n\n\tcolumnSets?: Array<Array<Column[]>>;\n}\n\n// List of dgrid property names that must be passed to dgrid when a grid is constructed.\n// These keys can not update an existing grid.  If they change, a new grid must be constructed.\nexport const constructionKeys = [\n\t'previousNextArrows',\n\t'firstLastArrows',\n\t'pagingLinks',\n\t'tabIndex',\n\t'allowSelectAll',\n\t'selection',\n\t'treeIndentWidth'\n];\n\nexport interface Column {\n\tfield?: string;\n\tid?: string | number;\n\tlabel?: string;\n\tclassName?: string;\n\tcolSpan?: number;\n\trowSpan?: number;\n\tsortable?: boolean;\n\tformatter?: string | Formatter;\n\tselector?: string;\n\tchildren?: Column[];\n\tshowChildHeaders?: boolean;\n\n\tget?(item: any): any;\n\tset?(item: any): any;\n\trenderCell?(object: any, value: any, node: HTMLElement): HTMLElement | void;\n\trenderHeaderCell?(node: HTMLElement): HTMLElement | void;\n}\n\nexport type ColumnSpec = { [key: string]: Column | string } | Column[];\n\nexport type Formatter = (value: any, object: any) => string;\n\nexport enum SelectionType {\n\trow = 'row',\n\tcell = 'cell'\n}\n\nexport interface SelectionData {\n\ttype: SelectionType;\n\tdata: {\n\t\t// The data item used to render the selected row.\n\t\titem: any;\n\t\t// If the type is \"cell\", this contains the field name that corresponds to the selected cell.\n\t\tfield?: string;\n\t}[];\n}\n\nexport interface ColumnStateChangeData {\n\tfield?: string;\n\tid?: string | number;\n\thidden: boolean;\n}\n\nexport interface ColumnResizeData {\n\tid?: string | number;\n\tfield?: string;\n\twidth?: number;\n\tparentType?: string;\n}\n\nexport interface ColumnReorderData {\n\tsubRow?: ColumnSpec;\n\tfield?: string;\n\tid?: string | number;\n}\n\nexport interface ErrorData {\n\terror?: Error | string;\n}\n\nexport interface SortData {\n\tparentType?: string;\n\tsort?: { property: string; descending?: boolean }[];\n}\n\nexport interface CellFocusData {\n\trow?: {};\n\tcell?: {};\n\tparentType?: string;\n}\n\nexport interface DgridInnerWrapperProperties extends DgridWrapperProperties {\n\t// The inner wrapper can pass a state object to the outer wrapper widget so\n\t// a dgrid grid can be destroyed and recreated back to the same state when\n\t// desired.\n\tgridState?: DgridState;\n\tonGridState: (state: DgridState) => void;\n}\n\n/**\n * When a dgrid grid is destroyed some of its state will need to be restored when the next\n * grid is created.  This interface describes that state.\n */\nexport interface DgridState {\n\tcurrentPage?: number;\n}\n\ninterface DgridGrid extends Grid, Pagination, Keyboard, Selection {}\n\ninterface DgridProperties\n\textends Grid.KwArgs,\n\t\tStoreMixin.KwArgs,\n\t\tPagination.KwArgs,\n\t\tOnDemandGrid.KwArgs,\n\t\tSelection.KwArgs,\n\t\tColumnSet.KwArgs {\n\tselection?: Selections;\n}\n\ninterface DgridSelectionEvent extends Event {\n\trows?: { data: any }[];\n\tcells?: { data: any }[];\n}\n\ninterface DgridColumnHiderEvent extends Event {\n\tgrid: DgridGrid;\n\tcolumn: Column;\n\thidden: boolean;\n}\n\ninterface DgridColumnReorderEvent extends Event {\n\tgrid: DgridGrid;\n\tsubRow: ColumnSpec;\n\tcolumn: Column;\n}\n\ninterface DgridColumnResizeEvent extends Event {\n\tgrid: DgridGrid;\n\tcolumnId: string | number;\n\twidth: number;\n\tparentType?: string;\n}\n\ninterface DgridSortEvent extends Event {\n\tgrid: DgridGrid;\n\tparentType?: string;\n\tsort?: { property: string; descending?: boolean }[];\n}\n\ninterface DgridErrorEvent extends Event {\n\tgrid: DgridGrid;\n\terror?: Error | string;\n}\n\ninterface DgridCellFocusEvent extends Event {\n\tgrid: DgridGrid;\n\trow?: {};\n\tcell?: {};\n\tparentType?: string;\n}\n\nfunction duplicate<T extends {}>(source: T): T {\n\tconst target = Object.create(Object.getPrototypeOf(source));\n\n\treturn deepMixin(target, source);\n}\n\nfunction buildSelectEvent(event: DgridSelectionEvent): SelectionData {\n\tconst selectionType = event.rows ? SelectionType.row : SelectionType.cell;\n\tconst data: SelectionData = {\n\t\ttype: selectionType,\n\t\tdata: []\n\t};\n\tif (selectionType === SelectionType.row) {\n\t\tevent.rows &&\n\t\t\t(data.data = event.rows.map((rowData: any) => {\n\t\t\t\treturn {\n\t\t\t\t\titem: rowData.data\n\t\t\t\t};\n\t\t\t}));\n\t} else {\n\t\tevent.cells &&\n\t\t\t(data.data = event.cells.map((cellData: any) => {\n\t\t\t\treturn {\n\t\t\t\t\titem: cellData.row.data,\n\t\t\t\t\tfield: cellData.column.field\n\t\t\t\t};\n\t\t\t}));\n\t}\n\n\treturn data;\n}\n\nfunction buildColumnStateChange({ column: { field, id }, hidden }: DgridColumnHiderEvent): ColumnStateChangeData {\n\treturn {\n\t\tfield,\n\t\tid,\n\t\thidden\n\t};\n}\n\nfunction buildColumnReorder({ column: { field, id }, subRow }: DgridColumnReorderEvent): ColumnReorderData {\n\treturn {\n\t\tfield,\n\t\tid,\n\t\tsubRow\n\t};\n}\n\nfunction buildColumnResize({\n\tgrid: { columns },\n\twidth,\n\tparentType,\n\tcolumnId\n}: DgridColumnResizeEvent): ColumnResizeData {\n\tconst { field, id } = columns[columnId];\n\treturn {\n\t\tfield,\n\t\tid,\n\t\twidth,\n\t\tparentType\n\t};\n}\n\nfunction buildSort({ parentType, sort }: DgridSortEvent): SortData {\n\treturn {\n\t\tparentType,\n\t\tsort\n\t};\n}\n\nfunction buildError({ error }: DgridErrorEvent): ErrorData {\n\treturn {\n\t\terror\n\t};\n}\n\nfunction buildCellFocus({ row, cell, parentType }: DgridCellFocusEvent): CellFocusData {\n\treturn {\n\t\trow,\n\t\tcell,\n\t\tparentType\n\t};\n}\n\nfunction duplicateColumnDef(columnsSpec: Grid.ColumnSpec): Grid.ColumnSpec {\n\tif (Array.isArray(columnsSpec)) {\n\t\tif (columnsSpec.length === 0) {\n\t\t\treturn [];\n\t\t}\n\t\treturn columnsSpec.map((columnSpec) => {\n\t\t\treturn duplicate(columnSpec);\n\t\t});\n\t} else {\n\t\treturn duplicate(columnsSpec);\n\t}\n}\n\nfunction duplicateColumnSets(columnSets: Array<Array<Grid.Column[]>>): Array<Array<Grid.Column[]>> {\n\treturn columnSets.map((subRows) => {\n\t\treturn subRows.map((subRow) => {\n\t\t\treturn subRow.map((column) => duplicate(column));\n\t\t});\n\t});\n}\n\nfunction buildConstructor(properties: DgridInnerWrapperProperties, emitGridState: () => void): any {\n\tconst {\n\t\tpagination = false,\n\t\tkeyboard = false,\n\t\tselection = undefined,\n\t\tselector = false,\n\t\ttree = false,\n\t\tcolumnHider = false,\n\t\tcolumnReorder = false,\n\t\tcolumnResizer = false,\n\t\tcompoundColumns = false,\n\t\tcolumnSet = false\n\t} = properties.features || {};\n\n\tlet mixins: any[] = [];\n\tlet overrides: any = {};\n\tif (pagination) {\n\t\tmixins.push(Grid);\n\t\tmixins.push(Pagination);\n\n\t\toverrides._updateNavigation = function _updateNavigation(total: number) {\n\t\t\tthis.inherited(_updateNavigation, arguments);\n\t\t\temitGridState();\n\t\t};\n\t} else {\n\t\tmixins.push(OnDemandGrid);\n\t}\n\n\tif (tree) {\n\t\tmixins.push(Tree);\n\t}\n\n\tif (keyboard) {\n\t\tmixins.push(Keyboard);\n\t}\n\n\tif (selection) {\n\t\tmixins.push(selection === SelectionType.row ? Selection : CellSelection);\n\t\tif (selector) {\n\t\t\tmixins.push(Selector);\n\t\t}\n\t}\n\n\tif (columnHider) {\n\t\tmixins.push(ColumnHider);\n\t}\n\n\tif (columnReorder) {\n\t\tmixins.push(ColumnReorder);\n\t}\n\n\tif (columnResizer) {\n\t\tmixins.push(ColumnResizer);\n\t}\n\n\tif (compoundColumns) {\n\t\tmixins.push(CompoundColumns);\n\t}\n\n\tif (columnSet) {\n\t\tmixins.push(ColumnSet);\n\t}\n\n\treturn declare(mixins as any, overrides);\n}\n\nfunction buildCollection(properties: DgridProperties, data?: {}[], features?: DgridWrapperFeatures): any {\n\tconst treeEnabled = features && features.tree;\n\tlet mixins: any[] = [MemoryStore, Trackable];\n\tlet overrides: any = {};\n\n\tif (treeEnabled) {\n\t\tmixins.push(TreeStore);\n\t\toverrides.getRootCollection = function() {\n\t\t\treturn this.root.filter((item: any) => {\n\t\t\t\treturn item.parent == null;\n\t\t\t});\n\t\t};\n\t}\n\n\tconst Store = declare(mixins as any, overrides);\n\tlet collection = new Store({\n\t\tdata\n\t});\n\tif (treeEnabled) {\n\t\tcollection = collection.getRootCollection();\n\t}\n\treturn collection;\n}\n\n/**\n * Wrap a dgrid widget, so that it can exist inside of the Dojo 2 widgeting system.\n *\n * This widget will construct a dgrid widget based on DgridProperties but it will only react to\n * changes in DgridProperties#data.  If the other properties change, then this widget will need\n * to be destroyed and a new one created.\n */\nexport class DgridInnerWrapper extends WidgetBase<DgridInnerWrapperProperties> {\n\tprivate _grid!: DgridGrid;\n\n\tprotected render(): DNode {\n\t\tlet grid = this._grid;\n\t\tif (!grid) {\n\t\t\tgrid = this._grid = this.initGrid();\n\t\t\tthis.registerGridEvents();\n\t\t} else {\n\t\t\tthis.setChangedGridProperites();\n\t\t}\n\t\treturn dom({ node: grid.domNode });\n\t}\n\n\tprotected onAttach(): void {\n\t\tconst grid = this._grid;\n\t\tconst handle = grid.on('dgrid-refresh-complete', () => {\n\t\t\thandle.remove();\n\t\t\tthis.restoreGridState();\n\t\t});\n\t\tgrid.startup();\n\t}\n\n\tprotected onDetach(): void {\n\t\t// @dojo/framework expects this node to still be attached so we need to\n\t\tthis._grid && this._grid.destroy();\n\t}\n\n\tprivate emitGridState(): void {\n\t\tthis.properties.onGridState({\n\t\t\tcurrentPage: this._grid._currentPage\n\t\t});\n\t}\n\n\tprivate initGrid(): DgridGrid {\n\t\tconst Constructor = buildConstructor(this.properties, this.emitGridState.bind(this));\n\t\treturn new Constructor(this.filterProperties(this.properties));\n\t}\n\n\tprivate restoreGridState() {\n\t\tconst { gridState } = this.properties;\n\t\tif (gridState) {\n\t\t\tconst { currentPage } = gridState;\n\t\t\tif (currentPage && currentPage > 1 && this._grid.gotoPage) {\n\t\t\t\tthis._grid.gotoPage(currentPage);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate filterProperties(properties: DgridWrapperProperties): DgridProperties {\n\t\t// Remove DgridWrapperProperties properties not used by dgrid.\n\t\tconst { features, data, ...otherProperties } = properties;\n\t\tconst newProperties: DgridProperties = otherProperties;\n\t\tconst columnSet = features && features.columnSet;\n\t\tif (data != null) {\n\t\t\tnewProperties.collection = buildCollection(newProperties, data, this.properties.features);\n\t\t}\n\t\tif (columnSet) {\n\t\t\tif (newProperties.columnSets != null) {\n\t\t\t\tnewProperties.columnSets = duplicateColumnSets(newProperties.columnSets);\n\t\t\t} else {\n\t\t\t\tnewProperties.columnSets = [];\n\t\t\t}\n\t\t\tdelete newProperties.columns;\n\t\t} else {\n\t\t\tif (newProperties.columns != null) {\n\t\t\t\tnewProperties.columns = duplicateColumnDef(newProperties.columns);\n\t\t\t}\n\t\t\tdelete newProperties.columnSets;\n\t\t}\n\t\tif (newProperties.selection == null && 'selection' in newProperties) {\n\t\t\tnewProperties.selection = {};\n\t\t}\n\t\treturn newProperties;\n\t}\n\n\tprivate setChangedGridProperites(): void {\n\t\t// Set only the properties that changed to minimize how much DOM dgrid rebuild.\n\t\tconst properties: any = this.properties;\n\t\tconst changeProperties: any = {};\n\t\tthis.changedPropertyKeys.forEach((key) => {\n\t\t\tchangeProperties[key] = properties[key];\n\t\t});\n\t\tthis._grid && this._grid.set(this.filterProperties(changeProperties));\n\t}\n\n\tprivate registerGridEvents(): void {\n\t\tconst properties = this.properties;\n\t\tconst grid = this._grid;\n\t\tif (properties.features) {\n\t\t\tconst { selection, columnHider, columnReorder, columnResizer, keyboard } = properties.features;\n\t\t\tif (selection) {\n\t\t\t\tgrid.on('dgrid-select', (event: DgridSelectionEvent) => {\n\t\t\t\t\tconst onSelect = properties.onSelect;\n\t\t\t\t\tonSelect && onSelect(buildSelectEvent(event), grid.selection);\n\t\t\t\t});\n\t\t\t\tgrid.on('dgrid-deselect', (event: DgridSelectionEvent) => {\n\t\t\t\t\tconst onDeselect = properties.onDeselect;\n\t\t\t\t\tonDeselect && onDeselect(buildSelectEvent(event), grid.selection);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (columnHider) {\n\t\t\t\tgrid.on('dgrid-columnstatechange', (event: DgridColumnHiderEvent) => {\n\t\t\t\t\tconst onColumnStateChange = properties.onColumnStateChange;\n\t\t\t\t\tonColumnStateChange && onColumnStateChange(buildColumnStateChange(event));\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (columnReorder) {\n\t\t\t\tgrid.on('dgrid-columnreorder', (event: DgridColumnReorderEvent) => {\n\t\t\t\t\tconst onColumnReorder = properties.onColumnReorder;\n\t\t\t\t\tonColumnReorder && onColumnReorder(buildColumnReorder(event));\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (columnResizer) {\n\t\t\t\tgrid.on('dgrid-columnresize', (event: DgridColumnResizeEvent) => {\n\t\t\t\t\tconst onColumnResize = properties.onColumnResize;\n\t\t\t\t\tonColumnResize && onColumnResize(buildColumnResize(event));\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (keyboard) {\n\t\t\t\tgrid.on('dgrid-cellfocusin', (event: DgridCellFocusEvent) => {\n\t\t\t\t\tconst onCellFocusIn = properties.onCellFocusIn;\n\t\t\t\t\tonCellFocusIn && onCellFocusIn(buildCellFocus(event));\n\t\t\t\t});\n\n\t\t\t\tgrid.on('dgrid-cellfocusout', (event: DgridCellFocusEvent) => {\n\t\t\t\t\tconst onCellFocusOut = properties.onCellFocusOut;\n\t\t\t\t\tonCellFocusOut && onCellFocusOut(buildCellFocus(event));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tconst { onSort, onError } = properties;\n\n\t\tif (onSort) {\n\t\t\tgrid.on('dgrid-sort', (event: DgridSortEvent) => {\n\t\t\t\tonSort(buildSort(event));\n\t\t\t});\n\t\t}\n\n\t\tif (onError) {\n\t\t\tgrid.on('dgrid-error', (event: DgridErrorEvent) => {\n\t\t\t\tonError(buildError(event));\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst keyPrefix = 'dgridWrapper';\n\n@diffProperty('columns', columnsDiff)\nexport class DgridWrapper extends WidgetBase<DgridWrapperProperties> {\n\tprivate key = 0;\n\tprivate _gridState: DgridState | undefined;\n\n\tprotected render(): DNode {\n\t\tconst changedPropertyKeys = this.changedPropertyKeys;\n\t\t// Some properties require the dgrid grid to be destroyed and recreated because a different\n\t\t// combination of mixins is required.  Some properties when changed can be handled by an existing\n\t\t// grid.  Determine if a new grid is needed or not.  If a new grid is needed, generate a new\n\t\t// key and let the vdom throw away the old grid.\n\t\tif (changedPropertyKeys.indexOf('features') >= 0) {\n\t\t\tthis.key++;\n\t\t} else {\n\t\t\tconst gridConstructionKeys = changedPropertyKeys.filter((key) => {\n\t\t\t\treturn constructionKeys.indexOf(key) >= 0;\n\t\t\t});\n\t\t\tif (gridConstructionKeys.length) {\n\t\t\t\tthis.key++;\n\t\t\t}\n\t\t}\n\t\treturn w(DgridInnerWrapper, {\n\t\t\tkey: `${keyPrefix}${this.key}`,\n\t\t\t...this.properties,\n\t\t\tgridState: this._gridState,\n\t\t\tonGridState: (gridState: DgridState) => {\n\t\t\t\tthis._gridState = gridState;\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport default DgridWrapper;\n","import WidgetBase from '@dojo/framework/core/WidgetBase';\nimport { v, w } from '@dojo/framework/core/vdom';\nimport DgridWrapper, {\n\tSelectionData,\n\tSelectionMode,\n\tSelections,\n\tSelectionType,\n\tColumnStateChangeData\n} from '@dojo/interop/dgrid/DgridWrapper';\nimport { deepMixin } from '@dojo/framework/core/util';\n\ninterface DataItem {\n\tid: number;\n\tfirst: string;\n\tlast: string;\n\thasChildren?: boolean;\n\tparent?: number | null;\n}\n\nfunction duplicate<T extends {}>(source: T): T {\n\tconst target = Object.create(Object.getPrototypeOf(source));\n\n\treturn deepMixin(target, source);\n}\n\nfunction buildToggleLabel(label: string, currentValue: boolean) {\n\treturn 'Turn ' + label + (currentValue ? ' Off' : ' On');\n}\nexport class App extends WidgetBase {\n\tprivate _data: DataItem[] = [\n\t\t{ first: 'Bob', last: 'Thomson', id: 1, hasChildren: true },\n\t\t{ first: 'Tom', last: 'Bobson', id: 2, hasChildren: true }\n\t];\n\n\tprivate _columnSets = [\n\t\t[[{ field: 'id', label: 'ID' }]],\n\t\t[[{ field: 'first', label: 'First' }], [{ field: 'last', label: 'Last' }]]\n\t];\n\n\tprivate _compoundColumns = [\n\t\t{\n\t\t\tlabel: 'Full Name',\n\t\t\tchildren: [{ field: 'first', label: 'First' }, { field: 'last', label: 'Last' }]\n\t\t},\n\t\t{ field: 'id', label: 'ID' }\n\t];\n\n\tprotected render() {\n\t\treturn v('div', {}, [\n\t\t\tw(DgridWrapper, {\n\t\t\t\tfeatures: {\n\t\t\t\t\tpagination: this._paginationOn,\n\t\t\t\t\tkeyboard: this._keyboardOn,\n\t\t\t\t\tselection: this._selectionType,\n\t\t\t\t\ttree: this._treeOn,\n\t\t\t\t\tcolumnHider: this._columnHiderOn,\n\t\t\t\t\tcolumnReorder: this._columnReorderOn,\n\t\t\t\t\tcolumnResizer: this._columnResizerOn,\n\t\t\t\t\tcompoundColumns: this._compoundColumnsOn,\n\t\t\t\t\tcolumnSet: this._columnSetsOn\n\t\t\t\t},\n\t\t\t\tdata: this._data,\n\t\t\t\tcolumns: this._compoundColumnsOn ? this._compoundColumns : this._columnDefs[this._columnToggle],\n\t\t\t\tcolumnSets: this._columnSets,\n\n\t\t\t\trowsPerPage: this._rowsPerPage,\n\t\t\t\tpreviousNextArrows: this._previousNextArrows,\n\t\t\t\tfirstLastArrows: this._firstLastArrows,\n\t\t\t\tpagingLinks: this._pagingLinks,\n\n\t\t\t\tpageSkip: this._pageSkip,\n\t\t\t\ttabIndex: 2,\n\n\t\t\t\tdeselectOnRefresh: this._deselectOnRefresh,\n\t\t\t\tallowSelectAll: this._allowSelectAll,\n\t\t\t\tselectionMode: this._selectionMode,\n\t\t\t\tallowTextSelection: this._allowTextSelection,\n\t\t\t\tonSelect: (selected: SelectionData, selections: Selections) => {\n\t\t\t\t\tconsole.log('SELECTED:', selected);\n\t\t\t\t\tconsole.log('SELECTIONS:', selections);\n\t\t\t\t},\n\t\t\t\tonDeselect: (deselected: SelectionData, selections: Selections) => {\n\t\t\t\t\tconsole.log('DESELECTED:', deselected);\n\t\t\t\t\tconsole.log('SELECTIONS:', selections);\n\t\t\t\t},\n\n\t\t\t\tcollapseOnRefresh: this._collapseOnRefresh,\n\t\t\t\tenableTreeTransitions: this._enableTreeTransitions,\n\t\t\t\ttreeIndentWidth: this._treeIndentWidth,\n\n\t\t\t\tonColumnStateChange: (columnStateData: ColumnStateChangeData) => {\n\t\t\t\t\tconsole.log('COLUMN STATE CHANGE', columnStateData);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tv(\n\t\t\t\t'button',\n\t\t\t\t{\n\t\t\t\t\tonclick: this.addData\n\t\t\t\t},\n\t\t\t\t['Add Data']\n\t\t\t),\n\t\t\tv(\n\t\t\t\t'button',\n\t\t\t\t{\n\t\t\t\t\tonclick: this.swapColumnDef\n\t\t\t\t},\n\t\t\t\t['Change Columns']\n\t\t\t),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.togglePagination\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Pagination', this._paginationOn)]\n\t\t\t\t),\n\t\t\t\tv('div', this.renderPaginationButtons())\n\t\t\t]),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.toggleKeyboard\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Keyboard', this._keyboardOn)]\n\t\t\t\t),\n\t\t\t\tv('div', this.renderKeyboardButtons())\n\t\t\t]),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.toggleSelectionOnOff\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Selection', this._selectionType != null)]\n\t\t\t\t),\n\t\t\t\tv('div', this.renderSelectionButtons())\n\t\t\t]),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.toggleTree\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Tree', this._treeOn)]\n\t\t\t\t),\n\t\t\t\tv('div', this.renderTreeButtons())\n\t\t\t]),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.toggleColumnHider\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Column Hider', this._columnHiderOn)]\n\t\t\t\t)\n\t\t\t]),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.toggleColumnReorder\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Column Reorder', this._columnReorderOn)]\n\t\t\t\t)\n\t\t\t]),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.toggleColumnResizer\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Column Resizer', this._columnResizerOn)]\n\t\t\t\t)\n\t\t\t]),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.toggleCompoundColumns\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Compound Columns', this._compoundColumnsOn)]\n\t\t\t\t)\n\t\t\t]),\n\t\t\tv('p', [\n\t\t\t\tv(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: this.toggleColumnSets\n\t\t\t\t\t},\n\t\t\t\t\t[buildToggleLabel('Column Sets', this._columnSetsOn)]\n\t\t\t\t)\n\t\t\t])\n\t\t]);\n\t}\n\n\tprivate renderPaginationButtons() {\n\t\tif (this._paginationOn) {\n\t\t\treturn [\n\t\t\t\tv('button', { onclick: this.updateRowsPerPage }, ['Set Rows Per Page ' + this.nextRowsPerPage()]),\n\t\t\t\tv('button', { onclick: this.togglePreviousNextArrows }, [\n\t\t\t\t\tbuildToggleLabel('Prev/Next Arrows', this._previousNextArrows)\n\t\t\t\t]),\n\t\t\t\tv('button', { onclick: this.toggleFirstLastArrows }, [\n\t\t\t\t\tbuildToggleLabel('First/Last Arrows', this._firstLastArrows)\n\t\t\t\t]),\n\t\t\t\tv('button', { onclick: this.updatePagingLinks }, ['Set Paging Links # ' + this.nextPagingLinks()])\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate _paginationOn = false;\n\tprivate togglePagination(): void {\n\t\tthis._paginationOn = !this._paginationOn;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _rowsPerPage = 5;\n\tprivate updateRowsPerPage(): void {\n\t\tthis._rowsPerPage = this.nextRowsPerPage();\n\t\tthis.invalidate();\n\t}\n\n\tprivate nextRowsPerPage() {\n\t\treturn (this._rowsPerPage + 5) % 19;\n\t}\n\n\tprivate _previousNextArrows = true;\n\tprivate togglePreviousNextArrows(): void {\n\t\tthis._previousNextArrows = !this._previousNextArrows;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _firstLastArrows = true;\n\tprivate toggleFirstLastArrows(): void {\n\t\tthis._firstLastArrows = !this._firstLastArrows;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _pagingLinks = 2;\n\tprivate updatePagingLinks(): void {\n\t\tthis._pagingLinks = this.nextPagingLinks();\n\t\tthis.invalidate();\n\t}\n\n\tprivate nextPagingLinks() {\n\t\tlet pagingLinks = (this._pagingLinks + 2) % 10;\n\t\tif (!pagingLinks) {\n\t\t\tpagingLinks = 2;\n\t\t}\n\t\treturn pagingLinks;\n\t}\n\n\tprivate addData(): void {\n\t\tthis._data = this._data.map((item) => {\n\t\t\treturn duplicate(item);\n\t\t});\n\t\tfor (let i = 0; i < 20; i++) {\n\t\t\tthis._data.push({\n\t\t\t\tfirst: 'Extra',\n\t\t\t\tlast: 'Person',\n\t\t\t\tid: this._data.length + 1,\n\t\t\t\thasChildren: false,\n\t\t\t\tparent: (i % 2) + 1\n\t\t\t});\n\t\t}\n\t\tthis.invalidate();\n\t}\n\n\tprivate _columnToggle = 0;\n\tprivate _columnDefs = [\n\t\t[{ field: 'first', label: 'First', renderExpando: true }, { field: 'last', label: 'Last' }],\n\t\t[\n\t\t\t{ field: 'id', label: 'ID', renderExpando: true },\n\t\t\t{ field: 'first', label: 'First' },\n\t\t\t{ field: 'last', label: 'Last' }\n\t\t]\n\t];\n\tprivate swapColumnDef(): void {\n\t\tthis._columnToggle = this._columnToggle ? 0 : 1;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _keyboardOn = false;\n\tprivate toggleKeyboard(): void {\n\t\tthis._keyboardOn = !this._keyboardOn;\n\t\tthis.invalidate();\n\t}\n\n\tprivate renderKeyboardButtons() {\n\t\tif (this._keyboardOn) {\n\t\t\treturn [v('button', { onclick: this.updatePageSkip }, ['Set Page Skip ' + this.nextPageSkip()])];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate _pageSkip = 3;\n\tprivate updatePageSkip(): void {\n\t\tthis._pageSkip = this.nextPageSkip();\n\t\tthis.invalidate();\n\t}\n\n\tprivate nextPageSkip() {\n\t\treturn (this._pageSkip + 2) % 9;\n\t}\n\n\tprivate _selectionType?: SelectionType;\n\tprivate toggleSelectionOnOff(): void {\n\t\tthis._selectionType = this._selectionType ? undefined : SelectionType.row;\n\t\tthis.invalidate();\n\t}\n\tprivate toggleSelectionType(): void {\n\t\tthis._selectionType = this._selectionType === SelectionType.row ? SelectionType.cell : SelectionType.row;\n\t\tthis.invalidate();\n\t}\n\n\tprivate renderSelectionButtons() {\n\t\tif (this._selectionType) {\n\t\t\treturn [\n\t\t\t\tv('div', [\n\t\t\t\t\tv('button', { onclick: this.toggleSelectionType }, [\n\t\t\t\t\t\t'Set Selection Type ' + (this._selectionType === SelectionType.row ? 'Cell' : 'Row')\n\t\t\t\t\t])\n\t\t\t\t]),\n\t\t\t\tv('div', [\n\t\t\t\t\tv('button', { onclick: this.toggleDeselectOnRefresh }, [\n\t\t\t\t\t\tbuildToggleLabel('Deselect On Referesh', this._deselectOnRefresh)\n\t\t\t\t\t]),\n\t\t\t\t\tv('button', { onclick: this.toggleAllowSelectAll }, [\n\t\t\t\t\t\tbuildToggleLabel('Select All', this._allowSelectAll)\n\t\t\t\t\t]),\n\t\t\t\t\tv('button', { onclick: this.toggleAllowTextSelection }, [\n\t\t\t\t\t\tbuildToggleLabel('Allow Text Selection', this._allowTextSelection)\n\t\t\t\t\t])\n\t\t\t\t]),\n\t\t\t\tv('div', [\n\t\t\t\t\tv('button', { onclick: this.setSelectionModeNone }, ['Select Mode: None']),\n\t\t\t\t\tv('button', { onclick: this.setSelectionModeMultiple }, ['Select Mode: Multiple']),\n\t\t\t\t\tv('button', { onclick: this.setSelectionModeExtended }, ['Select Mode: Extended']),\n\t\t\t\t\tv('button', { onclick: this.setSelectionModeSingle }, ['Select Mode: Single'])\n\t\t\t\t])\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate _deselectOnRefresh = false;\n\tprivate toggleDeselectOnRefresh(): void {\n\t\tthis._deselectOnRefresh = !this._deselectOnRefresh;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _allowSelectAll = false;\n\tprivate toggleAllowSelectAll(): void {\n\t\tthis._allowSelectAll = !this._allowSelectAll;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _selectionMode = SelectionMode.single;\n\n\tprivate _allowTextSelection = false;\n\tprivate toggleAllowTextSelection(): void {\n\t\tthis._allowTextSelection = !this._allowTextSelection;\n\t\tthis.invalidate();\n\t}\n\n\tprivate setSelectionModeNone() {\n\t\tthis._selectionMode = SelectionMode.none;\n\t\tthis.invalidate();\n\t}\n\n\tprivate setSelectionModeMultiple() {\n\t\tthis._selectionMode = SelectionMode.multiple;\n\t\tthis.invalidate();\n\t}\n\n\tprivate setSelectionModeExtended() {\n\t\tthis._selectionMode = SelectionMode.extended;\n\t\tthis.invalidate();\n\t}\n\n\tprivate setSelectionModeSingle() {\n\t\tthis._selectionMode = SelectionMode.single;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _treeOn = false;\n\tprivate toggleTree(): void {\n\t\tthis._treeOn = !this._treeOn;\n\t\tthis.invalidate();\n\t}\n\n\tprivate renderTreeButtons() {\n\t\tif (this._treeOn) {\n\t\t\treturn [\n\t\t\t\tv('div', [\n\t\t\t\t\tv('button', { onclick: this.toggleCollapseOnRefresh }, [\n\t\t\t\t\t\tbuildToggleLabel('Collapse on Refresh', this._collapseOnRefresh)\n\t\t\t\t\t]),\n\t\t\t\t\tv('button', { onclick: this.toggleEnableTreeTransitions }, [\n\t\t\t\t\t\tbuildToggleLabel('Tree Transitions', this._enableTreeTransitions)\n\t\t\t\t\t]),\n\t\t\t\t\tv('button', { onclick: this.updateTreeIndentWidth }, [\n\t\t\t\t\t\t'Set Tree Indent ' + this.nextTreeIndentWidth()\n\t\t\t\t\t])\n\t\t\t\t])\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate _collapseOnRefresh = false;\n\tprivate toggleCollapseOnRefresh() {\n\t\tthis._collapseOnRefresh = !this._collapseOnRefresh;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _enableTreeTransitions = false;\n\tprivate toggleEnableTreeTransitions() {\n\t\tthis._enableTreeTransitions = !this._enableTreeTransitions;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _treeIndentWidth = 9;\n\tprivate updateTreeIndentWidth() {\n\t\tthis._treeIndentWidth = this.nextTreeIndentWidth();\n\t\tthis.invalidate();\n\t}\n\n\tprivate nextTreeIndentWidth() {\n\t\treturn (this._treeIndentWidth + 20) % 100;\n\t}\n\n\tprivate _columnHiderOn = false;\n\tprivate toggleColumnHider(): void {\n\t\tthis._columnHiderOn = !this._columnHiderOn;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _columnReorderOn = false;\n\tprivate toggleColumnReorder(): void {\n\t\tthis._columnReorderOn = !this._columnReorderOn;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _columnResizerOn = false;\n\tprivate toggleColumnResizer(): void {\n\t\tthis._columnResizerOn = !this._columnResizerOn;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _compoundColumnsOn = false;\n\tprivate toggleCompoundColumns(): void {\n\t\tthis._compoundColumnsOn = !this._compoundColumnsOn;\n\t\tthis.invalidate();\n\t}\n\n\tprivate _columnSetsOn = false;\n\tprivate toggleColumnSets(): void {\n\t\tthis._columnSetsOn = !this._columnSetsOn;\n\t\tthis.invalidate();\n\t}\n}\n\nexport default App;\n","import renderer, { w } from '@dojo/framework/core/vdom';\nimport App from './widgets/App';\n\nconst r = renderer(() => w(App, {}));\n\nr.mount();\n"],"sourceRoot":""}