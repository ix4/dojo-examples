/*!
 * 
 * [Dojo](https://dojo.io/)
 * Copyright [JS Foundation](https://js.foundation/) & contributors
 * [New BSD license](https://github.com/dojo/meta/blob/master/LICENSE)
 * All rights reserved
 * 
 */
(window.dojoWebpackJsonpdojo2_todo_mvc_kitchensink=window.dojoWebpackJsonpdojo2_todo_mvc_kitchensink||[]).push([["main"],[,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.r(t);var a=n(18),r=n(21);class o extends r.a{constructor(e){super(),this._payload=e}setInvalidator(e){this._invalidator=e}get(){return this._payload}set(e){this._payload=e,this._invalidator&&this._invalidator()}}new(n(28).a);var i=n(23);const l=" _key",u="__theme_injector";function s(e,t){const n=new o(e);return t.defineInjector(u,e=>(n.setInvalidator(e),()=>n)),n}var c=n(0);class d{constructor({window:e=c.default.window,onChange:t}){this._onChange=(()=>{const e=this.normalizePath(this._window.location.hash);e!==this._current&&(this._current=e,this._onChangeFunction(this._current))}),this._onChangeFunction=t,this._window=e,this._window.addEventListener("hashchange",this._onChange,!1),this._current=this.normalizePath(this._window.location.hash),this._onChangeFunction(this._current)}normalizePath(e){return e.replace("#","")}prefix(e){return"#"!==e[0]?`#${e}`:e}set(e){this._window.location.hash=this.prefix(e),this._onChange()}get current(){return this._current}destroy(){this._window.removeEventListener("hashchange",this._onChange)}}const p="__PARAM__",m=new RegExp(/^{.+}$/),g=7,h=2;function f({params:e},{params:t}){return!!Object.keys(e).every(n=>e[n]===t[n])&&Object.keys(t).every(n=>e[n]===t[n])}class L extends r.b{constructor(e,t={}){super(),this._routes=[],this._outletMap=Object.create(null),this._matchedOutlets=Object.create(null),this._currentParams={},this._currentQueryParams={},this._onChange=(e=>{e=this._stripLeadingSlash(e);const t=this._matchedOutlets;this._matchedOutlets=Object.create(null);const[n,a]=e.split("?");this._currentQueryParams=this._getQueryParams(a);const r=n.split("/");let o,i=this._routes.map(e=>({route:e,segments:[...r],parent:void 0,params:{}})),l=[];for(;o=i.pop();){const{route:e,parent:t,segments:n,params:a}=o;let r=0,u="index",s=0,c=!0;if(n.length<e.segments.length)c=!1;else for(;n.length>0;){if(void 0===e.segments[r]){u="partial";break}const t=n.shift();if(e.segments[r]===p)a[e.params[s++]]=t,this._currentParams=Object.assign({},this._currentParams,a);else if(e.segments[r]!==t){c=!1;break}r++}c&&(o.type=u,l.push({route:e,parent:t,type:u,params:a,segments:[]}),n.length&&(i=[...i,...e.children.map(e=>({route:e,segments:[...n],parent:o,type:u,params:Object.assign({},a)}))]))}let u=void 0,s=l.reduce((e,t)=>e&&e.route.score>t.route.score?e:t,void 0);if(s)for("partial"===s.type&&(s.type="error"),u=s.route.outlet;s;){let{type:e,params:n,parent:a,route:r}=s;const o={id:r.outlet,queryParams:this._currentQueryParams,params:n,type:e,isError:()=>"error"===e,isExact:()=>"index"===e},i=t[r.outlet];this._matchedOutlets[r.outlet]=o,i&&f(i,o)||this.emit({type:"outlet",outlet:o,action:"enter"}),s=a}else this._matchedOutlets.errorOutlet={id:"errorOutlet",queryParams:{},params:{},isError:()=>!0,isExact:()=>!1,type:"error"};const c=Object.keys(t);for(let e=0;e<c.length;e++){const n=c[e],a=this._matchedOutlets[n];a&&f(t[n],a)||this.emit({type:"outlet",outlet:t[n],action:"exit"})}this.emit({type:"nav",outlet:u,context:u?this._matchedOutlets[u]:void 0})}),this._options=t,this._register(e),t.autostart,this.start()}setPath(e){this._history.set(e)}start(){const{HistoryManager:e=d,base:t,window:n}=this._options;if(this._history=new e({onChange:this._onChange,base:t,window:n}),this._matchedOutlets.errorOutlet&&this._defaultOutlet){const e=this.link(this._defaultOutlet);e&&this.setPath(e)}}link(e,t={}){const{_outletMap:n,_currentParams:a,_currentQueryParams:r}=this;let o=n[e];if(void 0===o)return;let i=o.fullPath;if(o.fullQueryParams.length>0){i=`${i}${o.fullQueryParams.reduce((e,t,n)=>n>0?`${e}&${t}={${t}}`:`?${t}={${t}}`,"")}`}if(t=Object.assign({},o.defaultParams,r,a,t),0===Object.keys(t).length&&o.fullParams.length>0)return;const l=[...o.fullParams,...o.fullQueryParams];for(let e=0;e<l.length;e++){const n=l[e];if(!t[n])return;i=i.replace(`{${n}}`,t[n])}return this._history.prefix(i)}getOutlet(e){return this._matchedOutlets[e]}get currentParams(){return this._currentParams}_stripLeadingSlash(e){return"/"===e[0]?e.slice(1):e}_register(e,t,n){t=t||this._routes;for(let a=0;a<e.length;a++){let{path:r,outlet:o,children:i,defaultRoute:l=!1,defaultParams:u={}}=e[a],[s,c]=r.split("?"),d=[];const f=(s=this._stripLeadingSlash(s)).split("/"),L={params:[],outlet:o,path:s,segments:f,defaultParams:n?Object.assign({},n.defaultParams,u):u,children:[],fullPath:n?`${n.fullPath}/${s}`:s,fullParams:[],fullQueryParams:[],score:n?n.score:0};l&&(this._defaultOutlet=o);for(let e=0;e<f.length;e++){const t=f[e];L.score+=g,m.test(t)&&(L.score-=h,L.params.push(t.replace("{","").replace("}","")),f[e]=p)}c&&(d=c.split("&").map(e=>e.replace("{","").replace("}",""))),L.fullQueryParams=n?[...n.fullQueryParams,...d]:d,L.fullParams=n?[...n.fullParams,...L.params]:L.params,i&&i.length>0&&this._register(i,L.children,L),this._outletMap[o]=L,t.push(L)}}_getQueryParams(e){const t={};if(e){const n=e.split("&");for(let e=0;e<n.length;e++){const[a,r]=n[e].split("=");t[a]=r}}return t}}var b=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&(n[a[r]]=e[a[r]])}return n};var Z=n(26),y=n(19);n(30);const v="__i18n_injector";function k(e,t){const n=new o(e);return t.defineInjector(v,e=>(n.setInvalidator(e),()=>n)),n}var R=Object(a.a)({destroy:a.b})(({middleware:{destroy:e}})=>{const t=new y.b;return e(()=>{t.clear()}),{get:e=>t.get(e),set(e,n){t.set(e,n)},clear(){t.clear()}}});var _=Object(a.a)({getRegistry:a.d,invalidator:a.e,destroy:a.b})(({middleware:{getRegistry:e,invalidator:t,destroy:n}})=>{const a=[];n(()=>{let e;for(;e=a.pop();)e.destroy()});const r=e();return{subscribe(e,n=t){if(r){const t=r.getInjector(e);if(t){const e=t.invalidator.on("invalidate",()=>{n()});return a.push(e),()=>{const t=a.indexOf(e);-1!==t&&(a.splice(t,1),e.destroy())}}}},get(e){if(r){const t=r.getInjector(e);if(t)return t.injector()}return null}}}),w=n(25),j=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&(n[a[r]]=e[a[r]])}return n};const A=Object(a.a)({invalidator:a.e,cache:R,diffProperty:a.c,injector:_,getRegistry:a.d}).properties()(({middleware:{invalidator:e,cache:t,diffProperty:n,injector:a,getRegistry:r},properties:o})=>{let c=new w.a;if(n("theme",(n,a)=>{n.theme!==a.theme&&(t.clear(),e())}),n("classes",(n,a)=>{let r=!1;if(n.classes&&!a.classes||!n.classes&&a.classes)r=!0;else if(n.classes&&a.classes){const e=[...c.values()];for(let t=0;t<e.length;t++){let o=e[t];if(r=Object(i.b)(n.classes[o],a.classes[o],1).changed)break}}r&&(t.clear(),e())}),!a.get(u)){const e=r();e&&s(void 0,e.base)}return a.subscribe(u,()=>{t.clear(),e()}),{classes(e){let n=t.get(e);if(n)return n;const r=l,i=e[r],s=j(e,["symbol"==typeof r?r:r+""]);c.add(i),n=s;let{theme:d,classes:p}=o();if(!d){const e=a.get(u);d=e?e.get():void 0}if(d&&d[i]&&(n=Object.assign({},n,d[i])),p&&p[i]){const e=Object.keys(p[i]);for(let t=0;t<e.length;t++){const a=e[t];n[a]&&(n[a]=`${n[a]} ${p[i][a].join(" ")}`)}}return t.set(e,n),n},set(e){const t=a.get(u);t&&t.set(e)},get(){const e=a.get(u);if(e)return e.get()}}});var C=Object(a.a)({cache:R,injector:_,diffProperty:a.c,invalidator:a.e}).properties()(function({middleware:{cache:e,injector:t,diffProperty:n,invalidator:a},properties:r}){const{renderer:o,id:i,routerKey:l="router"}=r();if(!e.get("handle")){const n=t.subscribe(l);n&&e.set("handle",n)}n("routerKey",(n,r)=>{const{routerKey:o="router"}=n,{routerKey:i="router"}=r;if(i!==o){const n=e.get("handle");n&&n();const a=t.subscribe(i);a&&e.set("handle",a)}a()});const u=t.get(l);if(u){const e=u.getOutlet(i);if(e){const{queryParams:t,params:n,type:a,isError:r,isExact:i}=e,l=o({queryParams:t,params:n,type:a,isError:r,isExact:i,router:u});if(l)return l}}return null});function N(e){return e.replace(/~1/g,"/").replace(/~0/g,"~")}function O(e){return e.replace(/~/g,"~0").replace(/\//g,"~1")}function I(e,t,n=!0,a=!0){n&&(t=Object.assign({},t));const r={object:t,target:t,segment:""};return e.reduce((t,r,o)=>{if(void 0===t.target)return t;if(Array.isArray(t.target)&&"-"===r&&(r=String(t.target.length-1)),o+1<e.length){const i=e[o+1];let l=t.target[r];if(void 0===l&&!a)return t.target=void 0,t;n||void 0===l?(l=Array.isArray(l)?[...l]:"object"==typeof l?Object.assign({},l):isNaN(i)||isNaN(parseInt(i,0))?{}:[],t.target[r]=l,t.target=l):t.target=l}else t.segment=r;return t},r)}class x{constructor(e){if(Array.isArray(e)?this._segments=e:(this._segments=("/"===e[0]?e:`/${e}`).split("/"),this._segments.shift()),0===e.length||1===e.length&&"/"===e[0]||""===e[0])throw new Error("Access to the root is not supported.");this._segments=this._segments.map(N)}get segments(){return this._segments}get path(){return`/${this._segments.map(O).join("/")}`}get(e){const t=I(this.segments,e,!1,!1);if(void 0!==t.target)return t.target[t.segment]}toJSON(){return this.toString()}toString(){return this.path}}n(1);var M=n(29);let P,E,S,T,D,z,G;P=Array.from,E=Array.of,S=Object(M.a)(Array.prototype.copyWithin),T=Object(M.a)(Array.prototype.fill),D=Object(M.a)(Array.prototype.find),z=Object(M.a)(Array.prototype.findIndex),G=Object(M.a)(Array.prototype.includes);var H;function B(e){return"[object Object]"===Object.prototype.toString.call(e)}function K(e,t){if(Array.isArray(e)&&Array.isArray(t))return e.length===t.length&&e.every((e,n)=>K(e,t[n]));if(B(e)&&B(t)){const n=Object.keys(e).sort();return K(n,Object.keys(t).sort())&&n.every(n=>K(e[n],t[n]))}return e===t}function F(e,t){const n=U(t),a=U(e);if(Array.isArray(e)&&Array.isArray(t)){const n=function(e,t){const n=Math.min(e.length,t.length);for(let a=0;a<n;a++)if(!K(e[a],t[a]))return a;return e.length!==t.length?n:-1}(e,t);return-1!==n?`Arrays differed at offset ${n}`:"Arrays are identical"}if(B(e)&&B(t)){const n=function(e,t){const n=P(new w.a([...Object.keys(e),...Object.keys(t)]).values());for(let a of n)if(!K(e[a],t[a]))return a}(e,t);if(n){return`Expected "${e[n]}" for object property ${n} but got "${t[n]}" instead`}return"Objects are identical"}return K(e,t)?"Values are identical":n===a?`Expected "${e}" but got "${t}" instead`:`Expected ${a} "${e}" but got ${n} "${t}" instead`}function U(e){return Array.isArray(e)?"array":typeof e}function q(e,t){if(e.op===H.ADD){const t={op:H.REMOVE,path:e.path};return[{op:H.TEST,path:e.path,value:e.value},t]}if(e.op===H.REPLACE){let n;return n=void 0===e.path.get(t)?{op:H.REMOVE,path:e.path}:{op:H.REPLACE,path:e.path,value:e.path.get(t)},[{op:H.TEST,path:e.path,value:e.value},n]}return[{op:H.ADD,path:e.path,value:e.path.get(t)}]}!function(e){e.ADD="add",e.REMOVE="remove",e.REPLACE="replace",e.TEST="test"}(H||(H={}));class W{constructor(e){this._operations=Array.isArray(e)?e:[e]}apply(e){let t=[];return{object:this._operations.reduce((e,n)=>{let a;const r=I(n.path.segments,e);switch(n.op){case H.ADD:a=function(e,t){let n=parseInt(e.segment,10);return Array.isArray(e.target)&&!isNaN(n)?e.target.splice(n,0,t):e.target[e.segment]=t,e.object}(r,n.value);break;case H.REPLACE:a=function(e,t){let n=parseInt(e.segment,10);return Array.isArray(e.target)&&!isNaN(n)?e.target.splice(n,1,t):e.target[e.segment]=t,e.object}(r,n.value);break;case H.REMOVE:a=function(e){return Array.isArray(e.target)?e.target.splice(parseInt(e.segment,10),1):delete e.target[e.segment],e.object}(r);break;case H.TEST:const t=r.target[r.segment];if(!K(t,n.value)){const e=n.path.path;throw new Error(`Test operation failure at "${e}". ${F(n.value,t)}.`)}return e;default:throw new Error("Unknown operation")}return t=[...q(n,e),...t],a},e),undoOperations:t}}}function V(e){return"string"==typeof e}class ${constructor(){this._state={},this.get=(e=>e.value),this.apply=(e=>{const t=new W(e).apply(this._state);return this._state=t.object,t.undoOperations}),this.at=((e,t)=>{const n=this.get(e),a=n&&n[t];return{path:`${e.path}/${t}`,state:e.state,value:a}}),this.path=((e,...t)=>{const n=(t="string"==typeof e?[e,...t]:[...new x(e.path).segments,...t]).filter(V),a=n.length>1,r=new x(a?n:n[0]||"");return{path:r.path,state:this._state,value:r.get(this._state)}})}}var Y=class extends r.a{constructor(e){super(),this._adapter=new $,this._changePaths=new y.b,this._callbackId=0,this.get=(e=>this._adapter.get(e)),this.apply=((e,t=!1)=>{const n=this._adapter.apply(e);return t&&this.invalidate(),n}),this.at=((e,t)=>this._adapter.at(e,t)),this.onChange=((e,t)=>{const n=this._callbackId;return Array.isArray(e)||(e=[e]),e.forEach(e=>this._addOnChange(e,t,n)),this._callbackId+=1,{remove:()=>{e.forEach(e=>{const t=this._changePaths.get(e.path);t&&(t.callbacks=t.callbacks.filter(e=>e.callbackId!==n))})}}}),this._addOnChange=((e,t,n)=>{let a=this._changePaths.get(e.path);a||(a={callbacks:[],previousValue:this.get(e)}),a.callbacks.push({callbackId:n,callback:t}),this._changePaths.set(e.path,a)}),this.path=this._adapter.path.bind(this._adapter),e&&e.state&&(this._adapter=e.state,this.path=this._adapter.path.bind(this._adapter))}_runOnChanges(){const e=[];this._changePaths.forEach((t,n)=>{const{previousValue:a,callbacks:r}=t,o=new x(n),i=o.segments.length?this._adapter.path(o.segments[0],...o.segments.slice(1)).value:void 0;a!==i&&(this._changePaths.set(n,{callbacks:r,previousValue:i}),r.forEach(t=>{const{callback:n,callbackId:a}=t;-1===e.indexOf(a)&&(e.push(a),n())}))})}invalidate(){this._runOnChanges(),this.emit({type:"invalidate"})}};const J=Object(a.a)({destroy:a.b,invalidator:a.e,injector:_}),Q=e=>{let t=new Y,n=!1;return e&&e(t),J(({middleware:{destroy:e,invalidator:a,injector:r}})=>{const o=[];if(e(()=>{let e;for(;e=o.pop();)e()}),!n){const e=r.get("state");e&&(t=e),n=!0}const i=[];return{get(e){if(-1===i.indexOf(e.path)){const n=t.onChange(e,()=>{a()});o.push(()=>n.remove()),i.push(e.path)}return t.get(e)},path:(e,...n)=>t.path(e,...n),at:(e,n)=>t.at(e,n),executor:e=>e(t)}})};var X=Q(),ee=n(50),te=n(2);const ne=new y.b,ae=Symbol("value");const re="State updates are not available on legacy browsers";function oe(e,t,n,a,r,o){const{apply:i,get:l,path:u,at:s}=n;function c(e,t,a){return e(n)(t)}return async d=>{const p=[],m=[...t];let g=[],h=m.shift(),f=null;const L=o?o(d):d;if(a){let t=a(L,n,e);t&&await t}function b(){const e=new y.b,t=new y.b,n=[],a=r=>({get(n,o){const i=r?u(r,o):u(o),s=i.path;if("symbol"==typeof o&&o===ae)return t.get(s);let c=r||n.hasOwnProperty(o)?n[o]:l(i);if("object"==typeof c&&null!==c){let r;return e.has(s)?r=e.get(s):(c=Array.isArray(c)?c.slice():Object.assign({},c),r=new Proxy(c,a(i)),e.set(s,r),t.set(s,c)),n[o]=c,r}return n[o]=c,c},set:(e,t,a)=>(a=function e(t){if("object"==typeof t&&null!==t){t[ae]&&(t=t[ae]);const n=Array.isArray(t)?[]:{},a=Object.keys(t);for(let r=0;r<a.length;r++)n[a[r]]=e(t[a[r]]);t=n}return t}(a),n.push(function(e,t){return{op:H.REPLACE,path:new x(e.path),value:t}}(r?u(r,t):u(t),a)),e[t]=a,!0),deleteProperty:(e,t)=>(n.push(function(e){return{op:H.REMOVE,path:new x(e.path)}}(r?u(r,t):u(t))),delete e[t],!0)});return{proxy:new Proxy({},a()),operations:n}}try{for(;h;){let e=[];let t;t=(e=(Array.isArray(h)?h:[h]).map(e=>{let t,n=[];if("undefined"!=typeof Proxy){const{operations:e,proxy:a}=b();t=a,n=e}let a=e({at:s,get:l,path:u,payload:L,get state(){if("undefined"==typeof Proxy)throw new Error(re);return t}});return Object(te.isThenable)(a)?a.then(e=>e=e?[...n,...e]:[...n]):a=a&&Array.isArray(a)?[...n,...a]:[...n]})).some(te.isThenable)?await Promise.all(e):e;for(let n=0;n<e.length;n++)p.push(...t[n]),g=[...i(t[n]),...g];n.invalidate(),h=m.shift()}}catch(e){if(e.message===re)throw e;f={error:e,command:h}}return r&&r(f,{undoOperations:g,store:n,id:e,operations:p,apply:i,at:s,get:l,path:u,executor:c,payload:L}),Promise.resolve({store:n,undoOperations:g,id:e,error:f,operations:p,apply:i,at:s,get:l,path:u,executor:c,payload:L})}}function ie(e,t,n){const a=(n=Array.isArray(n)?n:n?[n]:[]).length?n.reduce((t,n)=>(function(e,t){const{before:n,after:a}=e();return e=>{const{before:r,after:o}=e?e():{};return()=>({after(e,t){o&&o(e,t),a&&a(e,t)},before(e,a){r&&r(e,a,t),n&&n(e,a,t)}})}})(n,e)(t)):void 0,{before:r,after:o}=a?a():{};return ne.set(e,[e,t,r,o]),(n,a)=>oe(e,t,n,r,o,a)}let le=0;const ue=function(e){return e};function se(e){return t=>t.id===e}const ce=ue(({state:e,payload:{label:t}})=>{const n=`${Date.now()}-${le++}`;e.todos?e.todos.push({id:n,label:t}):e.todos=[{id:n,label:t}]}),de=ue(({state:e,payload:{id:t}})=>{if(e.todos){const n=e.todos.findIndex(se(t));-1!==n&&(e.todos[n].completed&&e.completedCount&&(e.completedCount=e.completedCount-1),e.todos.splice(n,1))}}),pe=ue(({state:e})=>{e.todos&&(e.todos=e.todos.filter(e=>!e.completed)),e.completedCount=0}),me=ue(({state:e,payload:{id:t}})=>{if(e.todos){const n=e.todos.findIndex(se(t));if(-1!==n){const t=e.todos[n].completed;let a=e.completedCount||0;t?a--:a++,e.completedCount=a,e.todos[n].completed=!t}}}),ge=ue(({state:e})=>{const t=e.completedCount||0;if(e.todos){const n=t!==e.todos.length;e.todos.forEach(e=>e.completed=n),e.completedCount=n?e.todos.length:0}}),he=ue(({state:e,payload:t})=>{e.current=t.current}),fe=ue(({state:e})=>{e.current=void 0}),Le=ue(({state:e,payload:{id:t,label:n}})=>{e.editingId=t,e.editingLabel=n}),be=ue(({state:e})=>{e.editingId=void 0,e.editingLabel=void 0}),Ze=ue(({state:e})=>{if(e.todos){const t=e.todos.find(se(e.editingId));e.editingLabel&&t&&(t.label=e.editingLabel)}}),ye=ue(({state:e,payload:{label:t}})=>{e.editingLabel=t}),ve=ue(({payload:{search:e},state:t})=>{t.search=e}),ke=ie("add-todo",[fe,ce]),Re=ie("input-todo",[he]),_e=ie("delete-todo",[de]),we=ie("toggle-todo",[me]),je=ie("toggle-all-todos",[ge]),Ae=ie("edit-mode-todo",[Le]),Ce=ie("read-mode-todo",[be]),Ne=ie("save-todo",[Ze,be]),Oe=ie("update-todo-input",[ye]),Ie=ie("clear-completed",[pe]),xe=ie("search",[ve]);var Me=Object(a.a)({theme:A,store:X}).properties()(function({middleware:{store:e,theme:t},properties:n}){const{todo:r}=n(),{executor:o}=e,{todoItem:i,toggle:l,completed:u,todoLabel:s,destroy:c}=t.classes(ee);return Object(a.i)("li",{key:r.id,classes:[i,Boolean(r.completed)&&u]},Object(a.i)("div",null,Object(a.i)("input",{onchange:()=>{o(we)({id:r.id})},type:"checkbox",classes:[l],checked:r.completed}),Object(a.i)("label",{ondblclick:()=>{o(Ae)({id:r.id,label:r.label})},classes:[s]},r.label),Object(a.i)("button",{onclick:()=>{o(_e)({id:r.id})},classes:[c]})))}),Pe=n(52);var Ee=Object(a.a)({theme:A,store:X}).properties()(function({middleware:{store:e,theme:t},properties:n}){const{todo:r}=n(),{executor:o}=e,{card:i,cardToggle:l,cardHeader:u,completed:s,todoLabel:c,cardDestroy:d}=t.classes(Pe);return Object(a.i)("li",{key:r.id,classes:[i,Boolean(r.completed)&&s]},Object(a.i)("div",{classes:[u]},Object(a.i)("input",{onchange:()=>{o(we)({id:r.id})},type:"checkbox",classes:[l],checked:r.completed}),Object(a.i)("button",{onclick:()=>{o(_e)({id:r.id})},classes:[d]})),Object(a.i)("label",{ondblclick:()=>{o(Ae)({id:r.id,label:r.label})},classes:[c]},r.label))}),Se=n(54),Te=n(56);var De=Object(a.a)({theme:A,store:X})(function({middleware:{theme:e,store:t}}){const{executor:n,get:r,path:o}=t,{todoDetails:i,backdrop:l,modal:u,close:s,todoDetailsHeader:c,title:d,todoDetailsTextArea:p}=e.classes(Te),m=r(o("editingLabel")),g=r(o("editingId"));return Object(a.i)("div",{onkeyup:e=>{e.stopPropagation(),e.preventDefault(),27===e.which&&n(Ce)({id:g})},classes:[i]},Object(a.i)("div",{classes:[l]}),Object(a.i)("div",{classes:[u]},Object(a.i)("div",{onclick:()=>{n(Ne)({})},classes:[s]}),Object(a.i)("header",{classes:[c]},Object(a.i)("div",{classes:[d]},"Details")),Object(a.i)("section",null,Object(a.i)("textarea",{focus:()=>!0,value:m,oninput:e=>{const t=e.target;n(Oe)({label:t.value})},classes:[p]}))))});var ze=Object(a.a)({theme:A,store:X}).properties()(function({middleware:{store:e,theme:t},properties:n}){const{view:r,filter:o}=n(),{get:i,path:l}=e,{cardList:u,todoList:s}=t.classes(Se),c=i(l("todos"))||[],d=i(l("search"))||"",p=!!i(l("editingId")),m=function(e,t,n){return e.filter(e=>(""===t||e.label.toLowerCase().indexOf(t.toLowerCase())>=0)&&("completed"===n&&e.completed||"active"===n&&!e.completed||"all"===n))}(c,d,o);if(0===m.length)return null;const g=m.map(e=>"card"===r?Object(a.i)(Ee,{key:e.id,todo:e}):Object(a.i)(Me,{key:e.id,todo:e}));return[Object(a.i)("ul",{classes:["card"===r&&u,s]},g),p&&Object(a.i)(De,null)]});const Ge=Object(a.a)({invalidator:a.e,injector:_,getRegistry:a.d}).properties()(({properties:e,middleware:{invalidator:t,injector:n,getRegistry:a}})=>{if(!n.get(v)){const e=a();e&&k({},e.base)}function r(e){return Object.keys(e.messages).reduce((e,t)=>(e[t]="",e),{})}return n.subscribe(v),{localize(a,o=!1){let{locale:i}=e();const l=function(a){let{locale:r}=e();if(!r){const e=n.get(v);e&&(r=e.get().locale)}r=r||Z.default.locale;const o=Object(Z.getCachedMessages)(a,r);if(o)return o;Object(Z.default)(a,r).then(()=>{t()})}(a=function(t){let{i18nBundle:n}=e();return n?n instanceof y.b&&!(n=n.get(t))?t:n:t}(a)),u=!l;if(!i){const e=n.get(v);e&&(i=e.get().locale)}const s=u&&!o?()=>"":(e,t)=>Object(Z.formatMessage)(a,e,t,i);return Object.create({format:s,isPlaceholder:u,messages:l||(o?a.messages:r(a))})},set(e){const t=n.get(v);t&&t.set(e)},get(){const e=n.get(v);if(e)return e.get()}}});var He={locales:{"en-PR":()=>n.e("src/nls/en-PR/common").then(n.bind(null,95))},messages:{appTitle:"todos",clearButtonText:"Clear completed",createdTitle:"Created on ",detailsTitle:"Details",editPlaceholder:"What needs to be done?",filterActive:"Active",filterAll:"All",filterCompleted:"Completed",footerInstructions:"Double-click or press Enter to edit a todo",footerCredits:"Credits:",footerPartOf:"Part of ",itemsLeft:"{count, plural,\n\t\t=1 {item left}\n\t\tother {items left}}",searchPlaceholder:"Quick Filter",themeSwitchTitle:"Pirate Mode"}},Be=n(58),Ke=n(60),Fe=n(62),Ue=n(64),qe=n(66),We=n(68),Ve=n(70),$e=n(72),Ye=n(74),Je=n(76),Qe={"dojo2-todo-mvc-kitchensink/App":Ke,"dojo2-todo-mvc-kitchensink/todoSearch":Fe,"dojo2-todo-mvc-kitchensink/todoHeader":Ue,"dojo2-todo-mvc-kitchensink/todoList":qe,"dojo2-todo-mvc-kitchensink/todoFooter":We,"dojo2-todo-mvc-kitchensink/todoItem":Ve,"dojo2-todo-mvc-kitchensink/todoCard":$e,"dojo2-todo-mvc-kitchensink/themeSwitcher":Ye,"dojo2-todo-mvc-kitchensink/credits":n(78),"dojo2-todo-mvc-kitchensink/todoDetails":Je};var Xe=Object(a.a)({theme:A,i18n:Ge})(function({middleware:{theme:e,i18n:t}}){const{themeSwitcher:n,themeSwitcherCheckbox:r}=e.classes(Be),{themeSwitchTitle:o}=t.localize(He).messages;return Object(a.i)("label",{classes:[n]},Object(a.i)("span",null,o),Object(a.i)("input",{classes:[r],type:"checkbox",onclick:function(n){n.target.checked?(t.set({locale:"en-PR"}),e.set(Qe)):(t.set({}),e.set({}))}}))}),et=n(80);var tt=Object(a.a)({theme:A,store:X,i18n:Ge})(function({middleware:{theme:e,store:t,i18n:n}}){const{newTodo:r,title:o,toggleAll:i}=e.classes(et),{editPlaceholder:l,appTitle:u}=n.localize(He,!0).messages,{get:s,path:c,executor:d}=t,p=s(c("current")),m=s(c("completedCount"))||0,g=s(c("todos"))||[];return Object(a.i)("header",null,Object(a.i)("h1",{classes:[o]},u),Object(a.i)("input",{value:p,onkeyup:({which:e})=>{13===e&&p&&d(ke)({label:p})},focus:!0,classes:[r],oninput:e=>{d(Re)({current:e.target.value})},placeholder:l}),Object(a.i)("input",{checked:g&&m>0&&g.length===m,type:"checkbox",classes:[i],onchange:()=>{d(je)({})}}))}),nt=n(82);var at=Object(a.a)({theme:A,store:X,i18n:Ge})(function({middleware:{store:e,theme:t,i18n:n}}){const{get:r,path:o,executor:i}=e,{search:l,searchIcon:u}=t.classes(nt),{searchPlaceholder:s}=n.localize(He).messages,c=r(o("search"));return Object(a.i)("div",null,Object(a.i)("span",{classes:[u]}),Object(a.i)("input",{classes:[l],placeholder:s,value:c,oninput:function(e){const t=e.target;i(xe)({search:t.value})}}))}),rt=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&(n[a[r]]=e[a[r]])}return n};var ot=Object(a.a)({injector:_}).properties()(function({middleware:{injector:e},properties:t,children:n}){let r=t(),{routerKey:o="router",to:i,isOutlet:l=!0,target:u,params:s={},onClick:c}=r,d=rt(r,["routerKey","to","isOutlet","target","params","onClick"]);const p=e.get(o);let m,g=i;if(p){l&&(g=p.link(g,s));const e=e=>{c&&c(e),e.defaultPrevented||0!==e.button||e.metaKey||e.ctrlKey||u||(e.preventDefault(),void 0!==g&&p.setPath(g))};m=Object.assign({},d,{onclick:e,href:g})}else m=Object.assign({},d,{href:g});return Object(a.j)("a",m,n())}),it=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&(n[a[r]]=e[a[r]])}return n};var lt=Object(a.a)({injector:_,diffProperty:a.c,cache:R,invalidator:a.e}).properties()(function({middleware:{diffProperty:e,injector:t,cache:n,invalidator:r},properties:o,children:i}){const{to:l,routerKey:u="router",params:s}=o();let c=o(),{activeClasses:d,classes:p=[]}=c,m=it(c,["activeClasses","classes"]);e("to",(e,a)=>{if(e.to!==a.to){const e=t.get(u),a=n.get("handle");if(a&&a.destroy(),e){const t=e.on("outlet",({outlet:e})=>{e.id===l&&r()});n.set("handle",t)}r()}});const g=t.get(u);if(g){if(!n.get("handle")){const e=g.on("outlet",({outlet:e})=>{e.id===l&&r()});n.set("handle",e)}const e=g.getOutlet(l),t=e&&function(e={},t={}){return Object.keys(e).every(n=>e[n]===t[n])}(s,e.params);p=Array.isArray(p)?p:[p],t&&(p=[...p,...d]),m=Object.assign({},m,{classes:p})}return Object(a.k)(ot,m,i())}),ut=n(84);var st=Object(a.a)({theme:A}).properties()(function({middleware:{theme:e},properties:t}){const{filter:n}=t(),{active:r,viewChooser:o,list:i,cards:l,item:u,link:s}=e.classes(ut);return Object(a.i)("ul",{classes:[o]},Object(a.i)("li",{classes:[u]},Object(a.i)(lt,{to:"view",params:{view:"list",filter:n},activeClasses:[r],classes:[i,s]})),Object(a.i)("li",{classes:[u]},Object(a.i)(lt,{to:"view",params:{view:"card",filter:n},activeClasses:[r],classes:[l,s]})))}),ct=n(86);var dt=Object(a.a)({theme:A,i18n:Ge})(function({middleware:{theme:e,i18n:t}}){const{filters:n,selected:r,wrapper:o,link:i}=e.classes(ct),{filterAll:l,filterActive:u,filterCompleted:s}=t.localize(He).messages;return Object(a.i)("ul",{classes:[n]},Object(a.i)("li",{classes:[o]},Object(a.i)(lt,{key:"all",to:"view",params:{filter:"all"},classes:[i],activeClasses:[r]},l),Object(a.i)(lt,{key:"active",to:"view",params:{filter:"active"},classes:[i],activeClasses:[r]},u),Object(a.i)(lt,{key:"completed",to:"view",params:{filter:"completed"},classes:[i],activeClasses:[r]},s)))}),pt=n(88);var mt=Object(a.a)({theme:A,store:X,i18n:Ge}).properties()(function({middleware:{theme:e,store:t,i18n:n},properties:r}){const{get:o,path:i,executor:l}=t,{filter:u}=r(),{footer:s,todoCount:c,clearCompleted:d,todoCountLabel:p}=e.classes(pt),{format:m,messages:g}=n.localize(He),h=o(i("completedCount"))||0,f=(o(i("todos"))||[]).length-h;return Object(a.i)("footer",{classes:[s]},Object(a.i)("span",{classes:[p]},Object(a.i)("strong",{classes:[c]},`${f} `),Object(a.i)("span",null,m("itemsLeft",{count:f}))),Object(a.i)(dt,null),Object(a.i)(st,{filter:u}),h&&Object(a.i)("button",{classes:[d],onclick:()=>{l(Ie)({})}},g.clearButtonText))}),gt=n(90);var ht=Object(a.a)({theme:A,i18n:Ge})(function({middleware:{theme:e,i18n:t}}){const{footer:n}=e.classes(gt),{footerCredits:r,footerInstructions:o,footerPartOf:i}=t.localize(He).messages;return Object(a.i)("footer",{classes:[n]},Object(a.i)("p",null,o),Object(a.i)("p",null,`${r} The Dojo Team`),Object(a.i)("p",null,i,Object(a.i)("a",{href:"http://todomvc.com"},"TodoMVC")))}),ft=n(92);var Lt=Object(a.a)({theme:A})(function({middleware:{theme:e}}){const{todoapp:t}=e.classes(ft);return Object(a.i)("div",null,Object(a.i)("section",{classes:[t]},Object(a.i)(Xe,null),Object(a.i)(tt,null),Object(a.i)(at,null),Object(a.i)(C,{key:"list",id:"view",renderer:({params:{view:e,filter:t}})=>Object(a.i)(ze,{view:e,filter:t})}),Object(a.i)(C,{key:"footer",id:"view",renderer:({params:{view:e,filter:t}})=>Object(a.i)(mt,{filter:t})})),Object(a.i)(ht,null))}),bt=n(22);n(94);const Zt=new bt.c;s(void 0,Zt),k({locale:"en"},Zt);!function(e,t,n={}){const{key:a="router"}=n,r=b(n,["key"]);if(t.hasInjector(a))throw new Error("Router has already been defined");const o=new L(e,r);t.defineInjector(a,e=>(o.on("nav",()=>e()),()=>o))}([{path:"view/{view}/{filter}",outlet:"view",defaultParams:{filter:"all",view:"list"},defaultRoute:!0,children:[{path:"todo/{id}",outlet:"edit"}]}],Zt),Object(a.h)(()=>Object(a.i)(Lt,null)).mount({registry:Zt})},function(e,t,n){"use strict";var a=n(0),r=(n(1),n(28)),o=n(25),i=n(19),l=n(22),u=n(23),s=n(21);var c=class extends s.a{constructor(){super(),this._registry=new l.a,this._registryWidgetLabelMap=new i.a,this._registryInjectorLabelMap=new i.a,this.own(this._registry),this.own({destroy:()=>{this.baseRegistry&&(this._registryWidgetLabelMap.delete(this.baseRegistry),this._registryInjectorLabelMap.delete(this.baseRegistry),this.baseRegistry=void 0)}})}set base(e){this.baseRegistry&&(this._registryWidgetLabelMap.delete(this.baseRegistry),this._registryInjectorLabelMap.delete(this.baseRegistry)),this.baseRegistry=e}get base(){return this.baseRegistry}define(e,t){this._registry.define(e,t)}defineInjector(e,t){this._registry.defineInjector(e,t)}has(e){return this._registry.has(e)||Boolean(this.baseRegistry&&this.baseRegistry.has(e))}hasInjector(e){return this._registry.hasInjector(e)||Boolean(this.baseRegistry&&this.baseRegistry.hasInjector(e))}get(e,t=!1){return this._get(e,t,"get",this._registryWidgetLabelMap)}getInjector(e,t=!1){return this._get(e,t,"getInjector",this._registryInjectorLabelMap)}_get(e,t,n,a){const r=t?[this.baseRegistry,this._registry]:[this._registry,this.baseRegistry];for(let o=0;o<r.length;o++){const i=r[o];if(!i)continue;const l=i[n](e),u=a.get(i)||[];if(l)return l;if(-1===u.indexOf(e)){const r=i.on(e,a=>{"loaded"===a.action&&this[n](e,t)===a.item&&this.emit({type:"invalidate"})});this.own(r),a.set(i,[...u,e])}}return null}};n.d(t,"g",function(){return _}),n.d(t,"f",function(){return w}),n.d(t,"k",function(){return A}),n.d(t,"j",function(){return C}),n.d(t,"i",function(){return x}),n.d(t,"a",function(){return G}),n.d(t,"e",function(){return $}),n.d(t,"c",function(){return Y}),n.d(t,"b",function(){return J}),n.d(t,"d",function(){return Q}),n.d(t,"h",function(){return X});var d=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&(n[a[r]]=e[a[r]])}return n};const p=[],m=["focus","blur","scrollIntoView","click"],g="http://www.w3.org/2000/svg",h="http://www.w3.org/1999/xlink",f="__WNODE_TYPE",L="__VNODE_TYPE",b="__DOMVNODE_TYPE";function Z(e){return e&&3===e.nodeType}function y(e){return e&&_(e.node)}function v(e){return!!e&&w(e.node)}function k(e){return v(e)&&"virtual"===e.node.tag}function R(e){return v(e)&&"body"===e.node.tag}function _(e){return Boolean(e&&!0!==e&&"string"!=typeof e&&e.type===f)}function w(e){return Boolean(e&&!0!==e&&"string"!=typeof e&&(e.type===L||e.type===b))}function j(e){return Boolean(e&&!0!==e&&"string"!=typeof e&&e.type===b)}function A(e,t,n){return Object(l.d)(e)?e(t,n):(_(e)&&(t=Object.assign({},e.properties,t),n=n||e.children,e=e.widgetConstructor),{children:n||[],widgetConstructor:e,properties:t,type:f})}function C(e,t={},n){let a,r=t;if(Array.isArray(t)&&(n=t,r={}),"function"==typeof r&&(a=r,r={}),w(e)){let{classes:t=[],styles:a={}}=r,o=d(r,["classes","styles"]),i=e.properties,{classes:l=[],styles:u={}}=i,s=d(i,["classes","styles"]);l=Array.isArray(l)?l:[l],t=Array.isArray(t)?t:[t],a=Object.assign({},u,a),r=Object.assign({},s,o,{classes:[...l,...t],styles:a}),n=n||e.children,e=e.tag}return{tag:e,deferredPropertiesCallback:a,children:n,properties:r,type:L}}const N="__registry_item";class O{constructor(){this.properties={}}}function I(e,t){return Array.isArray(t)?t.reduce(I,e):[...e,t]}function x(e,t={},...n){if(n=n.reduce(I,[]),t=null===t?{}:t,"string"==typeof e)return C(e,t,n);if("registry"===e.type&&t.__autoRegistryItem){const e=t.__autoRegistryItem;return delete t.__autoRegistryItem,A(e,t,n)}if(e.type===N){return A((new e).name,t,n)}return A(e,t,n)}function M(e,t){const{node:{diffType:n,properties:a,attributes:r}}=t;if(!n||"vdom"===n)return{properties:t.deferredProperties?Object.assign({},t.deferredProperties,t.node.properties):t.node.properties,attributes:t.node.attributes,events:t.node.events};if("none"===n)return{properties:{},attributes:t.node.attributes?{}:void 0,events:t.node.events};let o={properties:{}};return r?(o.attributes={},o.events=t.node.events,Object.keys(a).forEach(t=>{o.properties[t]=e[t]}),Object.keys(r).forEach(t=>{o.attributes[t]=e.getAttribute(t)}),o):(o.properties=Object.keys(a).reduce((t,n)=>(t[n]=e.getAttribute(n)||e[n],t),{}),o)}function P(e,t){if(v(e)&&v(t))return(!j(e.node)||!j(t.node)||e.node.domNode===t.node.domNode)&&(e.node.tag===t.node.tag&&e.node.properties.key===t.node.properties.key);if(y(e)&&y(t)){const n=e.registryItem||e.node.widgetConstructor,a=t.registryItem||t.node.widgetConstructor;return(void 0!==e.instance||"string"!=typeof a)&&(n===a&&e.node.properties.key===t.node.properties.key)}return!1}function E(e,t,n){for(let a=n;a<e.length;a++)if(P(e[a],t))return a;return-1}function S(e=[]){let t="";if(Array.isArray(e)){for(let n=0;n<e.length;n++){let a=e[n];a&&!0!==a&&(t=t?`${t} ${a}`:a)}return t}return e&&!0!==e&&(t=e),t}function T(e,t,n,a){a===g&&"href"===t&&n?e.setAttributeNS(h,t,n):"role"===t&&""===n||void 0===n?e.removeAttribute(t):e.setAttribute(t,n)}function D(e){return Array.prototype.slice.call(e)}function z(e,t){const n=(n,a)=>{if(n){const r=A(e,n,a);return e.isWidget=!0,e.middlewares=t,r}return{middlewares:t,callback:e}};return n.isFactory=!0,n}function G(e={}){function t(t){return z(t,e)}return t.properties=function(){return function(t){return z(t,e)}},t}O.type=N;const H=G();const B=new r.a,K=new i.b,F=new o.a;let U=0,q=0;function W(e,t,n){const a=K.get(e);if(a){a.nodeMap=a.nodeMap||new i.b,a.nodeMap.get(t)||a.nodeMap.set(t,n),F.has(`${e}-${t}`)&&(a.invalidator(),F.delete(`${e}-${t}`))}}function V(e){e.forEach(e=>e()),e.clear()}const $=H(({id:e})=>{const[t]=e.split("-");return()=>{const e=K.get(t);if(e)return e.invalidator()}}),Y=(H(({id:e})=>({get(t){const[n]=e.split("-"),a=K.get(n);if(a){a.nodeMap=a.nodeMap||new i.b;const e=a.nodeMap.get(t);if(e)return e;F.add(`${n}-${t}`)}return null}})),H(({id:e})=>(t,n)=>{const[a]=e.split("-"),r=K.get(a);if(r){r.customDiffMap=r.customDiffMap||new i.b,r.customDiffProperties=r.customDiffProperties||new o.a;const a=r.customDiffMap.get(e)||new i.b;a.has(t)||(a.set(t,n),r.customDiffProperties.add(t)),r.customDiffMap.set(e,a)}})),J=H(({id:e})=>t=>{const[n]=e.split("-"),a=K.get(n);a&&(a.destroyMap=a.destroyMap||new i.b,a.destroyMap.has(e)||a.destroyMap.set(e,t))}),Q=H(({id:e})=>{const[t]=e.split("-");return()=>{const e=K.get(t);return e?(e.registryHandler||(e.registryHandler=new c,e.registryHandler.base=e.registry,e.registryHandler.on("invalidate",e.invalidator)),e.registryHandler=e.registryHandler||new c,e.registryHandler):null}});H(({id:e})=>{const[t]=e.split("-");let n=!1;return{pause(){const e=K.get(t);!n&&e&&(e.deferRefs=e.deferRefs+1,n=!0)},resume(){const e=K.get(t);n&&e&&(e.deferRefs=e.deferRefs-1,n=!1)}}});function X(e){let t,n,o={sync:!1,merge:!0,transition:void 0,domNode:a.default.document.body,registry:new l.a},s=[],d=[],h=[],b=[],A=new r.a,N=new i.b,O=new r.a,I=new i.b,x=new r.a,z=new r.a,G=[],F=[],$=[];function Y(e,t,n,a){let r=t&&!n;"function"==typeof t&&(r=t()),!0===r&&F.push(()=>{a[e]()})}function J(e,t,n,a){if(a){const n=A.get(a);n&&e.removeEventListener(t,n)}let r=n;"input"===t&&(r=function(e){n.call(this,e),e.target["oninput-value"]=e.target.value}),e.addEventListener(t,r),A.set(n,r)}function Q(e,t,n,a=!1){Object.keys(t).forEach(r=>{const o="on"===r.substr(0,2)||a,i=a?r:r.substr(2);if(o&&!n[r]){const n=A.get(t[r]);n&&e.removeEventListener(i,n)}})}function X(e,t,n){if(!Object(l.e)(e.node.widgetConstructor)){const a=z.get(e.node);let r;if(a&&(a.instance?t=a.instance:n=a.id),t){const e=B.get(t);e&&(r=e.registry)}else if(void 0!==n){const e=K.get(n);e&&(e.registryHandler||(e.registryHandler=new c,e.registryHandler.base=e.registry,e.registryHandler.on("invalidate",e.invalidator)),r=e.registryHandler)}if(r){let t;if(function(e){return Boolean(e&&e.label)}(e.node.widgetConstructor)){const{label:n,registryItem:a}=e.node.widgetConstructor;r.has(n)||r.define(n,a),t=n}else t=e.node.widgetConstructor;let n=r.get(t);if(Object(l.d)(n)){const t=n(e.node.properties,e.node.children);Object(l.g)(t.widgetConstructor)&&(e.registryItem=t.widgetConstructor)}else e.registryItem=n}}}function ee(e,t,n){const{requiresInsertBefore:a,hasPreviousSiblings:r,namespace:o,depth:i}=t,l=[],u=y(t),s=k(t),c=(v(n)&&I.get(n.id)||[]).length>0,d=(a||!1!==r)&&(u||s)||c&&e.length>1;let p;y(t)&&e.length&&function(e,t){for(;e.length;){let n=e.pop();(_(n)||w(n))&&(z.has(n)||(z.set(n,t),n.children&&n.children.length&&(e=[...e,...n.children])))}}([...e],t);for(let n=0;n<e.length;n++){let a=e[n];if(!a||!0===a)continue;"string"==typeof a&&(a={tag:"",properties:{},children:void 0,text:`${a}`,type:L});const r=z.get(a),s={node:a,depth:i+1,order:n,parentId:t.id,requiresInsertBefore:d,hasParentWNode:u,namespace:o};if(w(a)&&(a.deferredPropertiesCallback&&(s.deferredProperties=a.deferredPropertiesCallback(!1)),a.properties.exitAnimation)){t.hasAnimations=!0;let e=N.get(t.parentId);for(;e&&!e.hasAnimations;)e.hasAnimations=!0,e=N.get(e.parentId)}r&&(s.owningId=r.id),_(a)&&X(s,t.instance,t.id),p&&O.set(p,s),l.push(s),p=s}return l}function te(e){const{deferredPropertiesCallback:t}=e.node;if(t){const n=e.node.properties;F.push(()=>{if(N.has(e.owningId)){const a=e.deferredProperties;e.deferredProperties=t(!0),oe(e,{properties:Object.assign({},a,n)})}})}}function ne(e){let t=null,n=e;for(;!t;){const e=O.get(n);if(e){let a=e.domNode;if((y(e)||k(e))&&e.childDomWrapperId){const t=N.get(e.childDomWrapperId);t&&(a=t.domNode)}if(a&&a.parentNode){t=a;break}n=e}else if(!(n=n&&N.get(n.parentId))||v(n)&&!k(n))break}return t}function ae(e,t,n){const a=e.value,r=e["oninput-value"],o=e["select-value"];o&&a!==o?(e.value=o,e.value===o&&(e["select-value"]=void 0)):(r&&a===r||t!==n)&&(e.value=t,e["oninput-value"]=void 0)}function re(e,t={},n,a=!0){const r=n.deferredProperties?Object.assign({},n.deferredProperties,n.node.properties):n.node.properties,o=Object.keys(r),i=o.length;-1===o.indexOf("classes")&&t.classes&&e.removeAttribute("class"),a&&Q(e,t,r);for(let l=0;l<i;l++){const i=o[l];let u=r[i];const s=t[i];if("classes"===i){const t=S(s);let a=S(u);if(t!==a)if(a){if(n.merged){const t=(e.getAttribute("class")||"").split(" ");for(let e=0;e<t.length;e++)-1===a.indexOf(t[e])&&(a=`${t[e]} ${a}`)}e.setAttribute("class",a)}else e.removeAttribute("class")}else if(-1!==m.indexOf(i))Y(i,u,s,e);else if("styles"===i){const t=Object.keys(u),n=t.length;for(let a=0;a<n;a++){const n=t[a],r=u[n];r!==(s&&s[n])&&(e.style[n]=r||"")}}else if(u||"string"!=typeof s||(u=""),"value"===i)"SELECT"===e.tagName&&(e["select-value"]=u),ae(e,u,s);else if("key"!==i&&u!==s){const t=typeof u;"function"===t&&0===i.lastIndexOf("on",0)&&a?J(e,i.substr(2),u,s):"string"===t&&"innerHTML"!==i&&a?T(e,i,u,n.namespace):"scrollLeft"===i||"scrollTop"===i?e[i]!==u&&(e[i]=u):e[i]=u}}}function oe(e,t){if(e.node.attributes&&e.node.events){!function(e,t,n,a){const r=Object.keys(n),o=r.length;for(let i=0;i<o;i++){const o=r[i],l=n[o];l!==t[o]&&T(e,o,l,a)}}(e.domNode,t.attributes||{},e.node.attributes,e.namespace),re(e.domNode,t.properties,e,!1);const n=e.node.events||{};t.events&&Q(e.domNode,t.events||{},e.node.events,!0),t.events=t.events||{},Object.keys(n).forEach(a=>{J(e.domNode,a,n[a],t.events[a])})}else re(e.domNode,t.properties,e)}function ie(){const{sync:e}=o;e?ue():t||(t=a.default.requestAnimationFrame(()=>{ue()}))}function le(e){const t=N.get(e);if(t&&y(t))return t}function ue(){t=void 0;let e=[...s];const n=[];let a;for(s=[],e.sort((e,t)=>{let n=t.depth-e.depth;return 0===n&&(n=t.order-e.order),n}),h.length&&(d=[...h],h=[],ce(),h.length&&(s=[...e],e=[]));a=e.pop();){let{id:e}=a;const t=le(e);if(!t||-1!==n.indexOf(e)||!N.has(t.parentId))continue;n.push(e);const r=O.get(t),o={node:{type:f,widgetConstructor:t.node.widgetConstructor,properties:t.properties||{},children:t.node.children||[]},instance:t.instance,id:t.id,properties:t.properties,depth:t.depth,order:t.order,owningId:t.owningId,parentId:t.parentId,registryItem:t.registryItem};r&&O.set(o,r);const i=fe({current:t,next:o});i&&i.item&&(d.push(i.item),N.set(e,o),ce())}de(),se(),pe()}function se(){if(0===h.length){let e;for(;e=$.pop();)e.parentNode&&e.parentNode.removeChild(e);o.merge=!1}}function ce(){let e;for(;e=d.pop();)if(e.type)"attach"===e.type&&Le(e.id),e.instance&&b.push(e);else{const{current:t,next:n,meta:a}=e;ge(t||p,n||p,a)}}function de(){let e;for(b.reverse();e=b.pop();)if("create"===e.type){const{parentDomNode:t,next:n,next:{domNode:a,merged:r,requiresInsertBefore:i,node:l}}=e;if(oe(n,{properties:{}}),te(n),!r){let e;i?e=ne(n):x&&(e=x.get(n)),t.insertBefore(a,e),j(n.node)&&n.node.onAttach&&n.node.onAttach()}"OPTION"===a.tagName&&a.parentElement&&ae(a.parentElement);const{enterAnimation:u,enterAnimationActive:s}=l.properties;o.transition&&u&&!0!==u&&o.transition.enter(a,u,s);const c=z.get(n.node);if(c&&null!=l.properties.key)if(c.instance){const e=B.get(c.instance);e&&e.nodeHandler.add(a,`${l.properties.key}`)}else W(c.id,l.properties.key,a);e.next.inserted=!0}else if("update"===e.type){const{next:t,next:{domNode:n},current:a,current:{domNode:r}}=e;if(Z(n)&&Z(r)&&n!==r)r.parentNode&&r.parentNode.replaceChild(n,r);else{oe(t,M(n,a)),te(t)}}else if("delete"===e.type){const{current:t}=e,{exitAnimation:n,exitAnimationActive:a}=t.node.properties;o.transition&&n&&!0!==n?o.transition.exit(t.domNode,n,a):t.domNode.parentNode.removeChild(t.domNode)}else if("attach"===e.type){const{instance:t,attached:n}=e,a=B.get(t);a&&(a.nodeHandler.addRoot(),n&&a.onAttach())}else if("detach"===e.type){if(e.current.instance){const t=B.get(e.current.instance);t&&t.onDetach()}e.current.instance=void 0}0===h.length&&(z=new r.a)}function pe(){!function(){const{sync:e}=o,t=G;if(G=[],t.length){const n=()=>{let e;for(;e=t.shift();)e()};e?n():a.default.requestIdleCallback?a.default.requestIdleCallback(n):setTimeout(n)}}(),function(){const{sync:e}=o,t=F;if(F=[],t.length){const n=()=>{let e;for(;e=t.shift();)e()};e?n():a.default.requestAnimationFrame(n)}}()}function me(e){const t=[];for(let n=0;n<e.length;n++){const a=e[n];if(null==a.node.properties.key)return!1;t.push(a.node.properties.key)}return t}function ge(e,t,n={}){let{mergeNodes:a=[],oldIndex:r=0,newIndex:i=0}=n;const l=e.length,u=t.length,s=l>1||l>0&&l<u;let c=[],p=!1;if(0===r&&0===i&&l){const n=me(e);if(n){const a=me(t);if(a)for(let t=0;t<n.length;t++){if(-1!==a.indexOf(n[t])){c=[],p=!1;break}p=!0,c.push({current:e[t],next:void 0})}}}if(p||0===l&&!o.merge)for(let e=0;e<t.length;e++)c.push({current:void 0,next:t[e]});else{if(i<u){let n=r<l?e[r]:void 0;const u=t[i];u.hasPreviousSiblings=s,function(e,t){const{merge:n}=o;if(n&&t.length)if(v(e)){let{node:{tag:n}}=e;for(let a=0;a<t.length;a++){const r=t[a],o=r.tagName||"";if(n.toUpperCase()===o.toUpperCase()){const n=$.indexOf(r);-1!==n&&$.splice(n,1),t.splice(a,1),e.domNode=r;break}}}else e.mergeNodes=t}(u,a),n&&P(n,u)?(r++,i++,v(n)&&v(u)&&(u.inserted=n.inserted),c.push({current:n,next:u})):n&&-1!==E(e,u,r+1)?-1===E(t,n,i+1)?(c.push({current:n,next:void 0}),r++):(c.push({current:n,next:void 0}),c.push({current:void 0,next:u}),r++,i++):(c.push({current:void 0,next:u}),i++)}if(i<u&&d.push({current:e,next:t,meta:{mergeNodes:a,oldIndex:r,newIndex:i}}),l>r&&i>=u)for(let t=r;t<l;t++)c.push({current:e[t],next:void 0})}for(let r=0;r<c.length;r++){const l=he(c[r]);if(!1===l){if(o.merge&&a.length){i<u&&d.pop(),d.push({next:t,current:e,meta:n}),h=d,d=[];break}continue}const{widget:s,item:p,dom:m}=l;s&&d.push(s),p&&d.push(p),m&&b.push(m)}}function he({current:e,next:t}){if(e!==t){if(!e&&t)return v(t)?function({next:e}){const t=function(e){let t,n=N.get(e.parentId);for(;!t&&n;)!t&&v(n)&&!k(n)&&n.domNode&&(t=n.domNode),n=N.get(n.parentId);return t}(e),n=k(e),r=R(e);let i,l=[];e.id=`${U++}`,N.set(e.id,e),e.domNode?o.merge&&(e.merged=!0,Z(e.domNode)?e.domNode.data!==e.node.text&&($=[e.domNode,...$],e.domNode=a.default.document.createTextNode(e.node.text),e.merged=!1):(l=D(e.domNode.childNodes),$=[...$,...l])):(e.node.domNode?e.domNode=e.node.domNode:("svg"===e.node.tag&&(e.namespace=g),r?e.domNode=a.default.document.body:e.node.tag&&!n?e.namespace?e.domNode=a.default.document.createElementNS(e.namespace,e.node.tag):e.domNode=a.default.document.createElement(e.node.tag):null!=e.node.text&&(e.domNode=a.default.document.createTextNode(e.node.text))),x&&$.length&&t===$[0].parentNode&&x.set(e,$[0]));(e.domNode||n)&&e.node.children&&e.node.children.length&&(i=ee(e.node.children,e,null),I.set(e.id,i));const u=n||r?void 0:{next:e,parentDomNode:t,type:"create"};if(i)return{item:{current:[],next:i,meta:{mergeNodes:l}},dom:u,widget:n?{type:"attach",id:e.id,attached:!1}:void 0};return{dom:u}}({next:t}):function({next:e}){let t,a,{node:{widgetConstructor:r}}=e,{registry:i}=o,u=e.registryItem||r;if(!Object(l.e)(u)){if(X(e),!e.registryItem)return!1;u=e.registryItem}e.properties=e.node.properties,e.id=e.id||`${U++}`,N.set(e.id,e);const{id:c,depth:d,order:p}=e;if(Object(l.f)(u)){let n=new u;n.registry.base=i;const r=B.get(n);a=(()=>{r.dirty=!0,!r.rendering&&N.has(c)&&(s.push({id:c,depth:d,order:p}),ie())}),r.invalidate=a,r.rendering=!0,n.__setProperties__(e.node.properties),n.__setChildren__(e.node.children),e.instance=n,t=n.__render__(),r.rendering=!1}else{let n=K.get(c);if(n?a=n.invalidator:(a=(()=>{const e=K.get(c);e&&(e.dirty=!0,!e.rendering&&N.has(c)&&(s.push({id:c,depth:d,order:p}),ie()))}),n={dirty:!1,invalidator:a,properties:e.node.properties,children:e.node.children,deferRefs:0,rendering:!0,registry:o.registry},K.set(e.id,n),n.middleware=u.middlewares?function e(t,n){const a=Object.keys(t);const r={};const o=`${n}-${q++}`;for(let i=0;i<a.length;i++){const l=t[a[i]](),u={id:o,properties:()=>{const e=K.get(n);return e?Object.assign({},e.properties):{}},children:()=>{const e=K.get(n);return e?e.children:[]}};if(l.middlewares){const t=e(l.middlewares,n);u.middleware=t,r[a[i]]=l.callback(u)}else r[a[i]]=l.callback(u)}return r}(u.middlewares,c):{}),t=u({id:c,properties:()=>e.node.properties,children:()=>e.node.children,middleware:n.middleware}),n.rendering=!1,n.deferRefs>0)return!1}let m;t&&(t=Array.isArray(t)?t:[t],m=ee(t,e,null),I.set(c,m));n||u.isWNodeWrapper||(n=a);return{item:{next:m,meta:{mergeNodes:e.mergeNodes}},widget:{type:"attach",instance:e.instance,id:c,attached:!0}}}({next:t});if(e&&t){if(v(e)&&v(t))return function({current:e,next:t}){let n;t.domNode=e.domNode,t.namespace=e.namespace,t.id=e.id,t.childDomWrapperId=e.childDomWrapperId;let r=I.get(t.id);null!=t.node.text&&t.node.text!==e.node.text?t.domNode=a.default.document.createTextNode(t.node.text):t.node.children&&(n=ee(t.node.children,t,e),I.set(t.id,n));return O.delete(e),N.set(t.id,t),{item:{current:r,next:n,meta:{}},dom:{type:"update",next:t,current:e}}}({current:e,next:t});if(y(e)&&y(t))return fe({current:e,next:t})}else if(e&&!t){if(v(e))return function({current:e}){const t=k(e),n=R(e),a=I.get(e.id);if(I.delete(e.id),N.delete(e.id),O.delete(e),e.node.properties.key){const t=K.get(e.owningId),n=le(e.owningId);if(t)t.nodeMap&&t.nodeMap.delete(e.node.properties.key);else if(n&&n.instance){const t=B.get(n.instance);t&&t.nodeHandler.remove(e.node.properties.key)}}if(e.hasAnimations||t||n)return{item:{current:a,meta:{}},dom:t||n?void 0:{type:"delete",current:e}};a&&F.push(()=>{let e,t=a||[],n=[];for(;e=t.pop();){if(y(e))if((e=le(e.id)||e).instance){const t=B.get(e.instance);t&&t.onDetach(),e.instance=void 0}else{const t=K.get(e.id);t&&(t.registryHandler&&t.registryHandler.destroy(),t.destroyMap&&V(t.destroyMap),K.delete(e.id))}let a=I.get(e.id);a&&t.push(...a),R(e)?n.push(e.id):-1!==n.indexOf(e.parentId)&&(y(e)||k(e)?n.push(e.id):e.domNode&&e.domNode.parentNode&&e.domNode.parentNode.removeChild(e.domNode)),I.delete(e.id),N.delete(e.id)}});return{dom:{type:"delete",current:e}}}({current:e});if(y(e))return function({current:e}){e=le(e.id)||e,N.delete(e.id);const t=K.get(e.id);let n=I.get(e.id);I.delete(e.id),O.delete(e);let a={item:{current:n,meta:{}}};t?(t.registryHandler&&t.registryHandler.destroy(),t.destroyMap&&V(t.destroyMap),K.delete(e.id)):a.widget={type:"detach",current:e,instance:e.instance};return a}({current:e})}}return{}}function fe({current:e,next:t}){e=le(e.id)||e;const{instance:n,domNode:a,hasAnimations:r}=e;let{node:{widgetConstructor:o}}=t;const s=t.registryItem||o;if(!Object(l.e)(s))return{};let c,d,p={},m=!1,g=I.get(e.id);if(t.hasAnimations=r,t.id=e.id,t.childDomWrapperId=e.childDomWrapperId,t.properties=t.node.properties,O.delete(e),a&&a.parentNode&&(t.domNode=a),Object(l.f)(s)){const e=B.get(n);t.instance=n,e.rendering=!0,n.__setProperties__(t.node.properties),n.__setChildren__(t.node.children),e.dirty&&(m=!0,I.delete(t.id),c=n.__render__()),e.rendering=!1}else{const n=K.get(t.id);n&&(n.properties=t.properties,n.rendering=!0,function(e,t,n){e.customDiffMap=e.customDiffMap||new i.b,e.customDiffMap.size&&e.customDiffMap.forEach(e=>{e.forEach(e=>e(Object.assign({},t),Object.assign({},n)))})}(n,e.properties,t.properties),(e.node.children.length>0||t.node.children.length>0)&&(n.dirty=!0),n.dirty||function(e,t,n,a){const r=[...Object.keys(e),...Object.keys(t)];for(let o=0;o<r.length;o++)if(!(a.indexOf(r[o])>-1)){if(Object(u.a)(e[r[o]],t[r[o]]).changed){n();break}a.push(r[o])}}(e.properties,t.properties,()=>{n.dirty=!0},n.customDiffProperties?[...n.customDiffProperties.values()]:[]),n.dirty&&(I.delete(t.id),m=!0,n.dirty=!1,c=s({id:t.id,properties:()=>t.node.properties,children:()=>t.node.children,middleware:n.middleware}),n.deferRefs>0&&(c=null)),n.rendering=!1)}return N.set(t.id,t),p.widget={type:"attach",instance:n,id:t.id,attached:!1},c&&(d=ee(c=Array.isArray(c)?c:[c],t,e),I.set(t.id,d)),m&&(p.item={current:g,next:d,meta:{}}),p}function Le(e){let t,n=N.get(e),a=[...I.get(e)||[]];for(;a.length&&!n.domNode;)if(t=a.shift()){if(t.domNode){n.childDomWrapperId=t.id;break}let e=I.get(t.id);e&&(a=[...e,...a])}}return{mount:function(t={}){o=Object.assign({},o,t);const{domNode:n}=o,a=function(e){const t=e(),n=_(t),a=()=>t;return a.isWNodeWrapper=n,H(a)}(e)({}),r={id:`${U++}`,node:a,order:0,depth:1,owningId:"-1",parentId:"-1",siblingId:"-1",properties:{}};N.set("-1",{id:"-1",depth:0,order:0,owningId:"",domNode:n,node:C("fake"),parentId:"-1"}),d.push({current:[],next:[r],meta:{mergeNodes:D(n.childNodes)}}),ce(),de(),se(),x=void 0,pe()},invalidate:function(){n&&n()}}}},function(e,t,n){"use strict";var a=n(0);n(1);let r,o,i,l,u,s,c,d,p;r=Object.assign,o=Object.getOwnPropertyDescriptor,i=Object.getOwnPropertyNames,l=Object.getOwnPropertySymbols,u=Object.is,s=Object.keys,c=Object.getOwnPropertyDescriptors,d=Object.entries,p=Object.values;n.d(t,"a",function(){return m});let m=a.default.Map;t.b=m},,function(e,t,n){"use strict";var a=n(19),r=n(2);function o(){return r.default.resolve(!1)}function i(){throw new Error("Call made to destroyed method")}class l{constructor(){this.handles=[]}own(e){const{handles:t}=this;return t.push(e),{destroy(){t.splice(t.indexOf(e)),e.destroy()}}}destroy(){return new r.default(e=>{this.handles.forEach(e=>{e&&e.destroy&&e.destroy()}),this.destroy=o,this.own=i,e(!0)})}}n.d(t,"a",function(){return s});const u=new a.b;class s extends l{constructor(){super(...arguments),this.listenersMap=new a.b}emit(e){this.listenersMap.forEach((t,n)=>{(function(e,t){if("string"==typeof t&&"string"==typeof e&&-1!==e.indexOf("*")){let n;return u.has(e)?n=u.get(e):(n=new RegExp(`^${e.replace(/\*/g,".*")}$`),u.set(e,n)),n.test(t)}return e===t})(n,e.type)&&[...t].forEach(t=>{t.call(this,e)})})}on(e,t){if(Array.isArray(t)){const n=t.map(t=>this._addListener(e,t));return{destroy(){n.forEach(e=>e.destroy())}}}return this._addListener(e,t)}_addListener(e,t){const n=this.listenersMap.get(e)||[];return n.push(t),this.listenersMap.set(e,n),{destroy:()=>{const n=this.listenersMap.get(e)||[];n.splice(n.indexOf(t),1)}}}}t.b=s},function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"f",function(){return l}),n.d(t,"g",function(){return u}),n.d(t,"d",function(){return s}),n.d(t,"e",function(){return c}),n.d(t,"a",function(){return d});var a=n(2),r=n(19),o=n(21);const i="__widget_base_type";function l(e){return Boolean(e&&e._type===i)}function u(e){return Boolean(e&&e.isWidget)}function s(e){return!("function"!=typeof e||!e.isFactory)}function c(e){return l(e)||u(e)}class d extends o.a{emitLoadedEvent(e,t){this.emit({type:e,action:"loaded",item:t})}define(e,t){if(void 0===this._widgetRegistry&&(this._widgetRegistry=new r.b),this._widgetRegistry.has(e))throw new Error(`widget has already been registered for '${e.toString()}'`);this._widgetRegistry.set(e,t),t instanceof a.default?t.then(t=>(this._widgetRegistry.set(e,t),this.emitLoadedEvent(e,t),t),e=>{throw e}):l(t)&&this.emitLoadedEvent(e,t)}defineInjector(e,t){if(void 0===this._injectorRegistry&&(this._injectorRegistry=new r.b),this._injectorRegistry.has(e))throw new Error(`injector has already been registered for '${e.toString()}'`);const n=new o.a,a={injector:t(()=>n.emit({type:"invalidate"})),invalidator:n};this._injectorRegistry.set(e,a),this.emitLoadedEvent(e,a)}get(e){if(!this._widgetRegistry||!this.has(e))return null;const t=this._widgetRegistry.get(e);if(c(t)||s(t))return t;if(t instanceof a.default)return null;const n=t();return this._widgetRegistry.set(e,n),n.then(t=>(function(e){return Boolean(e&&e.hasOwnProperty("__esModule")&&e.hasOwnProperty("default")&&(c(e.default)||s(e.default)))}(t)&&(t=t.default),this._widgetRegistry.set(e,t),this.emitLoadedEvent(e,t),t),e=>{throw e}),null}getInjector(e){return this._injectorRegistry&&this.hasInjector(e)?this._injectorRegistry.get(e):null}has(e){return Boolean(this._widgetRegistry&&this._widgetRegistry.has(e))}hasInjector(e){return Boolean(this._injectorRegistry&&this._injectorRegistry.has(e))}}t.c=d},function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return l});var a=n(22);function r(e){return"[object Object]"===Object.prototype.toString.call(e)||Array.isArray(e)}function o(e,t){return{changed:e!==t,value:t}}function i(e,t,n=0){let a=!1;const o=e&&r(e),l=t&&r(t);if(!o||!l)return{changed:!0,value:t};const u=Object.keys(e),s=Object.keys(t);return{changed:a=u.length!==s.length||s.some(a=>n>0?i(t[a],e[a],n-1).changed:t[a]!==e[a]),value:t}}function l(e,t){let n;return n="function"==typeof t?t._type===a.b?o(e,t):function(e,t){return{changed:!1,value:t}}(0,t):r(t)?i(e,t):o(e,t)}},function(e,t,n){var a,r;
/*!
 * CLDR JavaScript Library v0.5.0 2017-08-11T11:52Z MIT license © Rafael Xavier
 * http://git.io/h4lmVg
 */void 0===(r="function"==typeof(a=function(){var e,t=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},n=function(e,n){if(t(e)&&(e=e.join("/")),"string"!=typeof e)throw new Error('invalid path "'+e+'"');return(e=(e=e.replace(/^\//,"").replace(/^cldr\//,"")).replace(/{[a-zA-Z]+}/g,function(e){return e=e.replace(/^{([^}]*)}$/,"$1"),n[e]})).split("/")},a=function(e,t){var n,a;if(e.some)return e.some(t);for(n=0,a=e.length;n<a;n++)if(t(e[n],n,e))return!0;return!1},r=function(e,t,n,r){var o,i=n[0],l=n[1],u=e.localeSep,s=n[2],c=n.slice(3,4);return r=r||{},"und"!==i&&"Zzzz"!==l&&"ZZ"!==s?[i,l,s].concat(c):void 0!==t.get("supplemental/likelySubtags")?a([[i,l,s],[i,s],[i,l],[i],["und",l]],function(e){return o=!/\b(Zzzz|ZZ)\b/.test(e.join(u))&&t.get(["supplemental/likelySubtags",e.join(u)])})?(o=o.split(u),["und"!==i?i:o[0],"Zzzz"!==l?l:o[1],"ZZ"!==s?s:o[2]].concat(c)):r.force?t.get("supplemental/likelySubtags/und").split(u):void 0:void 0},o=function(e,t,n){var o,i=n[0],l=n[1],u=n[2],s=n[3];return a([[[i,"Zzzz","ZZ"],[i]],[[i,"Zzzz",u],[i,u]],[[i,l,"ZZ"],[i,l]]],function(a){var i=r(e,t,a[0]);return o=a[1],i&&i[0]===n[0]&&i[1]===n[1]&&i[2]===n[2]})?(s&&o.push(s),o):n},i=function(e){var t,n,a=[];return e=e.replace(/_/,"-"),(t=e.split("-u-"))[1]&&(t[1]=t[1].split("-t-"),e=t[0]+(t[1][1]?"-t-"+t[1][1]:""),a[4]=t[1][0]),n=e.split("-t-")[0],null===(t=n.match(/^(([a-z]{2,3})(-([A-Z][a-z]{3}))?(-([A-Z]{2}|[0-9]{3}))?)((-([a-zA-Z0-9]{5,8}|[0-9][a-zA-Z0-9]{3}))*)$|^(root)$/))?["und","Zzzz","ZZ"]:(a[0]=t[10]||t[2]||"und",a[1]=t[4]||"Zzzz",a[2]=t[6]||"ZZ",t[7]&&t[7].length&&(a[3]=t[7].slice(1)),a)},l=function(e,t){var n,a;if(e.forEach)return e.forEach(t);for(n=0,a=e.length;n<a;n++)t(e[n],n,e)},u=function(e,t,n){var a=e._availableBundleMap,u=e._availableBundleMapQueue;return u.length&&(l(u,function(n){var l,s,c,d;d=i(n),s=r(e,t,d),c=(c=o(e,t,s)).join(e.localeSep),(l=u[c])&&l.length<n.length||(a[c]=n)}),e._availableBundleMapQueue=[]),a[n]||null},s=function(e,t){var n,a;return a=e+(t&&JSON?": "+JSON.stringify(t):""),(n=new Error(a)).code=e,l(function(e){var t,n=[];if(Object.keys)return Object.keys(e);for(t in e)n.push(t);return n}(t),function(e){n[e]=t[e]}),n},c=function(e,t,n){if(!t)throw s(e,n)},d=function(e,t){c("E_MISSING_PARAMETER",void 0!==e,{name:t})},p=function(e,t,n,a){c("E_INVALID_PAR_TYPE",n,{expected:a,name:t,value:e})},m=function(e,n){p(e,n,"string"==typeof e||t(e),"String or Array")},g=function(e,t){var n;p(e,t,void 0===e||null!==(n=e)&&""+n=="[object Object]","Plain Object")},h=function(e,t){var n,a=e,r=t.length;for(n=0;n<r-1;n++)if(!(a=a[t[n]]))return;return a[t[n]]},f=function(e,t){var n,a=e._availableBundleMapQueue,r=h(t,["main"]);if(r)for(n in r)r.hasOwnProperty(n)&&"root"!==n&&-1===a.indexOf(n)&&a.push(n)},L=function(e){return t(e)?e:[e]},b=e=function(){var n={},a=[].slice.call(arguments,0);return l(a,function(a){var r;for(r in a)r in n&&"object"==typeof n[r]&&!t(n[r])?n[r]=e(n[r],a[r]):n[r]=a[r]}),n},Z=function(e,t,n){var a,r,o;for(d(n[0],"json"),a=0;a<n.length;a++)for(o=L(n[a]),r=0;r<o.length;r++)g(o[r],"json"),t=b(t,o[r]),f(e,o[r]);return t},y=function(e,t,a){var r=n(t,a);return h(e._resolved,r)},v=function(e){this.init(e)};return v._alwaysArray=L,v._coreLoad=Z,v._createError=s,v._itemGetResolved=y,v._jsonMerge=b,v._pathNormalize=n,v._resourceGet=h,v._validatePresence=d,v._validateType=p,v._validateTypePath=m,v._validateTypePlainObject=g,v._availableBundleMap={},v._availableBundleMapQueue=[],v._resolved={},v.localeSep="-",v.load=function(){v._resolved=Z(v,v._resolved,arguments)},v.prototype.init=function(e){var t,n,a,l,s,c,m,g,h,f,L=v.localeSep,b="";d(e,"locale"),p(f=e,"locale","string"==typeof f,"a string"),5===(c=i(e)).length&&(b=L+"u"+L+(g=c.pop()),c[3]||c.pop()),h=c[3],n=(a=r(v,this,c,{force:!0})||c)[0],s=a[1],m=a[2],l=o(v,this,a).join(L),this.attributes=t={bundle:u(v,this,l),minLanguageId:l+b,maxLanguageId:a.join(L)+b,language:n,script:s,territory:m,region:m,variant:h},g&&("-"+g).replace(/-[a-z]{3,8}|(-[a-z]{2})-([a-z]{3,8})/g,function(e,n,a){n?t["u"+n]=a:t["u"+e]=!0}),this.locale=e},v.prototype.get=function(e){return d(e,"path"),m(e,"path"),y(v,e,this.attributes)},v.prototype.main=function(e){return d(e,"path"),m(e,"path"),c("E_MISSING_BUNDLE",null!==this.attributes.bundle,{locale:this.locale}),e=L(e),this.get(["main/{bundle}"].concat(e))},v})?a.call(t,n,t,e):a)||(e.exports=r)},function(e,t,n){"use strict";var a=n(0);n(1);let r=a.default.Set;t.a=r},function(e,t,n){"use strict";n.r(t);var a=n(0),r=(n(1),n(29));let o,i,l,u,s,c,d,p,m,g;o=String.fromCodePoint,i=String.raw,l=Object(r.a)(String.prototype.codePointAt),u=Object(r.a)(String.prototype.endsWith),s=Object(r.a)(String.prototype.includes),c=Object(r.a)(String.prototype.normalize),d=Object(r.a)(String.prototype.repeat),p=Object(r.a)(String.prototype.startsWith),m=Object(r.a)(String.prototype.padEnd),g=Object(r.a)(String.prototype.padStart);function h(e){return e&&"function"==typeof e[Symbol.iterator]}function f(e){return e&&"number"==typeof e.length}var L=n(19),b=n(21),Z=n(30),y=n(47),v=n(35),k=n(34);function R(e){if(f(e)){let t=[];for(let n=0;n<e.length;n++){const a=e[n];t.push(a.__esModule&&a.default?a.default:a)}return t}if(h(e)){let t=[];for(const n of e)t.push(n.__esModule&&n.default?n.default:n);return t}return e.__esModule&&e.default?e.default:e}n.d(t,"useDefault",function(){return R}),n.d(t,"formatMessage",function(){return M}),n.d(t,"getCachedMessages",function(){return P}),n.d(t,"getMessageFormatter",function(){return E}),n.d(t,"invalidate",function(){return T}),n.d(t,"observeLocale",function(){return D}),n.d(t,"setLocaleMessages",function(){return z}),n.d(t,"switchLocale",function(){return G}),n.d(t,"systemLocale",function(){return H});const _=/\{([a-z0-9_]+)\}/gi,w=new L.b,j=new L.b,A=new b.b;let C;function N(e){if(e.id)return e.id;const t=Object(Z.b)();return Object.defineProperty(e,"id",{value:t}),t}function O(){return C||H}function I(e,t=[]){return Object(k.a)(e).filter(e=>t.indexOf(e)>-1)}function x(e,t,n="root"){let a=w.get(e);a||(a=new L.b,w.set(e,a)),a.set(n,t),y.loadMessages({[n]:{[e]:t}})}function M(e,t,n,a){return E(e,t,a)(n)}function P(e,t){const{id:n=N(e),locales:a,messages:r}=e,o=w.get(n);if(o){const e=o.get(t);if(e)return e}else x(n,r);const i=I(t,a&&Object.keys(a));return i.length?o?o.get(i[i.length-1]):void 0:r}function E(e,t,n){const{id:a=N(e)}=e;if(Object(v.isLoaded)("supplemental","likelySubtags")&&Object(v.isLoaded)("supplemental","plurals-type-cardinal"))return function(e,t,n){const a=`${n=Object(k.b)(n||O())}:${e}:${t}`;let r=j.get(a);if(r)return r;r=(n!==O()?new y(Object(k.b)(n)):y).messageFormatter(`${e}/${t}`);const o=w.get(e);return o&&o.get(n)&&j.set(a,r),r}(a,t,n);const r=w.get(a),o=r?r.get(n||O())||r.get("root"):null;if(!o)throw new Error("The bundle has not been registered.");return function(e=Object.create(null)){return o[t].replace(_,(t,n)=>{const a=e[n];if(void 0===a)throw new Error(`Missing property ${n}`);return a})}}async function S(e,t){const n=t?Object(k.b)(t):O(),a=P(e,n);if(a)return a;const r=e.locales,o=I(n,Object.keys(r));return(await function(e,t){return Promise.all(t.map(t=>e[t]())).then(e=>e.map(e=>R(e)))}(r,o)).reduce((t,a)=>{const r=Object.assign({},t,a);return x(N(e),Object.freeze(r),n),r},e.messages)}Object.defineProperty(S,"locale",{get:O});t.default=S;function T(e){e?e.id&&w.delete(e.id):w.clear()}const D=function(e){return A.on("change",t=>{e(t.target)})};function z(e,t,n){const a=Object.assign({},e.messages,t);x(N(e),Object.freeze(a),n)}function G(e){C!==(C=e?Object(k.b)(e):"")&&(Object(v.isLoaded)("supplemental","likelySubtags")&&(y.load({main:{[C]:{}}}),y.locale(C)),A.emit({type:"change",target:C}))}const H=function(){let e="en";{const t=a.default.navigator;e=t.language||t.userLanguage}return Object(k.b)(e)}()},,function(e,t,n){"use strict";var a=n(0);n(1);let r=a.default.WeakMap;t.a=r},function(e,t,n){"use strict";function a(e){return function(t,...n){return e.apply(t,n)}}n.d(t,"a",function(){return a})},function(e,t,n){"use strict";n.d(t,"b",function(){return r}),n.d(t,"a",function(){return o});var a=n(18);Array.prototype.slice,Object.prototype.hasOwnProperty;function r(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}function o(e,t,n){let r,o=!1;"function"==typeof t?r=t:(r=t.modifier,n=t.predicate,o=t.shallow||!1);let i=Array.isArray(e)?[...e]:[e];function l(){i=[]}for(;i.length;){const e=i.shift();e&&!0!==e&&(!o&&(Object(a.g)(e)||Object(a.f)(e))&&e.children&&(i=[...i,...e.children]),n&&!n(e)||r(e,l))}return e}},function(e,t,n){
/*!
 * CLDR JavaScript Library v0.5.0 2017-08-11T11:52Z MIT license © Rafael Xavier
 * http://git.io/h4lmVg
 */
e.exports=n(24),n(48),n(49),n(32)},function(e,t,n){var a,r,o;
/*!
 * CLDR JavaScript Library v0.5.0 2017-08-11T11:52Z MIT license © Rafael Xavier
 * http://git.io/h4lmVg
 */r=[n(24)],void 0===(o="function"==typeof(a=function(e){var t,n=e._coreLoad,a=e._jsonMerge,r=e._pathNormalize,o=e._resourceGet,i=e._validatePresence,l=e._validateTypePath,u=t=function(e,n,i,l,u){var s,c,d;if(void 0!==n&&n!==u)return s=r(i,l),void 0!==(d=o(e._resolved,s))&&"object"!=typeof d?d:(void 0===(d=o(e._raw,s))&&(c=function(e,t){var n,a;if("root"!==t)return n=r(["supplemental/parentLocales/parentLocale",t]),(a=o(e._resolved,n)||o(e._raw,n))?a:(a=t.substr(0,t.lastIndexOf(e.localeSep)))?a:"root"}(e,n),d=t(e,c,i,a(l,{bundle:c}),n)),void 0!==d&&function(e,t,n){var a,r=e,o=t.length;for(a=0;a<o-1;a++)r[t[a]]||(r[t[a]]={}),r=r[t[a]];r[t[a]]=n}(e._resolved,s,d),d)};return e._raw={},e.load=function(){e._raw=n(e,e._raw,arguments)},e.prototype.get=function(t){return i(t,"path"),l(t,"path"),u(e,this.attributes&&this.attributes.bundle||"",t,this.attributes)},e._eventInit&&e._eventInit(),e})?a.apply(t,r):a)||(e.exports=o)},function(e,t,n){var a;
/*!
 * Globalize v1.4.0 2018-07-17T20:38Z Released under the MIT license
 * http://git.io/TrdQbw
 */
/*!
 * Globalize v1.4.0 2018-07-17T20:38Z Released under the MIT license
 * http://git.io/TrdQbw
 */
a=function(e){var t=function(e,t){return e=e.replace(/{[0-9a-zA-Z-_. ]+}/g,function(e){return e=e.replace(/^{([^}]*)}$/,"$1"),"string"==typeof(n=t[e])?n:"number"==typeof n?""+n:JSON.stringify(n);var n})},n=function(){var e=arguments[0];return[].slice.call(arguments,1).forEach(function(t){var n;for(n in t)e[n]=t[n]}),e},a=function(e,a,r){var o;return a=e+(a?": "+t(a,r):""),(o=new Error(a)).code=e,n(o,r),o},r=function(e){return JSON.stringify(e,function(e,t){return t&&t.runtimeKey?t.runtimeKey:t})},o=function(e,t,n,r){if(!n)throw a(e,t,r)},i=function(e){return Array.isArray(e)?e:e?[e]:[]},l=function(e,t,n){var a;a=i((n=n||{}).skip).some(function(t){return t.test(e)}),o("E_MISSING_CLDR","Missing required CLDR content `{path}`.",t||a,{path:e})},u=function(e,t){o("E_MISSING_PARAMETER","Missing required parameter `{name}`.",void 0!==e,{name:t})},s=function(e,t,n,a){o("E_INVALID_PAR_TYPE","Invalid `{name}` parameter ({value}). {expected} expected.",n,{expected:a,name:t,value:e})},c=function(t,n){s(t,n,void 0===t||"string"==typeof t||t instanceof e,"String or Cldr instance")},d=function(e){return null!==e&&""+e=="[object Object]"},p=function(t){return t instanceof e?t:new e(t)};function m(e){e.once("get",l),e.get("supplemental/likelySubtags")}function g(e){if(!(this instanceof g))return new g(e);u(e,"locale"),c(e,"locale"),this.cldr=p(e),m(this.cldr)}return g.load=function(){e.load.apply(e,arguments)},g.locale=function(e){return c(e,"locale"),arguments.length&&(this.cldr=p(e),m(this.cldr)),this.cldr},g._alwaysArray=i,g._createError=a,g._formatMessage=t,g._isPlainObject=d,g._objectExtend=n,g._regexpEscape=function(e){return e.replace(/([.*+?^=!:${}()|\[\]\/\\])/g,"\\$1")},g._runtimeBind=function(e,t,n,a){var o=r(e),i=function(e){if(void 0!==e.name)return e.name;var t=/^function\s+([\w\$]+)\s*\(/.exec(e.toString());return t&&t.length>0?t[1]:void 0}(n),l=t.locale;return i?(n.runtimeKey=function(e,t,n,a){var o,i;return a=a||r(n),i=e+t+a,(o=[].reduce.call(i,function(e,t){return 0|(e=(e<<5)-e+t.charCodeAt(0))},0))>0?"a"+o:"b"+Math.abs(o)}(i,l,null,o),n.generatorString=function(){return'Globalize("'+l+'").'+i+"("+o.slice(1,-1)+")"},n.runtimeArgs=a,n):n},g._stringPad=function(e,t,n){var a;for("string"!=typeof e&&(e=String(e)),a=e.length;a<t;a+=1)e=n?e+"0":"0"+e;return e},g._validate=o,g._validateCldr=l,g._validateDefaultLocale=function(e){o("E_DEFAULT_LOCALE_NOT_DEFINED","Default locale has not been defined.",void 0!==e,{})},g._validateParameterPresence=u,g._validateParameterRange=function(e,t,n,a){o("E_PAR_OUT_OF_RANGE","Parameter `{name}` has value `{value}` out of range [{minimum}, {maximum}].",void 0===e||e>=n&&e<=a,{maximum:a,minimum:n,name:t,value:e})},g._validateParameterTypePlainObject=function(e,t){s(e,t,void 0===e||d(e),"Plain Object")},g._validateParameterType=s,g},e.exports=a(n(31))},function(e,t,n){"use strict";n.d(t,"a",function(){return r}),n.d(t,"b",function(){return o}),n.d(t,"c",function(){return i});const a=/^[a-z]{2,3}(-[a-z0-9\-\_]+)?$/i;function r(e){const t=o(e).split("-");let n=t[0];const a=[n];for(let e=0;e<t.length-1;e+=1)n+="-"+t[e+1],a.push(n);return a}const o=function(){function e(e){return e.replace(/(\-|_)$/,"")}return function(t){const n=function(t){return-1===t.indexOf(".")?e(t):t.split(".").slice(0,-1).map(t=>e(t).replace(/_/g,"-")).join("-")}(t);if(!i(n))throw new Error(`${n} is not a valid locale.`);return n}}();function i(e){return a.test(e)}},function(e,t,n){"use strict";n.r(t);n(32);var a=n(33);var r=["af-NA","af","agq","ak","am","ar-AE","ar-BH","ar-DJ","ar-DZ","ar-EG","ar-EH","ar-ER","ar-IL","ar-IQ","ar-JO","ar-KM","ar-KW","ar-LB","ar-LY","ar-MA","ar-MR","ar-OM","ar-PS","ar-QA","ar-SA","ar-SD","ar-SO","ar-SS","ar-SY","ar-TD","ar-TN","ar-YE","ar","as","asa","ast","az-Cyrl","az-Latn","az","bas","be","bem","bez","bg","bm","bn-IN","bn","bo-IN","bo","br","brx","bs-Cyrl","bs-Latn","bs","ca-AD","ca-ES-VALENCIA","ca-FR","ca-IT","ca","ce","cgg","chr","ckb-IR","ckb","cs","cu","cy","da-GL","da","dav","de-AT","de-BE","de-CH","de-IT","de-LI","de-LU","de","dje","dsb","dua","dyo","dz","ebu","ee-TG","ee","el-CY","el","en-001","en-150","en-AG","en-AI","en-AS","en-AT","en-AU","en-BB","en-BE","en-BI","en-BM","en-BS","en-BW","en-BZ","en-CA","en-CC","en-CH","en-CK","en-CM","en-CX","en-CY","en-DE","en-DG","en-DK","en-DM","en-ER","en-FI","en-FJ","en-FK","en-FM","en-GB","en-GD","en-GG","en-GH","en-GI","en-GM","en-GU","en-GY","en-HK","en-IE","en-IL","en-IM","en-IN","en-IO","en-JE","en-JM","en-KE","en-KI","en-KN","en-KY","en-LC","en-LR","en-LS","en-MG","en-MH","en-MO","en-MP","en-MS","en-MT","en-MU","en-MW","en-MY","en-NA","en-NF","en-NG","en-NL","en-NR","en-NU","en-NZ","en-PG","en-PH","en-PK","en-PN","en-PR","en-PW","en-RW","en-SB","en-SC","en-SD","en-SE","en-SG","en-SH","en-SI","en-SL","en-SS","en-SX","en-SZ","en-TC","en-TK","en-TO","en-TT","en-TV","en-TZ","en-UG","en-UM","en-US-POSIX","en-VC","en-VG","en-VI","en-VU","en-WS","en-ZA","en-ZM","en-ZW","en","eo","es-419","es-AR","es-BO","es-BR","es-CL","es-CO","es-CR","es-CU","es-DO","es-EA","es-EC","es-GQ","es-GT","es-HN","es-IC","es-MX","es-NI","es-PA","es-PE","es-PH","es-PR","es-PY","es-SV","es-US","es-UY","es-VE","es","et","eu","ewo","fa-AF","fa","ff-CM","ff-GN","ff-MR","ff","fi","fil","fo-DK","fo","fr-BE","fr-BF","fr-BI","fr-BJ","fr-BL","fr-CA","fr-CD","fr-CF","fr-CG","fr-CH","fr-CI","fr-CM","fr-DJ","fr-DZ","fr-GA","fr-GF","fr-GN","fr-GP","fr-GQ","fr-HT","fr-KM","fr-LU","fr-MA","fr-MC","fr-MF","fr-MG","fr-ML","fr-MQ","fr-MR","fr-MU","fr-NC","fr-NE","fr-PF","fr-PM","fr-RE","fr-RW","fr-SC","fr-SN","fr-SY","fr-TD","fr-TG","fr-TN","fr-VU","fr-WF","fr-YT","fr","fur","fy","ga","gd","gl","gsw-FR","gsw-LI","gsw","gu","guz","gv","ha-GH","ha-NE","ha","haw","he","hi","hr-BA","hr","hsb","hu","hy","id","ig","ii","is","it-CH","it-SM","it","ja","jgo","jmc","ka","kab","kam","kde","kea","khq","ki","kk","kkj","kl","kln","km","kn","ko-KP","ko","kok","ks","ksb","ksf","ksh","kw","ky","lag","lb","lg","lkt","ln-AO","ln-CF","ln-CG","ln","lo","lrc-IQ","lrc","lt","lu","luo","luy","lv","mas-TZ","mas","mer","mfe","mg","mgh","mgo","mk","ml","mn","mr","ms-BN","ms-SG","ms","mt","mua","my","mzn","naq","nb-SJ","nb","nd","nds-NL","nds","ne-IN","ne","nl-AW","nl-BE","nl-BQ","nl-CW","nl-SR","nl-SX","nl","nmg","nn","nnh","nus","nyn","om-KE","om","or","os-RU","os","pa-Arab","pa-Guru","pa","pl","prg","ps","pt-AO","pt-CH","pt-CV","pt-GQ","pt-GW","pt-LU","pt-MO","pt-MZ","pt-PT","pt-ST","pt-TL","pt","qu-BO","qu-EC","qu","rm","rn","ro-MD","ro","rof","root","ru-BY","ru-KG","ru-KZ","ru-MD","ru-UA","ru","rw","rwk","sah","saq","sbp","se-FI","se-SE","se","seh","ses","sg","shi-Latn","shi-Tfng","shi","si","sk","sl","smn","sn","so-DJ","so-ET","so-KE","so","sq-MK","sq-XK","sq","sr-Cyrl-BA","sr-Cyrl-ME","sr-Cyrl-XK","sr-Cyrl","sr-Latn-BA","sr-Latn-ME","sr-Latn-XK","sr-Latn","sr","sv-AX","sv-FI","sv","sw-CD","sw-KE","sw-UG","sw","ta-LK","ta-MY","ta-SG","ta","te","teo-KE","teo","th","ti-ER","ti","tk","to","tr-CY","tr","twq","tzm","ug","uk","ur-IN","ur","uz-Arab","uz-Cyrl","uz-Latn","uz","vai-Latn","vai-Vaii","vai","vi","vo","vun","wae","xog","yav","yi","yo-BJ","yo","yue","zgh","zh-Hans-HK","zh-Hans-MO","zh-Hans-SG","zh-Hans","zh-Hant-HK","zh-Hant-MO","zh-Hant","zh","zu"],o=n(34);n.d(t,"mainPackages",function(){return i}),n.d(t,"supplementalPackages",function(){return l}),n.d(t,"isLoaded",function(){return p}),n.d(t,"default",function(){return m}),n.d(t,"reset",function(){return g});const i=Object.freeze(["dates/calendars/gregorian","dates/fields","dates/timeZoneNames","numbers","numbers/currencies","units"]),l=Object.freeze(["currencyData","likelySubtags","numberingSystems","plurals-type-cardinal","plurals-type-ordinal","timeData","weekData"]),u={main:Object.create(null),supplemental:s()};function s(){return l.reduce((e,t)=>(e[t]=!1,e),Object.create(null))}function c(e,t){return t.every(t=>{const n=e[t];return e=n,Boolean(n)})}function d(e){e&&Object.keys(e).forEach(t=>{if(r.indexOf(t)<0)return;let n=u.main[t];n||(n=u.main[t]=function(e,t){return t.reduce((e,t)=>{const n=t.split("/");return 1===n.length?(e[t]=!1,e):(n.reduce((e,t,a)=>("object"!=typeof e[t]&&(e[t]=a!==n.length-1&&Object.create(null)),e[t]),e),e)},e)}(Object.create(null),i)),function e(t,n){Object.keys(n).forEach(a=>{if(a in t){const r=t[a];"boolean"==typeof r?t[a]=!0:e(r,n[a])}})}(n,e[t])})}function p(e,...t){let n=u[e];if("main"===e&&t.length>0){const e=t[0];return!!Object(o.c)(e)&&(t=t.slice(1),Object(o.a)(e).some(e=>{const a=n[e];return!!a&&c(a,t)}))}return c(n,t)}function m(e){return d(e.main),function(e){if(!e)return;const t=u.supplemental;Object.keys(e).forEach(e=>{e in t&&(t[e]=!0)})}(e.supplemental),a.load(e),Promise.resolve()}function g(e){"supplemental"!==e&&(u.main=Object.create(null)),"main"!==e&&(u.supplemental=s())}},,,,,,,,,,,,function(e,t,n){var a;
/*!
 * Globalize v1.4.0 2018-07-17T20:38Z Released under the MIT license
 * http://git.io/TrdQbw
 */
/*!
 * Globalize v1.4.0 2018-07-17T20:38Z Released under the MIT license
 * http://git.io/TrdQbw
 */
a=function(e,t){var n,a=t._alwaysArray,r=t._createError,o=t._isPlainObject,i=t._runtimeBind,l=t._validateDefaultLocale,u=t._validate,s=t._validateParameterPresence,c=t._validateParameterType,d=t._validateParameterTypePlainObject;n=function(){
/** @file messageformat.js - ICU PluralFormat + SelectFormat for JavaScript
 *  @author Alex Sexton - @SlexAxton
 *  @version 0.3.0-1
 *  @copyright 2012-2015 Alex Sexton, Eemeli Aro, and Contributors
 *  @license To use or fork, MIT. To contribute back, Dojo CLA  */
function e(e,t){if(/^[A-Z_$][0-9A-Z_$]*$/i.test(e))return t?t+"."+e:e;var n=JSON.stringify(e);return t?t+"["+n+"]":n}function t(e,t,n){if(this.lc=[e],this.runtime.pluralFuncs={},this.runtime.pluralFuncs[this.lc[0]]=t,this.runtime.fmt={},n)for(var a in n)this.runtime.fmt[a]=n[a]}return t._parse=function(){function e(e,t,n,a,r,o){this.message=e,this.expected=t,this.found=n,this.offset=a,this.line=r,this.column=o,this.name="SyntaxError"}return function(e,t){function n(){this.constructor=e}n.prototype=t.prototype,e.prototype=new n}(e,Error),{SyntaxError:e,parse:function(t){var n,a=arguments.length>1?arguments[1]:{},r={},o={start:Oe},i=Oe,l=function(e){return{type:"messageFormatPattern",statements:e}},u=r,s="{",c={type:"literal",value:"{",description:'"{"'},d=null,p=",",m={type:"literal",value:",",description:'","'},g="}",h={type:"literal",value:"}",description:'"}"'},f=function(e,t){var n={type:"messageFormatElement",argumentIndex:e};return t&&t.length?n.elementFormat=t[1]:n.output=!0,n},L="plural",b={type:"literal",value:"plural",description:'"plural"'},Z=function(e,t){return{type:"elementFormat",key:e,val:t}},y="selectordinal",v={type:"literal",value:"selectordinal",description:'"selectordinal"'},k="select",R={type:"literal",value:"select",description:'"select"'},_=function(e,t){return{type:"elementFormat",key:e,val:t}},w=function(e,t){return{type:"pluralFormatPattern",pluralForms:t,offset:e||0}},j="offset",A={type:"literal",value:"offset",description:'"offset"'},C=":",N={type:"literal",value:":",description:'":"'},O=function(e){return e},I=function(e,t){return{key:e,val:t}},x=function(e){return e},M="=",P={type:"literal",value:"=",description:'"="'},E=function(e){return{type:"selectFormatPattern",pluralForms:e}},S=function(e){return e},T="#",D={type:"literal",value:"#",description:'"#"'},z=function(){return{type:"octothorpe"}},G=function(e){return{type:"string",val:e.join("")}},H={type:"other",description:"identifier"},B=/^[0-9a-zA-Z$_]/,K={type:"class",value:"[0-9a-zA-Z$_]",description:"[0-9a-zA-Z$_]"},F=/^[^ \t\n\r,.+={}]/,U={type:"class",value:"[^ \\t\\n\\r,.+={}]",description:"[^ \\t\\n\\r,.+={}]"},q=function(e){return e},W=function(e){return e.join("")},V=/^[^{}#\\\0-\x1F \t\n\r]/,$={type:"class",value:"[^{}#\\\\\\0-\\x1F \\t\\n\\r]",description:"[^{}#\\\\\\0-\\x1F \\t\\n\\r]"},Y=function(e){return e},J="\\\\",Q={type:"literal",value:"\\\\",description:'"\\\\\\\\"'},X=function(){return"\\"},ee="\\#",te={type:"literal",value:"\\#",description:'"\\\\#"'},ne=function(){return"#"},ae="\\{",re={type:"literal",value:"\\{",description:'"\\\\{"'},oe=function(){return"{"},ie="\\}",le={type:"literal",value:"\\}",description:'"\\\\}"'},ue=function(){return"}"},se="\\u",ce={type:"literal",value:"\\u",description:'"\\\\u"'},de=function(e,t,n,a){return String.fromCharCode(parseInt("0x"+e+t+n+a))},pe=/^[0-9]/,me={type:"class",value:"[0-9]",description:"[0-9]"},ge=function(e){return parseInt(e.join(""),10)},he=/^[0-9a-fA-F]/,fe={type:"class",value:"[0-9a-fA-F]",description:"[0-9a-fA-F]"},Le={type:"other",description:"whitespace"},be=function(e){return e.join("")},Ze=/^[ \t\n\r]/,ye={type:"class",value:"[ \\t\\n\\r]",description:"[ \\t\\n\\r]"},ve=0,ke=0,Re={line:1,column:1,seenCR:!1},_e=0,we=[],je=0;if("startRule"in a){if(!(a.startRule in o))throw new Error("Can't start parsing from rule \""+a.startRule+'".');i=o[a.startRule]}function Ae(e){return ke!==e&&(ke>e&&(ke=0,Re={line:1,column:1,seenCR:!1}),function(e,n,a){var r,o;for(r=n;r<a;r++)"\n"===(o=t.charAt(r))?(e.seenCR||e.line++,e.column=1,e.seenCR=!1):"\r"===o||"\u2028"===o||"\u2029"===o?(e.line++,e.column=1,e.seenCR=!0):(e.column++,e.seenCR=!1)}(Re,ke,e),ke=e),Re}function Ce(e){ve<_e||(ve>_e&&(_e=ve,we=[]),we.push(e))}function Ne(n,a,r){var o=Ae(r),i=r<t.length?t.charAt(r):null;return null!==a&&function(e){var t=1;for(e.sort(function(e,t){return e.description<t.description?-1:e.description>t.description?1:0});t<e.length;)e[t-1]===e[t]?e.splice(t,1):t++}(a),new e(null!==n?n:function(e,t){var n,a=new Array(e.length);for(n=0;n<e.length;n++)a[n]=e[n].description;return"Expected "+(e.length>1?a.slice(0,-1).join(", ")+" or "+a[e.length-1]:a[0])+" but "+(t?'"'+function(e){function t(e){return e.charCodeAt(0).toString(16).toUpperCase()}return e.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\x08/g,"\\b").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\f/g,"\\f").replace(/\r/g,"\\r").replace(/[\x00-\x07\x0B\x0E\x0F]/g,function(e){return"\\x0"+t(e)}).replace(/[\x10-\x1F\x80-\xFF]/g,function(e){return"\\x"+t(e)}).replace(/[\u0180-\u0FFF]/g,function(e){return"\\u0"+t(e)}).replace(/[\u1080-\uFFFF]/g,function(e){return"\\u"+t(e)})}(t)+'"':"end of input")+" found."}(a,i),a,i,r,o.line,o.column)}function Oe(){return Ie()}function Ie(){var e,t;for(ve,e=[],(t=xe())===r&&(t=De())===r&&(t=Te());t!==r;)e.push(t),(t=xe())===r&&(t=De())===r&&(t=Te());return e!==r&&(e=l(e)),e}function xe(){var e,n,a,o,i,l;return e=ve,123===t.charCodeAt(ve)?(n=s,ve++):(n=r,0===je&&Ce(c)),n!==r&&Fe()!==r&&(a=ze())!==r?(o=ve,44===t.charCodeAt(ve)?(i=p,ve++):(i=r,0===je&&Ce(m)),i!==r&&(l=function(){var e,n,a,o,i,l;if(e=ve,(n=Fe())!==r?(t.substr(ve,6)===L?(a=L,ve+=6):(a=r,0===je&&Ce(b)),a!==r&&(o=Fe())!==r?(44===t.charCodeAt(ve)?(i=p,ve++):(i=r,0===je&&Ce(m)),i!==r&&Fe()!==r&&(l=Me())!==r&&Fe()!==r?(n=Z(a,l),e=n):(ve=e,e=u)):(ve=e,e=u)):(ve=e,e=u),e===r&&(e=ve,(n=Fe())!==r?(t.substr(ve,13)===y?(a=y,ve+=13):(a=r,0===je&&Ce(v)),a!==r&&(o=Fe())!==r?(44===t.charCodeAt(ve)?(i=p,ve++):(i=r,0===je&&Ce(m)),i!==r&&Fe()!==r&&(l=Me())!==r&&Fe()!==r?(n=Z(a,l),e=n):(ve=e,e=u)):(ve=e,e=u)):(ve=e,e=u),e===r&&(e=ve,(n=Fe())!==r?(t.substr(ve,6)===k?(a=k,ve+=6):(a=r,0===je&&Ce(R)),a!==r&&(o=Fe())!==r?(44===t.charCodeAt(ve)?(i=p,ve++):(i=r,0===je&&Ce(m)),i!==r&&Fe()!==r&&(l=function(){var e,t;if(ve,e=[],(t=Ee())!==r)for(;t!==r;)e.push(t),t=Ee();else e=u;return e!==r&&(e=E(e)),e}())!==r&&Fe()!==r?(n=Z(a,l),e=n):(ve=e,e=u)):(ve=e,e=u)):(ve=e,e=u),e===r)))if(e=ve,(n=Fe())!==r)if((a=ze())!==r){for(o=[],i=Se();i!==r;)o.push(i),i=Se();o!==r?(n=_(a,o),e=n):(ve=e,e=u)}else ve=e,e=u;else ve=e,e=u;return e}())!==r?o=i=[i,l]:(ve=o,o=u),o===r&&(o=d),o!==r&&(i=Fe())!==r?(125===t.charCodeAt(ve)?(l=g,ve++):(l=r,0===je&&Ce(h)),l!==r?e=n=f(a,o):(ve=e,e=u)):(ve=e,e=u)):(ve=e,e=u),e}function Me(){var e,n,a,o;if(e=ve,(n=function(){var e,n,a,o,i;return e=ve,(n=Fe())!==r?(t.substr(ve,6)===j?(a=j,ve+=6):(a=r,0===je&&Ce(A)),a!==r&&Fe()!==r?(58===t.charCodeAt(ve)?(o=C,ve++):(o=r,0===je&&Ce(N)),o!==r&&Fe()!==r&&(i=Be())!==r&&Fe()!==r?(n=O(i),e=n):(ve=e,e=u)):(ve=e,e=u)):(ve=e,e=u),e}())===r&&(n=d),n!==r){if(a=[],(o=Pe())!==r)for(;o!==r;)a.push(o),o=Pe();else a=u;a!==r?e=n=w(n,a):(ve=e,e=u)}else ve=e,e=u;return e}function Pe(){var e,n,a,o,i;return e=ve,Fe()!==r&&(n=function(){var e,n,a;return e=ve,(n=ze())!==r&&(n=x(n)),(e=n)===r&&(e=ve,61===t.charCodeAt(ve)?(n=M,ve++):(n=r,0===je&&Ce(P)),n!==r&&(a=Be())!==r?(n=O(a),e=n):(ve=e,e=u)),e}())!==r&&Fe()!==r?(123===t.charCodeAt(ve)?(a=s,ve++):(a=r,0===je&&Ce(c)),a!==r&&Fe()!==r&&(o=Ie())!==r&&Fe()!==r?(125===t.charCodeAt(ve)?(i=g,ve++):(i=r,0===je&&Ce(h)),i!==r?e=I(n,o):(ve=e,e=u)):(ve=e,e=u)):(ve=e,e=u),e}function Ee(){var e,n,a,o,i;return e=ve,Fe()!==r&&(n=ze())!==r&&Fe()!==r?(123===t.charCodeAt(ve)?(a=s,ve++):(a=r,0===je&&Ce(c)),a!==r&&Fe()!==r&&(o=Ie())!==r&&Fe()!==r?(125===t.charCodeAt(ve)?(i=g,ve++):(i=r,0===je&&Ce(h)),i!==r?e=I(n,o):(ve=e,e=u)):(ve=e,e=u)):(ve=e,e=u),e}function Se(){var e,n,a;return e=ve,Fe()!==r?(44===t.charCodeAt(ve)?(n=p,ve++):(n=r,0===je&&Ce(m)),n!==r&&Fe()!==r&&(a=ze())!==r&&Fe()!==r?e=S(a):(ve=e,e=u)):(ve=e,e=u),e}function Te(){var e;return ve,35===t.charCodeAt(ve)?(e=T,ve++):(e=r,0===je&&Ce(D)),e!==r&&(e=z()),e}function De(){var e,t;if(ve,e=[],(t=Ge())===r&&(t=Ue()),t!==r)for(;t!==r;)e.push(t),(t=Ge())===r&&(t=Ue());else e=u;return e!==r&&(e=G(e)),e}function ze(){var e,n,a,o,i,l;if(je++,e=ve,Fe()!==r){if(n=ve,a=ve,B.test(t.charAt(ve))?(o=t.charAt(ve),ve++):(o=r,0===je&&Ce(K)),o!==r){for(i=[],F.test(t.charAt(ve))?(l=t.charAt(ve),ve++):(l=r,0===je&&Ce(U));l!==r;)i.push(l),F.test(t.charAt(ve))?(l=t.charAt(ve),ve++):(l=r,0===je&&Ce(U));i!==r?a=o=[o,i]:(ve=a,a=u)}else ve=a,a=u;a!==r&&(a=t.substring(n,ve)),(n=a)!==r&&(a=Fe())!==r?e=q(n):(ve=e,e=u)}else ve=e,e=u;return je--,e===r&&0===je&&Ce(H),e}function Ge(){var e,t;if(ve,e=[],(t=He())!==r)for(;t!==r;)e.push(t),t=He();else e=u;return e!==r&&(e=W(e)),e}function He(){var e,n,a,o,i,l;return e=ve,V.test(t.charAt(ve))?(n=t.charAt(ve),ve++):(n=r,0===je&&Ce($)),n!==r&&(n=Y(n)),(e=n)===r&&(e=ve,t.substr(ve,2)===J?(n=J,ve+=2):(n=r,0===je&&Ce(Q)),n!==r&&(n=X()),(e=n)===r&&(e=ve,t.substr(ve,2)===ee?(n=ee,ve+=2):(n=r,0===je&&Ce(te)),n!==r&&(n=ne()),(e=n)===r&&(e=ve,t.substr(ve,2)===ae?(n=ae,ve+=2):(n=r,0===je&&Ce(re)),n!==r&&(n=oe()),(e=n)===r&&(e=ve,t.substr(ve,2)===ie?(n=ie,ve+=2):(n=r,0===je&&Ce(le)),n!==r&&(n=ue()),(e=n)===r&&(e=ve,t.substr(ve,2)===se?(n=se,ve+=2):(n=r,0===je&&Ce(ce)),n!==r&&(a=Ke())!==r&&(o=Ke())!==r&&(i=Ke())!==r&&(l=Ke())!==r?e=n=de(a,o,i,l):(ve=e,e=u)))))),e}function Be(){var e,n;if(ve,e=[],pe.test(t.charAt(ve))?(n=t.charAt(ve),ve++):(n=r,0===je&&Ce(me)),n!==r)for(;n!==r;)e.push(n),pe.test(t.charAt(ve))?(n=t.charAt(ve),ve++):(n=r,0===je&&Ce(me));else e=u;return e!==r&&(e=ge(e)),e}function Ke(){var e;return he.test(t.charAt(ve))?(e=t.charAt(ve),ve++):(e=r,0===je&&Ce(fe)),e}function Fe(){var e,t,n;for(je++,e=ve,t=[],n=Ue();n!==r;)t.push(n),n=Ue();return t!==r&&(t=be(t)),je--,(e=t)===r&&(t=r,0===je&&Ce(Le)),e}function Ue(){var e;return Ze.test(t.charAt(ve))?(e=t.charAt(ve),ve++):(e=r,0===je&&Ce(ye)),e}if((n=i())!==r&&ve===t.length)return n;throw n!==r&&ve<t.length&&Ce({type:"end",description:"end of input"}),Ne(null,we,_e)}}}().parse,t.plurals={},t.formatters={},t.prototype.runtime={number:function(e,t){if(isNaN(e))throw new Error("'"+e+"' isn't a number.");return e-(t||0)},plural:function(e,t,n,a,r){if({}.hasOwnProperty.call(a,e))return a[e]();t&&(e-=t);var o=n(e,r);return o in a?a[o]():a.other()},select:function(e,t){return{}.hasOwnProperty.call(t,e)?t[e]():t.other()},pluralFuncs:{},fmt:{},toString:function(){var t=function(n,a){if("object"!=typeof n){var r=n.toString().replace(/^(function )\w*/,"$1");return(l=/([ \t]*)\S.*$/.exec(r))?r.replace(new RegExp("^"+l[1],"mg"),""):r}var o=[];for(var i in n)"toString"!=i&&(0==a?o.push("var "+i+" = "+t(n[i],a+1)+";\n"):o.push(e(i)+": "+t(n[i],a+1)));if(0==a)return o.join("");if(0==o.length)return"{}";for(var l="  ";--a;)l+="  ";return"{\n"+o.join(",\n").replace(/^/gm,l)+"\n}"};return t(this,0)}},t.prototype._precompile=function(n,a){a=a||{keys:{},offset:{}};var r,o,i=[],l=[];switch(n.type){case"messageFormatPattern":for(r=0;r<n.statements.length;++r)i.push(this._precompile(n.statements[r],a));return o=i.join(" + ")||'""',a.pf_count?o:"function(d) { return "+o+"; }";case"messageFormatElement":return a.pf_count=a.pf_count||0,n.output?e(n.argumentIndex,"d"):(a.keys[a.pf_count]=n.argumentIndex,this._precompile(n.elementFormat,a));case"elementFormat":switch(l=[e(a.keys[a.pf_count],"d")],n.key){case"select":return l.push(this._precompile(n.val,a)),"select("+l.join(", ")+")";case"selectordinal":return"plural("+(l=l.concat([0,e(this.lc[0],"pluralFuncs"),this._precompile(n.val,a),1])).join(", ")+")";case"plural":return a.offset[a.pf_count||0]=n.val.offset||0,"plural("+(l=l.concat([a.offset[a.pf_count]||0,e(this.lc[0],"pluralFuncs"),this._precompile(n.val,a)])).join(", ")+")";default:return this.withIntlSupport&&!(n.key in this.runtime.fmt)&&n.key in t.formatters&&(o=t.formatters[n.key],this.runtime.fmt[n.key]="function"==typeof o(this)?o(this):o),l.push(JSON.stringify(this.lc)),n.val&&n.val.length&&l.push(JSON.stringify(1==n.val.length?n.val[0]:n.val)),"fmt."+n.key+"("+l.join(", ")+")"}case"pluralFormatPattern":case"selectFormatPattern":a.pf_count=a.pf_count||0,"selectFormatPattern"==n.type&&(a.offset[a.pf_count]=0);var u=!0;for(r=0;r<n.pluralForms.length;++r){var s=n.pluralForms[r].key;"other"===s&&(u=!1);var c=JSON.parse(JSON.stringify(a));c.pf_count++,i.push(e(s)+": function() { return "+this._precompile(n.pluralForms[r].val,c)+";}")}if(u)throw new Error("No 'other' form found in "+n.type+" "+a.pf_count);return"{ "+i.join(", ")+" }";case"string":return JSON.stringify(n.val||"");case"octothorpe":return a.pf_count?(l=[e(a.keys[a.pf_count-1],"d")],a.offset[a.pf_count-1]&&l.push(a.offset[a.pf_count-1]),"number("+l.join(", ")+")"):'"#"';default:throw new Error("Bad AST type: "+n.type)}},t.prototype.compile=function(n,a){var r={},o=this.lc,i=function(e,n){try{var a=t._parse(n);return e._precompile(a)}catch(e){throw new Error((a?"Precompiler":"Parser")+" error: "+e.toString())}},l=function(t,n){if(n||(n=0),"object"!=typeof t)return t;for(var a=[],r="",o=0;o<n;++o)r+="  ";for(var i in t)a.push("\n"+r+"  "+e(i)+": "+l(t[i],n+1));return"{"+a.join(",")+"\n"+r+"}"};if("string"==typeof n)return new Function("number, plural, select, pluralFuncs, fmt","return "+i(this,n))(this.runtime.number,this.runtime.plural,this.runtime.select,this.runtime.pluralFuncs,this.runtime.fmt);for(var u in a=a||{},n)if(a.locale&&(this.lc=a.locale[u]&&[].concat(a.locale[u])||o),"string"==typeof n[u])try{r[u]=i(this,n[u])}catch(e){throw e.message=e.message.replace(":"," with `"+u+"`:"),e}else for(var s in r[u]={},n[u])try{r[u][s]=i(this,n[u][s])}catch(e){throw e.message=e.message.replace(":"," with `"+s+"` in `"+u+"`:"),e}this.lc=o;var c=this.runtime.toString()+"\n";switch(a.global||""){case"exports":var d=[];for(var p in r)d.push(e(p,"exports")+" = "+l(r[p]));return new Function(c+d.join(";\n"));case"module.exports":return new Function(c+"module.exports = "+l(r));case"":return new Function(c+"return "+l(r));default:return new Function("G",c+e(a.global,"G")+" = "+l(r))}},t}();var p=function(){return r("E_MISSING_PLURAL_MODULE","Plural module not loaded.")},m=function(e){return function(t){var n;return"number"!=typeof t&&"string"!=typeof t||(t=[].slice.call(arguments,0)),c(n=t,"variables",void 0===n||o(n)||Array.isArray(n),"Array or Plain Object"),e(t)}},g=function(e,t){var n=e.locale,a=t.toString;return t.toString=function(){var e,r={};return e=a.call(t),/number\(/.test(e)&&(r.number="messageFormat.number"),/plural\(/.test(e)&&(r.plural="messageFormat.plural"),/select\(/.test(e)&&(r.select="messageFormat.select"),e.replace(/pluralFuncs(\[([^\]]+)\]|\.([a-zA-Z]+))/,function(e){return r.pluralFuncs='{"'+n+'": Globalize("'+n+'").pluralGenerator()}',e}),"(function( "+Object.keys(r).join(", ")+" ) {\n  return "+e+"\n})("+Object.keys(r).map(function(e){return r[e]}).join(", ")+")"},t},h=[].slice;return t.loadMessages=function(t){var n,a={"globalize-messages":t,main:{}};for(n in s(t,"json"),d(t,"json"),t)t.hasOwnProperty(n)&&(a.main[n]={});e.load(a)},t.messageFormatter=t.prototype.messageFormatter=function(e){var t,r,o,d,f,L=h.call(arguments,0);return s(e,"path"),c(e,"path","string"==typeof e||Array.isArray(e),"a String nor an Array"),e=a(e),t=this.cldr,l(t),function(e){u("E_MISSING_MESSAGE_BUNDLE","Missing message bundle for locale `{locale}`.",e.attributes.bundle&&void 0!==e.get("globalize-messages/{bundle}"),{locale:e.locale})}(t),function(e,t){e=e.join("/"),u("E_MISSING_MESSAGE","Missing required message content `{path}`.",void 0!==t,{path:e})}(e,o=t.get(["globalize-messages/{bundle}"].concat(e))),Array.isArray(o)&&(o=o.join(" ")),function(e,t){e=e.join("/"),u("E_INVALID_MESSAGE","Invalid message content `{path}`. {expected} expected.","string"==typeof t,{expected:"a string",path:e})}(e,o),d=void 0!==this.plural?this.pluralGenerator():p,r=new n(t.locale,d).compile(o),f=m(r),i(L,t,f,[g(t,r),d]),f},t.formatMessage=t.prototype.formatMessage=function(e){return this.messageFormatter(e).apply({},h.call(arguments,1))},t},e.exports=a(n(31),n(33))},function(e,t,n){var a,r,o;
/*!
 * CLDR JavaScript Library v0.5.0 2017-08-11T11:52Z MIT license © Rafael Xavier
 * http://git.io/h4lmVg
 */r=[n(24)],void 0===(o="function"==typeof(a=function(e){var t,n=e._pathNormalize,a=e._validatePresence,r=e._validateType;
/*!
 * EventEmitter v4.2.7 - git.io/ee
 * Oliver Caldwell
 * MIT license
 * @preserve
 */t=function(){function e(){}var t=e.prototype,n={};function a(e,t){for(var n=e.length;n--;)if(e[n].listener===t)return n;return-1}function r(e){return function(){return this[e].apply(this,arguments)}}return t.getListeners=function(e){var t,n,a=this._getEvents();if(e instanceof RegExp)for(n in t={},a)a.hasOwnProperty(n)&&e.test(n)&&(t[n]=a[n]);else t=a[e]||(a[e]=[]);return t},t.flattenListeners=function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push(e[t].listener);return n},t.getListenersAsObject=function(e){var t,n=this.getListeners(e);return n instanceof Array&&((t={})[e]=n),t||n},t.addListener=function(e,t){var n,r=this.getListenersAsObject(e),o="object"==typeof t;for(n in r)r.hasOwnProperty(n)&&-1===a(r[n],t)&&r[n].push(o?t:{listener:t,once:!1});return this},t.on=r("addListener"),t.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},t.once=r("addOnceListener"),t.defineEvent=function(e){return this.getListeners(e),this},t.defineEvents=function(e){for(var t=0;t<e.length;t+=1)this.defineEvent(e[t]);return this},t.removeListener=function(e,t){var n,r,o=this.getListenersAsObject(e);for(r in o)o.hasOwnProperty(r)&&-1!==(n=a(o[r],t))&&o[r].splice(n,1);return this},t.off=r("removeListener"),t.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},t.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},t.manipulateListeners=function(e,t,n){var a,r,o=e?this.removeListener:this.addListener,i=e?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(a=n.length;a--;)o.call(this,t,n[a]);else for(a in t)t.hasOwnProperty(a)&&(r=t[a])&&("function"==typeof r?o.call(this,a,r):i.call(this,a,r));return this},t.removeEvent=function(e){var t,n=typeof e,a=this._getEvents();if("string"===n)delete a[e];else if(e instanceof RegExp)for(t in a)a.hasOwnProperty(t)&&e.test(t)&&delete a[t];else delete this._events;return this},t.removeAllListeners=r("removeEvent"),t.emitEvent=function(e,t){var n,a,r,o=this.getListenersAsObject(e);for(r in o)if(o.hasOwnProperty(r))for(a=o[r].length;a--;)!0===(n=o[r][a]).once&&this.removeListener(e,n.listener),n.listener.apply(this,t||[])===this._getOnceReturnValue()&&this.removeListener(e,n.listener);return this},t.trigger=r("emitEvent"),t.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},t.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},t._getOnceReturnValue=function(){return!this.hasOwnProperty("_onceReturnValue")||this._onceReturnValue},t._getEvents=function(){return this._events||(this._events={})},e.noConflict=function(){return n.EventEmitter=originalGlobalValue,e},e}();var o,i,l=function(e,t){r(e,t,void 0===e||"function"==typeof e,"Function")},u=new t;function s(e,t){return function(n,o){var i;return a(n,"event"),r(i=n,"event","string"==typeof i||i instanceof RegExp,"String or RegExp"),a(o,"listener"),l(o,"listener"),t[e].apply(t,arguments)}}function c(e){return s("off",e)}function d(e){return s("on",e)}function p(e){return s("once",e)}function m(){o=e.prototype.get,e.prototype.get=function(e){var t=o.apply(this,arguments);return e=n(e,this.attributes).join("/"),u.trigger("get",[e,t]),this.ee.trigger("get",[e,t]),t}}return e.off=c(u),e.on=d(u),e.once=p(u),i=e.prototype.init,e.prototype.init=function(){var e;this.ee=e=new t,this.off=c(e),this.on=d(e),this.once=p(e),i.apply(this,arguments)},e._eventInit=m,m(),e})?a.apply(t,r):a)||(e.exports=o)},function(e,t,n){var a,r,o;
/*!
 * CLDR JavaScript Library v0.5.0 2017-08-11T11:52Z MIT license © Rafael Xavier
 * http://git.io/h4lmVg
 */r=[n(24)],void 0===(o="function"==typeof(a=function(e){var t=e._alwaysArray,n=e.prototype.init;return e.prototype.init=function(){var e,a,r;n.apply(this,arguments),this.supplemental=(e=this,(r=(a=function(n){return function(a){return a=t(a),e.get([n].concat(a))}})("supplemental")).weekData=a("supplemental/weekData"),r.weekData.firstDay=function(){return e.get("supplemental/weekData/firstDay/{territory}")||e.get("supplemental/weekData/firstDay/001")},r.weekData.minDays=function(){var t=e.get("supplemental/weekData/minDays/{territory}")||e.get("supplemental/weekData/minDays/001");return parseInt(t,10)},r.timeData=a("supplemental/timeData"),r.timeData.allowed=function(){return e.get("supplemental/timeData/{territory}/_allowed")||e.get("supplemental/timeData/001/_allowed")},r.timeData.preferred=function(){return e.get("supplemental/timeData/{territory}/_preferred")||e.get("supplemental/timeData/001/_preferred")},r)},e})?a.apply(t,r):a)||(e.exports=o)},function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/todoItem",todoItem:"todoItem-m__todoItem__3mcsN",toggle:"todoItem-m__toggle__3m9j4",todoLabel:"todoItem-m__todoLabel__1dmyz",completed:"todoItem-m__completed__23_7M",destroy:"todoItem-m__destroy__2_vRS"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/todoCard",card:"todoCard-m__card__2IAwV",cardHeader:"todoCard-m__cardHeader__1B1xA",cardToggle:"todoCard-m__cardToggle__1ICT1",cardDestroy:"todoCard-m__cardDestroy__hBKRU",todoLabel:"todoCard-m__todoLabel__11444",completed:"todoCard-m__completed__3WEjD",listItem:"todoCard-m__listItem__yxzuD",destroyContainer:"todoCard-m__destroyContainer___LZ2N",destroy:"todoCard-m__destroy__3SdiZ"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/todoList",todoList:"todoList-m__todoList___yRMt",cardList:"todoList-m__cardList__1dkaX"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/todoDetails",todoDetails:"todoDetails-m__todoDetails__3puqB",title:"todoDetails-m__title__3adrQ",backdrop:"todoDetails-m__backdrop__17nHu",modal:"todoDetails-m__modal__IY1et",close:"todoDetails-m__close__CRx-F",todoDetailsHeader:"todoDetails-m__todoDetailsHeader__3qJio",todoDetailsTextArea:"todoDetails-m__todoDetailsTextArea__3Zl0D",lastUpdated:"todoDetails-m__lastUpdated__j0RWT",toggle:"todoDetails-m__toggle__1wJp7"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/themeSwitcher",themeSwitcher:"themeSwitcher-m__themeSwitcher__3Nioq",themeSwitcherCheckbox:"themeSwitcher-m__themeSwitcherCheckbox__3hY7s"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/App",todoapp:"App-m__todoapp__15fPw"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/todoSearch",search:"todoSearch-m__search__284M1",searchIcon:"todoSearch-m__searchIcon__1WeQC"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/todoHeader",title:"todoHeader-m__title__1ddPZ",newTodo:"todoHeader-m__newTodo__GzoDR",toggleAll:"todoHeader-m__toggleAll__2SAsF"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/todoList",todoList:"todoList-m__todoList__2A2yF",cardList:"todoList-m__cardList__7hQt6"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/todoFooter",footer:"todoFooter-m__footer__3Q86g"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/todoItem",todoItem:"todoItem-m__todoItem__24ptq",toggle:"todoItem-m__toggle__uF3dC",completed:"todoItem-m__completed__duVaf",destroy:"todoItem-m__destroy__cF2UT"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/todoCard",card:"todoCard-m__card__3B3WV",cardHeader:"todoCard-m__cardHeader__NwO_7",cardToggle:"todoCard-m__cardToggle__2Ts9J",cardDestroy:"todoCard-m__cardDestroy__1LlSd",completed:"todoCard-m__completed__2DopA",todoLabel:"todoCard-m__todoLabel__1dPem",listItem:"todoCard-m__listItem__2VOAZ",destroyContainer:"todoCard-m__destroyContainer__2z9c5"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/themeSwitcher",themeSwitcher:"themeSwitcher-m__themeSwitcher__1e3sW",themeSwitcherCheckbox:"themeSwitcher-m__themeSwitcherCheckbox__2WZ7t"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/todoDetails",backdrop:"todoDetails-m__backdrop__26cT_",modal:"todoDetails-m__modal__1ZNVF",close:"todoDetails-m__close__eloBz",todoDetailsHeader:"todoDetails-m__todoDetailsHeader__2ndjN",todoDetailsTextArea:"todoDetails-m__todoDetailsTextArea__1iZfg",lastUpdated:"todoDetails-m__lastUpdated__I1el4",toggle:"todoDetails-m__toggle__3hFWo"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/credits",footer:"credits-m__footer__vrjbx"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/todoHeader",title:"todoHeader-m__title__3tjiT",newTodo:"todoHeader-m__newTodo__3Rwh3",toggleAll:"todoHeader-m__toggleAll__15rbk"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/todoSearch",search:"todoSearch-m__search__1Z0gL",searchIcon:"todoSearch-m__searchIcon__yAaPh"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/todoViewSwitch",viewChooser:"todoViewSwitch-m__viewChooser__2_8sW",item:"todoViewSwitch-m__item__3Ke8e",active:"todoViewSwitch-m__active__2Cm5S",link:"todoViewSwitch-m__link__2jXUd",list:"todoViewSwitch-m__list__36pKk",cards:"todoViewSwitch-m__cards__2e0Am"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/todoFilter",filters:"todoFilter-m__filters__VIB1h",wrapper:"todoFilter-m__wrapper__QlUKs",link:"todoFilter-m__link__2Xe14",selected:"todoFilter-m__selected__wtlXP"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/todoFooter",footer:"todoFooter-m__footer__1ENEE",todoCountLabel:"todoFooter-m__todoCountLabel__15AWO",todoCount:"todoFooter-m__todoCount__3b7Tp",clearCompleted:"todoFooter-m__clearCompleted__15N1L"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/credits",footer:"credits-m__footer__4VW9V"}},,function(e,t,n){e.exports={" _key":"dojo2-todo-mvc-kitchensink/App",todoapp:"App-m__todoapp__1-Cbr",main:"App-m__main__2QTbx"}},,function(e,t,n){"use strict";var a=n(26),r=n(35).default,o=a.systemLocale,i=o.replace(/^([a-z]{2}).*/i,"$1"),l="en"===i||["en-PR"].some(function(e){return e===o||e===i});r({supplemental:{version:{_number:"$Revision: 12805 $",_unicodeVersion:"9.0.0",_cldrVersion:"30.0.3"},likelySubtags:{aa:"aa-Latn-ET",aai:"aai-Latn-ZZ",aak:"aak-Latn-ZZ",aau:"aau-Latn-ZZ",ab:"ab-Cyrl-GE",abi:"abi-Latn-ZZ",abr:"abr-Latn-GH",abt:"abt-Latn-ZZ",aby:"aby-Latn-ZZ",acd:"acd-Latn-ZZ",ace:"ace-Latn-ID",ach:"ach-Latn-UG",ada:"ada-Latn-GH",ade:"ade-Latn-ZZ",adj:"adj-Latn-ZZ",ady:"ady-Cyrl-RU",adz:"adz-Latn-ZZ",ae:"ae-Avst-IR",aeb:"aeb-Arab-TN",aey:"aey-Latn-ZZ",af:"af-Latn-ZA",agc:"agc-Latn-ZZ",agd:"agd-Latn-ZZ",agg:"agg-Latn-ZZ",agm:"agm-Latn-ZZ",ago:"ago-Latn-ZZ",agq:"agq-Latn-CM",aha:"aha-Latn-ZZ",ahl:"ahl-Latn-ZZ",aho:"aho-Ahom-IN",ajg:"ajg-Latn-ZZ",ak:"ak-Latn-GH",akk:"akk-Xsux-IQ",ala:"ala-Latn-ZZ",ali:"ali-Latn-ZZ",aln:"aln-Latn-XK",alt:"alt-Cyrl-RU",am:"am-Ethi-ET",amm:"amm-Latn-ZZ",amn:"amn-Latn-ZZ",amo:"amo-Latn-NG",amp:"amp-Latn-ZZ",anc:"anc-Latn-ZZ",ank:"ank-Latn-ZZ",ann:"ann-Latn-ZZ",any:"any-Latn-ZZ",aoj:"aoj-Latn-ZZ",aom:"aom-Latn-ZZ",aoz:"aoz-Latn-ID",apc:"apc-Arab-ZZ",apd:"apd-Arab-TG",ape:"ape-Latn-ZZ",apr:"apr-Latn-ZZ",aps:"aps-Latn-ZZ",apz:"apz-Latn-ZZ",ar:"ar-Arab-EG",arc:"arc-Armi-IR","arc-Nbat":"arc-Nbat-JO","arc-Palm":"arc-Palm-SY",arh:"arh-Latn-ZZ",arn:"arn-Latn-CL",aro:"aro-Latn-BO",arq:"arq-Arab-DZ",ary:"ary-Arab-MA",arz:"arz-Arab-EG",as:"as-Beng-IN",asa:"asa-Latn-TZ",ase:"ase-Sgnw-US",asg:"asg-Latn-ZZ",aso:"aso-Latn-ZZ",ast:"ast-Latn-ES",ata:"ata-Latn-ZZ",atg:"atg-Latn-ZZ",atj:"atj-Latn-CA",auy:"auy-Latn-ZZ",av:"av-Cyrl-RU",avl:"avl-Arab-ZZ",avn:"avn-Latn-ZZ",avt:"avt-Latn-ZZ",avu:"avu-Latn-ZZ",awa:"awa-Deva-IN",awb:"awb-Latn-ZZ",awo:"awo-Latn-ZZ",awx:"awx-Latn-ZZ",ay:"ay-Latn-BO",ayb:"ayb-Latn-ZZ",az:"az-Latn-AZ","az-Arab":"az-Arab-IR","az-IQ":"az-Arab-IQ","az-IR":"az-Arab-IR","az-RU":"az-Cyrl-RU",ba:"ba-Cyrl-RU",bal:"bal-Arab-PK",ban:"ban-Latn-ID",bap:"bap-Deva-NP",bar:"bar-Latn-AT",bas:"bas-Latn-CM",bav:"bav-Latn-ZZ",bax:"bax-Bamu-CM",bba:"bba-Latn-ZZ",bbb:"bbb-Latn-ZZ",bbc:"bbc-Latn-ID",bbd:"bbd-Latn-ZZ",bbj:"bbj-Latn-CM",bbp:"bbp-Latn-ZZ",bbr:"bbr-Latn-ZZ",bcf:"bcf-Latn-ZZ",bch:"bch-Latn-ZZ",bci:"bci-Latn-CI",bcm:"bcm-Latn-ZZ",bcn:"bcn-Latn-ZZ",bco:"bco-Latn-ZZ",bcq:"bcq-Ethi-ZZ",bcu:"bcu-Latn-ZZ",bdd:"bdd-Latn-ZZ",be:"be-Cyrl-BY",bef:"bef-Latn-ZZ",beh:"beh-Latn-ZZ",bej:"bej-Arab-SD",bem:"bem-Latn-ZM",bet:"bet-Latn-ZZ",bew:"bew-Latn-ID",bex:"bex-Latn-ZZ",bez:"bez-Latn-TZ",bfd:"bfd-Latn-CM",bfq:"bfq-Taml-IN",bft:"bft-Arab-PK",bfy:"bfy-Deva-IN",bg:"bg-Cyrl-BG",bgc:"bgc-Deva-IN",bgn:"bgn-Arab-PK",bgx:"bgx-Grek-TR",bhb:"bhb-Deva-IN",bhg:"bhg-Latn-ZZ",bhi:"bhi-Deva-IN",bhk:"bhk-Latn-PH",bhl:"bhl-Latn-ZZ",bho:"bho-Deva-IN",bhy:"bhy-Latn-ZZ",bi:"bi-Latn-VU",bib:"bib-Latn-ZZ",big:"big-Latn-ZZ",bik:"bik-Latn-PH",bim:"bim-Latn-ZZ",bin:"bin-Latn-NG",bio:"bio-Latn-ZZ",biq:"biq-Latn-ZZ",bjh:"bjh-Latn-ZZ",bji:"bji-Ethi-ZZ",bjj:"bjj-Deva-IN",bjn:"bjn-Latn-ID",bjo:"bjo-Latn-ZZ",bjr:"bjr-Latn-ZZ",bjz:"bjz-Latn-ZZ",bkc:"bkc-Latn-ZZ",bkm:"bkm-Latn-CM",bkq:"bkq-Latn-ZZ",bku:"bku-Latn-PH",bkv:"bkv-Latn-ZZ",blt:"blt-Tavt-VN",bm:"bm-Latn-ML",bmh:"bmh-Latn-ZZ",bmk:"bmk-Latn-ZZ",bmq:"bmq-Latn-ML",bmu:"bmu-Latn-ZZ",bn:"bn-Beng-BD",bng:"bng-Latn-ZZ",bnm:"bnm-Latn-ZZ",bnp:"bnp-Latn-ZZ",bo:"bo-Tibt-CN",boj:"boj-Latn-ZZ",bom:"bom-Latn-ZZ",bon:"bon-Latn-ZZ",bpy:"bpy-Beng-IN",bqc:"bqc-Latn-ZZ",bqi:"bqi-Arab-IR",bqp:"bqp-Latn-ZZ",bqv:"bqv-Latn-CI",br:"br-Latn-FR",bra:"bra-Deva-IN",brh:"brh-Arab-PK",brx:"brx-Deva-IN",brz:"brz-Latn-ZZ",bs:"bs-Latn-BA",bsj:"bsj-Latn-ZZ",bsq:"bsq-Bass-LR",bss:"bss-Latn-CM",bst:"bst-Ethi-ZZ",bto:"bto-Latn-PH",btt:"btt-Latn-ZZ",btv:"btv-Deva-PK",bua:"bua-Cyrl-RU",buc:"buc-Latn-YT",bud:"bud-Latn-ZZ",bug:"bug-Latn-ID",buk:"buk-Latn-ZZ",bum:"bum-Latn-CM",buo:"buo-Latn-ZZ",bus:"bus-Latn-ZZ",buu:"buu-Latn-ZZ",bvb:"bvb-Latn-GQ",bwd:"bwd-Latn-ZZ",bwr:"bwr-Latn-ZZ",bxh:"bxh-Latn-ZZ",bye:"bye-Latn-ZZ",byn:"byn-Ethi-ER",byr:"byr-Latn-ZZ",bys:"bys-Latn-ZZ",byv:"byv-Latn-CM",byx:"byx-Latn-ZZ",bza:"bza-Latn-ZZ",bze:"bze-Latn-ML",bzf:"bzf-Latn-ZZ",bzh:"bzh-Latn-ZZ",bzw:"bzw-Latn-ZZ",ca:"ca-Latn-ES",can:"can-Latn-ZZ",cbj:"cbj-Latn-ZZ",cch:"cch-Latn-NG",ccp:"ccp-Beng-IN","ccp-Cakm":"ccp-Cakm-BD",ce:"ce-Cyrl-RU",ceb:"ceb-Latn-PH",cfa:"cfa-Latn-ZZ",cgg:"cgg-Latn-UG",ch:"ch-Latn-GU",chk:"chk-Latn-FM",chm:"chm-Cyrl-RU",cho:"cho-Latn-US",chp:"chp-Latn-CA",chr:"chr-Cher-US",cja:"cja-Arab-KH",cjm:"cjm-Cham-VN",cjv:"cjv-Latn-ZZ",ckb:"ckb-Arab-IQ",ckl:"ckl-Latn-ZZ",cko:"cko-Latn-ZZ",cky:"cky-Latn-ZZ",cla:"cla-Latn-ZZ",cme:"cme-Latn-ZZ",co:"co-Latn-FR",cop:"cop-Copt-EG",cps:"cps-Latn-PH",cr:"cr-Cans-CA",crj:"crj-Cans-CA",crk:"crk-Cans-CA",crl:"crl-Cans-CA",crm:"crm-Cans-CA",crs:"crs-Latn-SC",cs:"cs-Latn-CZ",csb:"csb-Latn-PL",csw:"csw-Cans-CA",ctd:"ctd-Pauc-MM",cu:"cu-Cyrl-RU","cu-Glag":"cu-Glag-BG",cv:"cv-Cyrl-RU",cy:"cy-Latn-GB",da:"da-Latn-DK",dad:"dad-Latn-ZZ",daf:"daf-Latn-ZZ",dag:"dag-Latn-ZZ",dah:"dah-Latn-ZZ",dak:"dak-Latn-US",dar:"dar-Cyrl-RU",dav:"dav-Latn-KE",dbd:"dbd-Latn-ZZ",dbq:"dbq-Latn-ZZ",dcc:"dcc-Arab-IN",ddn:"ddn-Latn-ZZ",de:"de-Latn-DE",ded:"ded-Latn-ZZ",den:"den-Latn-CA",dga:"dga-Latn-ZZ",dgh:"dgh-Latn-ZZ",dgi:"dgi-Latn-ZZ",dgl:"dgl-Arab-ZZ",dgr:"dgr-Latn-CA",dgz:"dgz-Latn-ZZ",dia:"dia-Latn-ZZ",dje:"dje-Latn-NE",dnj:"dnj-Latn-CI",dob:"dob-Latn-ZZ",doi:"doi-Arab-IN",dop:"dop-Latn-ZZ",dow:"dow-Latn-ZZ",dri:"dri-Latn-ZZ",drs:"drs-Ethi-ZZ",dsb:"dsb-Latn-DE",dtm:"dtm-Latn-ML",dtp:"dtp-Latn-MY",dts:"dts-Latn-ZZ",dty:"dty-Deva-NP",dua:"dua-Latn-CM",duc:"duc-Latn-ZZ",dud:"dud-Latn-ZZ",dug:"dug-Latn-ZZ",dv:"dv-Thaa-MV",dva:"dva-Latn-ZZ",dww:"dww-Latn-ZZ",dyo:"dyo-Latn-SN",dyu:"dyu-Latn-BF",dz:"dz-Tibt-BT",dzg:"dzg-Latn-ZZ",ebu:"ebu-Latn-KE",ee:"ee-Latn-GH",efi:"efi-Latn-NG",egl:"egl-Latn-IT",egy:"egy-Egyp-EG",eky:"eky-Kali-MM",el:"el-Grek-GR",ema:"ema-Latn-ZZ",emi:"emi-Latn-ZZ",en:"en-Latn-US","en-Shaw":"en-Shaw-GB",enn:"enn-Latn-ZZ",enq:"enq-Latn-ZZ",eo:"eo-Latn-001",eri:"eri-Latn-ZZ",es:"es-Latn-ES",esu:"esu-Latn-US",et:"et-Latn-EE",etr:"etr-Latn-ZZ",ett:"ett-Ital-IT",etu:"etu-Latn-ZZ",etx:"etx-Latn-ZZ",eu:"eu-Latn-ES",ewo:"ewo-Latn-CM",ext:"ext-Latn-ES",fa:"fa-Arab-IR",faa:"faa-Latn-ZZ",fab:"fab-Latn-ZZ",fag:"fag-Latn-ZZ",fai:"fai-Latn-ZZ",fan:"fan-Latn-GQ",ff:"ff-Latn-SN","ff-Adlm":"ff-Adlm-GN",ffi:"ffi-Latn-ZZ",ffm:"ffm-Latn-ML",fi:"fi-Latn-FI",fia:"fia-Arab-SD",fil:"fil-Latn-PH",fit:"fit-Latn-SE",fj:"fj-Latn-FJ",flr:"flr-Latn-ZZ",fmp:"fmp-Latn-ZZ",fo:"fo-Latn-FO",fod:"fod-Latn-ZZ",fon:"fon-Latn-BJ",for:"for-Latn-ZZ",fpe:"fpe-Latn-ZZ",fqs:"fqs-Latn-ZZ",fr:"fr-Latn-FR",frc:"frc-Latn-US",frp:"frp-Latn-FR",frr:"frr-Latn-DE",frs:"frs-Latn-DE",fub:"fub-Arab-CM",fud:"fud-Latn-WF",fue:"fue-Latn-ZZ",fuf:"fuf-Latn-GN",fuh:"fuh-Latn-ZZ",fuq:"fuq-Latn-NE",fur:"fur-Latn-IT",fuv:"fuv-Latn-NG",fuy:"fuy-Latn-ZZ",fvr:"fvr-Latn-SD",fy:"fy-Latn-NL",ga:"ga-Latn-IE",gaa:"gaa-Latn-GH",gaf:"gaf-Latn-ZZ",gag:"gag-Latn-MD",gah:"gah-Latn-ZZ",gaj:"gaj-Latn-ZZ",gam:"gam-Latn-ZZ",gan:"gan-Hans-CN",gaw:"gaw-Latn-ZZ",gay:"gay-Latn-ID",gbf:"gbf-Latn-ZZ",gbm:"gbm-Deva-IN",gby:"gby-Latn-ZZ",gbz:"gbz-Arab-IR",gcr:"gcr-Latn-GF",gd:"gd-Latn-GB",gde:"gde-Latn-ZZ",gdn:"gdn-Latn-ZZ",gdr:"gdr-Latn-ZZ",geb:"geb-Latn-ZZ",gej:"gej-Latn-ZZ",gel:"gel-Latn-ZZ",gez:"gez-Ethi-ET",gfk:"gfk-Latn-ZZ",ggn:"ggn-Deva-NP",ghs:"ghs-Latn-ZZ",gil:"gil-Latn-KI",gim:"gim-Latn-ZZ",gjk:"gjk-Arab-PK",gjn:"gjn-Latn-ZZ",gju:"gju-Arab-PK",gkn:"gkn-Latn-ZZ",gkp:"gkp-Latn-ZZ",gl:"gl-Latn-ES",glk:"glk-Arab-IR",gmm:"gmm-Latn-ZZ",gmv:"gmv-Ethi-ZZ",gn:"gn-Latn-PY",gnd:"gnd-Latn-ZZ",gng:"gng-Latn-ZZ",god:"god-Latn-ZZ",gof:"gof-Ethi-ZZ",goi:"goi-Latn-ZZ",gom:"gom-Deva-IN",gon:"gon-Telu-IN",gor:"gor-Latn-ID",gos:"gos-Latn-NL",got:"got-Goth-UA",grc:"grc-Cprt-CY","grc-Linb":"grc-Linb-GR",grt:"grt-Beng-IN",grw:"grw-Latn-ZZ",gsw:"gsw-Latn-CH",gu:"gu-Gujr-IN",gub:"gub-Latn-BR",guc:"guc-Latn-CO",gud:"gud-Latn-ZZ",gur:"gur-Latn-GH",guw:"guw-Latn-ZZ",gux:"gux-Latn-ZZ",guz:"guz-Latn-KE",gv:"gv-Latn-IM",gvf:"gvf-Latn-ZZ",gvr:"gvr-Deva-NP",gvs:"gvs-Latn-ZZ",gwc:"gwc-Arab-ZZ",gwi:"gwi-Latn-CA",gwt:"gwt-Arab-ZZ",gyi:"gyi-Latn-ZZ",ha:"ha-Latn-NG","ha-CM":"ha-Arab-CM","ha-SD":"ha-Arab-SD",hag:"hag-Latn-ZZ",hak:"hak-Hans-CN",ham:"ham-Latn-ZZ",haw:"haw-Latn-US",haz:"haz-Arab-AF",hbb:"hbb-Latn-ZZ",hdy:"hdy-Ethi-ZZ",he:"he-Hebr-IL",hhy:"hhy-Latn-ZZ",hi:"hi-Deva-IN",hia:"hia-Latn-ZZ",hif:"hif-Latn-FJ",hig:"hig-Latn-ZZ",hih:"hih-Latn-ZZ",hil:"hil-Latn-PH",hla:"hla-Latn-ZZ",hlu:"hlu-Hluw-TR",hmd:"hmd-Plrd-CN",hmt:"hmt-Latn-ZZ",hnd:"hnd-Arab-PK",hne:"hne-Deva-IN",hnj:"hnj-Hmng-LA",hnn:"hnn-Latn-PH",hno:"hno-Arab-PK",ho:"ho-Latn-PG",hoc:"hoc-Deva-IN",hoj:"hoj-Deva-IN",hot:"hot-Latn-ZZ",hr:"hr-Latn-HR",hsb:"hsb-Latn-DE",hsn:"hsn-Hans-CN",ht:"ht-Latn-HT",hu:"hu-Latn-HU",hui:"hui-Latn-ZZ",hy:"hy-Armn-AM",hz:"hz-Latn-NA",ia:"ia-Latn-FR",ian:"ian-Latn-ZZ",iar:"iar-Latn-ZZ",iba:"iba-Latn-MY",ibb:"ibb-Latn-NG",iby:"iby-Latn-ZZ",ica:"ica-Latn-ZZ",ich:"ich-Latn-ZZ",id:"id-Latn-ID",idd:"idd-Latn-ZZ",idi:"idi-Latn-ZZ",idu:"idu-Latn-ZZ",ig:"ig-Latn-NG",igb:"igb-Latn-ZZ",ige:"ige-Latn-ZZ",ii:"ii-Yiii-CN",ijj:"ijj-Latn-ZZ",ik:"ik-Latn-US",ikk:"ikk-Latn-ZZ",ikt:"ikt-Latn-CA",ikw:"ikw-Latn-ZZ",ikx:"ikx-Latn-ZZ",ilo:"ilo-Latn-PH",imo:"imo-Latn-ZZ",in:"in-Latn-ID",inh:"inh-Cyrl-RU",iou:"iou-Latn-ZZ",iri:"iri-Latn-ZZ",is:"is-Latn-IS",it:"it-Latn-IT",iu:"iu-Cans-CA",iw:"iw-Hebr-IL",iwm:"iwm-Latn-ZZ",iws:"iws-Latn-ZZ",izh:"izh-Latn-RU",izi:"izi-Latn-ZZ",ja:"ja-Jpan-JP",jab:"jab-Latn-ZZ",jam:"jam-Latn-JM",jbu:"jbu-Latn-ZZ",jen:"jen-Latn-ZZ",jgk:"jgk-Latn-ZZ",jgo:"jgo-Latn-CM",ji:"ji-Hebr-UA",jib:"jib-Latn-ZZ",jmc:"jmc-Latn-TZ",jml:"jml-Deva-NP",jra:"jra-Latn-ZZ",jut:"jut-Latn-DK",jv:"jv-Latn-ID",jw:"jw-Latn-ID",ka:"ka-Geor-GE",kaa:"kaa-Cyrl-UZ",kab:"kab-Latn-DZ",kac:"kac-Latn-MM",kad:"kad-Latn-ZZ",kai:"kai-Latn-ZZ",kaj:"kaj-Latn-NG",kam:"kam-Latn-KE",kao:"kao-Latn-ML",kbd:"kbd-Cyrl-RU",kbm:"kbm-Latn-ZZ",kbp:"kbp-Latn-ZZ",kbq:"kbq-Latn-ZZ",kbx:"kbx-Latn-ZZ",kby:"kby-Arab-NE",kcg:"kcg-Latn-NG",kck:"kck-Latn-ZW",kcl:"kcl-Latn-ZZ",kct:"kct-Latn-ZZ",kde:"kde-Latn-TZ",kdh:"kdh-Arab-TG",kdl:"kdl-Latn-ZZ",kdt:"kdt-Thai-TH",kea:"kea-Latn-CV",ken:"ken-Latn-CM",kez:"kez-Latn-ZZ",kfo:"kfo-Latn-CI",kfr:"kfr-Deva-IN",kfy:"kfy-Deva-IN",kg:"kg-Latn-CD",kge:"kge-Latn-ID",kgf:"kgf-Latn-ZZ",kgp:"kgp-Latn-BR",kha:"kha-Latn-IN",khb:"khb-Talu-CN",khn:"khn-Deva-IN",khq:"khq-Latn-ML",khs:"khs-Latn-ZZ",kht:"kht-Mymr-IN",khw:"khw-Arab-PK",khz:"khz-Latn-ZZ",ki:"ki-Latn-KE",kij:"kij-Latn-ZZ",kiu:"kiu-Latn-TR",kiw:"kiw-Latn-ZZ",kj:"kj-Latn-NA",kjd:"kjd-Latn-ZZ",kjg:"kjg-Laoo-LA",kjs:"kjs-Latn-ZZ",kjy:"kjy-Latn-ZZ",kk:"kk-Cyrl-KZ","kk-AF":"kk-Arab-AF","kk-Arab":"kk-Arab-CN","kk-CN":"kk-Arab-CN","kk-IR":"kk-Arab-IR","kk-MN":"kk-Arab-MN",kkc:"kkc-Latn-ZZ",kkj:"kkj-Latn-CM",kl:"kl-Latn-GL",kln:"kln-Latn-KE",klq:"klq-Latn-ZZ",klt:"klt-Latn-ZZ",klx:"klx-Latn-ZZ",km:"km-Khmr-KH",kmb:"kmb-Latn-AO",kmh:"kmh-Latn-ZZ",kmo:"kmo-Latn-ZZ",kms:"kms-Latn-ZZ",kmu:"kmu-Latn-ZZ",kmw:"kmw-Latn-ZZ",kn:"kn-Knda-IN",knp:"knp-Latn-ZZ",ko:"ko-Kore-KR",koi:"koi-Cyrl-RU",kok:"kok-Deva-IN",kol:"kol-Latn-ZZ",kos:"kos-Latn-FM",koz:"koz-Latn-ZZ",kpe:"kpe-Latn-LR",kpf:"kpf-Latn-ZZ",kpo:"kpo-Latn-ZZ",kpr:"kpr-Latn-ZZ",kpx:"kpx-Latn-ZZ",kqb:"kqb-Latn-ZZ",kqf:"kqf-Latn-ZZ",kqs:"kqs-Latn-ZZ",kqy:"kqy-Ethi-ZZ",krc:"krc-Cyrl-RU",kri:"kri-Latn-SL",krj:"krj-Latn-PH",krl:"krl-Latn-RU",krs:"krs-Latn-ZZ",kru:"kru-Deva-IN",ks:"ks-Arab-IN",ksb:"ksb-Latn-TZ",ksd:"ksd-Latn-ZZ",ksf:"ksf-Latn-CM",ksh:"ksh-Latn-DE",ksj:"ksj-Latn-ZZ",ksr:"ksr-Latn-ZZ",ktb:"ktb-Ethi-ZZ",ktm:"ktm-Latn-ZZ",kto:"kto-Latn-ZZ",ku:"ku-Latn-TR","ku-Arab":"ku-Arab-IQ","ku-LB":"ku-Arab-LB",kub:"kub-Latn-ZZ",kud:"kud-Latn-ZZ",kue:"kue-Latn-ZZ",kuj:"kuj-Latn-ZZ",kum:"kum-Cyrl-RU",kun:"kun-Latn-ZZ",kup:"kup-Latn-ZZ",kus:"kus-Latn-ZZ",kv:"kv-Cyrl-RU",kvg:"kvg-Latn-ZZ",kvr:"kvr-Latn-ID",kvx:"kvx-Arab-PK",kw:"kw-Latn-GB",kwj:"kwj-Latn-ZZ",kwo:"kwo-Latn-ZZ",kxa:"kxa-Latn-ZZ",kxc:"kxc-Ethi-ZZ",kxm:"kxm-Thai-TH",kxp:"kxp-Arab-PK",kxw:"kxw-Latn-ZZ",kxz:"kxz-Latn-ZZ",ky:"ky-Cyrl-KG","ky-Arab":"ky-Arab-CN","ky-CN":"ky-Arab-CN","ky-Latn":"ky-Latn-TR","ky-TR":"ky-Latn-TR",kye:"kye-Latn-ZZ",kyx:"kyx-Latn-ZZ",kzr:"kzr-Latn-ZZ",la:"la-Latn-VA",lab:"lab-Lina-GR",lad:"lad-Hebr-IL",lag:"lag-Latn-TZ",lah:"lah-Arab-PK",laj:"laj-Latn-UG",las:"las-Latn-ZZ",lb:"lb-Latn-LU",lbe:"lbe-Cyrl-RU",lbu:"lbu-Latn-ZZ",lbw:"lbw-Latn-ID",lcm:"lcm-Latn-ZZ",lcp:"lcp-Thai-CN",ldb:"ldb-Latn-ZZ",led:"led-Latn-ZZ",lee:"lee-Latn-ZZ",lem:"lem-Latn-ZZ",lep:"lep-Lepc-IN",leq:"leq-Latn-ZZ",leu:"leu-Latn-ZZ",lez:"lez-Cyrl-RU",lg:"lg-Latn-UG",lgg:"lgg-Latn-ZZ",li:"li-Latn-NL",lia:"lia-Latn-ZZ",lid:"lid-Latn-ZZ",lif:"lif-Deva-NP","lif-Limb":"lif-Limb-IN",lig:"lig-Latn-ZZ",lih:"lih-Latn-ZZ",lij:"lij-Latn-IT",lis:"lis-Lisu-CN",ljp:"ljp-Latn-ID",lki:"lki-Arab-IR",lkt:"lkt-Latn-US",lle:"lle-Latn-ZZ",lln:"lln-Latn-ZZ",lmn:"lmn-Telu-IN",lmo:"lmo-Latn-IT",lmp:"lmp-Latn-ZZ",ln:"ln-Latn-CD",lns:"lns-Latn-ZZ",lnu:"lnu-Latn-ZZ",lo:"lo-Laoo-LA",loj:"loj-Latn-ZZ",lok:"lok-Latn-ZZ",lol:"lol-Latn-CD",lor:"lor-Latn-ZZ",los:"los-Latn-ZZ",loz:"loz-Latn-ZM",lrc:"lrc-Arab-IR",lt:"lt-Latn-LT",ltg:"ltg-Latn-LV",lu:"lu-Latn-CD",lua:"lua-Latn-CD",luo:"luo-Latn-KE",luy:"luy-Latn-KE",luz:"luz-Arab-IR",lv:"lv-Latn-LV",lwl:"lwl-Thai-TH",lzh:"lzh-Hans-CN",lzz:"lzz-Latn-TR",mad:"mad-Latn-ID",maf:"maf-Latn-CM",mag:"mag-Deva-IN",mai:"mai-Deva-IN",mak:"mak-Latn-ID",man:"man-Latn-GM","man-GN":"man-Nkoo-GN","man-Nkoo":"man-Nkoo-GN",mas:"mas-Latn-KE",maw:"maw-Latn-ZZ",maz:"maz-Latn-MX",mbh:"mbh-Latn-ZZ",mbo:"mbo-Latn-ZZ",mbq:"mbq-Latn-ZZ",mbu:"mbu-Latn-ZZ",mbw:"mbw-Latn-ZZ",mci:"mci-Latn-ZZ",mcp:"mcp-Latn-ZZ",mcq:"mcq-Latn-ZZ",mcr:"mcr-Latn-ZZ",mcu:"mcu-Latn-ZZ",mda:"mda-Latn-ZZ",mde:"mde-Arab-ZZ",mdf:"mdf-Cyrl-RU",mdh:"mdh-Latn-PH",mdj:"mdj-Latn-ZZ",mdr:"mdr-Latn-ID",mdx:"mdx-Ethi-ZZ",med:"med-Latn-ZZ",mee:"mee-Latn-ZZ",mek:"mek-Latn-ZZ",men:"men-Latn-SL",mer:"mer-Latn-KE",met:"met-Latn-ZZ",meu:"meu-Latn-ZZ",mfa:"mfa-Arab-TH",mfe:"mfe-Latn-MU",mfn:"mfn-Latn-ZZ",mfo:"mfo-Latn-ZZ",mfq:"mfq-Latn-ZZ",mg:"mg-Latn-MG",mgh:"mgh-Latn-MZ",mgl:"mgl-Latn-ZZ",mgo:"mgo-Latn-CM",mgp:"mgp-Deva-NP",mgy:"mgy-Latn-TZ",mh:"mh-Latn-MH",mhi:"mhi-Latn-ZZ",mhl:"mhl-Latn-ZZ",mi:"mi-Latn-NZ",mif:"mif-Latn-ZZ",min:"min-Latn-ID",mis:"mis-Hatr-IQ",miw:"miw-Latn-ZZ",mk:"mk-Cyrl-MK",mki:"mki-Arab-ZZ",mkl:"mkl-Latn-ZZ",mkp:"mkp-Latn-ZZ",mkw:"mkw-Latn-ZZ",ml:"ml-Mlym-IN",mle:"mle-Latn-ZZ",mlp:"mlp-Latn-ZZ",mls:"mls-Latn-SD",mmo:"mmo-Latn-ZZ",mmu:"mmu-Latn-ZZ",mmx:"mmx-Latn-ZZ",mn:"mn-Cyrl-MN","mn-CN":"mn-Mong-CN","mn-Mong":"mn-Mong-CN",mna:"mna-Latn-ZZ",mnf:"mnf-Latn-ZZ",mni:"mni-Beng-IN",mnw:"mnw-Mymr-MM",moa:"moa-Latn-ZZ",moe:"moe-Latn-CA",moh:"moh-Latn-CA",mos:"mos-Latn-BF",mox:"mox-Latn-ZZ",mpp:"mpp-Latn-ZZ",mps:"mps-Latn-ZZ",mpt:"mpt-Latn-ZZ",mpx:"mpx-Latn-ZZ",mql:"mql-Latn-ZZ",mr:"mr-Deva-IN",mrd:"mrd-Deva-NP",mrj:"mrj-Cyrl-RU",mro:"mro-Mroo-BD",ms:"ms-Latn-MY","ms-CC":"ms-Arab-CC","ms-ID":"ms-Arab-ID",mt:"mt-Latn-MT",mtc:"mtc-Latn-ZZ",mtf:"mtf-Latn-ZZ",mti:"mti-Latn-ZZ",mtr:"mtr-Deva-IN",mua:"mua-Latn-CM",mur:"mur-Latn-ZZ",mus:"mus-Latn-US",mva:"mva-Latn-ZZ",mvn:"mvn-Latn-ZZ",mvy:"mvy-Arab-PK",mwk:"mwk-Latn-ML",mwr:"mwr-Deva-IN",mwv:"mwv-Latn-ID",mxc:"mxc-Latn-ZW",mxm:"mxm-Latn-ZZ",my:"my-Mymr-MM",myk:"myk-Latn-ZZ",mym:"mym-Ethi-ZZ",myv:"myv-Cyrl-RU",myw:"myw-Latn-ZZ",myx:"myx-Latn-UG",myz:"myz-Mand-IR",mzk:"mzk-Latn-ZZ",mzm:"mzm-Latn-ZZ",mzn:"mzn-Arab-IR",mzp:"mzp-Latn-ZZ",mzw:"mzw-Latn-ZZ",mzz:"mzz-Latn-ZZ",na:"na-Latn-NR",nac:"nac-Latn-ZZ",naf:"naf-Latn-ZZ",nak:"nak-Latn-ZZ",nan:"nan-Hans-CN",nap:"nap-Latn-IT",naq:"naq-Latn-NA",nas:"nas-Latn-ZZ",nb:"nb-Latn-NO",nca:"nca-Latn-ZZ",nce:"nce-Latn-ZZ",ncf:"ncf-Latn-ZZ",nch:"nch-Latn-MX",nco:"nco-Latn-ZZ",ncu:"ncu-Latn-ZZ",nd:"nd-Latn-ZW",ndc:"ndc-Latn-MZ",nds:"nds-Latn-DE",ne:"ne-Deva-NP",neb:"neb-Latn-ZZ",new:"new-Deva-NP",nex:"nex-Latn-ZZ",nfr:"nfr-Latn-ZZ",ng:"ng-Latn-NA",nga:"nga-Latn-ZZ",ngb:"ngb-Latn-ZZ",ngl:"ngl-Latn-MZ",nhb:"nhb-Latn-ZZ",nhe:"nhe-Latn-MX",nhw:"nhw-Latn-MX",nif:"nif-Latn-ZZ",nii:"nii-Latn-ZZ",nij:"nij-Latn-ID",nin:"nin-Latn-ZZ",niu:"niu-Latn-NU",niy:"niy-Latn-ZZ",niz:"niz-Latn-ZZ",njo:"njo-Latn-IN",nkg:"nkg-Latn-ZZ",nko:"nko-Latn-ZZ",nl:"nl-Latn-NL",nmg:"nmg-Latn-CM",nmz:"nmz-Latn-ZZ",nn:"nn-Latn-NO",nnf:"nnf-Latn-ZZ",nnh:"nnh-Latn-CM",nnk:"nnk-Latn-ZZ",nnm:"nnm-Latn-ZZ",no:"no-Latn-NO",nod:"nod-Lana-TH",noe:"noe-Deva-IN",non:"non-Runr-SE",nop:"nop-Latn-ZZ",nou:"nou-Latn-ZZ",nqo:"nqo-Nkoo-GN",nr:"nr-Latn-ZA",nrb:"nrb-Latn-ZZ",nsk:"nsk-Cans-CA",nsn:"nsn-Latn-ZZ",nso:"nso-Latn-ZA",nss:"nss-Latn-ZZ",ntm:"ntm-Latn-ZZ",ntr:"ntr-Latn-ZZ",nui:"nui-Latn-ZZ",nup:"nup-Latn-ZZ",nus:"nus-Latn-SS",nuv:"nuv-Latn-ZZ",nux:"nux-Latn-ZZ",nv:"nv-Latn-US",nwb:"nwb-Latn-ZZ",nxq:"nxq-Latn-CN",nxr:"nxr-Latn-ZZ",ny:"ny-Latn-MW",nym:"nym-Latn-TZ",nyn:"nyn-Latn-UG",nzi:"nzi-Latn-GH",oc:"oc-Latn-FR",ogc:"ogc-Latn-ZZ",okr:"okr-Latn-ZZ",okv:"okv-Latn-ZZ",om:"om-Latn-ET",ong:"ong-Latn-ZZ",onn:"onn-Latn-ZZ",ons:"ons-Latn-ZZ",opm:"opm-Latn-ZZ",or:"or-Orya-IN",oro:"oro-Latn-ZZ",oru:"oru-Arab-ZZ",os:"os-Cyrl-GE",osa:"osa-Osge-US",ota:"ota-Arab-ZZ",otk:"otk-Orkh-MN",ozm:"ozm-Latn-ZZ",pa:"pa-Guru-IN","pa-Arab":"pa-Arab-PK","pa-PK":"pa-Arab-PK",pag:"pag-Latn-PH",pal:"pal-Phli-IR","pal-Phlp":"pal-Phlp-CN",pam:"pam-Latn-PH",pap:"pap-Latn-AW",pau:"pau-Latn-PW",pbi:"pbi-Latn-ZZ",pcd:"pcd-Latn-FR",pcm:"pcm-Latn-NG",pdc:"pdc-Latn-US",pdt:"pdt-Latn-CA",ped:"ped-Latn-ZZ",peo:"peo-Xpeo-IR",pex:"pex-Latn-ZZ",pfl:"pfl-Latn-DE",phl:"phl-Arab-ZZ",phn:"phn-Phnx-LB",pil:"pil-Latn-ZZ",pip:"pip-Latn-ZZ",pka:"pka-Brah-IN",pko:"pko-Latn-KE",pl:"pl-Latn-PL",pla:"pla-Latn-ZZ",pms:"pms-Latn-IT",png:"png-Latn-ZZ",pnn:"pnn-Latn-ZZ",pnt:"pnt-Grek-GR",pon:"pon-Latn-FM",ppo:"ppo-Latn-ZZ",pra:"pra-Khar-PK",prd:"prd-Arab-IR",prg:"prg-Latn-001",ps:"ps-Arab-AF",pss:"pss-Latn-ZZ",pt:"pt-Latn-BR",ptp:"ptp-Latn-ZZ",puu:"puu-Latn-GA",pwa:"pwa-Latn-ZZ",qu:"qu-Latn-PE",quc:"quc-Latn-GT",qug:"qug-Latn-EC",rai:"rai-Latn-ZZ",raj:"raj-Deva-IN",rao:"rao-Latn-ZZ",rcf:"rcf-Latn-RE",rej:"rej-Latn-ID",rel:"rel-Latn-ZZ",res:"res-Latn-ZZ",rgn:"rgn-Latn-IT",rhg:"rhg-Arab-ZZ",ria:"ria-Latn-IN",rif:"rif-Tfng-MA","rif-NL":"rif-Latn-NL",rjs:"rjs-Deva-NP",rkt:"rkt-Beng-BD",rm:"rm-Latn-CH",rmf:"rmf-Latn-FI",rmo:"rmo-Latn-CH",rmt:"rmt-Arab-IR",rmu:"rmu-Latn-SE",rn:"rn-Latn-BI",rna:"rna-Latn-ZZ",rng:"rng-Latn-MZ",ro:"ro-Latn-RO",rob:"rob-Latn-ID",rof:"rof-Latn-TZ",roo:"roo-Latn-ZZ",rro:"rro-Latn-ZZ",rtm:"rtm-Latn-FJ",ru:"ru-Cyrl-RU",rue:"rue-Cyrl-UA",rug:"rug-Latn-SB",rw:"rw-Latn-RW",rwk:"rwk-Latn-TZ",rwo:"rwo-Latn-ZZ",ryu:"ryu-Kana-JP",sa:"sa-Deva-IN",saf:"saf-Latn-GH",sah:"sah-Cyrl-RU",saq:"saq-Latn-KE",sas:"sas-Latn-ID",sat:"sat-Latn-IN",saz:"saz-Saur-IN",sba:"sba-Latn-ZZ",sbe:"sbe-Latn-ZZ",sbp:"sbp-Latn-TZ",sc:"sc-Latn-IT",sck:"sck-Deva-IN",scl:"scl-Arab-ZZ",scn:"scn-Latn-IT",sco:"sco-Latn-GB",scs:"scs-Latn-CA",sd:"sd-Arab-PK","sd-Deva":"sd-Deva-IN","sd-Khoj":"sd-Khoj-IN","sd-Sind":"sd-Sind-IN",sdc:"sdc-Latn-IT",sdh:"sdh-Arab-IR",se:"se-Latn-NO",sef:"sef-Latn-CI",seh:"seh-Latn-MZ",sei:"sei-Latn-MX",ses:"ses-Latn-ML",sg:"sg-Latn-CF",sga:"sga-Ogam-IE",sgs:"sgs-Latn-LT",sgw:"sgw-Ethi-ZZ",sgz:"sgz-Latn-ZZ",shi:"shi-Tfng-MA",shk:"shk-Latn-ZZ",shn:"shn-Mymr-MM",shu:"shu-Arab-ZZ",si:"si-Sinh-LK",sid:"sid-Latn-ET",sig:"sig-Latn-ZZ",sil:"sil-Latn-ZZ",sim:"sim-Latn-ZZ",sjr:"sjr-Latn-ZZ",sk:"sk-Latn-SK",skc:"skc-Latn-ZZ",skr:"skr-Arab-PK",sks:"sks-Latn-ZZ",sl:"sl-Latn-SI",sld:"sld-Latn-ZZ",sli:"sli-Latn-PL",sll:"sll-Latn-ZZ",sly:"sly-Latn-ID",sm:"sm-Latn-WS",sma:"sma-Latn-SE",smj:"smj-Latn-SE",smn:"smn-Latn-FI",smp:"smp-Samr-IL",smq:"smq-Latn-ZZ",sms:"sms-Latn-FI",sn:"sn-Latn-ZW",snc:"snc-Latn-ZZ",snk:"snk-Latn-ML",snp:"snp-Latn-ZZ",snx:"snx-Latn-ZZ",sny:"sny-Latn-ZZ",so:"so-Latn-SO",sok:"sok-Latn-ZZ",soq:"soq-Latn-ZZ",sou:"sou-Thai-TH",soy:"soy-Latn-ZZ",spd:"spd-Latn-ZZ",spl:"spl-Latn-ZZ",sps:"sps-Latn-ZZ",sq:"sq-Latn-AL",sr:"sr-Cyrl-RS","sr-ME":"sr-Latn-ME","sr-RO":"sr-Latn-RO","sr-RU":"sr-Latn-RU","sr-TR":"sr-Latn-TR",srb:"srb-Sora-IN",srn:"srn-Latn-SR",srr:"srr-Latn-SN",srx:"srx-Deva-IN",ss:"ss-Latn-ZA",ssd:"ssd-Latn-ZZ",ssg:"ssg-Latn-ZZ",ssy:"ssy-Latn-ER",st:"st-Latn-ZA",stk:"stk-Latn-ZZ",stq:"stq-Latn-DE",su:"su-Latn-ID",sua:"sua-Latn-ZZ",sue:"sue-Latn-ZZ",suk:"suk-Latn-TZ",sur:"sur-Latn-ZZ",sus:"sus-Latn-GN",sv:"sv-Latn-SE",sw:"sw-Latn-TZ",swb:"swb-Arab-YT",swc:"swc-Latn-CD",swg:"swg-Latn-DE",swp:"swp-Latn-ZZ",swv:"swv-Deva-IN",sxn:"sxn-Latn-ID",sxw:"sxw-Latn-ZZ",syl:"syl-Beng-BD",syr:"syr-Syrc-IQ",szl:"szl-Latn-PL",ta:"ta-Taml-IN",taj:"taj-Deva-NP",tal:"tal-Latn-ZZ",tan:"tan-Latn-ZZ",taq:"taq-Latn-ZZ",tbc:"tbc-Latn-ZZ",tbd:"tbd-Latn-ZZ",tbf:"tbf-Latn-ZZ",tbg:"tbg-Latn-ZZ",tbo:"tbo-Latn-ZZ",tbw:"tbw-Latn-PH",tbz:"tbz-Latn-ZZ",tci:"tci-Latn-ZZ",tcy:"tcy-Knda-IN",tdd:"tdd-Tale-CN",tdg:"tdg-Deva-NP",tdh:"tdh-Deva-NP",te:"te-Telu-IN",ted:"ted-Latn-ZZ",tem:"tem-Latn-SL",teo:"teo-Latn-UG",tet:"tet-Latn-TL",tfi:"tfi-Latn-ZZ",tg:"tg-Cyrl-TJ","tg-Arab":"tg-Arab-PK","tg-PK":"tg-Arab-PK",tgc:"tgc-Latn-ZZ",tgo:"tgo-Latn-ZZ",tgu:"tgu-Latn-ZZ",th:"th-Thai-TH",thl:"thl-Deva-NP",thq:"thq-Deva-NP",thr:"thr-Deva-NP",ti:"ti-Ethi-ET",tif:"tif-Latn-ZZ",tig:"tig-Ethi-ER",tik:"tik-Latn-ZZ",tim:"tim-Latn-ZZ",tio:"tio-Latn-ZZ",tiv:"tiv-Latn-NG",tk:"tk-Latn-TM",tkl:"tkl-Latn-TK",tkr:"tkr-Latn-AZ",tkt:"tkt-Deva-NP",tl:"tl-Latn-PH",tlf:"tlf-Latn-ZZ",tlx:"tlx-Latn-ZZ",tly:"tly-Latn-AZ",tmh:"tmh-Latn-NE",tmy:"tmy-Latn-ZZ",tn:"tn-Latn-ZA",tnh:"tnh-Latn-ZZ",to:"to-Latn-TO",tof:"tof-Latn-ZZ",tog:"tog-Latn-MW",toq:"toq-Latn-ZZ",tpi:"tpi-Latn-PG",tpm:"tpm-Latn-ZZ",tpz:"tpz-Latn-ZZ",tqo:"tqo-Latn-ZZ",tr:"tr-Latn-TR",tru:"tru-Latn-TR",trv:"trv-Latn-TW",trw:"trw-Arab-ZZ",ts:"ts-Latn-ZA",tsd:"tsd-Grek-GR",tsf:"tsf-Deva-NP",tsg:"tsg-Latn-PH",tsj:"tsj-Tibt-BT",tsw:"tsw-Latn-ZZ",tt:"tt-Cyrl-RU",ttd:"ttd-Latn-ZZ",tte:"tte-Latn-ZZ",ttj:"ttj-Latn-UG",ttr:"ttr-Latn-ZZ",tts:"tts-Thai-TH",ttt:"ttt-Latn-AZ",tuh:"tuh-Latn-ZZ",tul:"tul-Latn-ZZ",tum:"tum-Latn-MW",tuq:"tuq-Latn-ZZ",tvd:"tvd-Latn-ZZ",tvl:"tvl-Latn-TV",tvu:"tvu-Latn-ZZ",twh:"twh-Latn-ZZ",twq:"twq-Latn-NE",txg:"txg-Tang-CN",ty:"ty-Latn-PF",tya:"tya-Latn-ZZ",tyv:"tyv-Cyrl-RU",tzm:"tzm-Latn-MA",ubu:"ubu-Latn-ZZ",udm:"udm-Cyrl-RU",ug:"ug-Arab-CN","ug-Cyrl":"ug-Cyrl-KZ","ug-KZ":"ug-Cyrl-KZ","ug-MN":"ug-Cyrl-MN",uga:"uga-Ugar-SY",uk:"uk-Cyrl-UA",uli:"uli-Latn-FM",umb:"umb-Latn-AO",und:"en-Latn-US","und-002":"en-Latn-NG","und-003":"en-Latn-US","und-005":"pt-Latn-BR","und-009":"en-Latn-AU","und-011":"en-Latn-NG","und-013":"es-Latn-MX","und-014":"sw-Latn-TZ","und-015":"ar-Arab-EG","und-017":"sw-Latn-CD","und-018":"en-Latn-ZA","und-019":"en-Latn-US","und-021":"en-Latn-US","und-029":"es-Latn-CU","und-030":"zh-Hans-CN","und-034":"hi-Deva-IN","und-035":"id-Latn-ID","und-039":"it-Latn-IT","und-053":"en-Latn-AU","und-054":"en-Latn-PG","und-057":"en-Latn-GU","und-061":"sm-Latn-WS","und-142":"zh-Hans-CN","und-143":"uz-Latn-UZ","und-145":"ar-Arab-SA","und-150":"ru-Cyrl-RU","und-151":"ru-Cyrl-RU","und-154":"en-Latn-GB","und-155":"de-Latn-DE","und-419":"es-Latn-419","und-AD":"ca-Latn-AD","und-Adlm":"ff-Adlm-GN","und-AE":"ar-Arab-AE","und-AF":"fa-Arab-AF","und-Aghb":"lez-Aghb-RU","und-Ahom":"aho-Ahom-IN","und-AL":"sq-Latn-AL","und-AM":"hy-Armn-AM","und-AO":"pt-Latn-AO","und-AQ":"und-Latn-AQ","und-AR":"es-Latn-AR","und-Arab":"ar-Arab-EG","und-Arab-CC":"ms-Arab-CC","und-Arab-CN":"ug-Arab-CN","und-Arab-GB":"ks-Arab-GB","und-Arab-ID":"ms-Arab-ID","und-Arab-IN":"ur-Arab-IN","und-Arab-KH":"cja-Arab-KH","und-Arab-MN":"kk-Arab-MN","und-Arab-MU":"ur-Arab-MU","und-Arab-NG":"ha-Arab-NG","und-Arab-PK":"ur-Arab-PK","und-Arab-TG":"apd-Arab-TG","und-Arab-TH":"mfa-Arab-TH","und-Arab-TJ":"fa-Arab-TJ","und-Arab-TR":"az-Arab-TR","und-Arab-YT":"swb-Arab-YT","und-Armi":"arc-Armi-IR","und-Armn":"hy-Armn-AM","und-AS":"sm-Latn-AS","und-AT":"de-Latn-AT","und-Avst":"ae-Avst-IR","und-AW":"nl-Latn-AW","und-AX":"sv-Latn-AX","und-AZ":"az-Latn-AZ","und-BA":"bs-Latn-BA","und-Bali":"ban-Bali-ID","und-Bamu":"bax-Bamu-CM","und-Bass":"bsq-Bass-LR","und-Batk":"bbc-Batk-ID","und-BD":"bn-Beng-BD","und-BE":"nl-Latn-BE","und-Beng":"bn-Beng-BD","und-BF":"fr-Latn-BF","und-BG":"bg-Cyrl-BG","und-BH":"ar-Arab-BH","und-Bhks":"sa-Bhks-IN","und-BI":"rn-Latn-BI","und-BJ":"fr-Latn-BJ","und-BL":"fr-Latn-BL","und-BN":"ms-Latn-BN","und-BO":"es-Latn-BO","und-Bopo":"zh-Bopo-TW","und-BQ":"pap-Latn-BQ","und-BR":"pt-Latn-BR","und-Brah":"pka-Brah-IN","und-Brai":"fr-Brai-FR","und-BT":"dz-Tibt-BT","und-Bugi":"bug-Bugi-ID","und-Buhd":"bku-Buhd-PH","und-BV":"und-Latn-BV","und-BY":"be-Cyrl-BY","und-Cakm":"ccp-Cakm-BD","und-Cans":"cr-Cans-CA","und-Cari":"xcr-Cari-TR","und-CD":"sw-Latn-CD","und-CF":"fr-Latn-CF","und-CG":"fr-Latn-CG","und-CH":"de-Latn-CH","und-Cham":"cjm-Cham-VN","und-Cher":"chr-Cher-US","und-CI":"fr-Latn-CI","und-CL":"es-Latn-CL","und-CM":"fr-Latn-CM","und-CN":"zh-Hans-CN","und-CO":"es-Latn-CO","und-Copt":"cop-Copt-EG","und-CP":"und-Latn-CP","und-Cprt":"grc-Cprt-CY","und-CR":"es-Latn-CR","und-CU":"es-Latn-CU","und-CV":"pt-Latn-CV","und-CW":"pap-Latn-CW","und-CY":"el-Grek-CY","und-Cyrl":"ru-Cyrl-RU","und-Cyrl-AL":"mk-Cyrl-AL","und-Cyrl-BA":"sr-Cyrl-BA","und-Cyrl-GE":"ab-Cyrl-GE","und-Cyrl-GR":"mk-Cyrl-GR","und-Cyrl-MD":"uk-Cyrl-MD","und-Cyrl-PL":"be-Cyrl-PL","und-Cyrl-RO":"bg-Cyrl-RO","und-Cyrl-SK":"uk-Cyrl-SK","und-Cyrl-TR":"kbd-Cyrl-TR","und-Cyrl-XK":"sr-Cyrl-XK","und-CZ":"cs-Latn-CZ","und-DE":"de-Latn-DE","und-Deva":"hi-Deva-IN","und-Deva-BT":"ne-Deva-BT","und-Deva-FJ":"hif-Deva-FJ","und-Deva-MU":"bho-Deva-MU","und-Deva-PK":"btv-Deva-PK","und-DJ":"aa-Latn-DJ","und-DK":"da-Latn-DK","und-DO":"es-Latn-DO","und-Dupl":"fr-Dupl-FR","und-DZ":"ar-Arab-DZ","und-EA":"es-Latn-EA","und-EC":"es-Latn-EC","und-EE":"et-Latn-EE","und-EG":"ar-Arab-EG","und-Egyp":"egy-Egyp-EG","und-EH":"ar-Arab-EH","und-Elba":"sq-Elba-AL","und-ER":"ti-Ethi-ER","und-ES":"es-Latn-ES","und-ET":"am-Ethi-ET","und-Ethi":"am-Ethi-ET","und-EU":"en-Latn-GB","und-EZ":"de-Latn-EZ","und-FI":"fi-Latn-FI","und-FO":"fo-Latn-FO","und-FR":"fr-Latn-FR","und-GA":"fr-Latn-GA","und-GE":"ka-Geor-GE","und-Geor":"ka-Geor-GE","und-GF":"fr-Latn-GF","und-GH":"ak-Latn-GH","und-GL":"kl-Latn-GL","und-Glag":"cu-Glag-BG","und-GN":"fr-Latn-GN","und-Goth":"got-Goth-UA","und-GP":"fr-Latn-GP","und-GQ":"es-Latn-GQ","und-GR":"el-Grek-GR","und-Gran":"sa-Gran-IN","und-Grek":"el-Grek-GR","und-Grek-TR":"bgx-Grek-TR","und-GS":"und-Latn-GS","und-GT":"es-Latn-GT","und-Gujr":"gu-Gujr-IN","und-Guru":"pa-Guru-IN","und-GW":"pt-Latn-GW","und-Hanb":"zh-Hanb-TW","und-Hang":"ko-Hang-KR","und-Hani":"zh-Hani-CN","und-Hano":"hnn-Hano-PH","und-Hans":"zh-Hans-CN","und-Hant":"zh-Hant-TW","und-Hant-CN":"yue-Hant-CN","und-Hatr":"mis-Hatr-IQ","und-Hebr":"he-Hebr-IL","und-Hebr-CA":"yi-Hebr-CA","und-Hebr-GB":"yi-Hebr-GB","und-Hebr-SE":"yi-Hebr-SE","und-Hebr-UA":"yi-Hebr-UA","und-Hebr-US":"yi-Hebr-US","und-Hira":"ja-Hira-JP","und-HK":"zh-Hant-HK","und-Hluw":"hlu-Hluw-TR","und-HM":"und-Latn-HM","und-Hmng":"hnj-Hmng-LA","und-HN":"es-Latn-HN","und-HR":"hr-Latn-HR","und-HT":"ht-Latn-HT","und-HU":"hu-Latn-HU","und-Hung":"hu-Hung-HU","und-IC":"es-Latn-IC","und-ID":"id-Latn-ID","und-IL":"he-Hebr-IL","und-IN":"hi-Deva-IN","und-IQ":"ar-Arab-IQ","und-IR":"fa-Arab-IR","und-IS":"is-Latn-IS","und-IT":"it-Latn-IT","und-Ital":"ett-Ital-IT","und-Jamo":"ko-Jamo-KR","und-Java":"jv-Java-ID","und-JO":"ar-Arab-JO","und-JP":"ja-Jpan-JP","und-Jpan":"ja-Jpan-JP","und-Kali":"eky-Kali-MM","und-Kana":"ja-Kana-JP","und-KE":"sw-Latn-KE","und-KG":"ky-Cyrl-KG","und-KH":"km-Khmr-KH","und-Khar":"pra-Khar-PK","und-Khmr":"km-Khmr-KH","und-Khoj":"sd-Khoj-IN","und-KM":"ar-Arab-KM","und-Knda":"kn-Knda-IN","und-Kore":"ko-Kore-KR","und-KP":"ko-Kore-KP","und-KR":"ko-Kore-KR","und-Kthi":"bho-Kthi-IN","und-KW":"ar-Arab-KW","und-KZ":"ru-Cyrl-KZ","und-LA":"lo-Laoo-LA","und-Lana":"nod-Lana-TH","und-Laoo":"lo-Laoo-LA","und-Latn-AF":"tk-Latn-AF","und-Latn-AM":"ku-Latn-AM","und-Latn-CN":"za-Latn-CN","und-Latn-CY":"tr-Latn-CY","und-Latn-DZ":"fr-Latn-DZ","und-Latn-ET":"en-Latn-ET","und-Latn-GE":"ku-Latn-GE","und-Latn-IR":"tk-Latn-IR","und-Latn-KM":"fr-Latn-KM","und-Latn-MA":"fr-Latn-MA","und-Latn-MK":"sq-Latn-MK","und-Latn-MM":"kac-Latn-MM","und-Latn-MO":"pt-Latn-MO","und-Latn-MR":"fr-Latn-MR","und-Latn-RU":"krl-Latn-RU","und-Latn-SY":"fr-Latn-SY","und-Latn-TN":"fr-Latn-TN","und-Latn-TW":"trv-Latn-TW","und-Latn-UA":"pl-Latn-UA","und-LB":"ar-Arab-LB","und-Lepc":"lep-Lepc-IN","und-LI":"de-Latn-LI","und-Limb":"lif-Limb-IN","und-Lina":"lab-Lina-GR","und-Linb":"grc-Linb-GR","und-Lisu":"lis-Lisu-CN","und-LK":"si-Sinh-LK","und-LS":"st-Latn-LS","und-LT":"lt-Latn-LT","und-LU":"fr-Latn-LU","und-LV":"lv-Latn-LV","und-LY":"ar-Arab-LY","und-Lyci":"xlc-Lyci-TR","und-Lydi":"xld-Lydi-TR","und-MA":"ar-Arab-MA","und-Mahj":"hi-Mahj-IN","und-Mand":"myz-Mand-IR","und-Mani":"xmn-Mani-CN","und-Marc":"bo-Marc-CN","und-MC":"fr-Latn-MC","und-MD":"ro-Latn-MD","und-ME":"sr-Latn-ME","und-Mend":"men-Mend-SL","und-Merc":"xmr-Merc-SD","und-Mero":"xmr-Mero-SD","und-MF":"fr-Latn-MF","und-MG":"mg-Latn-MG","und-MK":"mk-Cyrl-MK","und-ML":"bm-Latn-ML","und-Mlym":"ml-Mlym-IN","und-MM":"my-Mymr-MM","und-MN":"mn-Cyrl-MN","und-MO":"zh-Hant-MO","und-Modi":"mr-Modi-IN","und-Mong":"mn-Mong-CN","und-MQ":"fr-Latn-MQ","und-MR":"ar-Arab-MR","und-Mroo":"mro-Mroo-BD","und-MT":"mt-Latn-MT","und-Mtei":"mni-Mtei-IN","und-MU":"mfe-Latn-MU","und-Mult":"skr-Mult-PK","und-MV":"dv-Thaa-MV","und-MX":"es-Latn-MX","und-MY":"ms-Latn-MY","und-Mymr":"my-Mymr-MM","und-Mymr-IN":"kht-Mymr-IN","und-Mymr-TH":"mnw-Mymr-TH","und-MZ":"pt-Latn-MZ","und-NA":"af-Latn-NA","und-Narb":"xna-Narb-SA","und-Nbat":"arc-Nbat-JO","und-NC":"fr-Latn-NC","und-NE":"ha-Latn-NE","und-Newa":"new-Newa-NP","und-NI":"es-Latn-NI","und-Nkoo":"man-Nkoo-GN","und-NL":"nl-Latn-NL","und-NO":"nb-Latn-NO","und-NP":"ne-Deva-NP","und-Ogam":"sga-Ogam-IE","und-Olck":"sat-Olck-IN","und-OM":"ar-Arab-OM","und-Orkh":"otk-Orkh-MN","und-Orya":"or-Orya-IN","und-Osge":"osa-Osge-US","und-Osma":"so-Osma-SO","und-PA":"es-Latn-PA","und-Palm":"arc-Palm-SY","und-Pauc":"ctd-Pauc-MM","und-PE":"es-Latn-PE","und-Perm":"kv-Perm-RU","und-PF":"fr-Latn-PF","und-PG":"tpi-Latn-PG","und-PH":"fil-Latn-PH","und-Phag":"lzh-Phag-CN","und-Phli":"pal-Phli-IR","und-Phlp":"pal-Phlp-CN","und-Phnx":"phn-Phnx-LB","und-PK":"ur-Arab-PK","und-PL":"pl-Latn-PL","und-Plrd":"hmd-Plrd-CN","und-PM":"fr-Latn-PM","und-PR":"es-Latn-PR","und-Prti":"xpr-Prti-IR","und-PS":"ar-Arab-PS","und-PT":"pt-Latn-PT","und-PW":"pau-Latn-PW","und-PY":"gn-Latn-PY","und-QA":"ar-Arab-QA","und-QO":"en-Latn-IO","und-RE":"fr-Latn-RE","und-Rjng":"rej-Rjng-ID","und-RO":"ro-Latn-RO","und-RS":"sr-Cyrl-RS","und-RU":"ru-Cyrl-RU","und-Runr":"non-Runr-SE","und-RW":"rw-Latn-RW","und-SA":"ar-Arab-SA","und-Samr":"smp-Samr-IL","und-Sarb":"xsa-Sarb-YE","und-Saur":"saz-Saur-IN","und-SC":"fr-Latn-SC","und-SD":"ar-Arab-SD","und-SE":"sv-Latn-SE","und-Sgnw":"ase-Sgnw-US","und-Shaw":"en-Shaw-GB","und-Shrd":"sa-Shrd-IN","und-SI":"sl-Latn-SI","und-Sidd":"sa-Sidd-IN","und-Sind":"sd-Sind-IN","und-Sinh":"si-Sinh-LK","und-SJ":"nb-Latn-SJ","und-SK":"sk-Latn-SK","und-SM":"it-Latn-SM","und-SN":"fr-Latn-SN","und-SO":"so-Latn-SO","und-Sora":"srb-Sora-IN","und-SR":"nl-Latn-SR","und-ST":"pt-Latn-ST","und-Sund":"su-Sund-ID","und-SV":"es-Latn-SV","und-SY":"ar-Arab-SY","und-Sylo":"syl-Sylo-BD","und-Syrc":"syr-Syrc-IQ","und-Tagb":"tbw-Tagb-PH","und-Takr":"doi-Takr-IN","und-Tale":"tdd-Tale-CN","und-Talu":"khb-Talu-CN","und-Taml":"ta-Taml-IN","und-Tang":"txg-Tang-CN","und-Tavt":"blt-Tavt-VN","und-TD":"fr-Latn-TD","und-Telu":"te-Telu-IN","und-TF":"fr-Latn-TF","und-Tfng":"zgh-Tfng-MA","und-TG":"fr-Latn-TG","und-Tglg":"fil-Tglg-PH","und-TH":"th-Thai-TH","und-Thaa":"dv-Thaa-MV","und-Thai":"th-Thai-TH","und-Thai-CN":"lcp-Thai-CN","und-Thai-KH":"kdt-Thai-KH","und-Thai-LA":"kdt-Thai-LA","und-Tibt":"bo-Tibt-CN","und-Tirh":"mai-Tirh-IN","und-TJ":"tg-Cyrl-TJ","und-TK":"tkl-Latn-TK","und-TL":"pt-Latn-TL","und-TM":"tk-Latn-TM","und-TN":"ar-Arab-TN","und-TO":"to-Latn-TO","und-TR":"tr-Latn-TR","und-TV":"tvl-Latn-TV","und-TW":"zh-Hant-TW","und-TZ":"sw-Latn-TZ","und-UA":"uk-Cyrl-UA","und-UG":"sw-Latn-UG","und-Ugar":"uga-Ugar-SY","und-UY":"es-Latn-UY","und-UZ":"uz-Latn-UZ","und-VA":"it-Latn-VA","und-Vaii":"vai-Vaii-LR","und-VE":"es-Latn-VE","und-VN":"vi-Latn-VN","und-VU":"bi-Latn-VU","und-Wara":"hoc-Wara-IN","und-WF":"fr-Latn-WF","und-WS":"sm-Latn-WS","und-XK":"sq-Latn-XK","und-Xpeo":"peo-Xpeo-IR","und-Xsux":"akk-Xsux-IQ","und-YE":"ar-Arab-YE","und-Yiii":"ii-Yiii-CN","und-YT":"fr-Latn-YT","und-ZW":"sn-Latn-ZW",unr:"unr-Beng-IN","unr-Deva":"unr-Deva-NP","unr-NP":"unr-Deva-NP",unx:"unx-Beng-IN",ur:"ur-Arab-PK",uri:"uri-Latn-ZZ",urt:"urt-Latn-ZZ",urw:"urw-Latn-ZZ",usa:"usa-Latn-ZZ",utr:"utr-Latn-ZZ",uvh:"uvh-Latn-ZZ",uvl:"uvl-Latn-ZZ",uz:"uz-Latn-UZ","uz-AF":"uz-Arab-AF","uz-Arab":"uz-Arab-AF","uz-CN":"uz-Cyrl-CN",vag:"vag-Latn-ZZ",vai:"vai-Vaii-LR",van:"van-Latn-ZZ",ve:"ve-Latn-ZA",vec:"vec-Latn-IT",vep:"vep-Latn-RU",vi:"vi-Latn-VN",vic:"vic-Latn-SX",viv:"viv-Latn-ZZ",vls:"vls-Latn-BE",vmf:"vmf-Latn-DE",vmw:"vmw-Latn-MZ",vo:"vo-Latn-001",vot:"vot-Latn-RU",vro:"vro-Latn-EE",vun:"vun-Latn-TZ",vut:"vut-Latn-ZZ",wa:"wa-Latn-BE",wae:"wae-Latn-CH",waj:"waj-Latn-ZZ",wal:"wal-Ethi-ET",wan:"wan-Latn-ZZ",war:"war-Latn-PH",wbp:"wbp-Latn-AU",wbq:"wbq-Telu-IN",wbr:"wbr-Deva-IN",wci:"wci-Latn-ZZ",wer:"wer-Latn-ZZ",wgi:"wgi-Latn-ZZ",whg:"whg-Latn-ZZ",wib:"wib-Latn-ZZ",wiu:"wiu-Latn-ZZ",wiv:"wiv-Latn-ZZ",wja:"wja-Latn-ZZ",wji:"wji-Latn-ZZ",wls:"wls-Latn-WF",wmo:"wmo-Latn-ZZ",wnc:"wnc-Latn-ZZ",wni:"wni-Arab-KM",wnu:"wnu-Latn-ZZ",wo:"wo-Latn-SN",wob:"wob-Latn-ZZ",wos:"wos-Latn-ZZ",wrs:"wrs-Latn-ZZ",wsk:"wsk-Latn-ZZ",wtm:"wtm-Deva-IN",wuu:"wuu-Hans-CN",wuv:"wuv-Latn-ZZ",wwa:"wwa-Latn-ZZ",xav:"xav-Latn-BR",xbi:"xbi-Latn-ZZ",xcr:"xcr-Cari-TR",xes:"xes-Latn-ZZ",xh:"xh-Latn-ZA",xla:"xla-Latn-ZZ",xlc:"xlc-Lyci-TR",xld:"xld-Lydi-TR",xmf:"xmf-Geor-GE",xmn:"xmn-Mani-CN",xmr:"xmr-Merc-SD",xna:"xna-Narb-SA",xnr:"xnr-Deva-IN",xog:"xog-Latn-UG",xon:"xon-Latn-ZZ",xpr:"xpr-Prti-IR",xrb:"xrb-Latn-ZZ",xsa:"xsa-Sarb-YE",xsi:"xsi-Latn-ZZ",xsm:"xsm-Latn-ZZ",xsr:"xsr-Deva-NP",xwe:"xwe-Latn-ZZ",yam:"yam-Latn-ZZ",yao:"yao-Latn-MZ",yap:"yap-Latn-FM",yas:"yas-Latn-ZZ",yat:"yat-Latn-ZZ",yav:"yav-Latn-CM",yay:"yay-Latn-ZZ",yaz:"yaz-Latn-ZZ",yba:"yba-Latn-ZZ",ybb:"ybb-Latn-CM",yby:"yby-Latn-ZZ",yer:"yer-Latn-ZZ",ygr:"ygr-Latn-ZZ",ygw:"ygw-Latn-ZZ",yi:"yi-Hebr-001",yko:"yko-Latn-ZZ",yle:"yle-Latn-ZZ",ylg:"ylg-Latn-ZZ",yll:"yll-Latn-ZZ",yml:"yml-Latn-ZZ",yo:"yo-Latn-NG",yon:"yon-Latn-ZZ",yrb:"yrb-Latn-ZZ",yre:"yre-Latn-ZZ",yrl:"yrl-Latn-BR",yss:"yss-Latn-ZZ",yua:"yua-Latn-MX",yue:"yue-Hant-HK","yue-CN":"yue-Hans-CN","yue-Hans":"yue-Hans-CN",yuj:"yuj-Latn-ZZ",yut:"yut-Latn-ZZ",yuw:"yuw-Latn-ZZ",za:"za-Latn-CN",zag:"zag-Latn-SD",zdj:"zdj-Arab-KM",zea:"zea-Latn-NL",zgh:"zgh-Tfng-MA",zh:"zh-Hans-CN","zh-AU":"zh-Hant-AU","zh-BN":"zh-Hant-BN","zh-Bopo":"zh-Bopo-TW","zh-GB":"zh-Hant-GB","zh-GF":"zh-Hant-GF","zh-Hanb":"zh-Hanb-TW","zh-Hant":"zh-Hant-TW","zh-HK":"zh-Hant-HK","zh-ID":"zh-Hant-ID","zh-MO":"zh-Hant-MO","zh-MY":"zh-Hant-MY","zh-PA":"zh-Hant-PA","zh-PF":"zh-Hant-PF","zh-PH":"zh-Hant-PH","zh-SR":"zh-Hant-SR","zh-TH":"zh-Hant-TH","zh-TW":"zh-Hant-TW","zh-US":"zh-Hant-US","zh-VN":"zh-Hant-VN",zia:"zia-Latn-ZZ",zlm:"zlm-Latn-TG",zmi:"zmi-Latn-MY",zne:"zne-Latn-ZZ",zu:"zu-Latn-ZA",zza:"zza-Latn-TR"},"plurals-type-cardinal":{af:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ak:{"pluralRule-count-one":"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},am:{"pluralRule-count-one":"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ar:{"pluralRule-count-zero":"n = 0 @integer 0 @decimal 0.0, 0.00, 0.000, 0.0000","pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-two":"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000","pluralRule-count-few":"n % 100 = 3..10 @integer 3~10, 103~110, 1003, … @decimal 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 103.0, 1003.0, …","pluralRule-count-many":"n % 100 = 11..99 @integer 11~26, 111, 1011, … @decimal 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 111.0, 1011.0, …","pluralRule-count-other":" @integer 100~102, 200~202, 300~302, 400~402, 500~502, 600, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.1, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ars:{"pluralRule-count-zero":"n = 0 @integer 0 @decimal 0.0, 0.00, 0.000, 0.0000","pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-two":"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000","pluralRule-count-few":"n % 100 = 3..10 @integer 3~10, 103~110, 1003, … @decimal 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 103.0, 1003.0, …","pluralRule-count-many":"n % 100 = 11..99 @integer 11~26, 111, 1011, … @decimal 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 111.0, 1011.0, …","pluralRule-count-other":" @integer 100~102, 200~202, 300~302, 400~402, 500~502, 600, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.1, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},as:{"pluralRule-count-one":"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},asa:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ast:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},az:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},be:{"pluralRule-count-one":"n % 10 = 1 and n % 100 != 11 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 1.0, 21.0, 31.0, 41.0, 51.0, 61.0, 71.0, 81.0, 101.0, 1001.0, …","pluralRule-count-few":"n % 10 = 2..4 and n % 100 != 12..14 @integer 2~4, 22~24, 32~34, 42~44, 52~54, 62, 102, 1002, … @decimal 2.0, 3.0, 4.0, 22.0, 23.0, 24.0, 32.0, 33.0, 102.0, 1002.0, …","pluralRule-count-many":"n % 10 = 0 or n % 10 = 5..9 or n % 100 = 11..14 @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …","pluralRule-count-other":"   @decimal 0.1~0.9, 1.1~1.7, 10.1, 100.1, 1000.1, …"},bem:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},bez:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},bg:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},bh:{"pluralRule-count-one":"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},bm:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},bn:{"pluralRule-count-one":"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},bo:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},br:{"pluralRule-count-one":"n % 10 = 1 and n % 100 != 11,71,91 @integer 1, 21, 31, 41, 51, 61, 81, 101, 1001, … @decimal 1.0, 21.0, 31.0, 41.0, 51.0, 61.0, 81.0, 101.0, 1001.0, …","pluralRule-count-two":"n % 10 = 2 and n % 100 != 12,72,92 @integer 2, 22, 32, 42, 52, 62, 82, 102, 1002, … @decimal 2.0, 22.0, 32.0, 42.0, 52.0, 62.0, 82.0, 102.0, 1002.0, …","pluralRule-count-few":"n % 10 = 3..4,9 and n % 100 != 10..19,70..79,90..99 @integer 3, 4, 9, 23, 24, 29, 33, 34, 39, 43, 44, 49, 103, 1003, … @decimal 3.0, 4.0, 9.0, 23.0, 24.0, 29.0, 33.0, 34.0, 103.0, 1003.0, …","pluralRule-count-many":"n != 0 and n % 1000000 = 0 @integer 1000000, … @decimal 1000000.0, 1000000.00, 1000000.000, …","pluralRule-count-other":" @integer 0, 5~8, 10~20, 100, 1000, 10000, 100000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, …"},brx:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},bs:{"pluralRule-count-one":"v = 0 and i % 10 = 1 and i % 100 != 11 or f % 10 = 1 and f % 100 != 11 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 0.1, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …","pluralRule-count-few":"v = 0 and i % 10 = 2..4 and i % 100 != 12..14 or f % 10 = 2..4 and f % 100 != 12..14 @integer 2~4, 22~24, 32~34, 42~44, 52~54, 62, 102, 1002, … @decimal 0.2~0.4, 1.2~1.4, 2.2~2.4, 3.2~3.4, 4.2~4.4, 5.2, 10.2, 100.2, 1000.2, …","pluralRule-count-other":" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 0.5~1.0, 1.5~2.0, 2.5~2.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ca:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ce:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},cgg:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},chr:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ckb:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},cs:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-few":"i = 2..4 and v = 0 @integer 2~4","pluralRule-count-many":"v != 0   @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …","pluralRule-count-other":" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, …"},cy:{"pluralRule-count-zero":"n = 0 @integer 0 @decimal 0.0, 0.00, 0.000, 0.0000","pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-two":"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000","pluralRule-count-few":"n = 3 @integer 3 @decimal 3.0, 3.00, 3.000, 3.0000","pluralRule-count-many":"n = 6 @integer 6 @decimal 6.0, 6.00, 6.000, 6.0000","pluralRule-count-other":" @integer 4, 5, 7~20, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},da:{"pluralRule-count-one":"n = 1 or t != 0 and i = 0,1 @integer 1 @decimal 0.1~1.6","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 2.0~3.4, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},de:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},dsb:{"pluralRule-count-one":"v = 0 and i % 100 = 1 or f % 100 = 1 @integer 1, 101, 201, 301, 401, 501, 601, 701, 1001, … @decimal 0.1, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …","pluralRule-count-two":"v = 0 and i % 100 = 2 or f % 100 = 2 @integer 2, 102, 202, 302, 402, 502, 602, 702, 1002, … @decimal 0.2, 1.2, 2.2, 3.2, 4.2, 5.2, 6.2, 7.2, 10.2, 100.2, 1000.2, …","pluralRule-count-few":"v = 0 and i % 100 = 3..4 or f % 100 = 3..4 @integer 3, 4, 103, 104, 203, 204, 303, 304, 403, 404, 503, 504, 603, 604, 703, 704, 1003, … @decimal 0.3, 0.4, 1.3, 1.4, 2.3, 2.4, 3.3, 3.4, 4.3, 4.4, 5.3, 5.4, 6.3, 6.4, 7.3, 7.4, 10.3, 100.3, 1000.3, …","pluralRule-count-other":" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 0.5~1.0, 1.5~2.0, 2.5~2.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},dv:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},dz:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ee:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},el:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},en:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},eo:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},es:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},et:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},eu:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},fa:{"pluralRule-count-one":"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ff:{"pluralRule-count-one":"i = 0,1 @integer 0, 1 @decimal 0.0~1.5","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 2.0~3.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},fi:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},fil:{"pluralRule-count-one":"v = 0 and i = 1,2,3 or v = 0 and i % 10 != 4,6,9 or v != 0 and f % 10 != 4,6,9 @integer 0~3, 5, 7, 8, 10~13, 15, 17, 18, 20, 21, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.3, 0.5, 0.7, 0.8, 1.0~1.3, 1.5, 1.7, 1.8, 2.0, 2.1, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …","pluralRule-count-other":" @integer 4, 6, 9, 14, 16, 19, 24, 26, 104, 1004, … @decimal 0.4, 0.6, 0.9, 1.4, 1.6, 1.9, 2.4, 2.6, 10.4, 100.4, 1000.4, …"},fo:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},fr:{"pluralRule-count-one":"i = 0,1 @integer 0, 1 @decimal 0.0~1.5","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 2.0~3.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},fur:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},fy:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ga:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-two":"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000","pluralRule-count-few":"n = 3..6 @integer 3~6 @decimal 3.0, 4.0, 5.0, 6.0, 3.00, 4.00, 5.00, 6.00, 3.000, 4.000, 5.000, 6.000, 3.0000, 4.0000, 5.0000, 6.0000","pluralRule-count-many":"n = 7..10 @integer 7~10 @decimal 7.0, 8.0, 9.0, 10.0, 7.00, 8.00, 9.00, 10.00, 7.000, 8.000, 9.000, 10.000, 7.0000, 8.0000, 9.0000, 10.0000","pluralRule-count-other":" @integer 0, 11~25, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.1, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},gd:{"pluralRule-count-one":"n = 1,11 @integer 1, 11 @decimal 1.0, 11.0, 1.00, 11.00, 1.000, 11.000, 1.0000","pluralRule-count-two":"n = 2,12 @integer 2, 12 @decimal 2.0, 12.0, 2.00, 12.00, 2.000, 12.000, 2.0000","pluralRule-count-few":"n = 3..10,13..19 @integer 3~10, 13~19 @decimal 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 3.00","pluralRule-count-other":" @integer 0, 20~34, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.1, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},gl:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},gsw:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},gu:{"pluralRule-count-one":"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},guw:{"pluralRule-count-one":"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},gv:{"pluralRule-count-one":"v = 0 and i % 10 = 1 @integer 1, 11, 21, 31, 41, 51, 61, 71, 101, 1001, …","pluralRule-count-two":"v = 0 and i % 10 = 2 @integer 2, 12, 22, 32, 42, 52, 62, 72, 102, 1002, …","pluralRule-count-few":"v = 0 and i % 100 = 0,20,40,60,80 @integer 0, 20, 40, 60, 80, 100, 120, 140, 1000, 10000, 100000, 1000000, …","pluralRule-count-many":"v != 0   @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …","pluralRule-count-other":" @integer 3~10, 13~19, 23, 103, 1003, …"},ha:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},haw:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},he:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-two":"i = 2 and v = 0 @integer 2","pluralRule-count-many":"v = 0 and n != 0..10 and n % 10 = 0 @integer 20, 30, 40, 50, 60, 70, 80, 90, 100, 1000, 10000, 100000, 1000000, …","pluralRule-count-other":" @integer 0, 3~17, 101, 1001, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},hi:{"pluralRule-count-one":"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},hr:{"pluralRule-count-one":"v = 0 and i % 10 = 1 and i % 100 != 11 or f % 10 = 1 and f % 100 != 11 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 0.1, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …","pluralRule-count-few":"v = 0 and i % 10 = 2..4 and i % 100 != 12..14 or f % 10 = 2..4 and f % 100 != 12..14 @integer 2~4, 22~24, 32~34, 42~44, 52~54, 62, 102, 1002, … @decimal 0.2~0.4, 1.2~1.4, 2.2~2.4, 3.2~3.4, 4.2~4.4, 5.2, 10.2, 100.2, 1000.2, …","pluralRule-count-other":" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 0.5~1.0, 1.5~2.0, 2.5~2.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},hsb:{"pluralRule-count-one":"v = 0 and i % 100 = 1 or f % 100 = 1 @integer 1, 101, 201, 301, 401, 501, 601, 701, 1001, … @decimal 0.1, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …","pluralRule-count-two":"v = 0 and i % 100 = 2 or f % 100 = 2 @integer 2, 102, 202, 302, 402, 502, 602, 702, 1002, … @decimal 0.2, 1.2, 2.2, 3.2, 4.2, 5.2, 6.2, 7.2, 10.2, 100.2, 1000.2, …","pluralRule-count-few":"v = 0 and i % 100 = 3..4 or f % 100 = 3..4 @integer 3, 4, 103, 104, 203, 204, 303, 304, 403, 404, 503, 504, 603, 604, 703, 704, 1003, … @decimal 0.3, 0.4, 1.3, 1.4, 2.3, 2.4, 3.3, 3.4, 4.3, 4.4, 5.3, 5.4, 6.3, 6.4, 7.3, 7.4, 10.3, 100.3, 1000.3, …","pluralRule-count-other":" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 0.5~1.0, 1.5~2.0, 2.5~2.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},hu:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},hy:{"pluralRule-count-one":"i = 0,1 @integer 0, 1 @decimal 0.0~1.5","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 2.0~3.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},id:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ig:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ii:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},in:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},is:{"pluralRule-count-one":"t = 0 and i % 10 = 1 and i % 100 != 11 or t != 0 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 0.1~1.6, 10.1, 100.1, 1000.1, …","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},it:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},iu:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-two":"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000","pluralRule-count-other":" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},iw:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-two":"i = 2 and v = 0 @integer 2","pluralRule-count-many":"v = 0 and n != 0..10 and n % 10 = 0 @integer 20, 30, 40, 50, 60, 70, 80, 90, 100, 1000, 10000, 100000, 1000000, …","pluralRule-count-other":" @integer 0, 3~17, 101, 1001, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ja:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},jbo:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},jgo:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ji:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},jmc:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},jv:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},jw:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ka:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},kab:{"pluralRule-count-one":"i = 0,1 @integer 0, 1 @decimal 0.0~1.5","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 2.0~3.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},kaj:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},kcg:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},kde:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},kea:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},kk:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},kkj:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},kl:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},km:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},kn:{"pluralRule-count-one":"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ko:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ks:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ksb:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ksh:{"pluralRule-count-zero":"n = 0 @integer 0 @decimal 0.0, 0.00, 0.000, 0.0000","pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ku:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},kw:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-two":"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000","pluralRule-count-other":" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ky:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},lag:{"pluralRule-count-zero":"n = 0 @integer 0 @decimal 0.0, 0.00, 0.000, 0.0000","pluralRule-count-one":"i = 0,1 and n != 0 @integer 1 @decimal 0.1~1.6","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 2.0~3.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},lb:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},lg:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},lkt:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ln:{"pluralRule-count-one":"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},lo:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},lt:{"pluralRule-count-one":"n % 10 = 1 and n % 100 != 11..19 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 1.0, 21.0, 31.0, 41.0, 51.0, 61.0, 71.0, 81.0, 101.0, 1001.0, …","pluralRule-count-few":"n % 10 = 2..9 and n % 100 != 11..19 @integer 2~9, 22~29, 102, 1002, … @decimal 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 22.0, 102.0, 1002.0, …","pluralRule-count-many":"f != 0   @decimal 0.1~0.9, 1.1~1.7, 10.1, 100.1, 1000.1, …","pluralRule-count-other":" @integer 0, 10~20, 30, 40, 50, 60, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},lv:{"pluralRule-count-zero":"n % 10 = 0 or n % 100 = 11..19 or v = 2 and f % 100 = 11..19 @integer 0, 10~20, 30, 40, 50, 60, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …","pluralRule-count-one":"n % 10 = 1 and n % 100 != 11 or v = 2 and f % 10 = 1 and f % 100 != 11 or v != 2 and f % 10 = 1 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 0.1, 1.0, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …","pluralRule-count-other":" @integer 2~9, 22~29, 102, 1002, … @decimal 0.2~0.9, 1.2~1.9, 10.2, 100.2, 1000.2, …"},mas:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},mg:{"pluralRule-count-one":"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},mgo:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},mk:{"pluralRule-count-one":"v = 0 and i % 10 = 1 or f % 10 = 1 @integer 1, 11, 21, 31, 41, 51, 61, 71, 101, 1001, … @decimal 0.1, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …","pluralRule-count-other":" @integer 0, 2~10, 12~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 0.2~1.0, 1.2~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ml:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},mn:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},mo:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-few":"v != 0 or n = 0 or n != 1 and n % 100 = 1..19 @integer 0, 2~16, 101, 1001, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …","pluralRule-count-other":" @integer 20~35, 100, 1000, 10000, 100000, 1000000, …"},mr:{"pluralRule-count-one":"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ms:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},mt:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-few":"n = 0 or n % 100 = 2..10 @integer 0, 2~10, 102~107, 1002, … @decimal 0.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 10.0, 102.0, 1002.0, …","pluralRule-count-many":"n % 100 = 11..19 @integer 11~19, 111~117, 1011, … @decimal 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 111.0, 1011.0, …","pluralRule-count-other":" @integer 20~35, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.1, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},my:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},nah:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},naq:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-two":"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000","pluralRule-count-other":" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},nb:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},nd:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ne:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},nl:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},nn:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},nnh:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},no:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},nqo:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},nr:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},nso:{"pluralRule-count-one":"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ny:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},nyn:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},om:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},or:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},os:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},pa:{"pluralRule-count-one":"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},pap:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},pl:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-few":"v = 0 and i % 10 = 2..4 and i % 100 != 12..14 @integer 2~4, 22~24, 32~34, 42~44, 52~54, 62, 102, 1002, …","pluralRule-count-many":"v = 0 and i != 1 and i % 10 = 0..1 or v = 0 and i % 10 = 5..9 or v = 0 and i % 100 = 12..14 @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, …","pluralRule-count-other":"   @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},prg:{"pluralRule-count-zero":"n % 10 = 0 or n % 100 = 11..19 or v = 2 and f % 100 = 11..19 @integer 0, 10~20, 30, 40, 50, 60, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …","pluralRule-count-one":"n % 10 = 1 and n % 100 != 11 or v = 2 and f % 10 = 1 and f % 100 != 11 or v != 2 and f % 10 = 1 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 0.1, 1.0, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …","pluralRule-count-other":" @integer 2~9, 22~29, 102, 1002, … @decimal 0.2~0.9, 1.2~1.9, 10.2, 100.2, 1000.2, …"},ps:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},pt:{"pluralRule-count-one":"n = 0..2 and n != 2 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},"pt-PT":{"pluralRule-count-one":"n = 1 and v = 0 @integer 1","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},rm:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ro:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-few":"v != 0 or n = 0 or n != 1 and n % 100 = 1..19 @integer 0, 2~16, 101, 1001, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …","pluralRule-count-other":" @integer 20~35, 100, 1000, 10000, 100000, 1000000, …"},rof:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},root:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ru:{"pluralRule-count-one":"v = 0 and i % 10 = 1 and i % 100 != 11 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, …","pluralRule-count-few":"v = 0 and i % 10 = 2..4 and i % 100 != 12..14 @integer 2~4, 22~24, 32~34, 42~44, 52~54, 62, 102, 1002, …","pluralRule-count-many":"v = 0 and i % 10 = 0 or v = 0 and i % 10 = 5..9 or v = 0 and i % 100 = 11..14 @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, …","pluralRule-count-other":"   @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},rwk:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},sah:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},saq:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},sdh:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},se:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-two":"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000","pluralRule-count-other":" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},seh:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ses:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},sg:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},sh:{"pluralRule-count-one":"v = 0 and i % 10 = 1 and i % 100 != 11 or f % 10 = 1 and f % 100 != 11 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 0.1, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …","pluralRule-count-few":"v = 0 and i % 10 = 2..4 and i % 100 != 12..14 or f % 10 = 2..4 and f % 100 != 12..14 @integer 2~4, 22~24, 32~34, 42~44, 52~54, 62, 102, 1002, … @decimal 0.2~0.4, 1.2~1.4, 2.2~2.4, 3.2~3.4, 4.2~4.4, 5.2, 10.2, 100.2, 1000.2, …","pluralRule-count-other":" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 0.5~1.0, 1.5~2.0, 2.5~2.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},shi:{"pluralRule-count-one":"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04","pluralRule-count-few":"n = 2..10 @integer 2~10 @decimal 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 2.00, 3.00, 4.00, 5.00, 6.00, 7.00, 8.00","pluralRule-count-other":" @integer 11~26, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~1.9, 2.1~2.7, 10.1, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},si:{"pluralRule-count-one":"n = 0,1 or i = 0 and f = 1 @integer 0, 1 @decimal 0.0, 0.1, 1.0, 0.00, 0.01, 1.00, 0.000, 0.001, 1.000, 0.0000, 0.0001, 1.0000","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.2~0.9, 1.1~1.8, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},sk:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-few":"i = 2..4 and v = 0 @integer 2~4","pluralRule-count-many":"v != 0   @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …","pluralRule-count-other":" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, …"},sl:{"pluralRule-count-one":"v = 0 and i % 100 = 1 @integer 1, 101, 201, 301, 401, 501, 601, 701, 1001, …","pluralRule-count-two":"v = 0 and i % 100 = 2 @integer 2, 102, 202, 302, 402, 502, 602, 702, 1002, …","pluralRule-count-few":"v = 0 and i % 100 = 3..4 or v != 0 @integer 3, 4, 103, 104, 203, 204, 303, 304, 403, 404, 503, 504, 603, 604, 703, 704, 1003, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …","pluralRule-count-other":" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, …"},sma:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-two":"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000","pluralRule-count-other":" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},smi:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-two":"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000","pluralRule-count-other":" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},smj:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-two":"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000","pluralRule-count-other":" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},smn:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-two":"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000","pluralRule-count-other":" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},sms:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-two":"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000","pluralRule-count-other":" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},sn:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},so:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},sq:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},sr:{"pluralRule-count-one":"v = 0 and i % 10 = 1 and i % 100 != 11 or f % 10 = 1 and f % 100 != 11 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 0.1, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …","pluralRule-count-few":"v = 0 and i % 10 = 2..4 and i % 100 != 12..14 or f % 10 = 2..4 and f % 100 != 12..14 @integer 2~4, 22~24, 32~34, 42~44, 52~54, 62, 102, 1002, … @decimal 0.2~0.4, 1.2~1.4, 2.2~2.4, 3.2~3.4, 4.2~4.4, 5.2, 10.2, 100.2, 1000.2, …","pluralRule-count-other":" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 0.5~1.0, 1.5~2.0, 2.5~2.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ss:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ssy:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},st:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},sv:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},sw:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},syr:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ta:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},te:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},teo:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},th:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ti:{"pluralRule-count-one":"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},tig:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},tk:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},tl:{"pluralRule-count-one":"v = 0 and i = 1,2,3 or v = 0 and i % 10 != 4,6,9 or v != 0 and f % 10 != 4,6,9 @integer 0~3, 5, 7, 8, 10~13, 15, 17, 18, 20, 21, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.3, 0.5, 0.7, 0.8, 1.0~1.3, 1.5, 1.7, 1.8, 2.0, 2.1, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …","pluralRule-count-other":" @integer 4, 6, 9, 14, 16, 19, 24, 26, 104, 1004, … @decimal 0.4, 0.6, 0.9, 1.4, 1.6, 1.9, 2.4, 2.6, 10.4, 100.4, 1000.4, …"},tn:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},to:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},tr:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ts:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},tzm:{"pluralRule-count-one":"n = 0..1 or n = 11..99 @integer 0, 1, 11~24 @decimal 0.0, 1.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0","pluralRule-count-other":" @integer 2~10, 100~106, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ug:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},uk:{"pluralRule-count-one":"v = 0 and i % 10 = 1 and i % 100 != 11 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, …","pluralRule-count-few":"v = 0 and i % 10 = 2..4 and i % 100 != 12..14 @integer 2~4, 22~24, 32~34, 42~44, 52~54, 62, 102, 1002, …","pluralRule-count-many":"v = 0 and i % 10 = 0 or v = 0 and i % 10 = 5..9 or v = 0 and i % 100 = 11..14 @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, …","pluralRule-count-other":"   @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ur:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},uz:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},ve:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},vi:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},vo:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},vun:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},wa:{"pluralRule-count-one":"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},wae:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},wo:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},xh:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},xog:{"pluralRule-count-one":"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},yi:{"pluralRule-count-one":"i = 1 and v = 0 @integer 1","pluralRule-count-other":" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},yo:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},yue:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},zh:{"pluralRule-count-other":" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"},zu:{"pluralRule-count-one":"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04","pluralRule-count-other":" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …"}}}}),a.switchLocale(l?o:"en")}]]);
//# sourceMappingURL=main.82ed1e966cfbe1759526.bundle.js.map