{"version":3,"sources":["webpack://demo/object.ts","webpack://demo/Map.ts","webpack://demo/WeakMap.ts","webpack://demo/Destroyable.ts","webpack://demo/Evented.ts","webpack://demo/Registry.ts","webpack://demo/diff.ts","webpack://demo/RegistryHandler.ts","webpack://demo/NodeHandler.ts","webpack://demo/Set.ts","webpack://demo/vdom.ts","webpack://demo/WidgetBase.ts","webpack://demo/handleDecorator.ts","webpack://demo/beforeProperties.ts","webpack://demo/inject.ts","webpack://demo/diffProperty.ts","webpack://demo/Themed.ts","webpack://demo/customElement.ts","webpack://demo/./src/widgets/Menu.ts","webpack://demo/./src/widgets/MenuItem.ts","webpack://demo/./src/main.ts","webpack://demo/./src/widgets/styles/menu.m.css","webpack://demo/./src/widgets/styles/menuItem.m.css"],"names":["object_assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","is","keys","getOwnPropertyDescriptors","entries","values","Object","assign","Map","global","shim_Map","shim_WeakMap","WeakMap","noop","Promise","resolve","destroyed","Error","Destroyable_Destroyable","[object Object]","this","handles","handle","_handles","push","splice","indexOf","destroy","forEach","own","regexMap","Evented_Evented","listenersMap","event","methods","type","globString","targetString","regex","has","get","RegExp","replace","set","test","isGlobMatch","method","call","listener","Array","isArray","map","_addListener","listeners","WIDGET_BASE_TYPE","isWidgetBaseConstructor","item","Boolean","_type","isWidgetFunction","isWidget","isWNodeFactory","node","isFactory","Registry_Registry","widgetLabel","emit","action","label","undefined","_widgetRegistry","toString","then","widgetCtor","emitLoadedEvent","error","injectorFactory","_injectorRegistry","invalidator","injectorItem","injector","promise","hasOwnProperty","default","isWidgetConstructorDefaultExport","hasInjector","isObjectOrArray","value","prototype","reference","previousProperty","newProperty","changed","shallow","depth","validOldProperty","validNewProperty","previousKeys","newKeys","length","some","key","auto","result","ignore","NodeEventType","core_RegistryHandler","super","_registry","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","delete","base","widget","define","defineInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","i","registry","registeredLabels","on","core_NodeHandler","_nodeMap","element","Widget","Projector","clear","shim_Set","Set","EMPTY_ARRAY","nodeOperations","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","WNODE","VNODE","DOMVNODE","isTextNode","nodeType","isWNodeWrapper","child","isWNode","isVNodeWrapper","isVNode","isVirtualWrapper","tag","isBodyWrapper","wrapper","isDomVNode","w","widgetConstructorOrNode","properties","children","widgetConstructor","v","propertiesOrChildren","deferredPropertiesCallback","classes","styles","newProperties","__rest","_a","nodeClasses","nodeStyles","nodeProperties","REGISTRY_ITEM","FromRegistry","buildPreviousProperties","domNode","current","diffType","attributes","deferredProperties","events","propName","attrName","getAttribute","reduce","props","property","same","dnode1","dnode2","widgetConstructor1","registryItem","widgetConstructor2","instance","findIndexOfChild","sameAs","start","createClassPropValue","classNames","className","updateAttribute","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","arrayFrom","arr","slice","createFactory","callback","middlewares","factory","returns","create","widgetInstanceMap","widgetMetaMap","requestedDomNodes","wrapperId","metaId","addNodeToMap","id","widgetMeta","nodeMap","destroyHandles","destroyMap","widgetId","split","add","propertyName","diff","customDiffMap","customDiffProperties","propertyDiffMap","destroyFunction","registryHandler","isDeferred","deferRefs","vdom","renderer","_renderScheduled","parentInvalidate","_mountOptions","sync","merge","transition","document","body","_invalidationQueue","_processQueue","_deferredProcessQueue","_applicationQueue","_eventMap","_idToWrapperMap","_wrapperSiblingMap","_idToChildrenWrappers","_insertBeforeMap","_nodeToWrapperMap","_idleCallbacks","_deferredRenderCallbacks","_allMergedNodes","nodeOperation","propValue","previousValue","updateEvent","eventName","currentValue","previousEvent","removeEventListener","evt","target","addEventListener","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","eventCallback","resolveRegistryItem","owningNode","instanceData","registryLabel","isLazyDefine","renderedToWrapper","rendered","parent","currentParent","requiresInsertBefore","hasPreviousSiblings","wrappedRendered","hasParentWNode","hasVirtualParentNode","hasCurrentParentChildren","insertBefore","previousItem","nodes","pop","mapNodeToInstance","renderedItem","text","order","parentId","exitAnimation","hasAnimations","nextParent","owningId","runDeferredProperties","next","processProperties","findInsertBefore","searchNode","nextSibling","childDomWrapperId","childWrapper","parentNode","setValue","domValue","onInputValue","onSelectValue","setProperties","currentProperties","nextWrapper","includesEventsAndAttributes","propNames","propCount","previousClassString","currentClassString","merged","domClasses","styleNames","styleCount","j","styleName","newStyleValue","style","tagName","lastIndexOf","previousAttributes","attrNames","attrCount","updateAttributes","_schedule","_runInvalidationQueue","requestAnimationFrame","getWNodeWrapper","invalidationQueue","previouslyRendered","sort","a","b","_runProcessQueue","sibling","_updateWidget","_runDomInstructionQueue","_cleanUpMergedNodes","_runCallbacks","mergedNode","removeChild","setDomNodeOnParentWrapper","meta","_process","reverse","parentDomNode","onAttach","parentElement","enterAnimation","enterAnimationActive","enter","owningWrapper","nodeHandler","inserted","currentDomNode","replaceChild","exitAnimationActive","exit","attached","addRoot","onDetach","callbacks","run","shift","requestIdleCallback","setTimeout","runAfterRenderCallbacks","runDeferredRenderCallbacks","createKeyMap","wrappers","mergeNodes","oldIndex","newIndex","currentLength","nextLength","instructions","currentKeys","nextKeys","currentWrapper","domElement","toUpperCase","mergeNodeIndex","_processMergeNodes","_processOne","dom","currentNode","parentWrapper","findParentDomNode","isVirtual","isBody","data","createTextNode","childNodes","createElementNS","createElement","_createDom","invalidate","Constructor","dirty","rendering","__setProperties__","__setChildren__","__render__","middleware","resolveMiddleware","results","uniqueId","payload","resolvedMiddleware","_createWidget","currentChildren","_updateDom","remove","bodyIds","wrapperChildren","_removeDom","processResult","_removeWidget","didRender","size","diffMap","runDiffs","ignoreProperties","propertyNames","propertiesDiff","nextChildren","mount","mountOptions","renderResult","wrapNodes","siblingId","decoratorMap","builtDecoratorMap","boundAuto","bind","IGNORE_LIST","getPrototypeOf","autoBindCache","WidgetBase_WidgetBase","_initialProperties","_changedPropertyKeys","_nodeHandler","_children","_decoratorCache","_properties","_boundRenderFunc","render","_boundInvalidate","inputProperties","_runAfterConstructors","MetaType","_metaMap","cached","changedPropertyKeys","originalProperties","_runBeforeProperties","registeredDiffPropertyNames","getDecorator","constructor","ownKeys","filter","k","boundFunc","defineProperty","configurable","autoBind","allProperties","checkedProperties","diffPropertyResults","runReactions","diffFunctions","reactionFunctions","executedReactions","reaction","propertyChanged","reactionRun","_runBeforeRenders","_runAfterRenders","decoratorKey","decoratorList","specificDecoratorList","decorators","allDecorators","instanceMap","unshift","buildDecorators","decoratorCache","_buildDecoratorList","beforeProperties","beforePropertiesFunction","beforeRenders","beforeRenderFunction","updatedRender","console","warn","dNode","afterRenders","afterRenderFunction","afterRender","isDomMeta","afterConstructors","afterConstructor","handleDecorator","handler","propertyKey","descriptor","addDecorator","registeredInjectorsMap","inject","name","getProperties","getInjector","registeredInjectors","diffProperty_diffProperty","diffFunction","reactionFunction","THEME_KEY","INJECTED_THEME_KEY","Themed_theme","theme","ThemedMixin","Base","Themed","_registeredBaseThemeKeys","_recalculateClasses","_theme","_recalculateThemeClasses","_getThemeClass","extraClasses","themeClassName","_baseThemeClassesReverseLookup","resultClassNames","_classes","extraClass","_registeredBaseTheme","join","baseThemes","finalBaseTheme","baseTheme","Themed_rest","currentClassNames","baseClass","createThemeClassesLookup","themeKey","computed","__decorate","customElement","config","userDefinedConfig","customElement_rest","__customElementDescriptor","Menu_Menu","_selectedId","onSelected","items","index","_onSelected","selected","menu_m","Menu_decorate","MenuItem_MenuItem","menuItem_m","onclick","_onClick","title","MenuItem_decorate","main_Example","log","main_element","getElementById","module","exports"," _key","root","menuContainer","home","logo"],"mappings":";;;;;;;;qIAwEO,IAAIA,EASAC,EAOAC,EAMAC,EAOAC,EAMAC,EAIAC,EAEAC,EAEAC,EAoEXR,EAASS,OAAOC,OAChBT,EAA2BQ,OAAOR,yBAClCC,EAAsBO,OAAOP,oBAC7BC,EAAwBM,OAAON,sBAC/BC,EAAKK,OAAOL,GACZC,EAAOI,OAAOJ,KACdC,EAA4BG,OAAOH,0BACnCC,EAAUE,OAAOF,QACjBC,EAASC,OAAOD,WCjELG,EAAsBC,EAAA,QAAOD,IA0GzB,IAAAE,EAAA,ECxBA,IAAAC,EAvI0BF,EAAA,QAAOG,eCzDhD,SAASC,IACR,OAAOC,EAAA,QAAQC,SAAQ,GAMxB,SAASC,IACR,MAAM,IAAIC,MAAM,iCAGV,MAAMC,EASZC,cACCC,KAAKC,QAAU,GAUhBF,IAAIG,GACH,MAAQD,QAASE,GAAaH,KAE9B,OADAG,EAASC,KAAKF,GACP,CACNH,UACCI,EAASE,OAAOF,EAASG,QAAQJ,IACjCA,EAAOK,YAUVR,UACC,OAAO,IAAIL,EAAA,QAASC,IACnBK,KAAKC,QAAQO,QAASN,IACrBA,GAAUA,EAAOK,SAAWL,EAAOK,YAEpCP,KAAKO,QAAUd,EACfO,KAAKS,IAAMb,EACXD,GAAQ,MChEX,MAAMe,EAAW,IAAIpB,EA4Df,MAAOqB,UAIHb,EAJVC,kCAYWC,KAAAY,aAA0D,IAAItB,EASxES,KAAKc,GACJb,KAAKY,aAAaJ,QAAQ,CAACM,EAASC,MA/DhC,SAAsBC,EAA6BC,GACxD,GAA4B,iBAAjBA,GAAmD,iBAAfD,IAAwD,IAA7BA,EAAWV,QAAQ,KAAa,CACzG,IAAIY,EAOJ,OANIR,EAASS,IAAIH,GAChBE,EAAQR,EAASU,IAAIJ,IAErBE,EAAQ,IAAIG,WAAWL,EAAWM,QAAQ,MAAO,UACjDZ,EAASa,IAAIP,EAAYE,IAEnBA,EAAMM,KAAKP,GAElB,OAAOD,IAAeC,GAqDjBQ,CAAYV,EAAaF,EAAME,OAClC,IAAID,GAASN,QAASkB,IACrBA,EAAOC,KAAK3B,KAAMa,OA0BtBd,GAAGgB,EAAWa,GACb,GAAIC,MAAMC,QAAQF,GAAW,CAC5B,MAAM3B,EAAU2B,EAASG,IAAKH,GAAa5B,KAAKgC,aAAajB,EAAMa,IACnE,MAAO,CACN7B,UACCE,EAAQO,QAASN,GAAWA,EAAOK,aAItC,OAAOP,KAAKgC,aAAajB,EAAMa,GAGxB7B,aAAagB,EAAmBa,GACvC,MAAMK,EAAYjC,KAAKY,aAAaQ,IAAIL,IAAS,GAGjD,OAFAkB,EAAU7B,KAAKwB,GACf5B,KAAKY,aAAaW,IAAIR,EAAMkB,GACrB,CACN1B,QAAS,KACR,MAAM0B,EAAYjC,KAAKY,aAAaQ,IAAIL,IAAS,GACjDkB,EAAU5B,OAAO4B,EAAU3B,QAAQsB,GAAW,MC3G3C,MAAMM,EAAmB,qBAoE1B,SAAUC,EAA6DC,GAC5E,OAAOC,QAAQD,GAAQA,EAAKE,QAAUJ,GAGjC,SAAUK,EAAiBH,GAChC,OAAOC,QAAQD,GAAQA,EAAKI,UAGvB,SAAUC,EAA0CC,GACzD,QAAoB,mBAATA,IAAuBA,EAAKC,WAMlC,SAAUH,EACfJ,GAEA,OAAOD,EAAwBC,IAASG,EAAiBH,GAiBpD,MAAOQ,UAAiBjC,EAWrBZ,gBACP8C,EACAT,GAEApC,KAAK8C,KAAK,CACT/B,KAAM8B,EACNE,OAAQ,SACRX,SAIKrC,OAAOiD,EAAsBZ,GAKnC,QAJ6Ba,IAAzBjD,KAAKkD,kBACRlD,KAAKkD,gBAAkB,IAAI5D,GAGxBU,KAAKkD,gBAAgB/B,IAAI6B,GAC5B,MAAM,IAAInD,iDAAiDmD,EAAMG,eAGlEnD,KAAKkD,gBAAgB3B,IAAIyB,EAAOZ,GAE5BA,aAAgB1C,EAAA,QACnB0C,EAAKgB,KACHC,IACArD,KAAKkD,gBAAiB3B,IAAIyB,EAAOK,GACjCrD,KAAKsD,gBAAgBN,EAAOK,GACrBA,GAEPE,IACA,MAAMA,IAGEpB,EAAwBC,IAClCpC,KAAKsD,gBAAgBN,EAAOZ,GAIvBrC,eAAeiD,EAAsBQ,GAK3C,QAJ+BP,IAA3BjD,KAAKyD,oBACRzD,KAAKyD,kBAAoB,IAAInE,GAG1BU,KAAKyD,kBAAkBtC,IAAI6B,GAC9B,MAAM,IAAInD,mDAAmDmD,EAAMG,eAGpE,MAAMO,EAAc,IAAI/C,EAElBgD,EAA6B,CAClCC,SAAUJ,EAAgB,IAAME,EAAYZ,KAAK,CAAE/B,KAAM,gBACzD2C,eAGD1D,KAAKyD,kBAAkBlC,IAAIyB,EAAOW,GAClC3D,KAAKsD,gBAAgBN,EAAOW,GAOtB5D,IACNiD,GAEA,IAAKhD,KAAKkD,kBAAoBlD,KAAKmB,IAAI6B,GACtC,OAAO,KAGR,MAAMZ,EAAOpC,KAAKkD,gBAAgB9B,IAAI4B,GAEtC,GAAIR,EAAYJ,IAASK,EAAeL,GACvC,OAAOA,EAGR,GAAIA,aAAgB1C,EAAA,QACnB,OAAO,KAGR,MAAMmE,EAA0CzB,IAkBhD,OAjBApC,KAAKkD,gBAAgB3B,IAAIyB,EAAOa,GAEhCA,EAAQT,KACNC,IA5GE,SACLjB,GAEA,OAAOC,QACND,GACCA,EAAK0B,eAAe,eACpB1B,EAAK0B,eAAe,aACnBtB,EAASJ,EAAK2B,UAAYtB,EAAeL,EAAK2B,WAsG1CC,CAAoCX,KACvCA,EAAaA,EAAWU,SAGzB/D,KAAKkD,gBAAiB3B,IAAIyB,EAAOK,GACjCrD,KAAKsD,gBAAgBN,EAAOK,GACrBA,GAEPE,IACA,MAAMA,IAID,KAGDxD,YAAeiD,GACrB,OAAKhD,KAAKyD,mBAAsBzD,KAAKiE,YAAYjB,GAI1ChD,KAAKyD,kBAAkBrC,IAAI4B,GAH1B,KAMFjD,IAAIiD,GACV,OAAOX,QAAQrC,KAAKkD,iBAAmBlD,KAAKkD,gBAAgB/B,IAAI6B,IAG1DjD,YAAYiD,GAClB,OAAOX,QAAQrC,KAAKyD,mBAAqBzD,KAAKyD,kBAAkBtC,IAAI6B,KC7PtE,SAASkB,EAAgBC,GACxB,MAAiD,oBAA1CjF,OAAOkF,UAAUjB,SAASxB,KAAKwC,IAAgCtC,MAAMC,QAAQqC,GAiB9E,SAASE,EAAUC,EAAuBC,GAChD,MAAO,CACNC,QAASF,IAAqBC,EAC9BJ,MAAOI,GAIF,SAASE,EAAQH,EAAuBC,EAAkBG,EAAQ,GACxE,IAAIF,GAAU,EAEd,MAAMG,EAAmBL,GAAoBJ,EAAgBI,GACvDM,EAAmBL,GAAeL,EAAgBK,GAExD,IAAKI,IAAqBC,EACzB,MAAO,CACNJ,SAAS,EACTL,MAAOI,GAIT,MAAMM,EAAe3F,OAAOJ,KAAKwF,GAC3BQ,EAAU5F,OAAOJ,KAAKyF,GAY5B,MAAO,CACNC,QAVAA,EADGK,EAAaE,SAAWD,EAAQC,QAGzBD,EAAQE,KAAMC,GACnBP,EAAQ,EACJD,EAAQF,EAAYU,GAAMX,EAAiBW,GAAMP,EAAQ,GAAGF,QAE7DD,EAAYU,KAASX,EAAiBW,IAK9Cd,MAAOI,GAIF,SAASW,EAAKZ,EAAuBC,GAC3C,IAAIY,EAYJ,OATEA,EAFyB,mBAAhBZ,EACNA,EAAYjC,QAAUJ,EAChBmC,EAAUC,EAAkBC,GAlDjC,SAAgBD,EAAuBC,GAC7C,MAAO,CACNC,SAAS,EACTL,MAAOI,GAiDGa,CAAOd,EAAkBC,GAEzBL,EAAgBK,GACjBE,EAAQH,EAAkBC,GAE1BF,EAAUC,EAAkBC,GC6BxB,IC3FHc,ED2FGC,EA3FT,cAA+B3E,EAMpCZ,cACCwF,QANOvF,KAAAwF,UAAY,IAAI5C,EAChB5C,KAAAyF,wBAA0D,IAAIrG,EAC9DY,KAAA0F,0BAA4D,IAAItG,EAKvEY,KAAKS,IAAIT,KAAKwF,WAQdxF,KAAKS,IAAI,CAAEF,QAPK,KACXP,KAAK2F,eACR3F,KAAKyF,wBAAwBG,OAAO5F,KAAK2F,cACzC3F,KAAK0F,0BAA0BE,OAAO5F,KAAK2F,cAC3C3F,KAAK2F,kBAAe1C,MAMvB4C,SAAgBF,GACX3F,KAAK2F,eACR3F,KAAKyF,wBAAwBG,OAAO5F,KAAK2F,cACzC3F,KAAK0F,0BAA0BE,OAAO5F,KAAK2F,eAE5C3F,KAAK2F,aAAeA,EAGrBE,WACC,OAAO7F,KAAK2F,aAGN5F,OAAOiD,EAAsB8C,GACnC9F,KAAKwF,UAAUO,OAAO/C,EAAO8C,GAGvB/F,eAAeiD,EAAsBY,GAC3C5D,KAAKwF,UAAUQ,eAAehD,EAAOY,GAG/B7D,IAAIiD,GACV,OAAOhD,KAAKwF,UAAUrE,IAAI6B,IAAUX,QAAQrC,KAAK2F,cAAgB3F,KAAK2F,aAAaxE,IAAI6B,IAGjFjD,YAAYiD,GAClB,OAAOhD,KAAKwF,UAAUvB,YAAYjB,IAAUX,QAAQrC,KAAK2F,cAAgB3F,KAAK2F,aAAa1B,YAAYjB,IAGjGjD,IACNiD,EACAiD,GAA4B,GAE5B,OAAOjG,KAAKkG,KAAKlD,EAAOiD,EAAkB,MAAOjG,KAAKyF,yBAGhD1F,YAAeiD,EAAsBiD,GAA4B,GACvE,OAAOjG,KAAKkG,KAAKlD,EAAOiD,EAAkB,cAAejG,KAAK0F,2BAGvD3F,KACPiD,EACAiD,EACAE,EACAC,GAEA,MAAMC,EAAaJ,EAAmB,CAACjG,KAAK2F,aAAc3F,KAAKwF,WAAa,CAACxF,KAAKwF,UAAWxF,KAAK2F,cAClG,IAAK,IAAIW,EAAI,EAAGA,EAAID,EAAWtB,OAAQuB,IAAK,CAC3C,MAAMC,EAAgBF,EAAWC,GACjC,IAAKC,EACJ,SAED,MAAMnE,EAAOmE,EAASJ,GAAiBnD,GACjCwD,EAAmBJ,EAAShF,IAAImF,IAAa,GACnD,GAAInE,EACH,OAAOA,EACD,IAAyC,IAArCoE,EAAiBlG,QAAQ0C,GAAe,CAClD,MAAM9C,EAASqG,EAASE,GAAGzD,EAAQnC,IAEhB,WAAjBA,EAAMkC,QACL/C,KAAamG,GAAiBnD,EAAOiD,KAAsBpF,EAAMuB,MAElEpC,KAAK8C,KAAK,CAAE/B,KAAM,iBAGpBf,KAAKS,IAAIP,GACTkG,EAAS7E,IAAIgF,EAAU,IAAIC,EAAkBxD,KAG/C,OAAO,QCvFT,SAAYqC,GACXA,EAAA,sBACAA,EAAA,gBAFD,CAAYA,MAAa,KA2CV,IAAAqB,EAjCT,cAA2B/F,EAAjCZ,kCACSC,KAAA2G,SAAW,IAAIrH,EAEhBS,IAAIkF,GACV,OAAOjF,KAAK2G,SAASvF,IAAI6D,GAGnBlF,IAAIkF,GACV,OAAOjF,KAAK2G,SAASxF,IAAI8D,GAGnBlF,IAAI6G,EAAkB3B,GAC5BjF,KAAK2G,SAASpF,IAAI0D,EAAK2B,GACvB5G,KAAK8C,KAAK,CAAE/B,QAASkE,MAGflF,UACNC,KAAK8C,KAAK,CAAE/B,KAAMsE,EAAcwB,SAG1B9G,OAAOkF,GACbjF,KAAK2G,SAASf,OAAOX,GAGflF,eACNC,KAAK8C,KAAK,CAAE/B,KAAMsE,EAAcyB,YAG1B/G,QACNC,KAAK2G,SAASI,UCwID,IAAAC,EAhFkB3H,EAAA,QAAO4H,4RCkHxC,MAAMC,EAA8B,GAC9BC,EAAiB,CAAC,QAAS,OAAQ,iBAAkB,SAErDC,EAAgBC,6BAChBC,EAAkBD,+BAClBE,EAAQ,eACRC,EAAQ,eACRC,EAAW,kBAEX,SAAUC,EAAWtF,GAC1B,OAAOA,GAA0B,IAAlBA,EAAKuF,SAOrB,SAASC,EAAeC,GACvB,OAAOA,GAASC,EAAQD,EAAMnF,MAG/B,SAASqF,EAAeF,GACvB,QAASA,GAASG,EAAQH,EAAMnF,MAGjC,SAASuF,EAAiBJ,GACzB,OAAOE,EAAeF,IAA6B,YAAnBA,EAAMnF,KAAKwF,IAG5C,SAASC,EAAcC,GACtB,OAAOL,EAAeK,IAAiC,SAArBA,EAAQ1F,KAAKwF,IAO1C,SAAUJ,EAAyCD,GACxD,OAAOxF,QAAQwF,IAAmB,IAAVA,GAAmC,iBAAVA,GAAsBA,EAAM9G,OAASwG,GAGjF,SAAUS,EAAQH,GACvB,OAAOxF,QACNwF,IAAmB,IAAVA,GAAmC,iBAAVA,IAAuBA,EAAM9G,OAASyG,GAASK,EAAM9G,OAAS0G,IAI5F,SAAUY,EAAWR,GAC1B,OAAOxF,QAAQwF,IAAmB,IAAVA,GAAmC,iBAAVA,GAAsBA,EAAM9G,OAAS0G,GAgDjF,SAAUa,EACfC,EAOAC,EACAC,GAEA,OAAIhG,EAAkB8F,GACdA,EAAwBC,EAAYC,IAGxCX,EAAWS,KACdC,EAAUtJ,OAAAC,OAAA,GAASoJ,EAAwBC,WAAwBA,GACnEC,EAAWA,GAAsBF,EAAwBE,SACzDF,EAA0BA,EAAwBG,mBAG5C,CACND,SAAUA,GAAY,GACtBC,kBAAmBH,EACnBC,aACAzH,KAAMwG,IAiBF,SAAUoB,EACfT,EACAU,EAA8E,GAC9EH,GAEA,IACII,EADAL,EAA0DI,EAa9D,GAVI/G,MAAMC,QAAQ8G,KACjBH,EAAWG,EACXJ,EAAa,IAGY,mBAAfA,IACVK,EAA6BL,EAC7BA,EAAa,IAGVR,EAAQE,GAAM,CACjB,IAAIY,QAAEA,EAAU,GAAEC,OAAEA,EAAS,IAAyBP,EAArBQ,EAAAC,EAAAT,EAAA,sBAC7BU,EAAAhB,EAAAM,YAAEM,QAASK,EAAc,GAAIJ,OAAQK,EAAa,IAAEF,EAAEG,EAAAJ,EAAAC,EAAA,sBAC1DC,EAActH,MAAMC,QAAQqH,GAAeA,EAAc,CAACA,GAC1DL,EAAUjH,MAAMC,QAAQgH,GAAWA,EAAU,CAACA,GAC9CC,EAAM7J,OAAAC,OAAA,GAAQiK,EAAeL,GAC7BP,EAAUtJ,OAAAC,OAAA,GAAQkK,EAAmBL,EAAa,CAAEF,QAAS,IAAIK,KAAgBL,GAAUC,WAC3FN,EAAWA,GAAsBP,EAAIO,SACrCP,EAAMA,EAAIA,IAGX,MAAO,CACNA,MACAW,6BACAJ,WACAD,aACAzH,KAAMyG,GAyBD,MAAM8B,GAAgB,kBAEvB,MAAOC,GAAbxJ,cAECC,KAAAwI,WAAgB,IAoDjB,SAASgB,GAAwBC,EAAcC,GAC9C,MACChH,MAAMiH,SAAEA,EAAQnB,WAAEA,EAAUoB,WAAEA,IAC3BF,EACJ,IAAKC,GAAyB,SAAbA,EAChB,MAAO,CACNnB,WAAYkB,EAAQG,mBAClB3K,OAAAC,OAAA,GAAMuK,EAAQG,mBAAuBH,EAAQhH,KAAK8F,YACjDkB,EAAQhH,KAAK8F,WAChBoB,WAAYF,EAAQhH,KAAKkH,WACzBE,OAAQJ,EAAQhH,KAAKoH,QAEhB,GAAiB,SAAbH,EACV,MAAO,CACNnB,WAAY,GACZoB,WAAYF,EAAQhH,KAAKkH,WAAa,QAAK3G,EAC3C6G,OAAQJ,EAAQhH,KAAKoH,QAGvB,IAAId,EAAqB,CACxBR,WAAY,IAEb,OAAIoB,GACHZ,EAAcY,WAAa,GAC3BZ,EAAcc,OAASJ,EAAQhH,KAAKoH,OACpC5K,OAAOJ,KAAK0J,GAAYhI,QAASuJ,IAChCf,EAAcR,WAAWuB,GAAYN,EAAQM,KAE9C7K,OAAOJ,KAAK8K,GAAYpJ,QAASwJ,IAChChB,EAAcY,WAAWI,GAAYP,EAAQQ,aAAaD,KAEpDhB,IAERA,EAAcR,WAAatJ,OAAOJ,KAAK0J,GAAY0B,OAClD,CAACC,EAAOC,KACPD,EAAMC,GAAYX,EAAQQ,aAAaG,IAAaX,EAAQW,GACrDD,GAER,IAEMnB,GAuCR,SAASqB,GAAKC,EAAsBC,GACnC,GAAIxC,EAAeuC,IAAWvC,EAAewC,GAC5C,QAAIlC,EAAWiC,EAAO5H,QAAS2F,EAAWkC,EAAO7H,OAC5C4H,EAAO5H,KAAK+G,UAAYc,EAAO7H,KAAK+G,WAIrCa,EAAO5H,KAAKwF,MAAQqC,EAAO7H,KAAKwF,KAGhCoC,EAAO5H,KAAK8F,WAAWvD,MAAQsF,EAAO7H,KAAK8F,WAAWvD,KAIpD,GAAI2C,EAAe0C,IAAW1C,EAAe2C,GAAS,CAC5D,MAAMC,EAAqBF,EAAOG,cAAgBH,EAAO5H,KAAKgG,kBACxDgC,EAAqBH,EAAOE,cAAgBF,EAAO7H,KAAKgG,kBAC9D,YAAwBzF,IAApBqH,EAAOK,UAAwD,iBAAvBD,KAGxCF,IAAuBE,GAGvBJ,EAAO5H,KAAK8F,WAAWvD,MAAQsF,EAAO7H,KAAK8F,WAAWvD,KAK3D,OAAO,EAGR,SAAS2F,GAAiBnC,EAA0BoC,EAAsBC,GACzE,IAAK,IAAIxE,EAAIwE,EAAOxE,EAAImC,EAAS1D,OAAQuB,IACxC,GAAI+D,GAAK5B,EAASnC,GAAIuE,GACrB,OAAOvE,EAGT,OAAQ,EAGT,SAASyE,GAAqBjC,EAAqD,IAClF,IAAIkC,EAAa,GACjB,GAAInJ,MAAMC,QAAQgH,GAAU,CAC3B,IAAK,IAAIxC,EAAI,EAAGA,EAAIwC,EAAQ/D,OAAQuB,IAAK,CACxC,IAAI2E,EAAYnC,EAAQxC,GACpB2E,IAA2B,IAAdA,IAChBD,EAAaA,KAAgBA,KAAcC,IAAcA,GAG3D,OAAOD,EAKR,OAHIlC,IAAuB,IAAZA,IACdkC,EAAalC,GAEPkC,EAGR,SAASE,GAAgBzB,EAAkBO,EAAkBmB,EAA+BC,GACvFA,IAAchE,GAA8B,SAAb4C,GAAuBmB,EACzD1B,EAAQ4B,eAAe/D,EAAiB0C,EAAUmB,GAC1B,SAAbnB,GAAqC,KAAdmB,QAAmClI,IAAdkI,EACvD1B,EAAQ6B,gBAAgBtB,GAExBP,EAAQ8B,aAAavB,EAAUmB,GAIjC,SAASK,GAAUC,GAClB,OAAO5J,MAAMuC,UAAUsH,MAAM/J,KAAK8J,GAGnC,SAASE,GAAcC,EAAeC,GACrC,MAAMC,EAAU,CAACtD,EAAiBC,KACjC,GAAID,EAAY,CACf,MAAMrD,EAASmD,EAAEsD,EAAUpD,EAAYC,GAGvC,OAFAmD,EAASpJ,UAAW,EACpBoJ,EAASC,YAAcA,EAChB1G,EAER,MAAO,CACN0G,cACAD,aAIF,OADAE,EAAQnJ,WAAY,EACbmJ,EAzNAvC,GAAAxI,KAAOuI,GA2Pf,MAAMwC,GA/BA,SACLD,EAAiB,IAgBjB,SAASE,EACRH,GAOA,OAAOD,GAAcC,EAAUC,GAGhC,OADAE,EAAQvD,WAxBR,WAWC,OAVA,SACCoD,GAOA,OAAOD,GAAcC,EAAUC,KAgB1BE,EAGQC,GAYT,MAAMC,GAAoB,IAAI1M,EAC/B2M,GAAgB,IAAI5M,EACpB6M,GAAoB,IAAInF,EAC9B,IAAIoF,GAAY,EACZC,GAAS,EAEb,SAASC,GAAaC,EAAYtH,EAAsBvC,GACvD,MAAM8J,EAAaN,GAAc9K,IAAImL,GACrC,GAAIC,EAAY,CACfA,EAAWC,QAAUD,EAAWC,SAAW,IAAInN,EAC1BkN,EAAWC,QAAQrL,IAAI6D,IAE3CuH,EAAWC,QAAQlL,IAAI0D,EAAKvC,GAEzByJ,GAAkBhL,OAAOoL,KAAMtH,OAClCuH,EAAW9I,cACXyI,GAAkBvG,UAAU2G,KAAMtH,OAKrC,SAASyH,GAAeC,GACvBA,EAAWnM,QAASD,GAAYA,KAChCoM,EAAW5F,QAYe+E,GAAQ,EAAGS,SACrC,MAAOK,GAAYL,EAAGM,MAAM,KAC5B,MAAO,KACN,MAAML,EAAaN,GAAc9K,IAAIwL,GACrC,GAAIJ,EACH,OAAOA,EAAW9I,iBAKDoI,GAAQ,EAAGS,SACvB,CACNxM,IAAIkF,GACH,MAAO2H,GAAYL,EAAGM,MAAM,KACtBL,EAAaN,GAAc9K,IAAIwL,GACrC,GAAIJ,EAAY,CACfA,EAAWC,QAAUD,EAAWC,SAAW,IAAInN,EAC/C,MAAMoD,EAAO8J,EAAWC,QAAQrL,IAAI6D,GACpC,GAAIvC,EACH,OAAOA,EAERyJ,GAAkBW,OAAOF,KAAY3H,KAEtC,OAAO,SAKkB6G,GAAQ,EAAGS,QAC/B,CAACQ,EAAsBC,KAC7B,MAAOJ,GAAYL,EAAGM,MAAM,KACtBL,EAAaN,GAAc9K,IAAIwL,GACrC,GAAIJ,EAAY,CACfA,EAAWS,cAAgBT,EAAWS,eAAiB,IAAI3N,EAC3DkN,EAAWU,qBAAuBV,EAAWU,sBAAwB,IAAIlG,EACzE,MAAMmG,EAAkBX,EAAWS,cAAc7L,IAAImL,IAAO,IAAIjN,EAC3D6N,EAAgBhM,IAAI4L,KACxBI,EAAgB5L,IAAIwL,EAAcC,GAClCR,EAAWU,qBAAqBJ,IAAIC,IAErCP,EAAWS,cAAc1L,IAAIgL,EAAIY,MAKbrB,GAAQ,EAAGS,QACzBa,IACP,MAAOR,GAAYL,EAAGM,MAAM,KACtBL,EAAaN,GAAc9K,IAAIwL,GACjCJ,IACHA,EAAWG,WAAaH,EAAWG,YAAc,IAAIrN,EAChDkN,EAAWG,WAAWxL,IAAIoL,IAC9BC,EAAWG,WAAWpL,IAAIgL,EAAIa,MAMPtB,GAAQ,EAAGS,SACrC,MAAOK,GAAYL,EAAGM,MAAM,KAC5B,MAAO,KACN,MAAML,EAAaN,GAAc9K,IAAIwL,GACrC,OAAIJ,GACEA,EAAWa,kBACfb,EAAWa,gBAAkB,IAAI/H,EACjCkH,EAAWa,gBAAgBxH,KAAO2G,EAAWjG,SAC7CiG,EAAWa,gBAAgB5G,GAAG,aAAc+F,EAAW9I,cAExD8I,EAAWa,gBAAkBb,EAAWa,iBAAmB,IAAI/H,EACxDkH,EAAWa,iBAEZ,QAIYvB,GAAQ,EAAGS,SAC/B,MAAOK,GAAYL,EAAGM,MAAM,KAC5B,IAAIS,GAAa,EACjB,MAAO,CACNvN,QACC,MAAMyM,EAAaN,GAAc9K,IAAIwL,IAChCU,GAAcd,IAClBA,EAAWe,UAAYf,EAAWe,UAAY,EAC9CD,GAAa,IAGfvN,SACC,MAAMyM,EAAaN,GAAc9K,IAAIwL,GACjCU,GAAcd,IACjBA,EAAWe,UAAYf,EAAWe,UAAY,EAC9CD,GAAa,OA4wCF,IAAAE,GAtwCT,SAAmBC,GACxB,IAiBIC,EAGAC,EApBAC,EAA8B,CACjCC,MAAM,EACNC,OAAO,EACPC,gBAAY9K,EACZwG,QAASpK,EAAA,QAAO2O,SAASC,KACzB1H,SAAU,IAAI3D,GAEXsL,EAA8C,GAC9CC,EAAyE,GACzEC,EAAiF,GACjFC,EAA8C,GAC9CC,EAAY,IAAI/O,EAChBgP,EAAkB,IAAIjP,EACtBkP,EAAqB,IAAIjP,EACzBkP,EAAwB,IAAInP,EAC5BoP,EAA4D,IAAInP,EAChEoP,EAAoB,IAAIpP,EAExBqP,EAA6B,GAC7BC,EAAuC,GAEvCC,EAA0B,GAE9B,SAASC,EACRhF,EACAiF,EACAC,EACAxF,GAEA,IAAItE,EAAS6J,IAAcC,EACF,mBAAdD,IACV7J,EAAS6J,MAEK,IAAX7J,GACH0J,EAAyBzO,KAAK,KAC7BqJ,EAAQM,OAKX,SAASmF,EACRzF,EACA0F,EACAC,EACAH,GAEA,GAAIA,EAAe,CAClB,MAAMI,EAAgBf,EAAUlN,IAAI6N,GACpCI,GAAiB5F,EAAQ6F,oBAAoBH,EAAWE,GAGzD,IAAIzD,EAAWwD,EAEG,UAAdD,IACHvD,EAAW,SAAoB2D,GAC9BH,EAAazN,KAAK3B,KAAMuP,GACvBA,EAAIC,OAAe,iBAAoBD,EAAIC,OAA4BrL,QAI1EsF,EAAQgG,iBAAiBN,EAAWvD,GACpC0C,EAAU/M,IAAI6N,EAAcxD,GAG7B,SAAS8D,EACRjG,EACAkG,EACAnH,EACAoH,GAAsB,GAEtB1Q,OAAOJ,KAAK6Q,GAAoBnP,QAASuJ,IACxC,MAAM8F,EAAoC,OAA1B9F,EAAS+F,OAAO,EAAG,IAAeF,EAC5CT,EAAYS,EAAa7F,EAAWA,EAAS+F,OAAO,GAC1D,GAAID,IAAYrH,EAAWuB,GAAW,CACrC,MAAMgG,EAAgBzB,EAAUlN,IAAIuO,EAAmB5F,IACnDgG,GACHtG,EAAQ6F,oBAAoBH,EAAWY,MAM3C,SAASC,EAAoB5H,EAAuBuC,EAAgB4B,GACnE,IAAK/J,EAAS4F,EAAQ1F,KAAKgG,mBAAoB,CAC9C,MAAMuH,EAAatB,EAAkBvN,IAAIgH,EAAQ1F,MAQjD,IAAI6D,EACJ,GARI0J,IACCA,EAAWtF,SACdA,EAAWsF,EAAWtF,SAEtB4B,EAAK0D,EAAW1D,IAId5B,EAAU,CACb,MAAMuF,EAAejE,GAAkB7K,IAAIuJ,GACvCuF,IACH3J,EAAW2J,EAAa3J,eAEnB,QAAWtD,IAAPsJ,EAAkB,CAC5B,MAAMC,EAAaN,GAAc9K,IAAImL,GACjCC,IACEA,EAAWa,kBACfb,EAAWa,gBAAkB,IAAI/H,EACjCkH,EAAWa,gBAAgBxH,KAAO2G,EAAWjG,SAC7CiG,EAAWa,gBAAgB5G,GAAG,aAAc+F,EAAW9I,cAExD6C,EAAWiG,EAAWa,iBAIxB,GAAI9G,EAAU,CACb,IAAI4J,EACJ,GAtrBJ,SAAsB/N,GACrB,OAAOC,QAAQD,GAAQA,EAAKY,OAqrBrBoN,CAAahI,EAAQ1F,KAAKgG,mBAAoB,CACjD,MAAM1F,MAAEA,EAAKyH,aAAEA,GAAiBrC,EAAQ1F,KAAKgG,kBACxCnC,EAASpF,IAAI6B,IACjBuD,EAASR,OAAO/C,EAAOyH,GAExB0F,EAAgBnN,OAEhBmN,EAAgB/H,EAAQ1F,KAAKgG,kBAE9B,IAAItG,EAAOmE,EAASnF,IAAI+O,GACxB,GAAI1N,EAAeL,GAAO,CACzB,MAAMM,EAAON,EAAKgG,EAAQ1F,KAAK8F,WAAYJ,EAAQ1F,KAAK+F,UACpDlG,EAAiBG,EAAKgG,qBACzBN,EAAQqC,aAAe/H,EAAKgG,wBAG7BN,EAAQqC,aAAerI,IAoB3B,SAASiO,EACRC,EACAC,EACAC,GAEA,MAAMC,qBAAEA,EAAoBC,oBAAEA,EAAmBtF,UAAEA,EAAS1G,MAAEA,GAAU6L,EAClEI,EAAkC,GAClCC,EAAiBhJ,EAAe2I,GAChCM,EAAuB5I,EAAiBsI,GAGxCO,GADJ/I,EAAeyI,IAAkB/B,EAAsBrN,IAAIoP,EAAcjE,KAAQ,IAC5BxH,OAAS,EAC1DgM,GACHN,IAAgD,IAAxBC,KAAmCE,GAAkBC,IAC9EC,GAA4BR,EAASvL,OAAS,EAChD,IAAIiM,EACApJ,EAAe2I,IAAWD,EAASvL,QA9BxC,SAA2BkM,EAAgB7I,GAC1C,KAAO6I,EAAMlM,QAAQ,CACpB,IAAIrC,EAAOuO,EAAMC,OACbpJ,EAAQpF,IAASsF,EAAQtF,MACvBiM,EAAkBxN,IAAIuB,KAC1BiM,EAAkBpN,IAAImB,EAAM0F,GACxB1F,EAAK+F,UAAY/F,EAAK+F,SAAS1D,SAClCkM,EAAQ,IAAIA,KAAUvO,EAAK+F,cAwB9B0I,CAAkB,IAAIb,GAAWC,GAElC,IAAK,IAAIjK,EAAI,EAAGA,EAAIgK,EAASvL,OAAQuB,IAAK,CACzC,IAAI8K,EAAed,EAAShK,GAC5B,IAAK8K,IAAiC,IAAjBA,EACpB,SAE2B,iBAAjBA,IACVA,EAxsBI,CACNlJ,IAAK,GACLM,WAAY,GACZC,cAAUxF,EACVoO,QAosB6BD,IAnsB7BrQ,KAAMyG,IAqsBL,MAAMyI,EAAatB,EAAkBvN,IAAIgQ,GACnChJ,EAAwB,CAC7B1F,KAAM0O,EACN1M,MAAOA,EAAQ,EACf4M,MAAOhL,EACPiL,SAAUhB,EAAOhE,GACjBkE,qBAAsBM,EACtBH,iBACAxF,UAAWA,GAEZ,GAAIpD,EAAQoJ,KACPA,EAAavI,6BACfT,EAAyByB,mBAAqBuH,EAAavI,4BAA2B,IAEpFuI,EAAa5I,WAAWgJ,eAAe,CAC1CjB,EAAOkB,eAAgB,EACvB,IAAIC,EAAanD,EAAgBnN,IAAImP,EAAOgB,UAC5C,KAAOG,IACFA,EAAWD,eAGfC,EAAWD,eAAgB,EAC3BC,EAAanD,EAAgBnN,IAAIsQ,EAAWH,UAI3CtB,IACH7H,EAAQuJ,SAAW1B,EAAW1D,IAE3BzE,EAAQsJ,IACXpB,EAAoB5H,EAA0BmI,EAAe5F,SAAW4F,EAAehE,IAEpFyE,GACHxC,EAAmBjN,IAAIyP,EAAc5I,GAEtCuI,EAAgBvQ,KAAKgI,GACrB4I,EAAe5I,EAEhB,OAAOuI,EAqBR,SAASiB,EAAsBC,GAC9B,MAAMhJ,2BAAEA,GAA+BgJ,EAAKnP,KAC5C,GAAImG,EAA4B,CAC/B,MAAML,EAAaqJ,EAAKnP,KAAK8F,WAC7BqG,EAAyBzO,KAAK,KAC7B,GAAImO,EAAgBpN,IAAI0Q,EAAKF,UAAW,CACvC,MAAM9H,EAAqBgI,EAAKhI,mBAChCgI,EAAKhI,mBAAqBhB,GAA2B,GACrDiJ,EAAkBD,EAAM,CACvBrJ,WAAUtJ,OAAAC,OAAA,GAAO0K,EAAuBrB,SAO7C,SAASuJ,EAAiBF,GACzB,IAAId,EAA4B,KAC5BiB,EAAuCH,EAC3C,MAAQd,GAAc,CACrB,MAAMkB,EAAczD,EAAmBpN,IAAI4Q,GAC3C,GAAIC,EAAJ,CACC,IAAIxI,EAAUwI,EAAYxI,QAC1B,IAAK7B,EAAeqK,IAAgBhK,EAAiBgK,KAAiBA,EAAYC,kBAAmB,CACpG,MAAMC,EAAe5D,EAAgBnN,IAAI6Q,EAAYC,mBACjDC,IACH1I,EAAU0I,EAAa1I,SAGzB,GAAIA,GAAWA,EAAQ2I,WAAY,CAClCrB,EAAetH,EACf,MAEDuI,EAAaC,OAId,KADAD,EAAaA,GAAczD,EAAgBnN,IAAI4Q,EAAWT,YACtCxJ,EAAeiK,KAAgB/J,EAAiB+J,GACnE,MAGF,OAAOjB,EAGR,SAASsB,EAAS5I,EAAcuF,EAAiBC,GAChD,MAAMqD,EAAW7I,EAAQtF,MACnBoO,EAAe9I,EAAQ,iBACvB+I,EAAgB/I,EAAQ,gBAE1B+I,GAAiBF,IAAaE,GACjC/I,EAAQtF,MAAQqO,EACZ/I,EAAQtF,QAAUqO,IACrB/I,EAAQ,qBAAkBxG,KAEhBsP,GAAgBD,IAAaC,GAAiBvD,IAAcC,KACvExF,EAAQtF,MAAQ6K,EAChBvF,EAAQ,sBAAmBxG,GAI7B,SAASwP,EACRhJ,EACAiJ,EAAqC,GACrCC,EACAC,GAA8B,GAE9B,MAAMpK,EAAamK,EAAY9I,mBAC7B3K,OAAAC,OAAA,GAAMwT,EAAY9I,mBAAuB8I,EAAYjQ,KAAK8F,YACzDmK,EAAYjQ,KAAK8F,WACdqK,EAAY3T,OAAOJ,KAAK0J,GACxBsK,EAAYD,EAAU9N,QACU,IAAlC8N,EAAUvS,QAAQ,YAAqBoS,EAAkB5J,SAC5DW,EAAQ6B,gBAAgB,SAGzBsH,GAA+BlD,EAAqBjG,EAASiJ,EAAmBlK,GAEhF,IAAK,IAAIlC,EAAI,EAAGA,EAAIwM,EAAWxM,IAAK,CACnC,MAAMyD,EAAW8I,EAAUvM,GAC3B,IAAI0I,EAAYxG,EAAWuB,GAC3B,MAAMkF,EAAgByD,EAAkB3I,GACxC,GAAiB,YAAbA,EAAwB,CAC3B,MAAMgJ,EAAsBhI,GAAqBkE,GACjD,IAAI+D,EAAqBjI,GAAqBiE,GAC9C,GAAI+D,IAAwBC,EAC3B,GAAIA,EAAoB,CACvB,GAAIL,EAAYM,OAAQ,CACvB,MAAMC,GAAczJ,EAAQQ,aAAa,UAAY,IAAI4C,MAAM,KAC/D,IAAK,IAAIvG,EAAI,EAAGA,EAAI4M,EAAWnO,OAAQuB,KACa,IAA/C0M,EAAmB1S,QAAQ4S,EAAW5M,MACzC0M,KAAwBE,EAAW5M,MAAM0M,KAI5CvJ,EAAQ8B,aAAa,QAASyH,QAE9BvJ,EAAQ6B,gBAAgB,cAGpB,IAA0C,IAAtCnE,EAAe7G,QAAQyJ,GACjCgF,EAAchF,EAAUiF,EAAWC,EAAexF,QAC5C,GAAiB,WAAbM,EAAuB,CACjC,MAAMoJ,EAAajU,OAAOJ,KAAKkQ,GACzBoE,EAAaD,EAAWpO,OAC9B,IAAK,IAAIsO,EAAI,EAAGA,EAAID,EAAYC,IAAK,CACpC,MAAMC,EAAYH,EAAWE,GACvBE,EAAgBvE,EAAUsE,GAE5BC,KADkBtE,GAAiBA,EAAcqE,MAIpD7J,EAAQ+J,MAAcF,GAAaC,GAAiB,UAMtD,GAHKvE,GAAsC,iBAAlBC,IACxBD,EAAY,IAEI,UAAbjF,EACsC,WAApCN,EAAwBgK,UAC3BhK,EAAgB,gBAAkBuF,GAEpCqD,EAAS5I,EAASuF,EAAWC,QACvB,GAAiB,QAAblF,GAAsBiF,IAAcC,EAAe,CAC7D,MAAMlO,SAAciO,EACP,aAATjO,GAAyD,IAAlCgJ,EAAS2J,YAAY,KAAM,IAAYd,EACjE1D,EAAYzF,EAASM,EAAS+F,OAAO,GAAId,EAAWC,GACjC,WAATlO,GAAkC,cAAbgJ,GAA4B6I,EAC3D1H,GAAgBzB,EAASM,EAAUiF,EAAW2D,EAAYvH,WACnC,eAAbrB,GAA0C,cAAbA,EAClCN,EAAgBM,KAAciF,IACjCvF,EAAgBM,GAAYiF,GAG7BvF,EAAgBM,GAAYiF,IAiDlC,SAAS8C,EAAkBD,EAAoBlC,GAC9C,GAAIkC,EAAKnP,KAAKkH,YAAciI,EAAKnP,KAAKoH,OAAQ,EAn7BhD,SACCL,EACAkK,EACA/J,EACAwB,GAEA,MAAMwI,EAAY1U,OAAOJ,KAAK8K,GACxBiK,EAAYD,EAAU7O,OAC5B,IAAK,IAAIuB,EAAI,EAAGA,EAAIuN,EAAWvN,IAAK,CACnC,MAAM0D,EAAW4J,EAAUtN,GACrB6E,EAAYvB,EAAWI,GAEzBmB,IADsBwI,EAAmB3J,IAE5CkB,GAAgBzB,EAASO,EAAUmB,EAAWC,IAu6B9C0I,CACCjC,EAAKpI,QACLkG,EAAmB/F,YAAc,GACjCiI,EAAKnP,KAAKkH,WACViI,EAAKzG,WAENqH,EAAcZ,EAAKpI,QAAwBkG,EAAmBnH,WAAYqJ,GAAM,GAChF,MAAM/H,EAAS+H,EAAKnP,KAAKoH,QAAU,GAC/B6F,EAAmB7F,QACtB4F,EACCmC,EAAKpI,QACLkG,EAAmB7F,QAAU,GAC7B+H,EAAKnP,KAAKoH,QACV,GAGF6F,EAAmB7F,OAAS6F,EAAmB7F,QAAU,GACzD5K,OAAOJ,KAAKgL,GAAQtJ,QAASK,IAC5BqO,EAAY2C,EAAKpI,QAAwB5I,EAAOiJ,EAAOjJ,GAAQ8O,EAAmB7F,OAAOjJ,WAG1F4R,EAAcZ,EAAKpI,QAAwBkG,EAAmBnH,WAAYqJ,GA2C5E,SAASkC,IACR,MAAMlG,KAAEA,GAASD,EACbC,EACHmG,IACWtG,IACXA,EAAmBrO,EAAA,QAAO4U,sBAAsB,KAC/CD,OAKH,SAASE,EAAgB3H,GACxB,MAAMnE,EAAUmG,EAAgBnN,IAAImL,GACpC,GAAInE,GAAWR,EAAeQ,GAC7B,OAAOA,EAIT,SAAS4L,IACRtG,OAAmBzK,EACnB,IAAIkR,EAAoB,IAAIjG,GAC5B,MAAMkG,EAAqB,GAkB3B,IAAIhS,EACJ,IAlBA8L,EAAqB,GACrBiG,EAAkBE,KAAK,CAACC,EAAGC,KAC1B,IAAIpP,EAASoP,EAAE7P,MAAQ4P,EAAE5P,MAIzB,OAHe,IAAXS,IACHA,EAASoP,EAAEjD,MAAQgD,EAAEhD,OAEfnM,IAEJiJ,EAAsBrJ,SACzBoJ,EAAgB,IAAIC,GACpBA,EAAwB,GACxBoG,KACIpG,EAAsBrJ,SACzBmJ,EAAqB,IAAIiG,GACzBA,EAAoB,KAId/R,EAAO+R,EAAkBjD,OAAQ,CACxC,IAAI3E,GAAEA,GAAOnK,EACb,MAAMsH,EAAUwK,EAAgB3H,GAChC,IAAK7C,IAA+C,IAApC0K,EAAmB9T,QAAQiM,KAAegC,EAAgBpN,IAAIuI,EAAQ6H,UACrF,SAED6C,EAAmBhU,KAAKmM,GACxB,MAAMkI,EAAUjG,EAAmBpN,IAAIsI,GACjCmI,EAAO,CACZnP,KAAM,CACL3B,KAAMwG,EACNmB,kBAAmBgB,EAAQhH,KAAKgG,kBAChCF,WAAYkB,EAAQlB,YAAc,GAClCC,SAAUiB,EAAQhH,KAAK+F,UAAY,IAEpCkC,SAAUjB,EAAQiB,SAClB4B,GAAI7C,EAAQ6C,GACZ/D,WAAYkB,EAAQlB,WACpB9D,MAAOgF,EAAQhF,MACf4M,MAAO5H,EAAQ4H,MACfK,SAAUjI,EAAQiI,SAClBJ,SAAU7H,EAAQ6H,SAClB9G,aAAcf,EAAQe,cAGvBgK,GAAWjG,EAAmBjN,IAAIsQ,EAAM4C,GACxC,MAAMtP,EAASuP,GAAc,CAAEhL,UAASmI,SACpC1M,GAAUA,EAAO/C,OACpB+L,EAAc/N,KAAK+E,EAAO/C,MAC1BmM,EAAgBhN,IAAIgL,EAAIsF,GACxB2C,MAGFG,KACAC,KACAC,KAGD,SAASD,KACR,GAAqC,IAAjCxG,EAAsBrJ,OAAc,CACvC,IAAI+P,EACJ,KAAQA,EAAahG,EAAgBoC,OACpC4D,EAAW1C,YAAc0C,EAAW1C,WAAW2C,YAAYD,GAE5DlH,EAAcE,OAAQ,GAIxB,SAAS0G,KACR,IAAIpS,EACJ,KAAQA,EAAO+L,EAAc+C,OAC5B,GAAwB9O,EA9mCXrB,KA+mCE,WAAdqB,EAAKrB,MAAqBiU,GAA0B5S,EAAKmK,IACrDnK,EAAKuI,UACR0D,EAAkBjO,KAAKgC,OAElB,CACN,MAAMsH,QAAEA,EAAOmI,KAAEA,EAAIoD,KAAEA,GAAS7S,EAChC8S,GAASxL,GAAWxC,EAAa2K,GAAQ3K,EAAa+N,IAKzD,SAASN,KAER,IAAIvS,EACJ,IAFAiM,EAAkB8G,UAEV/S,EAAOiM,EAAkB6C,OAChC,GAAkB,WAAd9O,EAAKrB,KAAmB,CAC3B,MAAMqU,cACLA,EAAavD,KACbA,EACAA,MAAMpI,QAAEA,EAAOwJ,OAAEA,EAAMxC,qBAAEA,EAAoB/N,KAAEA,IAC5CN,EAIJ,GAFA0P,EAAkBD,EAAM,CAAErJ,WAAY,KACtCoJ,EAAsBC,IACjBoB,EAAQ,CACZ,IAAIlC,EACAN,EACHM,EAAegB,EAAiBF,GACtBnD,IACVqC,EAAerC,EAAiBtN,IAAIyQ,IAErCuD,EAAcrE,aAAatH,EAAUsH,GACjC1I,EAAWwJ,EAAKnP,OAASmP,EAAKnP,KAAK2S,UACtCxD,EAAKnP,KAAK2S,WAG6B,WAApC5L,EAAwBgK,SAAwBhK,EAAS6L,eAC7DjD,EAAS5I,EAAS6L,eAEnB,MAAMC,eAAEA,EAAcC,qBAAEA,GAAyB9S,EAAK8F,WAClDoF,EAAcG,YAAcwH,IAAqC,IAAnBA,GACjD3H,EAAcG,WAAW0H,MAAMhM,EAAwB8L,EAAgBC,GAExE,MAAME,EAAgB/G,EAAkBvN,IAAIyQ,EAAKnP,MACjD,GAAIgT,GAAwC,MAAvBhT,EAAK8F,WAAWvD,IACpC,GAAIyQ,EAAc/K,SAAU,CAC3B,MAAMuF,EAAejE,GAAkB7K,IAAIsU,EAAc/K,UACzDuF,GAAgBA,EAAayF,YAAY7I,IAAIrD,KAA2B/G,EAAK8F,WAAWvD,YAExFqH,GAAaoJ,EAAcnJ,GAAI7J,EAAK8F,WAAWvD,IAAKwE,GAGtDrH,EAAKyP,KAAK+D,UAAW,OACf,GAAkB,WAAdxT,EAAKrB,KAAmB,CAClC,MAAM8Q,KACLA,EACAA,MAAMpI,QAAEA,GAASC,QACjBA,EACAA,SAAWD,QAASoM,IACjBzT,EACAsF,EAAW+B,IAAY/B,EAAWmO,IAAmBpM,IAAYoM,EACpEA,EAAezD,YAAcyD,EAAezD,WAAW0D,aAAarM,EAASoM,IAG7E/D,EAAkBD,EADSrI,GAAwBC,EAASC,IAE5DkI,EAAsBC,SAEjB,GAAkB,WAAdzP,EAAKrB,KAAmB,CAClC,MAAM2I,QAAEA,GAAYtH,GACdoP,cAAEA,EAAauE,oBAAEA,GAAwBrM,EAAQhH,KAAK8F,WACxDoF,EAAcG,YAAcyD,IAAmC,IAAlBA,EAChD5D,EAAcG,WAAWiI,KAAKtM,EAAQD,QAAwB+H,EAAeuE,GAE7ErM,EAAQD,QAAS2I,WAAY2C,YAAYrL,EAAQD,cAE5C,GAAkB,WAAdrH,EAAKrB,KAAmB,CAClC,MAAM4J,SAAEA,EAAQsL,SAAEA,GAAa7T,EACzB8N,EAAejE,GAAkB7K,IAAIuJ,GACvCuF,IACHA,EAAayF,YAAYO,UACzBD,GAAY/F,EAAamF,iBAEpB,GAAkB,WAAdjT,EAAKrB,KAAmB,CAClC,GAAIqB,EAAKsH,QAAQiB,SAAU,CAC1B,MAAMuF,EAAejE,GAAkB7K,IAAIgB,EAAKsH,QAAQiB,UACxDuF,GAAgBA,EAAaiG,WAE9B/T,EAAKsH,QAAQiB,cAAW1H,EAGW,IAAjCmL,EAAsBrJ,SACzB4J,EAAoB,IAAIpP,GAI1B,SAASsV,MApRT,WACC,MAAMhH,KAAEA,GAASD,EACXwI,EAAYxH,EAElB,GADAA,EAAiB,GACbwH,EAAUrR,OAAQ,CACrB,MAAMsR,EAAM,KACX,IAAIzK,EACJ,KAAQA,EAAWwK,EAAUE,SAC5B1K,KAGEiC,EACHwI,IAEIhX,EAAA,QAAOkX,oBACVlX,EAAA,QAAOkX,oBAAoBF,GAE3BG,WAAWH,IAoQdI,GAxSD,WACC,MAAM5I,KAAEA,GAASD,EACXwI,EAAYvH,EAElB,GADAA,EAA2B,GACvBuH,EAAUrR,OAAQ,CACrB,MAAMsR,EAAM,KACX,IAAIzK,EACJ,KAAQA,EAAWwK,EAAUE,SAC5B1K,KAGEiC,EACHwI,IAEAhX,EAAA,QAAO4U,sBAAsBoC,IA2R/BK,GAoCD,SAASC,GAAaC,GACrB,MAAM9X,EAA4B,GAClC,IAAK,IAAIwH,EAAI,EAAGA,EAAIsQ,EAAS7R,OAAQuB,IAAK,CACzC,MAAM8B,EAAUwO,EAAStQ,GACzB,GAAmC,MAA/B8B,EAAQ1F,KAAK8F,WAAWvD,IAG3B,OAAO,EAFPnG,EAAKsB,KAAKgI,EAAQ1F,KAAK8F,WAAWvD,KAKpC,OAAOnG,EAGR,SAASoW,GAASxL,EAAyBmI,EAAsBoD,EAAoB,IACpF,IAAI4B,WAAEA,EAAa,GAAEC,SAAEA,EAAW,EAACC,SAAEA,EAAW,GAAM9B,EACtD,MAAM+B,EAAgBtN,EAAQ3E,OACxBkS,EAAapF,EAAK9M,OAClB2L,EAAsBsG,EAAgB,GAAMA,EAAgB,GAAKA,EAAgBC,EACvF,IAAIC,EAA8B,GAC9B5V,GAAU,EACd,GAAiB,IAAbwV,GAA+B,IAAbC,GAAkBC,EAAe,CACtD,MAAMG,EAAcR,GAAajN,GACjC,GAAIyN,EAAa,CAChB,MAAMC,EAAWT,GAAa9E,GAC9B,GAAIuF,EACH,IAAK,IAAI9Q,EAAI,EAAGA,EAAI6Q,EAAYpS,OAAQuB,IAAK,CAC5C,IAA0C,IAAtC8Q,EAAS9W,QAAQ6W,EAAY7Q,IAAY,CAC5C4Q,EAAe,GACf5V,GAAU,EACV,MAEDA,GAAU,EACV4V,EAAa9W,KAAK,CAAEsJ,QAASA,EAAQpD,GAAIuL,UAAM5O,MAMnD,GAAI3B,GAA8B,IAAlB0V,IAAwBpJ,EAAcE,MACrD,IAAK,IAAIxH,EAAI,EAAGA,EAAIuL,EAAK9M,OAAQuB,IAChC4Q,EAAa9W,KAAK,CAAEsJ,aAASzG,EAAW4O,KAAMA,EAAKvL,SAE9C,CACN,GAAIyQ,EAAWE,EAAY,CAC1B,IAAII,EAAiBP,EAAWE,EAAgBtN,EAAQoN,QAAY7T,EACpE,MAAM0P,EAAcd,EAAKkF,GACzBpE,EAAYjC,oBAAsBA,EA/ErC,SAA4BmB,EAAoBgF,GAC/C,MAAM/I,MAAEA,GAAUF,EAClB,GAAIE,GAAS+I,EAAW9R,OACvB,GAAIgD,EAAe8J,GAAO,CACzB,IACCnP,MAAMwF,IAAEA,IACL2J,EACJ,IAAK,IAAIvL,EAAI,EAAGA,EAAIuQ,EAAW9R,OAAQuB,IAAK,CAC3C,MAAMgR,EAAaT,EAAWvQ,GACxBmN,EAAU6D,EAAW7D,SAAW,GACtC,GAAIvL,EAAIqP,gBAAkB9D,EAAQ8D,cAAe,CAChD,MAAMC,EAAiB1I,EAAgBxO,QAAQgX,IACvB,IAApBE,GACH1I,EAAgBzO,OAAOmX,EAAgB,GAExCX,EAAWxW,OAAOiG,EAAG,GACrBuL,EAAKpI,QAAU6N,EACf,aAIFzF,EAAKgF,WAAaA,EA4DlBY,CAAmB9E,EAAakE,GAE5BQ,GAAkBhN,GAAKgN,EAAgB1E,IAC1CmE,IACAC,IACIhP,EAAesP,IAAmBtP,EAAe4K,KACpDA,EAAYiD,SAAWyB,EAAezB,UAEvCsB,EAAa9W,KAAK,CAAEsJ,QAAS2N,EAAgBxF,KAAMc,KACxC0E,IAA4E,IAA1DzM,GAAiBlB,EAASiJ,EAAamE,EAAW,IAIX,IAA1DlM,GAAiBiH,EAAMwF,EAAgBN,EAAW,IAE5DG,EAAa9W,KAAK,CAAEsJ,QAAS2N,EAAgBxF,UAAM5O,IACnD6T,MAIAI,EAAa9W,KAAK,CAAEsJ,QAAS2N,EAAgBxF,UAAM5O,IACnDiU,EAAa9W,KAAK,CAAEsJ,aAASzG,EAAW4O,KAAMc,IAC9CmE,IACAC,MAZAG,EAAa9W,KAAK,CAAEsJ,aAASzG,EAAW4O,KAAMc,IAC9CoE,KAiBF,GAHIA,EAAWE,GACd9I,EAAc/N,KAAK,CAAEsJ,UAASmI,OAAMoD,KAAM,CAAE4B,aAAYC,WAAUC,cAE/DC,EAAgBF,GAAYC,GAAYE,EAC3C,IAAK,IAAI3Q,EAAIwQ,EAAUxQ,EAAI0Q,EAAe1Q,IAEzC4Q,EAAa9W,KAAK,CAAEsJ,QAASA,EAAQpD,GAAIuL,UAAM5O,IAKlD,IAAK,IAAIqD,EAAI,EAAGA,EAAI4Q,EAAanS,OAAQuB,IAAK,CAC7C,MAAMnB,EAASuS,GAAYR,EAAa5Q,IACxC,IAAe,IAAXnB,EAAkB,CACrB,GAAIyI,EAAcE,OAAS+I,EAAW9R,OAAQ,CACzCgS,EAAWE,GACd9I,EAAc+C,MAEf/C,EAAc/N,KAAK,CAAEyR,OAAMnI,UAASuL,SACpC7G,EAAwBD,EACxBA,EAAgB,GAChB,MAED,SAED,MAAMrI,OAAEA,EAAM1D,KAAEA,EAAIuV,IAAEA,GAAQxS,EAC9BW,GAAUqI,EAAc/N,KAAK0F,GAC7B1D,GAAQ+L,EAAc/N,KAAKgC,GAC3BuV,GAAOtJ,EAAkBjO,KAAKuX,IAIhC,SAASD,IAAYhO,QAAEA,EAAOmI,KAAEA,IAC/B,GAAInI,IAAYmI,EAAM,CACrB,IAAKnI,GAAWmI,EACf,OAAI9J,EAAe8J,GAwStB,UAAoBA,KAAEA,IACrB,MAAMuD,EAj4BP,SAA2BwC,GAC1B,IAAIxC,EACAyC,EAAgBtJ,EAAgBnN,IAAIwW,EAAYrG,UAEpD,MAAQ6D,GAAiByC,IAEtBzC,GACDrN,EAAe8P,KACd5P,EAAiB4P,IAClBA,EAAcpO,UAEd2L,EAAgByC,EAAcpO,SAE/BoO,EAAgBtJ,EAAgBnN,IAAIyW,EAActG,UAEnD,OAAO6D,EAk3Be0C,CAAkBjG,GAClCkG,EAAY9P,EAAiB4J,GAC7BmG,EAAS7P,EAAc0J,GAC7B,IAwCIpJ,EAxCAoO,EAAqB,GACzBhF,EAAKtF,MAAQH,OACbmC,EAAgBhN,IAAIsQ,EAAKtF,GAAIsF,GACxBA,EAAKpI,QAwBCmE,EAAcE,QACxB+D,EAAKoB,QAAS,EACVvL,EAAWmK,EAAKpI,SACfoI,EAAKpI,QAAQwO,OAASpG,EAAKnP,KAAK2O,OACnCvC,EAAkB,CAAC+C,EAAKpI,WAAYqF,GACpC+C,EAAKpI,QAAUpK,EAAA,QAAO2O,SAASkK,eAAerG,EAAKnP,KAAK2O,MACxDQ,EAAKoB,QAAS,IAGf4D,EAAarL,GAAUqG,EAAKpI,QAAQ0O,YACpCrJ,EAAkB,IAAIA,KAAoB+H,MAjCtChF,EAAKnP,KAAa+G,QACtBoI,EAAKpI,QAAWoI,EAAKnP,KAAa+G,SAEZ,QAAlBoI,EAAKnP,KAAKwF,MACb2J,EAAKzG,UAAYhE,GAEd4Q,EACHnG,EAAKpI,QAAUpK,EAAA,QAAO2O,SAASC,KACrB4D,EAAKnP,KAAKwF,MAAQ6P,EACxBlG,EAAKzG,UACRyG,EAAKpI,QAAUpK,EAAA,QAAO2O,SAASoK,gBAAgBvG,EAAKzG,UAAWyG,EAAKnP,KAAKwF,KAEzE2J,EAAKpI,QAAUpK,EAAA,QAAO2O,SAASqK,cAAcxG,EAAKnP,KAAKwF,KAE5B,MAAlB2J,EAAKnP,KAAK2O,OACpBQ,EAAKpI,QAAUpK,EAAA,QAAO2O,SAASkK,eAAerG,EAAKnP,KAAK2O,QAGtD3C,GAAoBI,EAAgB/J,QACnCqQ,IAAkBtG,EAAgB,GAAGsD,YACxC1D,EAAiBnN,IAAIsQ,EAAM/C,EAAgB,MAiB1C+C,EAAKpI,SAAWsO,IACflG,EAAKnP,KAAK+F,UAAYoJ,EAAKnP,KAAK+F,SAAS1D,SAC5C0D,EAAW4H,EAAkBwB,EAAKnP,KAAK+F,SAAUoJ,EAAM,MACvDpD,EAAsBlN,IAAIsQ,EAAKtF,GAAI9D,IAGrC,MAAMkP,EACLI,GAAaC,OACV/U,EACA,CACA4O,KAAMA,EACNuD,cAAeA,EACfrU,KAAM,UAEV,OAAI0H,EACI,CACNrG,KAAM,CACLsH,QAAS,GACTmI,KAAMpJ,EACNwM,KAAM,CAAE4B,eAETc,MACA7R,OAAQiS,EAAY,CAAEhX,KAAM,SAAUwL,GAAKsF,EAAatF,GAAI0J,UAAU,QAAUhT,GAG3E,CAAE0U,OA7WCW,CAAW,CAAEzG,SAuDxB,UAAuBA,KAAEA,IACxB,IAaIvB,EACAiI,GAbH7V,MAAMgG,kBAAEA,IACLmJ,GACAtL,SAAEA,GAAaqH,EACf4K,EAAc3G,EAAKpH,cAAgB/B,EACvC,IAAKlG,EAASgW,GAAc,CAE3B,GADAxI,EAAoB6B,IACfA,EAAKpH,aACT,OAAO,EAER+N,EAAc3G,EAAKpH,aAKpBoH,EAAKrJ,WAAaqJ,EAAKnP,KAAK8F,WAC5BqJ,EAAKtF,GAAKsF,EAAKtF,OAASH,OACxBmC,EAAgBhN,IAAIsQ,EAAKtF,GAAIsF,GAC7B,MAAMtF,GAAEA,EAAE7H,MAAEA,EAAK4M,MAAEA,GAAUO,EAC7B,GAAK1P,EAAwBqW,GA0CtB,CACN,IAAI7N,EAAW,IAAI6N,EAInB7N,EAASpE,SAASV,KAAOU,EACzB,MAAM2J,EAAejE,GAAkB7K,IAAIuJ,GAC3C4N,EAAa,MACZrI,EAAauI,OAAQ,GAChBvI,EAAawI,WAAanK,EAAgBpN,IAAIoL,KAClD2B,EAAmB9N,KAAK,CAAEmM,KAAI7H,QAAO4M,UACrCyC,OAGF7D,EAAaqI,WAAaA,EAC1BrI,EAAawI,WAAY,EACzB/N,EAASgO,kBAAkB9G,EAAKnP,KAAK8F,YACrCmC,EAASiO,gBAAgB/G,EAAKnP,KAAK+F,UACnCoJ,EAAKlH,SAAWA,EAChB2F,EAAW3F,EAASkO,aACpB3I,EAAawI,WAAY,MA9DiB,CAC1C,IAAIlM,EAAaN,GAAc9K,IAAImL,GAsCnC,GArCKC,EA2BJ+L,EAAa/L,EAAW9I,aA1BxB6U,EAAa,MACZ,MAAM/L,EAAaN,GAAc9K,IAAImL,GACjCC,IACHA,EAAWiM,OAAQ,GACdjM,EAAWkM,WAAanK,EAAgBpN,IAAIoL,KAChD2B,EAAmB9N,KAAK,CAAEmM,KAAI7H,QAAO4M,UACrCyC,QAKHvH,EAAa,CACZiM,OAAO,EACP/U,YAAa6U,EACb/P,WAAYqJ,EAAKnP,KAAK8F,WACtBC,SAAUoJ,EAAKnP,KAAK+F,SACpB8E,UAAW,EACXmL,WAAW,EACXnS,SAAUqH,EAAcrH,UAGzB2F,GAAc3K,IAAIsQ,EAAKtF,GAAIC,GAC3BA,EAAWsM,WAAcN,EAAoB3M,YA/EhD,SAASkN,EAAkBlN,EAAkBU,GAC5C,MAAMzN,EAAOI,OAAOJ,KAAK+M,GACnBmN,EAAe,GACfC,KAAc1M,KAAMF,OAC1B,IAAK,IAAI/F,EAAI,EAAGA,EAAIxH,EAAKiG,OAAQuB,IAAK,CACrC,MAAMwS,EAAajN,EAAY/M,EAAKwH,MAC9B4S,EAAe,CACpB3M,GAAI0M,EACJzQ,WAAY,KACX,MAAMgE,EAAaN,GAAc9K,IAAImL,GACrC,OAAIC,EACHtN,OAAAC,OAAA,GAAYqN,EAAWhE,YAEjB,IAERC,SAAU,KACT,MAAM+D,EAAaN,GAAc9K,IAAImL,GACrC,OAAIC,EACIA,EAAW/D,SAEZ,KAGT,GAAIqQ,EAAWjN,YAAa,CAC3B,MAAMsN,EAAqBJ,EAAkBD,EAAWjN,YAAaU,GACrE2M,EAAQJ,WAAaK,EACrBH,EAAQla,EAAKwH,IAAMwS,EAAWlN,SAASsN,QAEvCF,EAAQla,EAAKwH,IAAMwS,EAAWlN,SAASsN,GAGzC,OAAOF,EAiDFD,CAAmBP,EAAoB3M,YAAaU,GACpD,IAKJ+D,EAAWkI,EAAY,CACtBjM,KACA/D,WAAY,IAAMqJ,EAAKnP,KAAK8F,WAC5BC,SAAU,IAAMoJ,EAAKnP,KAAK+F,SAC1BqQ,WAAYtM,EAAWsM,aAExBtM,EAAWkM,WAAY,EACnBlM,EAAWe,UAAY,EAC1B,OAAO,EAyBT,IAAI9E,EAWJ,OAVI6H,IACHA,EAAWzO,MAAMC,QAAQwO,GAAYA,EAAW,CAACA,GACjD7H,EAAW4H,EAAkBC,EAAUuB,EAAM,MAC7CpD,EAAsBlN,IAAIgL,EAAI9D,IAG1BkF,GAAsB6K,EAAoB5Q,iBAC9C+F,EAAmB4K,GAGb,CACNnW,KAAM,CACLyP,KAAMpJ,EACNwM,KAAM,CAAE4B,WAAYhF,EAAKgF,aAE1B/Q,OAAQ,CAAE/E,KAAM,SAAU4J,SAAUkH,EAAKlH,SAAU4B,KAAI0J,UAAU,IA1JxDmD,CAAc,CAAEvH,SAElB,GAAInI,GAAWmI,EAAM,CAC3B,GAAI9J,EAAe2B,IAAY3B,EAAe8J,GAC7C,OA0WJ,UAAoBnI,QAAEA,EAAOmI,KAAEA,IAK9B,IAAIpJ,EAJJoJ,EAAKpI,QAAUC,EAAQD,QACvBoI,EAAKzG,UAAY1B,EAAQ0B,UACzByG,EAAKtF,GAAK7C,EAAQ6C,GAClBsF,EAAKK,kBAAoBxI,EAAQwI,kBAEjC,IAAImH,EAAkB5K,EAAsBrN,IAAIyQ,EAAKtF,IASrD,OARsB,MAAlBsF,EAAKnP,KAAK2O,MAAgBQ,EAAKnP,KAAK2O,OAAS3H,EAAQhH,KAAK2O,KAC7DQ,EAAKpI,QAAUpK,EAAA,QAAO2O,SAASkK,eAAerG,EAAKnP,KAAK2O,MAC9CQ,EAAKnP,KAAK+F,WACpBA,EAAW4H,EAAkBwB,EAAKnP,KAAK+F,SAAUoJ,EAAMnI,GACvD+E,EAAsBlN,IAAIsQ,EAAKtF,GAAI9D,IAEpC+F,EAAmB5I,OAAO8D,GAC1B6E,EAAgBhN,IAAIsQ,EAAKtF,GAAIsF,GACtB,CACNzP,KAAM,CACLsH,QAAS2P,EACTxH,KAAMpJ,EACNwM,KAAM,IAEP0C,IAAK,CAAE5W,KAAM,SAAU8Q,OAAMnI,YA/XpB4P,CAAW,CAAE5P,UAASmI,SACvB,GAAIjK,EAAe8B,IAAY9B,EAAeiK,GACpD,OAAO6C,GAAc,CAAEhL,UAASmI,cAE3B,GAAInI,IAAYmI,EAAM,CAC5B,GAAI9J,EAAe2B,GAClB,OA6XJ,UAAoBA,QAAEA,IACrB,MAAMqO,EAAY9P,EAAiByB,GAC7BsO,EAAS7P,EAAcuB,GACvBjB,EAAWgG,EAAsBrN,IAAIsI,EAAQ6C,IAInD,GAHAkC,EAAsB7I,OAAO8D,EAAQ6C,IACrCgC,EAAgB3I,OAAO8D,EAAQ6C,IAC/BiC,EAAmB5I,OAAO8D,GACtBA,EAAQhH,KAAK8F,WAAWvD,IAAK,CAChC,MAAMuH,EAAaN,GAAc9K,IAAIsI,EAAQiI,UACvCkG,EAAgB3D,EAAgBxK,EAAQiI,UAC9C,GAAInF,EACHA,EAAWC,SAAWD,EAAWC,QAAQ7G,OAAO8D,EAAQhH,KAAK8F,WAAWvD,UAClE,GAAI4S,GAAiBA,EAAclN,SAAU,CACnD,MAAMuF,EAAejE,GAAkB7K,IAAIyW,EAAclN,UACzDuF,GAAgBA,EAAayF,YAAY4D,OAAO7P,EAAQhH,KAAK8F,WAAWvD,MAG1E,OAAIyE,EAAQ+H,eAAiBsG,GAAaC,EAClC,CACN5V,KAAM,CAAEsH,QAASjB,EAAUwM,KAAM,IACjC0C,IAAKI,GAAaC,OAAS/U,EAAY,CAAElC,KAAM,SAAU2I,aAIvDjB,GACHoG,EAAyBzO,KAAK,KAC7B,IACIgI,EADAwO,EAAWnO,GAAY,GAEvB+Q,EAAU,GACd,KAAQpR,EAAUwO,EAAS1F,OAAQ,CAClC,GAAItJ,EAAeQ,GAElB,IADAA,EAAU8L,EAAgB9L,EAAQmE,KAAOnE,GAC7BuC,SAAU,CACrB,MAAMuF,EAAejE,GAAkB7K,IAAIgH,EAAQuC,UACnDuF,GAAgBA,EAAaiG,WAC7B/N,EAAQuC,cAAW1H,MACb,CACN,MAAMgS,EAAO/I,GAAc9K,IAAIgH,EAAQmE,IACnC0I,IACHA,EAAK5H,iBAAmB4H,EAAK5H,gBAAgB9M,UAC7C0U,EAAKtI,YAAcD,GAAeuI,EAAKtI,YACvCT,GAActG,OAAOwC,EAAQmE,KAIhC,IAAIkN,EAAkBhL,EAAsBrN,IAAIgH,EAAQmE,IACpDkN,GACH7C,EAASxW,QAAQqZ,GAEdtR,EAAcC,GACjBoR,EAAQpZ,KAAKgI,EAAQmE,KAC4B,IAAvCiN,EAAQlZ,QAAQ8H,EAAQmJ,YAC9B3J,EAAeQ,IAAYH,EAAiBG,GAC/CoR,EAAQpZ,KAAKgI,EAAQmE,IACXnE,EAAQqB,SAAWrB,EAAQqB,QAAQ2I,YAC7ChK,EAAQqB,QAAQ2I,WAAW2C,YAAY3M,EAAQqB,UAGjDgF,EAAsB7I,OAAOwC,EAAQmE,IACrCgC,EAAgB3I,OAAOwC,EAAQmE,OAK3B,CACNoL,IAAK,CAAE5W,KAAM,SAAU2I,aA9bdgQ,CAAW,CAAEhQ,YACd,GAAI9B,EAAe8B,GACzB,OA8OJ,UAAuBA,QAAEA,IACxBA,EAAUwK,EAAgBxK,EAAQ6C,KAAO7C,EACzC6E,EAAgB3I,OAAO8D,EAAQ6C,IAC/B,MAAM0I,EAAO/I,GAAc9K,IAAIsI,EAAQ6C,IACvC,IAAI8M,EAAkB5K,EAAsBrN,IAAIsI,EAAQ6C,IACxDkC,EAAsB7I,OAAO8D,EAAQ6C,IACrCiC,EAAmB5I,OAAO8D,GAC1B,IAAIiQ,EAA+B,CAClCvX,KAAM,CACLsH,QAAS2P,EACTpE,KAAM,KAWR,OARIA,GACHA,EAAK5H,iBAAmB4H,EAAK5H,gBAAgB9M,UAC7C0U,EAAKtI,YAAcD,GAAeuI,EAAKtI,YACvCT,GAActG,OAAO8D,EAAQ6C,KAE7BoN,EAAc7T,OAAS,CAAE/E,KAAM,SAAU2I,UAASiB,SAAUjB,EAAQiB,UAG9DgP,EAnQGC,CAAc,CAAElQ,aAI1B,MAAO,GA8IR,SAASgL,IAAchL,QAAEA,EAAOmI,KAAEA,IACjCnI,EAAUwK,EAAgBxK,EAAQ6C,KAAO7C,EACzC,MAAMiB,SAAEA,EAAQlB,QAAEA,EAAOgI,cAAEA,GAAkB/H,EAC7C,IACChH,MAAMgG,kBAAEA,IACLmJ,EACJ,MAAM2G,EAAc3G,EAAKpH,cAAgB/B,EAEzC,IAAKlG,EAASgW,GACb,MAAO,GAER,IAAIlI,EAgEA7H,EA/DAkR,EAA+B,GAC/BE,GAAY,EACZR,EAAkB5K,EAAsBrN,IAAIsI,EAAQ6C,IAUxD,GATAsF,EAAKJ,cAAgBA,EACrBI,EAAKtF,GAAK7C,EAAQ6C,GAClBsF,EAAKK,kBAAoBxI,EAAQwI,kBACjCL,EAAKrJ,WAAaqJ,EAAKnP,KAAK8F,WAC5BgG,EAAmB5I,OAAO8D,GACtBD,GAAWA,EAAQ2I,aACtBP,EAAKpI,QAAUA,GAGXtH,EAAwBqW,GAmCtB,CACN,MAAMtI,EAAejE,GAAkB7K,IAAIuJ,GAC3CkH,EAAKlH,SAAWA,EAChBuF,EAAawI,WAAY,EACzB/N,EAAUgO,kBAAkB9G,EAAKnP,KAAK8F,YACtCmC,EAAUiO,gBAAgB/G,EAAKnP,KAAK+F,UAChCyH,EAAauI,QAChBoB,GAAY,EACZpL,EAAsB7I,OAAOiM,EAAKtF,IAClC+D,EAAW3F,EAAUkO,cAEtB3I,EAAawI,WAAY,MA9CiB,CAC1C,MAAMlM,EAAaN,GAAc9K,IAAIyQ,EAAKtF,IACtCC,IACHA,EAAWhE,WAAaqJ,EAAKrJ,WAC7BgE,EAAWkM,WAAY,EAvlC3B,SAAkBzD,EAAkBvL,EAAcmI,GACjDoD,EAAKhI,cAAgBgI,EAAKhI,eAAiB,IAAI3N,EAC3C2V,EAAKhI,cAAc6M,MACtB7E,EAAKhI,cAAczM,QAASuZ,IAC3BA,EAAQvZ,QAASwM,GAASA,EAAI9N,OAAAC,OAAA,GAAMuK,GAAOxK,OAAAC,OAAA,GAAS0S,OAolCnDmI,CAASxN,EAAY9C,EAAQlB,WAAYqJ,EAAKrJ,aAC1CkB,EAAQhH,KAAK+F,SAAS1D,OAAS,GAAK8M,EAAKnP,KAAK+F,SAAS1D,OAAS,KACnEyH,EAAWiM,OAAQ,GAEfjM,EAAWiM,OAv1Cd,SAAyB/O,EAAcmI,EAAWnO,EAAyBuW,GAChF,MAAMC,EAAgB,IAAIhb,OAAOJ,KAAK4K,MAAaxK,OAAOJ,KAAK+S,IAC/D,IAAK,IAAIvL,EAAI,EAAGA,EAAI4T,EAAcnV,OAAQuB,IACzC,KAAI2T,EAAiB3Z,QAAQ4Z,EAAc5T,KAAO,GAAlD,CAIA,GADepB,EAAKwE,EAAQwQ,EAAc5T,IAAKuL,EAAKqI,EAAc5T,KACvD9B,QAAS,CACnBd,IACA,MAEDuW,EAAiB7Z,KAAK8Z,EAAc5T,KA60CjC6T,CACCzQ,EAAQlB,WACRqJ,EAAKrJ,WACL,KACCgE,EAAWiM,OAAQ,GAEpBjM,EAAWU,qBAAuB,IAAIV,EAAWU,qBAAqBjO,UAAY,IAGhFuN,EAAWiM,QACdhK,EAAsB7I,OAAOiM,EAAKtF,IAClCsN,GAAY,EACZrN,EAAWiM,OAAQ,EACnBnI,EAAWkI,EAAY,CACtBjM,GAAIsF,EAAKtF,GACT/D,WAAY,IAAMqJ,EAAKnP,KAAK8F,WAC5BC,SAAU,IAAMoJ,EAAKnP,KAAK+F,SAC1BqQ,WAAYtM,EAAWsM,aAEpBtM,EAAWe,UAAY,IAC1B+C,EAAW,OAGb9D,EAAWkM,WAAY,GAgCzB,OAjBAnK,EAAgBhN,IAAIsQ,EAAKtF,GAAIsF,GAC7B8H,EAAc7T,OAAS,CAAE/E,KAAM,SAAU4J,WAAU4B,GAAIsF,EAAKtF,GAAI0J,UAAU,GAGtE3F,IAEH7H,EAAW4H,EADXC,EAAWzO,MAAMC,QAAQwO,GAAYA,EAAW,CAACA,GACVuB,EAAMnI,GAC7C+E,EAAsBlN,IAAIsQ,EAAKtF,GAAI9D,IAGhCoR,IACHF,EAAcvX,KAAO,CACpBsH,QAAS2P,EACTxH,KAAMpJ,EACNwM,KAAM,KAGD0E,EA2BR,SAAS3E,GAA0BzI,GAClC,IAEI1E,EAFAO,EAAUmG,EAAgBnN,IAAImL,GAC9B9D,EAAW,IAAKgG,EAAsBrN,IAAImL,IAAO,IAErD,KAAO9D,EAAS1D,SAAWqD,EAAQqB,SAElC,GADA5B,EAAQY,EAAS6N,QACN,CACV,GAAIzO,EAAM4B,QAAS,CAClBrB,EAAQ8J,kBAAoBrK,EAAM0E,GAClC,MAED,IAAI6N,EAAe3L,EAAsBrN,IAAIyG,EAAM0E,IAC/C6N,IACH3R,EAAW,IAAI2R,KAAiB3R,KA6KpC,MAAO,CACN4R,MAr0BD,SAAeC,EAAsC,IACpD1M,EAAa1O,OAAAC,OAAA,GAAQyO,EAAkB0M,GACvC,MAAM7Q,QAAEA,GAAYmE,EACd2M,EA5kBR,SAAmB9M,GAClB,MAAMtI,EAASsI,IACT7F,EAAiBE,EAAQ3C,GACzByG,EAAW,IACTzG,EAGR,OADAyG,EAAShE,eAAiBA,EACnBkE,GAAQF,GAqkBO4O,CAAU/M,EAAV+M,CAAoB,IACnC7H,EAAc,CACnBpG,MAAOH,OACP1J,KAAM6X,EACNjJ,MAAO,EACP5M,MAAO,EACPiN,SAAU,KACVJ,SAAU,KACVkJ,UAAW,KACXjS,WAAY,IAEb+F,EAAgBhN,IAAI,KAAM,CACzBgL,GAAI,KACJ7H,MAAO,EACP4M,MAAO,EACPK,SAAU,GACVlI,UACA/G,KAAMiG,EAAE,QACR4I,SAAU,OAEXpD,EAAc/N,KAAK,CAClBsJ,QAAS,GACTmI,KAAM,CAACc,GACPsC,KAAM,CAAE4B,WAAYrL,GAAU/B,EAAQ0O,eAEvC3D,KACAG,KACAC,KACAlG,OAAmBzL,EACnB4R,MAsyBA0D,WAnyBD,WACC5K,GAAoBA,OC9uCtB,MAAM+M,GAAe,IAAInb,EACnBob,GAAoB,IAAIpb,EACxBqb,GAAY1V,EAAK2V,KAAK,MAM5B,MAAMC,GAAmC,CAAC,YAAa5b,OAAOP,oBAAoBO,OAAO6b,eAAe,MAElGC,GAAgB,IAAI1b,EA2CpB,MAAO2b,GA8CZlb,cAhCQC,KAAAkb,oBAAqB,EAUrBlb,KAAAmb,qBAAiC,GAOjCnb,KAAAwF,UAA6B,IAAIF,EAQjCtF,KAAAob,aAA4B,IAAI1U,EAEhC1G,KAAAG,SAAqB,GAM5BH,KAAKqb,UAAY,GACjBrb,KAAKsb,gBAAkB,IAAIhc,EAC3BU,KAAKub,YAAc,GACnBvb,KAAKwb,iBAAmBxb,KAAKyb,OAAOZ,KAAK7a,MACzCA,KAAK0b,iBAAmB1b,KAAKuY,WAAWsC,KAAK7a,MAC7CA,KAAKS,IAAIT,KAAKwF,WACdxF,KAAKS,IAAIT,KAAKwF,UAAUiB,GAAG,aAAczG,KAAK0b,mBAE9CzP,GAAkB1K,IAAIvB,KAAM,CAC3ByY,OAAO,EACPpD,SAAU,KACTrV,KAAKqV,YAENc,SAAU,KACTnW,KAAKmW,WACLnW,KAAKO,WAENoV,YAAa3V,KAAKob,aAClB1C,WAAW,EACXiD,gBAAiB,GACjBpV,SAAUvG,KAAKuG,WAGhBvG,KAAKS,IAAI,CACRF,QAAS,KACR0L,GAAkBrG,OAAO5F,MACzBA,KAAKob,aAAarU,QAClB/G,KAAKob,aAAa7a,aAIpBP,KAAK4b,wBAGI7b,KAAyB8b,QACZ5Y,IAAlBjD,KAAK8b,WACR9b,KAAK8b,SAAW,IAAIxc,GAErB,IAAIyc,EAAS/b,KAAK8b,SAAS1a,IAAIya,GAW/B,OAVKE,IACJA,EAAS,IAAIF,EAAS,CACrBtD,WAAYvY,KAAK0b,iBACjB/F,YAAa3V,KAAKob,aAClBP,KAAM7a,OAEPA,KAAKS,IAAIsb,GACT/b,KAAK8b,SAASva,IAAIsa,EAAUE,IAGtBA,EAGEhc,YAIAA,YAIVyI,iBACC,OAAOxI,KAAKub,YAGbS,0BACC,MAAO,IAAIhc,KAAKmb,sBAGVpb,kBAAkBkc,GACxB,MAAM/L,EAAejE,GAAkB7K,IAAIpB,MACvCkQ,IACHA,EAAayL,gBAAkBM,GAEhC,MAAMzT,EAAaxI,KAAKkc,qBAAqBD,GACvCE,EAA8Bnc,KAAKoc,aAAa,0BAChDJ,EAAgC,GAChC9B,EAAgBhb,OAAOJ,KAAK0J,GAMlC,GAJIxI,KAAKkb,oBAtKX,SAAkBvQ,GACjB,IAAIvG,EAAYuG,EAAS0R,YAAYjY,UAEjCtF,EAAiB,GAErB,GAAIkc,GAAc7Z,IAAIiD,GACrBtF,EAAOkc,GAAc5Z,IAAIgD,OACnB,CACN,KAAOA,GAAW,CACjB,MAAMkY,EAAUpd,OAAOP,oBAAoByF,GAE3C,GAAIA,EAAUiY,YAAYvY,eAAe,SACxC,MAGDhF,EAAO,IAAIA,KAASwd,GAEpBlY,EAAYlF,OAAO6b,eAAe3W,GAGnCtF,EAAOA,EAAKyd,OAAQC,GAA6B,mBAAhB7R,EAAS6R,KAAiD,IAA5B1B,GAAYxa,QAAQkc,IAEnFxB,GAAczZ,IAAI6C,EAAWtF,GAG9B,IAAK,IAAIwH,EAAI,EAAGA,EAAIxH,EAAKiG,OAAQuB,IAAK,CACrC,MAAMrB,EAAMnG,EAAKwH,GAEXmW,EAAY9R,EAAS1F,GAAK4V,KAAKlQ,GACrCzL,OAAOwd,eAAe/R,EAAU1F,EAAK,CACpC0X,cAAc,EACdvb,IAAG,IACKqb,KAuIRG,CAAS5c,OAGsB,IAA5BA,KAAKkb,oBAAuE,IAAvCiB,EAA4BpX,OAAc,CAClF,MAAM8X,EAAgB,IAAI3C,KAAkBhb,OAAOJ,KAAKkB,KAAKub,cACvDuB,EAAyC,GACzCC,EAA2B,GACjC,IAAIC,GAAe,EAEnB,IAAK,IAAI1W,EAAI,EAAGA,EAAIuW,EAAc9X,OAAQuB,IAAK,CAC9C,MAAMyG,EAAe8P,EAAcvW,GACnC,IAAiD,IAA7CwW,EAAkBxc,QAAQyM,GAC7B,SAED+P,EAAkB1c,KAAK2M,GACvB,MAAMzI,EAAmBtE,KAAKub,YAAYxO,GACpCxI,EAAciE,EAAWuE,GAC/B,IAA2D,IAAvDoP,EAA4B7b,QAAQyM,GAAsB,CAC7DiQ,GAAe,EACf,MAAMC,EAAgBjd,KAAKoc,6BAA6BrP,KACxD,IAAK,IAAIzG,EAAI,EAAGA,EAAI2W,EAAclY,OAAQuB,IAAK,CAC9C,MAAMnB,EAAS8X,EAAc3W,GAAGhC,EAAkBC,GAC9CY,EAAOX,UAA0D,IAA/CwX,EAAoB1b,QAAQyM,IACjDiP,EAAoB5b,KAAK2M,GAEtBA,KAAgBvE,IACnBuU,EAAoBhQ,GAAgB5H,EAAOhB,YAGvC,CACN,MAAMgB,EAASyV,GAAUtW,EAAkBC,GACvCY,EAAOX,UAA0D,IAA/CwX,EAAoB1b,QAAQyM,IACjDiP,EAAoB5b,KAAK2M,GAEtBA,KAAgBvE,IACnBuU,EAAoBhQ,GAAgB5H,EAAOhB,QAK9C,GAAI6Y,EAAc,CACjB,MAAME,EAA8Cld,KAAKoc,aAAa,gBAChEe,EAAgC,GACtCD,EAAkB1c,QAAQ,EAAG4c,WAAUrQ,mBACtC,MAAMsQ,GAAiE,IAA/CrB,EAAoB1b,QAAQyM,GAC9CuQ,GAAuD,IAAzCH,EAAkB7c,QAAQ8c,GAC1CC,IAAoBC,IACvBF,EAASzb,KAAK3B,KAAMA,KAAKub,YAAawB,GACtCI,EAAkB/c,KAAKgd,MAI1Bpd,KAAKub,YAAcwB,EACnB/c,KAAKmb,qBAAuBa,MACtB,CACNhc,KAAKkb,oBAAqB,EAC1B,IAAK,IAAI5U,EAAI,EAAGA,EAAI4T,EAAcnV,OAAQuB,IAAK,CAC9C,MAAMyG,EAAemN,EAAc5T,GACK,mBAA7BkC,EAAWuE,GACrBvE,EAAWuE,GAAgBvE,EAAWuE,GAEtCiP,EAAoB5b,KAAK2M,GAG3B/M,KAAKmb,qBAAuBa,EAC5Bhc,KAAKub,YAAWrc,OAAAC,OAAA,GAAQqJ,GAGrBxI,KAAKmb,qBAAqBpW,OAAS,GACtC/E,KAAKuY,aAIP9P,eACC,OAAOzI,KAAKqb,UAGNtb,gBAAgB0I,IAClBzI,KAAKqb,UAAUtW,OAAS,GAAK0D,EAAS1D,OAAS,KAClD/E,KAAKqb,UAAY5S,EACjBzI,KAAKuY,cAIAxY,aACN,MAAMmQ,EAAejE,GAAkB7K,IAAIpB,MACvCkQ,IACHA,EAAauI,OAAQ,GAEtB,MAAMgD,EAASzb,KAAKud,oBAEpB,OADcvd,KAAKwd,iBAAiB/B,KAI9B1b,aACN,MAAMmQ,EAAejE,GAAkB7K,IAAIpB,MACvCkQ,GAAgBA,EAAaqI,YAChCrI,EAAaqI,aAILxY,SACT,OAAO4I,EAAE,MAAO,GAAI3I,KAAKyI,UAShB1I,aAAa0d,EAAsBtZ,GAE5C,GADAA,EAAQtC,MAAMC,QAAQqC,GAASA,EAAQ,CAACA,GACpCnE,KAAK8D,eAAe,eAAgB,CACvC,IAAI4Z,EAAgBhD,GAAatZ,IAAIpB,KAAKqc,aACrCqB,IACJA,EAAgB,IAAIpe,EACpBob,GAAanZ,IAAIvB,KAAKqc,YAAaqB,IAGpC,IAAIC,EAAwBD,EAActc,IAAIqc,GACzCE,IACJA,EAAwB,GACxBD,EAAcnc,IAAIkc,EAAcE,IAEjCA,EAAsBvd,QAAQ+D,OACxB,CACN,MAAMyZ,EAAa5d,KAAKoc,aAAaqB,GACrCzd,KAAKsb,gBAAgB/Z,IAAIkc,EAAc,IAAIG,KAAezZ,KAWpDpE,oBAAoB0d,GAC3B,MAAMI,EAAgB,GAEtB,IAAIxB,EAAcrc,KAAKqc,YAEvB,KAAOA,GAAa,CACnB,MAAMyB,EAAcpD,GAAatZ,IAAIib,GACrC,GAAIyB,EAAa,CAChB,MAAMF,EAAaE,EAAY1c,IAAIqc,GAE/BG,GACHC,EAAcE,WAAWH,GAI3BvB,EAAcnd,OAAO6b,eAAesB,GAGrC,MAAM2B,EAAkBrD,GAAkBvZ,IAAIpB,KAAKqc,cAAgB,IAAI/c,EAGvE,OAFA0e,EAAgBzc,IAAIkc,EAAcI,GAClClD,GAAkBpZ,IAAIvB,KAAKqc,YAAa2B,GACjCH,EASE9d,aAAa0d,GACtB,IAAIQ,EAAiBtD,GAAkBvZ,IAAIpB,KAAKqc,aAC5CwB,EACH7d,KAAKsb,gBAAgBla,IAAIqc,IAAkBQ,GAAkBA,EAAe7c,IAAIqc,GAEjF,YAAsBxa,IAAlB4a,EACIA,GAGRA,EAAgB7d,KAAKke,oBAAoBT,GAEzCI,EAAgB,IAAIA,GACpB7d,KAAKsb,gBAAgB/Z,IAAIkc,EAAcI,GAChCA,GAGRtX,eACC,OAAOvG,KAAKwF,UAGLzF,qBAAqByI,GAC5B,MAAM2V,EAAuCne,KAAKoc,aAAa,oBAC/D,OAAI+B,EAAiBpZ,OAAS,EACtBoZ,EAAiBjU,OACvB,CAAC1B,EAAY4V,IACZlf,OAAAC,OAAA,GAAYqJ,EAAe4V,EAAyBzc,KAAK3B,KAAMwI,IAC/DtJ,OAAAC,OAAA,GACIqJ,IAGAA,EAMAzI,oBACP,MAAMse,EAAgBre,KAAKoc,aAAa,gBAExC,OAAIiC,EAActZ,OAAS,EACnBsZ,EAAcnU,OAAO,CAACuR,EAAgB6C,KAC5C,MAAMC,EAAgBD,EAAqB3c,KAAK3B,KAAMyb,EAAQzb,KAAKub,YAAavb,KAAKqb,WACrF,OAAKkD,IACJC,QAAQC,KAAK,yEACNhD,IAGNzb,KAAKwb,kBAEFxb,KAAKwb,iBAQLzb,iBAAiB2e,GACxB,MAAMC,EAAe3e,KAAKoc,aAAa,eAcvC,OAZIuC,EAAa5Z,OAAS,IACzB2Z,EAAQC,EAAazU,OAAO,CAACwU,EAAwBE,IAC7CA,EAAoBjd,KAAK3B,KAAM0e,GACpCA,SAGkBzb,IAAlBjD,KAAK8b,UACR9b,KAAK8b,SAAStb,QAASyU,KA3Z1B,SAAmBA,GAClB,OAAO5S,QAAQ4S,EAAK4J,cA2ZjBC,CAAU7J,IAASA,EAAK4J,gBAInBH,EAGA3e,wBACP,MAAMgf,EAAoB/e,KAAKoc,aAAa,oBAExC2C,EAAkBha,OAAS,GAC9Bga,EAAkBve,QAASwe,GAAqBA,EAAiBrd,KAAK3B,OAI9DD,IAAIG,GACbF,KAAKG,SAASC,KAAKF,GAGVH,UACT,KAAOC,KAAKG,SAAS4E,OAAS,GAAG,CAChC,MAAM7E,EAASF,KAAKG,SAAS+Q,MACzBhR,GACHA,EAAOK,YA9XH0a,GAAA3Y,MAAQJ,EC/ET,SAAS+c,GAAgBC,GAC/B,OAAO,SAAS1P,EAAa2P,EAAsBC,GAC5B,mBAAX5P,EACV0P,EAAQ1P,EAAOpL,eAAWnB,GAE1Bic,EAAQ1P,EAAQ2P,ICJZ,SAAShB,GAAiBzc,GAChC,OAAOud,GAAgB,CAACzP,EAAQ2P,KAC/B3P,EAAO6P,aAAa,mBAAoBF,EAAc3P,EAAO2P,GAAezd,KCF9E,MAAM4d,GAA8D,IAAI/f,EAiCjE,SAASggB,IAAOC,KAAEA,EAAIC,cAAEA,IAC9B,OAAOR,GAAgB,CAACzP,EAAQ2P,KAC/BhB,GAAiB,SAA+C3V,GAC/D,MAAM7E,EAAe3D,KAAKuG,SAASmZ,YAAYF,GAC/C,GAAI7b,EAAc,CACjB,MAAMC,SAAEA,EAAQF,YAAEA,GAAgBC,EAC5Bgc,EAAsBL,GAAuBle,IAAIpB,OAAS,GAYhE,OAXmC,IAA/B2f,EAAoB5a,QACvBua,GAAuB/d,IAAIvB,KAAM2f,IAEiB,IAA/CA,EAAoBrf,QAAQqD,KAC/B3D,KAAKS,IACJiD,EAAY+C,GAAG,aAAc,KAC5BzG,KAAKuY,gBAGPoH,EAAoBvf,KAAKuD,IAEnB8b,EAAc7b,IAAY4E,KAhBnC2V,CAkBG3O,KCnDE,SAASoQ,GACf7S,EACA8S,EAAqC3a,EACrC4a,GAEA,OAAOb,GAAgB,CAACzP,EAAQ2P,KAC/B3P,EAAO6P,6BAA6BtS,IAAgB8S,EAAahF,KAAK,OACtErL,EAAO6P,aAAa,yBAA0BtS,IAC1C+S,GAAoBX,IACvB3P,EAAO6P,aAAa,eAAgB,CACnCtS,eACAqQ,SAAU+B,EAAc3P,EAAO2P,GAAeW,MAMnC,omBCaR,MAAMC,GAAY,QAEZC,GAAqB,mBAc3B,SAASC,GAAMC,GACrB,OAAOjB,GAAiBzP,IACvBA,EAAO6P,aAAa,mBAAoBa,KA6CnC,SAASC,GACfC,GAWA,IAAeC,EAAf,cAA8BD,EAT9BrgB,kCAoBSC,KAAAsgB,yBAAqC,GAUrCtgB,KAAAugB,qBAAsB,EAUtBvgB,KAAAwgB,OAAqB,GAItBzgB,MAAM+I,GAIZ,OAHI9I,KAAKugB,qBACRvgB,KAAKygB,2BAEF5e,MAAMC,QAAQgH,GACVA,EAAQ/G,IAAKkJ,GAAcjL,KAAK0gB,eAAezV,IAEhDjL,KAAK0gB,eAAe5X,GASlB/I,sBACTC,KAAKugB,qBAAsB,EAGpBxgB,eAAekL,GACtB,GAAIA,UAA+D,IAAdA,IAAqC,IAAdA,EAC3E,OAAOA,EAGR,MAAM0V,EAAe3gB,KAAKwI,WAAWmY,cAAiB,GAChDC,EAAiB5gB,KAAK6gB,+BAAgC5V,GAC5D,IAAI6V,EAA6B,GACjC,IAAKF,EAEJ,OADApC,QAAQC,qBAAqBxT,yBACtB,KAGR,GAAIjL,KAAK+gB,SAAU,CAClB,MAAMjY,EAAU5J,OAAOJ,KAAKkB,KAAK+gB,UAAU7W,OAC1C,CAACpB,EAAS7D,KACT,MAAM+F,EAAa9L,OAAOJ,KAAKkB,KAAK+gB,SAAS9b,IAC7C,IAAK,IAAIqB,EAAI,EAAGA,EAAI0E,EAAWjG,OAAQuB,IAAK,CAC3C,MAAM0a,EAAahhB,KAAK+gB,SAAS9b,GAAK+F,EAAW1E,IACjD,GAAI0E,EAAW1E,KAAOsa,GAAkBI,EAAY,CACnDA,EAAWxgB,QAASyK,IACfA,IAA2B,IAAdA,GAChBnC,EAAQ1I,KAAK6K,KAGf,OAGF,OAAOnC,GAER,IAGDgY,EAAiB1gB,QAAQ0I,GAY1B,OATI6X,EAAaC,IAChBE,EAAiB1gB,KAAKugB,EAAaC,IAGhC5gB,KAAKwgB,OAAOI,GACfE,EAAiB1gB,KAAKJ,KAAKwgB,OAAOI,IAElCE,EAAiB1gB,KAAKJ,KAAKihB,qBAAsBL,IAE3CE,EAAiBI,KAAK,KAGtBnhB,2BACP,MAAMmgB,MAAEA,EAAQ,GAAEpX,QAAEA,EAAU,IAAO9I,KAAKwI,WAC1C,IAAKxI,KAAKihB,qBAAsB,CAC/B,MAAME,EAAanhB,KAAKoc,aAAa,oBACX,IAAtB+E,EAAWpc,QACdyZ,QAAQC,KACP,sGAGFze,KAAKihB,qBAAuBE,EAAWjX,OAAO,CAACkX,EAAgBC,KAC9D,MAAQnY,EAAA6W,GAAA9a,EAAAoc,EAAAnY,GAAkBJ,EAAAwY,GAAAD,EAAA,kBAAAnY,MAAA,KAE1B,OADAlJ,KAAKsgB,yBAAyBlgB,KAAK6E,GACnC/F,OAAAC,OAAA,GAAYiiB,EAAmBtY,IAC7B,IACH9I,KAAK6gB,+BApKT,SAAkC/X,GACjC,OAAOA,EAAQoB,OACd,CAACqX,EAAmBC,KACnBtiB,OAAOJ,KAAK0iB,GAAWhhB,QAASyE,IAC/Bsc,EAAkBC,EAAUvc,IAAQA,IAE9Bsc,GAEI,IA4J4BE,CAAyBN,GAGhEnhB,KAAKwgB,OAASxgB,KAAKsgB,yBAAyBpW,OAAO,CAACmX,EAAWK,IAC9DxiB,OAAAC,OAAA,GAAYkiB,EAAcnB,EAAMwB,IAC9B,IAEH1hB,KAAK+gB,SAAW7hB,OAAOJ,KAAKgK,GAASoB,OAAO,CAACyX,EAAU1c,KAClDjF,KAAKsgB,yBAAyBhgB,QAAQ2E,IAAQ,IACjD0c,EAAQziB,OAAAC,OAAA,GAAQwiB,EAAQ,CAAE5hB,CAACkF,GAAM6D,EAAQ7D,MAEnC0c,GACL,IAEH3hB,KAAKugB,qBAAsB,IAI7B,OApFCqB,GAAA,CAHChC,GAAa,QAASnb,GACtBmb,GAAa,eAAgBnb,GAC7Bmb,GAAa,UAAWnb,4CAlDX4b,EAAMuB,GAAA,CATpBrC,GAAO,CACPC,KAAMQ,GACNP,cAAe,CAACS,EAAwB1X,IAClCA,EAAW0X,MAGT,GAFC,CAAEA,MAAOA,EAAM9e,UAKVif,GA0ID,6RCvNR,SAASwB,GAA2DC,GAE1E,MAAQ5Z,IAAKuL,GAA2BqO,EAClCC,EADgBC,GAAAF,EAAA,SAOtB,OAJIrO,IACHsO,EAAkBtO,QAAUA,GAGtB,SAASjE,GACfA,EAAOyS,0BAAyB/iB,OAAAC,OAAA,GAC5BqQ,EAAOyS,0BACPF,IAKS,aCtCf,IAAaG,GAAb,cAA0B/B,GAAYlF,KAG7Blb,YAAYwM,EAAY0L,GAC/BjY,KAAKmiB,YAAc5V,EACnBvM,KAAKwI,WAAW4Z,WAAWnK,GAC3BjY,KAAKuY,aAGNxY,SACC,MAAMsiB,EAAQriB,KAAKyI,SAAS1G,IAAI,CAAC8F,EAAOya,KACvC,GAAIza,EAAO,CACV,MAAMW,EAA2B,CAChC4Z,WAAanK,IACZjY,KAAKuiB,YAAYD,EAAOrK,UAGDhV,IAArBjD,KAAKmiB,cACR3Z,EAAWga,SAAWF,IAAUtiB,KAAKmiB,aAEtCta,EAAMW,WAAUtJ,OAAAC,OAAA,GAAQ0I,EAAMW,WAAeA,GAE9C,OAAOX,IAGR,OAAOc,EAAE,MAAO,CAAEG,QAAS9I,KAAKkgB,MAAMuC,GAAA,OAAa,CAClD9Z,EACC,KACA,CACCG,QAAS9I,KAAKkgB,MAAMuC,GAAA,gBAErBJ,OA/BSH,sUAAIQ,CAAA,CALhBzC,GAAMwC,IACNZ,GAA8B,CAC9B3Z,IAAK,YACL4B,OAAQ,CAAC,iBAEGoY,IAqCE,aClCf,IAAaS,GAAb,cAA8BxC,GAAYlF,KACjClb,WACPC,KAAKwI,WAAW4Z,YAAcpiB,KAAKwI,WAAW4Z,WAAWpiB,KAAKwI,WAAWyP,MAGhElY,SACT,MAAMyiB,SAAEA,GAAaxiB,KAAKwI,WAE1B,OAAOG,EAAE,KAAM,CAAEG,QAAS9I,KAAKkgB,MAAM0C,GAAA,OAAa,CACjDja,EACC,OACA,CACCG,QAAS9I,KAAKkgB,MAAM,CAAC0C,GAAA,KAAUJ,EAAWI,GAAA,SAAe,OACzDC,QAAS7iB,KAAK8iB,UAEf,CAAC9iB,KAAKwI,WAAWua,YAfRJ,sUAAQK,CAAA,CAPpBnB,GAAkC,CAClC3Z,IAAK,iBACL4B,OAAQ,CAAC,cACTF,WAAY,CAAC,SACbpB,WAAY,CAAC,OAAQ,cAErByX,GAAM2C,KACMD,IChBb,MAAMM,WAAgBhI,GACblb,YAAYkY,GACnBuG,QAAQ0E,IAAIjL,GAGHlY,SACT,OAAOuI,EAAE4Z,GAAM,CAAEE,WAAYpiB,KAAKuiB,aAAe,CAChDja,EAAEqa,GAAU,CAAE1d,IAAK,IAAK8d,MAAO,gBAC/Bza,EAAEqa,GAAU,CAAE1d,IAAK,IAAK8d,MAAO,cAAeP,UAAU,IACxDla,EAAEqa,GAAU,CAAE1d,IAAK,IAAK8d,MAAO,mBAKlC,MAAMI,GAAUnV,SAASoV,eAAe,UAC9B5V,GAAS,IAAMlF,EAAE2a,GAAS,KAClC5I,MAAM,CAAE5Q,QAAS0Z,yBCpBnBE,EAAAC,QAAA,CAAkBC,QAAA,YAAAC,KAAA,sBAAAC,cAAA,+BAAAC,KAAA,sBAAAC,KAAA,2CCAlBN,EAAAC,QAAA,CAAkBC,QAAA,gBAAAC,KAAA,0BAAAphB,KAAA,0BAAAogB,SAAA","file":"main.5fed2e947eb23ff02352.bundle.js","sourcesContent":["import has from '../core/has';\n\nexport interface ObjectAssign {\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source The source object from which to copy properties.\n\t */\n\t<T, U>(target: T, source: U): T & U;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t */\n\t<T, U, V>(target: T, source1: U, source2: V): T & U & V;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t * @param source3 The third source object from which to copy properties.\n\t */\n\t<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param sources One or more source objects from which to copy properties\n\t */\n\t(target: object, ...sources: any[]): any;\n}\n\nexport interface ObjectEnteries {\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T extends { [key: string]: any }, K extends keyof T>(o: T): [keyof T, T[K]][];\n\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): [string, any][];\n}\n\nexport interface ObjectGetOwnPropertyDescriptors {\n\t<T>(o: T): { [K in keyof T]: PropertyDescriptor };\n\t(o: any): { [key: string]: PropertyDescriptor };\n}\n\nexport interface ObjectValues {\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T>(o: { [s: string]: T }): T[];\n\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): any[];\n}\n\nexport let assign: ObjectAssign;\n\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor: <T, K extends keyof T>(o: T, propertyKey: K) => PropertyDescriptor | undefined;\n\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames: (o: any) => string[];\n\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols: (o: any) => symbol[];\n\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is: (value1: any, value2: any) => boolean;\n\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys: (o: object) => string[];\n\n/* ES7 Object static methods */\n\nexport let getOwnPropertyDescriptors: ObjectGetOwnPropertyDescriptors;\n\nexport let entries: ObjectEnteries;\n\nexport let values: ObjectValues;\n\nif (!has('es6-object')) {\n\tconst keys = Object.keys.bind(Object);\n\tObject.keys = function symbolAwareKeys(o: object): string[] {\n\t\treturn keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tObject.assign = function assign(target: any, ...sources: any[]) {\n\t\tif (target == null) {\n\t\t\t// TypeError if undefined or null\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t}\n\n\t\tconst to = Object(target);\n\t\tsources.forEach((nextSource) => {\n\t\t\tif (nextSource) {\n\t\t\t\t// Skip over if undefined or null\n\t\t\t\tkeys(nextSource).forEach((nextKey) => {\n\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn to;\n\t};\n\n\tconst getOwnPropertyNames = Object.getOwnPropertyNames.bind(Object);\n\tObject.getOwnPropertyNames = function symbolAwareGetOwnPropertyNames(o: any): string[] {\n\t\treturn getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tObject.getOwnPropertySymbols = function getOwnPropertySymbols(o: any): symbol[] {\n\t\treturn getOwnPropertyNames(o)\n\t\t\t.filter((key) => Boolean(key.match(/^@@.+/)))\n\t\t\t.map((key) => Symbol.for(key.substring(2)));\n\t};\n\n\tObject.is = function is(value1: any, value2: any): boolean {\n\t\tif (value1 === value2) {\n\t\t\treturn value1 !== 0 || 1 / value1 === 1 / value2; // -0\n\t\t}\n\t\treturn value1 !== value1 && value2 !== value2; // NaN\n\t};\n}\n\nif (!has('es2017-object')) {\n\tObject.getOwnPropertyDescriptors = function getOwnPropertyDescriptors<T>(\n\t\to: T\n\t): { [P in keyof T]: TypedPropertyDescriptor<T[P]> } & { [x: string]: PropertyDescriptor } {\n\t\treturn Object.getOwnPropertyNames(o).reduce(\n\t\t\t(previous, key) => {\n\t\t\t\tprevious[key] = Object.getOwnPropertyDescriptor(o, key)!;\n\t\t\t\treturn previous;\n\t\t\t},\n\t\t\t{} as { [P in keyof T]: TypedPropertyDescriptor<T[P]> } & { [x: string]: PropertyDescriptor }\n\t\t);\n\t};\n\n\tObject.entries = function entries(o: any): [string, any][] {\n\t\treturn keys(o).map((key) => [key, o[key]] as [string, any]);\n\t};\n\n\tObject.values = function values(o: any): any[] {\n\t\treturn keys(o).map((key) => o[key]);\n\t};\n}\n\nassign = Object.assign;\ngetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\ngetOwnPropertyNames = Object.getOwnPropertyNames;\ngetOwnPropertySymbols = Object.getOwnPropertySymbols;\nis = Object.is;\nkeys = Object.keys;\ngetOwnPropertyDescriptors = Object.getOwnPropertyDescriptors;\nentries = Object.entries;\nvalues = Object.values;\n\nexport default Object;\n","`!has('es6-iterator')`;\nimport { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface Map<K, V> {\n\t/**\n\t * Deletes all keys and their associated values.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Deletes a given key and its associated value.\n\t *\n\t * @param key The key to delete\n\t * @return true if the key exists, false if it does not\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Returns an iterator that yields each key/value pair as an array.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[K, V]>;\n\n\t/**\n\t * Executes a given function for each map entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated Map instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;\n\n\t/**\n\t * Returns the value associated with a given key.\n\t *\n\t * @param key The key to look up\n\t * @return The value if one exists or undefined\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Returns an iterator that yields each key in the map.\n\t *\n\t * @return An iterator containing the instance's keys.\n\t */\n\tkeys(): IterableIterator<K>;\n\n\t/**\n\t * Checks for the presence of a given key.\n\t *\n\t * @param key The key to check for\n\t * @return true if the key exists, false if it does not\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Sets the value associated with a given key.\n\t *\n\t * @param key The key to define a value to\n\t * @param value The value to assign\n\t * @return The Map instance\n\t */\n\tset(key: K, value: V): this;\n\n\t/**\n\t * Returns the number of key / value pairs in the Map.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterator that yields each value in the map.\n\t *\n\t * @return An iterator containing the instance's values.\n\t */\n\tvalues(): IterableIterator<V>;\n\n\t/** Returns an iterable of entries in the map. */\n\t[Symbol.iterator](): IterableIterator<[K, V]>;\n\n\treadonly [Symbol.toStringTag]: string;\n}\n\nexport interface MapConstructor {\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t */\n\tnew (): Map<any, any>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator?: [K, V][]): Map<K, V>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator: Iterable<[K, V]>): Map<K, V>;\n\n\treadonly prototype: Map<any, any>;\n\n\treadonly [Symbol.species]: MapConstructor;\n}\n\nexport let Map: MapConstructor = global.Map;\n\nif (!has('es6-map')) {\n\tMap = global.Map = class Map<K, V> {\n\t\tprotected readonly _keys: K[] = [];\n\t\tprotected readonly _values: V[] = [];\n\n\t\t/**\n\t\t * An alternative to Array.prototype.indexOf using Object.is\n\t\t * to check for equality. See http://mzl.la/1zuKO2V\n\t\t */\n\t\tprotected _indexOfKey(keys: K[], key: K): number {\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tif (objectIs(keys[i], key)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\tstatic [Symbol.species] = Map;\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst value = iterable[i];\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._keys.length;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._keys.length = this._values.length = 0;\n\t\t}\n\n\t\tdelete(key: K): boolean {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\tif (index < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._keys.splice(index, 1);\n\t\t\tthis._values.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[K, V]> {\n\t\t\tconst values = this._keys.map(\n\t\t\t\t(key: K, i: number): [K, V] => {\n\t\t\t\t\treturn [key, this._values[i]];\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn new ShimIterator(values);\n\t\t}\n\n\t\tforEach(callback: (value: V, key: K, mapInstance: Map<K, V>) => any, context?: {}) {\n\t\t\tconst keys = this._keys;\n\t\t\tconst values = this._values;\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tcallback.call(context, values[i], keys[i], this);\n\t\t\t}\n\t\t}\n\n\t\tget(key: K): V | undefined {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\treturn index < 0 ? undefined : this._values[index];\n\t\t}\n\n\t\thas(key: K): boolean {\n\t\t\treturn this._indexOfKey(this._keys, key) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<K> {\n\t\t\treturn new ShimIterator(this._keys);\n\t\t}\n\n\t\tset(key: K, value: V): Map<K, V> {\n\t\t\tlet index = this._indexOfKey(this._keys, key);\n\t\t\tindex = index < 0 ? this._keys.length : index;\n\t\t\tthis._keys[index] = key;\n\t\t\tthis._values[index] = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tvalues(): IterableIterator<V> {\n\t\t\treturn new ShimIterator(this._values);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\t\treturn this.entries();\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Map' = 'Map';\n\t};\n}\n\nexport default Map;\n","import global from './global';\n`!has('es6-iterator')`;\nimport { isArrayLike, Iterable } from './iterator';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface WeakMap<K extends object, V> {\n\t/**\n\t * Remove a `key` from the map\n\t *\n\t * @param key The key to remove\n\t * @return `true` if the value was removed, otherwise `false`\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Retrieve the value, based on the supplied `key`\n\t *\n\t * @param key The key to retrieve the `value` for\n\t * @return the `value` based on the `key` if found, otherwise `false`\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Determines if a `key` is present in the map\n\t *\n\t * @param key The `key` to check\n\t * @return `true` if the key is part of the map, otherwise `false`.\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Set a `value` for a particular `key`.\n\t *\n\t * @param key The `key` to set the `value` for\n\t * @param value The `value` to set\n\t * @return the instances\n\t */\n\tset(key: K, value: V): this;\n\n\treadonly [Symbol.toStringTag]: 'WeakMap';\n}\n\nexport interface WeakMapConstructor {\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t */\n\tnew (): WeakMap<object, any>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable?: [K, V][]): WeakMap<K, V>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable: Iterable<[K, V]>): WeakMap<K, V>;\n\n\treadonly prototype: WeakMap<object, any>;\n}\n\nexport let WeakMap: WeakMapConstructor = global.WeakMap;\n\ninterface Entry<K, V> {\n\tkey: K;\n\tvalue: V;\n}\n\nif (!has('es6-weakmap')) {\n\tconst DELETED: any = {};\n\n\tconst getUID = function getUID(): number {\n\t\treturn Math.floor(Math.random() * 100000000);\n\t};\n\n\tconst generateName = (function() {\n\t\tlet startId = Math.floor(Date.now() % 100000000);\n\n\t\treturn function generateName(): string {\n\t\t\treturn '__wm' + getUID() + (startId++ + '__');\n\t\t};\n\t})();\n\n\tWeakMap = global.WeakMap = class WeakMap<K, V> {\n\t\tprivate readonly _name: string;\n\t\tprivate readonly _frozenEntries: Entry<K, V>[];\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tthis._name = generateName();\n\n\t\t\tthis._frozenEntries = [];\n\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst item = iterable[i];\n\t\t\t\t\t\tthis.set(item[0], item[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const [key, value] of iterable) {\n\t\t\t\t\t\tthis.set(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _getFrozenEntryIndex(key: any): number {\n\t\t\tfor (let i = 0; i < this._frozenEntries.length; i++) {\n\t\t\t\tif (this._frozenEntries[i].key === key) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t}\n\n\t\tdelete(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\tentry.value = DELETED;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\tthis._frozenEntries.splice(frozenIndex, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tget(key: any): V | undefined {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\treturn entry.value;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn this._frozenEntries[frozenIndex].value;\n\t\t\t}\n\t\t}\n\n\t\thas(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tset(key: any, value?: any): this {\n\t\t\tif (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n\t\t\t\tthrow new TypeError('Invalid value used as weak map key');\n\t\t\t}\n\t\t\tlet entry: Entry<K, V> = key[this._name];\n\t\t\tif (!entry || entry.key !== key) {\n\t\t\t\tentry = Object.create(null, {\n\t\t\t\t\tkey: { value: key }\n\t\t\t\t});\n\n\t\t\t\tif (Object.isFrozen(key)) {\n\t\t\t\t\tthis._frozenEntries.push(entry);\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty(key, this._name, {\n\t\t\t\t\t\tvalue: entry\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tentry.value = value;\n\t\t\treturn this;\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'WeakMap' = 'WeakMap';\n\t};\n}\n\nexport default WeakMap;\n","import Promise from '../shim/Promise';\n\n/**\n * Used through the toolkit as a consistent API to manage how callers can \"cleanup\"\n * when doing a function.\n */\nexport interface Handle {\n\t/**\n\t * Perform the destruction/cleanup logic associated with this Handle\n\t */\n\tdestroy(): void;\n}\n\n/**\n * No op function used to replace a Destroyable instance's `destroy` method, once the instance has been destroyed\n */\nfunction noop(): Promise<boolean> {\n\treturn Promise.resolve(false);\n}\n\n/**\n * No op function used to replace a Destroyable instance's `own` method, once the instance has been destroyed\n */\nfunction destroyed(): never {\n\tthrow new Error('Call made to destroyed method');\n}\n\nexport class Destroyable {\n\t/**\n\t * The instance's handles\n\t */\n\tprivate handles: Handle[];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.handles = [];\n\t}\n\n\t/**\n\t * Register handles for the instance that will be destroyed when `this.destroy` is called\n\t *\n\t * @param {Handle} handle The handle to add for the instance\n\t * @returns {Handle} A wrapper Handle. When the wrapper Handle's `destroy` method is invoked, the original handle is\n\t *                   removed from the instance, and its `destroy` method is invoked.\n\t */\n\town(handle: Handle): Handle {\n\t\tconst { handles: _handles } = this;\n\t\t_handles.push(handle);\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\t_handles.splice(_handles.indexOf(handle));\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Destroys all handlers registered for the instance\n\t *\n\t * @returns {Promise<any} A Promise that resolves once all handles have been destroyed\n\t */\n\tdestroy(): Promise<any> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.handles.forEach((handle) => {\n\t\t\t\thandle && handle.destroy && handle.destroy();\n\t\t\t});\n\t\t\tthis.destroy = noop;\n\t\t\tthis.own = destroyed;\n\t\t\tresolve(true);\n\t\t});\n\t}\n}\n\nexport default Destroyable;\n","import Map from '../shim/Map';\nimport { Destroyable, Handle } from './Destroyable';\n\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map<string, RegExp>();\n\nexport type EventType = string | symbol;\n\n/**\n * The base event object, which provides a `type` property\n */\nexport interface EventObject<T = EventType> {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: T;\n}\n\n/**\n * Determines if the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString: string | symbol, targetString: string | symbol): boolean {\n\tif (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n\t\tlet regex: RegExp;\n\t\tif (regexMap.has(globString)) {\n\t\t\tregex = regexMap.get(globString)!;\n\t\t} else {\n\t\t\tregex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n\t\t\tregexMap.set(globString, regex);\n\t\t}\n\t\treturn regex.test(targetString);\n\t} else {\n\t\treturn globString === targetString;\n\t}\n}\n\nexport type EventedCallback<T = EventType, E extends EventObject<T> = EventObject<T>> = {\n\t/**\n\t * A callback that takes an `event` argument\n\t *\n\t * @param event The event object\n\t */\n\n\t(event: E): boolean | void;\n};\n\nexport interface CustomEventTypes<T extends EventObject<any> = EventObject<any>> {\n\t[index: string]: T;\n}\n\n/**\n * A type which is either a targeted event listener or an array of listeners\n * @template T The type of target for the events\n * @template E The event type for the events\n */\nexport type EventedCallbackOrArray<T = EventType, E extends EventObject<T> = EventObject<T>> =\n\t| EventedCallback<T, E>\n\t| EventedCallback<T, E>[];\n\n/**\n * Event Class\n */\nexport class Evented<\n\tM extends CustomEventTypes = {},\n\tT = EventType,\n\tO extends EventObject<T> = EventObject<T>\n> extends Destroyable {\n\t// The following member is purely so TypeScript remembers the type of `M` when extending so\n\t// that the utilities in `on.ts` will work https://github.com/Microsoft/TypeScript/issues/20348\n\t// tslint:disable-next-line\n\tprotected __typeMap__?: M;\n\t/**\n\t * map of listeners keyed by event type\n\t */\n\tprotected listenersMap: Map<T | keyof M, EventedCallback<T, O>[]> = new Map();\n\n\t/**\n\t * Emits the event object for the specified type\n\t *\n\t * @param event the event to emit\n\t */\n\temit<K extends keyof M>(event: M[K]): void;\n\temit(event: O): void;\n\temit(event: any): void {\n\t\tthis.listenersMap.forEach((methods, type) => {\n\t\t\tif (isGlobMatch(type as any, event.type)) {\n\t\t\t\t[...methods].forEach((method) => {\n\t\t\t\t\tmethod.call(this, event);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Catch all handler for various call signatures. The signatures are defined in\n\t * `BaseEventedEvents`.  You can add your own event type -> handler types by extending\n\t * `BaseEventedEvents`.  See example for details.\n\t *\n\t * @param args\n\t *\n\t * @example\n\t *\n\t * interface WidgetBaseEvents extends BaseEventedEvents {\n\t *     (type: 'properties:changed', handler: PropertiesChangedHandler): Handle;\n\t * }\n\t * class WidgetBase extends Evented {\n\t *    on: WidgetBaseEvents;\n\t * }\n\t *\n\t * @return {any}\n\t */\n\ton<K extends keyof M>(type: K, listener: EventedCallbackOrArray<K, M[K]>): Handle;\n\ton(type: T, listener: EventedCallbackOrArray<T, O>): Handle;\n\ton(type: any, listener: EventedCallbackOrArray<any, any>): Handle {\n\t\tif (Array.isArray(listener)) {\n\t\t\tconst handles = listener.map((listener) => this._addListener(type, listener));\n\t\t\treturn {\n\t\t\t\tdestroy() {\n\t\t\t\t\thandles.forEach((handle) => handle.destroy());\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn this._addListener(type, listener);\n\t}\n\n\tprivate _addListener(type: T | keyof M, listener: EventedCallback<T, O>) {\n\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\tlisteners.push(listener);\n\t\tthis.listenersMap.set(type, listeners);\n\t\treturn {\n\t\t\tdestroy: () => {\n\t\t\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport default Evented;\n","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport {\n\tConstructor,\n\tInjectorFactory,\n\tInjectorItem,\n\tRegistryLabel,\n\tWidgetBaseConstructor,\n\tWidgetBaseInterface,\n\tESMDefaultWidgetBase,\n\tWidgetBaseConstructorFunction,\n\tESMDefaultWidgetBaseFunction,\n\tCallback,\n\tWNodeFactory,\n\tRenderResult,\n\tWidgetBaseTypes\n} from './interfaces';\n\nexport type RegistryItem =\n\t| WidgetBaseConstructor\n\t| WNodeFactory<any>\n\t| Promise<WidgetBaseConstructor | WNodeFactory<any>>\n\t| WidgetBaseConstructorFunction\n\t| ESMDefaultWidgetBaseFunction;\n\n/**\n * Widget base type\n */\nexport const WIDGET_BASE_TYPE = '__widget_base_type';\n\nexport interface RegistryEventObject extends EventObject<RegistryLabel> {\n\taction: string;\n\titem: WNodeFactory<any> | WidgetBaseConstructor | InjectorItem;\n}\n/**\n * Widget Registry Interface\n */\nexport interface RegistryInterface {\n\t/**\n\t * Define a WidgetRegistryItem against a label\n\t *\n\t * @param label The label of the widget to register\n\t * @param registryItem The registry item to define\n\t */\n\tdefine(label: RegistryLabel, registryItem: RegistryItem): void;\n\n\t/**\n\t * Return a RegistryItem for the given label, null if an entry doesn't exist\n\t *\n\t * @param widgetLabel The label of the widget to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tget(label: RegistryLabel): WNodeFactory<any> | Callback<any, any, RenderResult> | Constructor<any> | null;\n\tget<T extends WNodeFactory<any>>(label: RegistryLabel): T | null;\n\tget<T extends Callback<any, any, RenderResult>>(label: RegistryLabel): T | null;\n\tget<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\n\t/**\n\t * Returns a boolean if an entry for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a widget registry item exists\n\t */\n\thas(label: RegistryLabel): boolean;\n\n\t/**\n\t * Define an Injector against a label\n\t *\n\t * @param label The label of the injector to register\n\t * @param registryItem The injector factory\n\t */\n\tdefineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void;\n\n\t/**\n\t * Return an Injector registry item for the given label, null if an entry doesn't exist\n\t *\n\t * @param label The label of the injector to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tgetInjector<T>(label: RegistryLabel): InjectorItem<T> | null;\n\n\t/**\n\t * Returns a boolean if an injector for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a injector registry item exists\n\t */\n\thasInjector(label: RegistryLabel): boolean;\n}\n\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor<T extends WidgetBaseInterface = any>(item: any): item is Constructor<T> {\n\treturn Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\n\nexport function isWidgetFunction(item: any): item is Callback<any, any, RenderResult> {\n\treturn Boolean(item && item.isWidget);\n}\n\nexport function isWNodeFactory<W extends WidgetBaseTypes>(node: any): node is WNodeFactory<W> {\n\tif (typeof node === 'function' && node.isFactory) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function isWidget<T extends WidgetBaseInterface = any>(\n\titem: any\n): item is Constructor<T> | Callback<any, any, RenderResult> {\n\treturn isWidgetBaseConstructor(item) || isWidgetFunction(item);\n}\n\nexport function isWidgetConstructorDefaultExport<T extends WidgetBaseTypes>(\n\titem: any\n): item is ESMDefaultWidgetBase<T> {\n\treturn Boolean(\n\t\titem &&\n\t\t\titem.hasOwnProperty('__esModule') &&\n\t\t\titem.hasOwnProperty('default') &&\n\t\t\t(isWidget(item.default) || isWNodeFactory(item.default))\n\t);\n}\n\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented<{}, RegistryLabel, RegistryEventObject> implements RegistryInterface {\n\t/**\n\t * internal map of labels and RegistryItem\n\t */\n\tprivate _widgetRegistry: Map<RegistryLabel, RegistryItem> | undefined;\n\n\tprivate _injectorRegistry: Map<RegistryLabel, InjectorItem> | undefined;\n\n\t/**\n\t * Emit loaded event for registry label\n\t */\n\tprivate emitLoadedEvent(\n\t\twidgetLabel: RegistryLabel,\n\t\titem: WNodeFactory<any> | WidgetBaseConstructor | InjectorItem\n\t): void {\n\t\tthis.emit({\n\t\t\ttype: widgetLabel,\n\t\t\taction: 'loaded',\n\t\t\titem\n\t\t});\n\t}\n\n\tpublic define(label: RegistryLabel, item: RegistryItem): void {\n\t\tif (this._widgetRegistry === undefined) {\n\t\t\tthis._widgetRegistry = new Map();\n\t\t}\n\n\t\tif (this._widgetRegistry.has(label)) {\n\t\t\tthrow new Error(`widget has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tthis._widgetRegistry.set(label, item);\n\n\t\tif (item instanceof Promise) {\n\t\t\titem.then(\n\t\t\t\t(widgetCtor) => {\n\t\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\t\treturn widgetCtor;\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (isWidgetBaseConstructor(item)) {\n\t\t\tthis.emitLoadedEvent(label, item);\n\t\t}\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void {\n\t\tif (this._injectorRegistry === undefined) {\n\t\t\tthis._injectorRegistry = new Map();\n\t\t}\n\n\t\tif (this._injectorRegistry.has(label)) {\n\t\t\tthrow new Error(`injector has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tconst invalidator = new Evented();\n\n\t\tconst injectorItem: InjectorItem = {\n\t\t\tinjector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n\t\t\tinvalidator\n\t\t};\n\n\t\tthis._injectorRegistry.set(label, injectorItem);\n\t\tthis.emitLoadedEvent(label, injectorItem);\n\t}\n\n\tpublic get(label: RegistryLabel): WNodeFactory<any> | Callback<any, any, RenderResult> | Constructor<any> | null;\n\tpublic get<T extends WNodeFactory<any>>(label: RegistryLabel): T | null;\n\tpublic get<T extends Callback<any, any, RenderResult>>(label: RegistryLabel): T | null;\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel\n\t): WNodeFactory<T> | Callback<any, any, RenderResult> | Constructor<T> | null {\n\t\tif (!this._widgetRegistry || !this.has(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst item = this._widgetRegistry.get(label);\n\n\t\tif (isWidget<T>(item) || isWNodeFactory(item)) {\n\t\t\treturn item;\n\t\t}\n\n\t\tif (item instanceof Promise) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst promise = (<WidgetBaseConstructorFunction>item)();\n\t\tthis._widgetRegistry.set(label, promise);\n\n\t\tpromise.then(\n\t\t\t(widgetCtor) => {\n\t\t\t\tif (isWidgetConstructorDefaultExport<T>(widgetCtor)) {\n\t\t\t\t\twidgetCtor = widgetCtor.default;\n\t\t\t\t}\n\n\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\treturn widgetCtor;\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t);\n\n\t\treturn null;\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel): InjectorItem<T> | null {\n\t\tif (!this._injectorRegistry || !this.hasInjector(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._injectorRegistry.get(label)!;\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n\t}\n}\n\nexport default Registry;\n","import { PropertyChangeRecord } from './interfaces';\nimport { WIDGET_BASE_TYPE } from './Registry';\n\nfunction isObjectOrArray(value: any): boolean {\n\treturn Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\n\nexport function always(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: true,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function ignore(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: false,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function reference(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: previousProperty !== newProperty,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function shallow(previousProperty: any, newProperty: any, depth = 0): PropertyChangeRecord {\n\tlet changed = false;\n\n\tconst validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n\tconst validNewProperty = newProperty && isObjectOrArray(newProperty);\n\n\tif (!validOldProperty || !validNewProperty) {\n\t\treturn {\n\t\t\tchanged: true,\n\t\t\tvalue: newProperty\n\t\t};\n\t}\n\n\tconst previousKeys = Object.keys(previousProperty);\n\tconst newKeys = Object.keys(newProperty);\n\n\tif (previousKeys.length !== newKeys.length) {\n\t\tchanged = true;\n\t} else {\n\t\tchanged = newKeys.some((key) => {\n\t\t\tif (depth > 0) {\n\t\t\t\treturn shallow(newProperty[key], previousProperty[key], depth - 1).changed;\n\t\t\t}\n\t\t\treturn newProperty[key] !== previousProperty[key];\n\t\t});\n\t}\n\treturn {\n\t\tchanged,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function auto(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\tlet result;\n\tif (typeof newProperty === 'function') {\n\t\tif (newProperty._type === WIDGET_BASE_TYPE) {\n\t\t\tresult = reference(previousProperty, newProperty);\n\t\t} else {\n\t\t\tresult = ignore(previousProperty, newProperty);\n\t\t}\n\t} else if (isObjectOrArray(newProperty)) {\n\t\tresult = shallow(previousProperty, newProperty);\n\t} else {\n\t\tresult = reference(previousProperty, newProperty);\n\t}\n\treturn result;\n}\n","import { Map } from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport { Constructor, InjectorFactory, InjectorItem, RegistryLabel, WidgetBaseInterface } from './interfaces';\nimport { Registry, RegistryEventObject, RegistryItem } from './Registry';\n\nexport type RegistryHandlerEventMap = {\n\tinvalidate: EventObject<'invalidate'>;\n};\n\nexport class RegistryHandler extends Evented<RegistryHandlerEventMap> {\n\tprivate _registry = new Registry();\n\tprivate _registryWidgetLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprivate _registryInjectorLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprotected baseRegistry!: Registry;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.own(this._registry);\n\t\tconst destroy = () => {\n\t\t\tif (this.baseRegistry) {\n\t\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis.baseRegistry = undefined as any;\n\t\t\t}\n\t\t};\n\t\tthis.own({ destroy });\n\t}\n\n\tpublic set base(baseRegistry: Registry) {\n\t\tif (this.baseRegistry) {\n\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t}\n\t\tthis.baseRegistry = baseRegistry;\n\t}\n\n\tpublic get base(): Registry {\n\t\treturn this.baseRegistry;\n\t}\n\n\tpublic define(label: RegistryLabel, widget: RegistryItem): void {\n\t\tthis._registry.define(label, widget);\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injector: InjectorFactory): void {\n\t\tthis._registry.defineInjector(label, injector);\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean = false\n\t): Constructor<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel, globalPrecedence: boolean = false): InjectorItem<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n\t}\n\n\tprivate _get(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean,\n\t\tgetFunctionName: 'getInjector' | 'get',\n\t\tlabelMap: Map<Registry, RegistryLabel[]>\n\t): any {\n\t\tconst registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n\t\tfor (let i = 0; i < registries.length; i++) {\n\t\t\tconst registry: any = registries[i];\n\t\t\tif (!registry) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst item = registry[getFunctionName](label);\n\t\t\tconst registeredLabels = labelMap.get(registry) || [];\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t} else if (registeredLabels.indexOf(label) === -1) {\n\t\t\t\tconst handle = registry.on(label, (event: RegistryEventObject) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.action === 'loaded' &&\n\t\t\t\t\t\t(this as any)[getFunctionName](label, globalPrecedence) === event.item\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.emit({ type: 'invalidate' });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.own(handle);\n\t\t\t\tlabelMap.set(registry, [...registeredLabels, label]);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default RegistryHandler;\n","import { Evented, EventObject } from '../core/Evented';\nimport Map from '../shim/Map';\nimport { NodeHandlerInterface } from './interfaces';\n\n/**\n * Enum to identify the type of event.\n * Listening to 'Projector' will notify when projector is created or updated\n * Listening to 'Widget' will notify when widget root is created or updated\n */\nexport enum NodeEventType {\n\tProjector = 'Projector',\n\tWidget = 'Widget'\n}\n\nexport type NodeHandlerEventMap = {\n\tProjector: EventObject<NodeEventType.Projector>;\n\tWidget: EventObject<NodeEventType.Widget>;\n};\n\nexport class NodeHandler extends Evented<NodeHandlerEventMap> implements NodeHandlerInterface {\n\tprivate _nodeMap = new Map<string | number, Element>();\n\n\tpublic get(key: string | number): Element | undefined {\n\t\treturn this._nodeMap.get(key);\n\t}\n\n\tpublic has(key: string | number): boolean {\n\t\treturn this._nodeMap.has(key);\n\t}\n\n\tpublic add(element: Element, key: string | number): void {\n\t\tthis._nodeMap.set(key, element);\n\t\tthis.emit({ type: `${key}` });\n\t}\n\n\tpublic addRoot(): void {\n\t\tthis.emit({ type: NodeEventType.Widget });\n\t}\n\n\tpublic remove(key: string | number) {\n\t\tthis._nodeMap.delete(key);\n\t}\n\n\tpublic addProjector(): void {\n\t\tthis.emit({ type: NodeEventType.Projector });\n\t}\n\n\tpublic clear(): void {\n\t\tthis._nodeMap.clear();\n\t}\n}\n\nexport default NodeHandler;\n","import global from './global';\n`!has('es6-iterator')`;\nimport { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface Set<T> {\n\t/**\n\t * Adds a `value` to the `Set`\n\t *\n\t * @param value The value to add to the set\n\t * @returns The instance of the `Set`\n\t */\n\tadd(value: T): this;\n\n\t/**\n\t * Removes all the values from the `Set`.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Removes a `value` from the set\n\t *\n\t * @param value The value to be removed\n\t * @returns `true` if the value was removed\n\t */\n\tdelete(value: T): boolean;\n\n\t/**\n\t * Returns an iterator that yields each entry.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[T, T]>;\n\n\t/**\n\t * Executes a given function for each set entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated `Set` instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void;\n\n\t/**\n\t * Identifies if a value is part of the set.\n\t *\n\t * @param value The value to check\n\t * @returns `true` if the value is part of the set otherwise `false`\n\t */\n\thas(value: T): boolean;\n\n\t/**\n\t * Despite its name, returns an iterable of the values in the set,\n\t */\n\tkeys(): IterableIterator<T>;\n\n\t/**\n\t * Returns the number of values in the `Set`.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterable of values in the set.\n\t */\n\tvalues(): IterableIterator<T>;\n\n\t/** Iterates over values in the set. */\n\t[Symbol.iterator](): IterableIterator<T>;\n\n\treadonly [Symbol.toStringTag]: 'Set';\n}\n\nexport interface SetConstructor {\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t */\n\tnew (): Set<any>;\n\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t *\n\t * @param iterator The iterable structure to initialize the set with\n\t */\n\tnew <T>(iterator?: T[]): Set<T>;\n\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t *\n\t * @param iterator The iterable structure to initialize the set with\n\t */\n\tnew <T>(iterator: Iterable<T>): Set<T>;\n\n\treadonly prototype: Set<any>;\n}\n\nexport let Set: SetConstructor = global.Set;\n\nif (!has('es6-set')) {\n\tSet = global.Set = class Set<T> {\n\t\tprivate readonly _setData: T[] = [];\n\n\t\tstatic [Symbol.species] = Set;\n\n\t\tconstructor(iterable?: ArrayLike<T> | Iterable<T>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tthis.add(iterable[i]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tadd(value: T): this {\n\t\t\tif (this.has(value)) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis._setData.push(value);\n\t\t\treturn this;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._setData.length = 0;\n\t\t}\n\n\t\tdelete(value: T): boolean {\n\t\t\tconst idx = this._setData.indexOf(value);\n\t\t\tif (idx === -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._setData.splice(idx, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[T, T]> {\n\t\t\treturn new ShimIterator<[any, any]>(this._setData.map<[any, any]>((value) => [value, value]));\n\t\t}\n\n\t\tforEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void {\n\t\t\tconst iterator = this.values();\n\t\t\tlet result = iterator.next();\n\t\t\twhile (!result.done) {\n\t\t\t\tcallbackfn.call(thisArg, result.value, result.value, this);\n\t\t\t\tresult = iterator.next();\n\t\t\t}\n\t\t}\n\n\t\thas(value: T): boolean {\n\t\t\treturn this._setData.indexOf(value) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._setData.length;\n\t\t}\n\n\t\tvalues(): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Set' = 'Set';\n\t};\n}\n\nexport default Set;\n","import global from '../shim/global';\nimport has from '../core/has';\nimport WeakMap from '../shim/WeakMap';\nimport Set from '../shim/Set';\nimport Map from '../shim/Map';\nimport {\n\tWNode,\n\tVNode,\n\tDNode,\n\tVNodeProperties,\n\tTransitionStrategy,\n\tSupportedClassName,\n\tDomVNode,\n\tLazyDefine,\n\tConstructor,\n\tRenderResult,\n\tWidgetBaseInterface,\n\tCallback,\n\tMiddlewareMap,\n\tWNodeFactory,\n\tUnionToIntersection,\n\tWidgetProperties,\n\tMiddlewareResultFactory,\n\tWidgetBaseTypes,\n\tRegistryLabel,\n\tDeferredVirtualProperties,\n\tDomOptions\n} from './interfaces';\nimport { Registry, isWidget, isWidgetBaseConstructor, isWidgetFunction, isWNodeFactory } from './Registry';\nimport { auto } from './diff';\nimport RegistryHandler from './RegistryHandler';\nimport { NodeHandler } from './NodeHandler';\n\ndeclare global {\n\tnamespace JSX {\n\t\ttype Element = WNode;\n\t\tinterface ElementAttributesProperty {\n\t\t\tproperties: {};\n\t\t}\n\t\tinterface IntrinsicElements {\n\t\t\t[key: string]: VNodeProperties;\n\t\t}\n\t}\n}\n\nexport interface BaseNodeWrapper {\n\tid: string;\n\towningId: string;\n\tnode: WNode<any> | VNode;\n\tdomNode?: Node;\n\tdepth: number;\n\torder: number;\n\trequiresInsertBefore?: boolean;\n\thasPreviousSiblings?: boolean;\n\thasParentWNode?: boolean;\n\tnamespace?: string;\n\thasAnimations?: boolean;\n\tparentId: string;\n\tchildDomWrapperId?: string;\n}\n\nexport interface WNodeWrapper extends BaseNodeWrapper {\n\tnode: WNode<any>;\n\tinstance?: any;\n\tmergeNodes?: Node[];\n\tnodeHandlerCalled?: boolean;\n\tregistryItem?: Callback<any, any, RenderResult> | Constructor<any> | null;\n\tproperties: any;\n}\n\nexport interface WidgetMeta {\n\tdirty: boolean;\n\tinvalidator: () => void;\n\tmiddleware?: any;\n\tregistryHandler?: RegistryHandler;\n\tregistry: Registry;\n\tproperties: any;\n\tchildren?: DNode[];\n\trendering: boolean;\n\tnodeMap?: Map<string | number, HTMLElement>;\n\tdestroyMap?: Map<string, () => void>;\n\tdeferRefs: number;\n\tcustomDiffProperties?: Set<string>;\n\tcustomDiffMap?: Map<string, Map<string, (current: any, next: any) => void>>;\n}\n\nexport interface WidgetData {\n\tonDetach: () => void;\n\tonAttach: () => void;\n\tdirty: boolean;\n\tnodeHandler: NodeHandler;\n\tinvalidate?: Function;\n\trendering: boolean;\n\tinputProperties: any;\n\tregistry: RegistryHandler;\n}\n\nexport interface VNodeWrapper extends BaseNodeWrapper {\n\tnode: VNode | DomVNode;\n\tmerged?: boolean;\n\tinserted?: boolean;\n\tdeferredProperties?: VNodeProperties;\n}\n\nexport type DNodeWrapper = VNodeWrapper | WNodeWrapper;\n\nexport interface MountOptions {\n\tsync: boolean;\n\tmerge: boolean;\n\ttransition?: TransitionStrategy;\n\tdomNode: HTMLElement;\n\tregistry: Registry;\n}\n\nexport interface Renderer {\n\tinvalidate(): void;\n\tmount(mountOptions?: Partial<MountOptions>): void;\n}\n\ninterface ProcessItem {\n\tcurrent?: (WNodeWrapper | VNodeWrapper)[];\n\tnext?: (WNodeWrapper | VNodeWrapper)[];\n\tmeta: ProcessMeta;\n}\n\ninterface ProcessResult {\n\titem?: ProcessItem;\n\twidget?: AttachApplication | DetachApplication;\n\tdom?: ApplicationInstruction;\n}\n\ninterface ProcessMeta {\n\tmergeNodes?: Node[];\n\toldIndex?: number;\n\tnewIndex?: number;\n}\n\ninterface InvalidationQueueItem {\n\tid: string;\n\tdepth: number;\n\torder: number;\n}\n\ninterface Instruction {\n\tcurrent: undefined | DNodeWrapper;\n\tnext: undefined | DNodeWrapper;\n}\n\ninterface CreateWidgetInstruction {\n\tnext: WNodeWrapper;\n}\n\ninterface UpdateWidgetInstruction {\n\tcurrent: WNodeWrapper;\n\tnext: WNodeWrapper;\n}\n\ninterface RemoveWidgetInstruction {\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomInstruction {\n\tnext: VNodeWrapper;\n}\n\ninterface UpdateDomInstruction {\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface RemoveDomInstruction {\n\tcurrent: VNodeWrapper;\n}\n\ninterface AttachApplication {\n\ttype: 'attach';\n\tid: string;\n\tinstance?: WidgetBaseInterface;\n\tattached?: boolean;\n}\n\ninterface DetachApplication {\n\ttype: 'detach';\n\tcurrent: WNodeWrapper;\n\tinstance?: WidgetBaseInterface;\n}\n\ninterface CreateDomApplication {\n\ttype: 'create';\n\tcurrent?: VNodeWrapper;\n\tnext: VNodeWrapper;\n\tparentDomNode: Node;\n}\n\ninterface DeleteDomApplication {\n\ttype: 'delete';\n\tcurrent: VNodeWrapper;\n}\n\ninterface UpdateDomApplication {\n\ttype: 'update';\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface PreviousProperties {\n\tproperties: any;\n\tattributes?: any;\n\tevents?: any;\n}\n\ntype ApplicationInstruction =\n\t| CreateDomApplication\n\t| UpdateDomApplication\n\t| DeleteDomApplication\n\t| Required<AttachApplication>\n\t| DetachApplication;\n\nconst EMPTY_ARRAY: DNodeWrapper[] = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\nconst WNODE = '__WNODE_TYPE';\nconst VNODE = '__VNODE_TYPE';\nconst DOMVNODE = '__DOMVNODE_TYPE';\n\nexport function isTextNode(item: any): item is Text {\n\treturn item && item.nodeType === 3;\n}\n\nfunction isLazyDefine(item: any): item is LazyDefine<any> {\n\treturn Boolean(item && item.label);\n}\n\nfunction isWNodeWrapper(child: DNodeWrapper): child is WNodeWrapper {\n\treturn child && isWNode(child.node);\n}\n\nfunction isVNodeWrapper(child?: DNodeWrapper | null): child is VNodeWrapper {\n\treturn !!child && isVNode(child.node);\n}\n\nfunction isVirtualWrapper(child?: DNodeWrapper | null): boolean {\n\treturn isVNodeWrapper(child) && child.node.tag === 'virtual';\n}\n\nfunction isBodyWrapper(wrapper?: DNodeWrapper): boolean {\n\treturn isVNodeWrapper(wrapper) && wrapper.node.tag === 'body';\n}\n\nfunction isAttachApplication(value: any): value is AttachApplication | DetachApplication {\n\treturn !!value.type;\n}\n\nexport function isWNode<W extends WidgetBaseTypes = any>(child: any): child is WNode<W> {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === WNODE);\n}\n\nexport function isVNode(child: DNode): child is VNode {\n\treturn Boolean(\n\t\tchild && child !== true && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE)\n\t);\n}\n\nexport function isDomVNode(child: DNode): child is DomVNode {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === DOMVNODE);\n}\n\nexport function isElementNode(value: any): value is Element {\n\treturn !!value.tagName;\n}\n\nfunction toTextVNode(data: any): VNode {\n\treturn {\n\t\ttag: '',\n\t\tproperties: {},\n\t\tchildren: undefined,\n\t\ttext: `${data}`,\n\t\ttype: VNODE\n\t};\n}\n\nfunction updateAttributes(\n\tdomNode: Element,\n\tpreviousAttributes: { [index: string]: string | undefined },\n\tattributes: { [index: string]: string | undefined },\n\tnamespace?: string\n) {\n\tconst attrNames = Object.keys(attributes);\n\tconst attrCount = attrNames.length;\n\tfor (let i = 0; i < attrCount; i++) {\n\t\tconst attrName = attrNames[i];\n\t\tconst attrValue = attributes[attrName];\n\t\tconst previousAttrValue = previousAttributes[attrName];\n\t\tif (attrValue !== previousAttrValue) {\n\t\t\tupdateAttribute(domNode, attrName, attrValue, namespace);\n\t\t}\n\t}\n}\n\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w<W extends WidgetBaseTypes>(\n\tnode: WNode<W>,\n\tproperties: Partial<W['properties']>,\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseTypes>(\n\twidgetConstructor: Constructor<W> | RegistryLabel | WNodeFactory<W> | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseTypes>(\n\twidgetConstructorOrNode:\n\t\t| Constructor<W>\n\t\t| RegistryLabel\n\t\t| WNodeFactory<W>\n\t\t| WNode<W>\n\t\t| LazyDefine<W>\n\t\t| Callback<any, any, RenderResult>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W> {\n\tif (isWNodeFactory<W>(widgetConstructorOrNode)) {\n\t\treturn widgetConstructorOrNode(properties, children);\n\t}\n\n\tif (isWNode<W>(widgetConstructorOrNode)) {\n\t\tproperties = { ...(widgetConstructorOrNode.properties as any), ...(properties as any) };\n\t\tchildren = children ? children : widgetConstructorOrNode.children;\n\t\twidgetConstructorOrNode = widgetConstructorOrNode.widgetConstructor;\n\t}\n\n\treturn {\n\t\tchildren: children || [],\n\t\twidgetConstructor: widgetConstructorOrNode,\n\t\tproperties,\n\t\ttype: WNODE\n\t};\n}\n\n/**\n * Wrapper function for calls to create VNodes.\n */\nexport function v(node: VNode, properties: VNodeProperties, children: undefined | DNode[]): VNode;\nexport function v(node: VNode, properties: VNodeProperties): VNode;\nexport function v(tag: string, children: undefined | DNode[]): VNode;\nexport function v<K extends keyof HTMLElementTagNameMap>(\n\ttag: K,\n\tproperties: DeferredVirtualProperties | VNodeProperties<HTMLElementTagNameMap[K]>,\n\tchildren?: DNode[]\n): VNode;\nexport function v(tag: string, properties: DeferredVirtualProperties | VNodeProperties, children?: DNode[]): VNode;\nexport function v(tag: string): VNode;\nexport function v(\n\ttag: string | VNode,\n\tpropertiesOrChildren: VNodeProperties | DeferredVirtualProperties | DNode[] = {},\n\tchildren: undefined | DNode[] = undefined\n): VNode {\n\tlet properties: VNodeProperties | DeferredVirtualProperties = propertiesOrChildren;\n\tlet deferredPropertiesCallback;\n\n\tif (Array.isArray(propertiesOrChildren)) {\n\t\tchildren = propertiesOrChildren;\n\t\tproperties = {};\n\t}\n\n\tif (typeof properties === 'function') {\n\t\tdeferredPropertiesCallback = properties;\n\t\tproperties = {};\n\t}\n\n\tif (isVNode(tag)) {\n\t\tlet { classes = [], styles = {}, ...newProperties } = properties;\n\t\tlet { classes: nodeClasses = [], styles: nodeStyles = {}, ...nodeProperties } = tag.properties;\n\t\tnodeClasses = Array.isArray(nodeClasses) ? nodeClasses : [nodeClasses];\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tstyles = { ...nodeStyles, ...styles };\n\t\tproperties = { ...nodeProperties, ...newProperties, classes: [...nodeClasses, ...classes], styles };\n\t\tchildren = children ? children : tag.children;\n\t\ttag = tag.tag;\n\t}\n\n\treturn {\n\t\ttag,\n\t\tdeferredPropertiesCallback,\n\t\tchildren,\n\t\tproperties,\n\t\ttype: VNODE\n\t};\n}\n\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom(\n\t{ node, attrs = {}, props = {}, on = {}, diffType = 'none', onAttach }: DomOptions,\n\tchildren?: DNode[]\n): DomVNode {\n\treturn {\n\t\ttag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n\t\tproperties: props,\n\t\tattributes: attrs,\n\t\tevents: on,\n\t\tchildren,\n\t\ttype: DOMVNODE,\n\t\tdomNode: node,\n\t\ttext: isElementNode(node) ? undefined : node.data,\n\t\tdiffType,\n\t\tonAttach\n\t};\n}\n\nexport const REGISTRY_ITEM = '__registry_item';\n\nexport class FromRegistry<P> {\n\tstatic type = REGISTRY_ITEM;\n\tproperties: P = {} as P;\n\tname: string | undefined;\n}\n\nexport function fromRegistry<P>(tag: string): Constructor<FromRegistry<P>> {\n\treturn class extends FromRegistry<P> {\n\t\tproperties: P = {} as P;\n\t\tstatic type = REGISTRY_ITEM;\n\t\tname = tag;\n\t};\n}\n\nfunction spreadChildren(children: any[], child: any): any[] {\n\tif (Array.isArray(child)) {\n\t\treturn child.reduce(spreadChildren, children);\n\t} else {\n\t\treturn [...children, child];\n\t}\n}\n\nexport function tsx(tag: any, properties = {}, ...children: any[]): DNode {\n\tchildren = children.reduce(spreadChildren, []);\n\tproperties = properties === null ? {} : properties;\n\tif (typeof tag === 'string') {\n\t\treturn v(tag, properties, children);\n\t} else if (tag.type === 'registry' && (properties as any).__autoRegistryItem) {\n\t\tconst name = (properties as any).__autoRegistryItem;\n\t\tdelete (properties as any).__autoRegistryItem;\n\t\treturn w(name, properties, children);\n\t} else if (tag.type === REGISTRY_ITEM) {\n\t\tconst registryItem = new tag();\n\t\treturn w(registryItem.name, properties, children);\n\t} else {\n\t\treturn w(tag, properties, children);\n\t}\n}\n\nexport function propertiesDiff(current: any, next: any, invalidator: () => void, ignoreProperties: string[]) {\n\tconst propertyNames = [...Object.keys(current), ...Object.keys(next)];\n\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\tif (ignoreProperties.indexOf(propertyNames[i]) > -1) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst result = auto(current[propertyNames[i]], next[propertyNames[i]]);\n\t\tif (result.changed) {\n\t\t\tinvalidator();\n\t\t\tbreak;\n\t\t}\n\t\tignoreProperties.push(propertyNames[i]);\n\t}\n}\n\nfunction buildPreviousProperties(domNode: any, current: VNodeWrapper) {\n\tconst {\n\t\tnode: { diffType, properties, attributes }\n\t} = current;\n\tif (!diffType || diffType === 'vdom') {\n\t\treturn {\n\t\t\tproperties: current.deferredProperties\n\t\t\t\t? { ...current.deferredProperties, ...current.node.properties }\n\t\t\t\t: current.node.properties,\n\t\t\tattributes: current.node.attributes,\n\t\t\tevents: current.node.events\n\t\t};\n\t} else if (diffType === 'none') {\n\t\treturn {\n\t\t\tproperties: {},\n\t\t\tattributes: current.node.attributes ? {} : undefined,\n\t\t\tevents: current.node.events\n\t\t};\n\t}\n\tlet newProperties: any = {\n\t\tproperties: {}\n\t};\n\tif (attributes) {\n\t\tnewProperties.attributes = {};\n\t\tnewProperties.events = current.node.events;\n\t\tObject.keys(properties).forEach((propName) => {\n\t\t\tnewProperties.properties[propName] = domNode[propName];\n\t\t});\n\t\tObject.keys(attributes).forEach((attrName) => {\n\t\t\tnewProperties.attributes[attrName] = domNode.getAttribute(attrName);\n\t\t});\n\t\treturn newProperties;\n\t}\n\tnewProperties.properties = Object.keys(properties).reduce(\n\t\t(props, property) => {\n\t\t\tprops[property] = domNode.getAttribute(property) || domNode[property];\n\t\t\treturn props;\n\t\t},\n\t\t{} as any\n\t);\n\treturn newProperties;\n}\n\nfunction checkDistinguishable(wrappers: DNodeWrapper[], index: number, parentWNodeWrapper?: WNodeWrapper) {\n\tconst wrapperToCheck = wrappers[index];\n\tif (isVNodeWrapper(wrapperToCheck) && !wrapperToCheck.node.tag) {\n\t\treturn;\n\t}\n\tconst { key } = wrapperToCheck.node.properties;\n\tlet parentName = 'unknown';\n\tif (parentWNodeWrapper) {\n\t\tconst {\n\t\t\tnode: { widgetConstructor }\n\t\t} = parentWNodeWrapper;\n\t\tparentName = (widgetConstructor as any).name || 'unknown';\n\t}\n\n\tif (key === undefined || key === null) {\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tif (i !== index) {\n\t\t\t\tconst wrapper = wrappers[i];\n\t\t\t\tif (same(wrapper, wrapperToCheck)) {\n\t\t\t\t\tlet nodeIdentifier: string;\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\tnodeIdentifier = (wrapper.node.widgetConstructor as any).name || 'unknown';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodeIdentifier = wrapper.node.tag;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`A widget (${parentName}) has had a child added or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction same(dnode1: DNodeWrapper, dnode2: DNodeWrapper): boolean {\n\tif (isVNodeWrapper(dnode1) && isVNodeWrapper(dnode2)) {\n\t\tif (isDomVNode(dnode1.node) && isDomVNode(dnode2.node)) {\n\t\t\tif (dnode1.node.domNode !== dnode2.node.domNode) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (dnode1.node.tag !== dnode2.node.tag) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t} else if (isWNodeWrapper(dnode1) && isWNodeWrapper(dnode2)) {\n\t\tconst widgetConstructor1 = dnode1.registryItem || dnode1.node.widgetConstructor;\n\t\tconst widgetConstructor2 = dnode2.registryItem || dnode2.node.widgetConstructor;\n\t\tif (dnode1.instance === undefined && typeof widgetConstructor2 === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (widgetConstructor1 !== widgetConstructor2) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction findIndexOfChild(children: DNodeWrapper[], sameAs: DNodeWrapper, start: number) {\n\tfor (let i = start; i < children.length; i++) {\n\t\tif (same(children[i], sameAs)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction createClassPropValue(classes: SupportedClassName | SupportedClassName[] = []) {\n\tlet classNames = '';\n\tif (Array.isArray(classes)) {\n\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\tlet className = classes[i];\n\t\t\tif (className && className !== true) {\n\t\t\t\tclassNames = classNames ? `${classNames} ${className}` : className;\n\t\t\t}\n\t\t}\n\t\treturn classNames;\n\t}\n\tif (classes && classes !== true) {\n\t\tclassNames = classes;\n\t}\n\treturn classNames;\n}\n\nfunction updateAttribute(domNode: Element, attrName: string, attrValue: string | undefined, namespace?: string) {\n\tif (namespace === NAMESPACE_SVG && attrName === 'href' && attrValue) {\n\t\tdomNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n\t} else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n\t\tdomNode.removeAttribute(attrName);\n\t} else {\n\t\tdomNode.setAttribute(attrName, attrValue);\n\t}\n}\n\nfunction arrayFrom(arr: any) {\n\treturn Array.prototype.slice.call(arr);\n}\n\nfunction createFactory(callback: any, middlewares: any): any {\n\tconst factory = (properties: any, children?: any) => {\n\t\tif (properties) {\n\t\t\tconst result = w(callback, properties, children);\n\t\t\tcallback.isWidget = true;\n\t\t\tcallback.middlewares = middlewares;\n\t\t\treturn result;\n\t\t}\n\t\treturn {\n\t\t\tmiddlewares,\n\t\t\tcallback\n\t\t};\n\t};\n\tfactory.isFactory = true;\n\treturn factory;\n}\n\nexport function create<T extends MiddlewareMap, MiddlewareProps = ReturnType<T[keyof T]>['properties']>(\n\tmiddlewares: T = {} as T\n) {\n\tfunction properties<Props extends {}>() {\n\t\tfunction returns<ReturnValue>(\n\t\t\tcallback: Callback<WidgetProperties & Props & UnionToIntersection<MiddlewareProps>, T, ReturnValue>\n\t\t): ReturnValue extends RenderResult\n\t\t\t? WNodeFactory<{\n\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\tchildren: DNode[];\n\t\t\t  }>\n\t\t\t: MiddlewareResultFactory<WidgetProperties & Props & UnionToIntersection<MiddlewareProps>, T, ReturnValue> {\n\t\t\treturn createFactory(callback, middlewares);\n\t\t}\n\t\treturn returns;\n\t}\n\n\tfunction returns<ReturnValue>(\n\t\tcallback: Callback<WidgetProperties & UnionToIntersection<MiddlewareProps>, T, ReturnValue>\n\t): ReturnValue extends RenderResult\n\t\t? WNodeFactory<{\n\t\t\t\tproperties: WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\tchildren: DNode[];\n\t\t  }>\n\t\t: MiddlewareResultFactory<WidgetProperties & UnionToIntersection<MiddlewareProps>, T, ReturnValue> {\n\t\treturn createFactory(callback, middlewares);\n\t}\n\treturns.properties = properties;\n\treturn returns;\n}\n\nconst factory = create();\n\nfunction wrapNodes(renderer: () => RenderResult) {\n\tconst result = renderer();\n\tconst isWNodeWrapper = isWNode(result);\n\tconst callback = () => {\n\t\treturn result;\n\t};\n\tcallback.isWNodeWrapper = isWNodeWrapper;\n\treturn factory(callback);\n}\n\nexport const widgetInstanceMap = new WeakMap<WidgetBaseInterface, WidgetData>();\nconst widgetMetaMap = new Map<string, WidgetMeta>();\nconst requestedDomNodes = new Set();\nlet wrapperId = 0;\nlet metaId = 0;\n\nfunction addNodeToMap(id: string, key: string | number, node: HTMLElement) {\n\tconst widgetMeta = widgetMetaMap.get(id);\n\tif (widgetMeta) {\n\t\twidgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n\t\tconst existingNode = widgetMeta.nodeMap.get(key);\n\t\tif (!existingNode) {\n\t\t\twidgetMeta.nodeMap.set(key, node);\n\t\t}\n\t\tif (requestedDomNodes.has(`${id}-${key}`)) {\n\t\t\twidgetMeta.invalidator();\n\t\t\trequestedDomNodes.delete(`${id}-${key}`);\n\t\t}\n\t}\n}\n\nfunction destroyHandles(destroyMap: Map<string, () => void>) {\n\tdestroyMap.forEach((destroy) => destroy());\n\tdestroyMap.clear();\n}\n\nfunction runDiffs(meta: WidgetMeta, current: any, next: any) {\n\tmeta.customDiffMap = meta.customDiffMap || new Map();\n\tif (meta.customDiffMap.size) {\n\t\tmeta.customDiffMap.forEach((diffMap) => {\n\t\t\tdiffMap.forEach((diff) => diff({ ...current }, { ...next }));\n\t\t});\n\t}\n}\n\nexport const invalidator = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\treturn () => {\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\treturn widgetMeta.invalidator();\n\t\t}\n\t};\n});\n\nexport const node = factory(({ id }) => {\n\treturn {\n\t\tget(key: string | number): HTMLElement | null {\n\t\t\tconst [widgetId] = id.split('-');\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n\t\t\t\tconst node = widgetMeta.nodeMap.get(key);\n\t\t\t\tif (node) {\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t\trequestedDomNodes.add(`${widgetId}-${key}`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n});\n\nexport const diffProperty = factory(({ id }) => {\n\treturn (propertyName: string, diff: (current: any, next: any) => void) => {\n\t\tconst [widgetId] = id.split('-');\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\twidgetMeta.customDiffMap = widgetMeta.customDiffMap || new Map();\n\t\t\twidgetMeta.customDiffProperties = widgetMeta.customDiffProperties || new Set();\n\t\t\tconst propertyDiffMap = widgetMeta.customDiffMap.get(id) || new Map();\n\t\t\tif (!propertyDiffMap.has(propertyName)) {\n\t\t\t\tpropertyDiffMap.set(propertyName, diff);\n\t\t\t\twidgetMeta.customDiffProperties.add(propertyName);\n\t\t\t}\n\t\t\twidgetMeta.customDiffMap.set(id, propertyDiffMap);\n\t\t}\n\t};\n});\n\nexport const destroy = factory(({ id }) => {\n\treturn (destroyFunction: () => void): void => {\n\t\tconst [widgetId] = id.split('-');\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\twidgetMeta.destroyMap = widgetMeta.destroyMap || new Map();\n\t\t\tif (!widgetMeta.destroyMap.has(id)) {\n\t\t\t\twidgetMeta.destroyMap.set(id, destroyFunction);\n\t\t\t}\n\t\t}\n\t};\n});\n\nexport const getRegistry = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\treturn (): RegistryHandler | null => {\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\tif (!widgetMeta.registryHandler) {\n\t\t\t\twidgetMeta.registryHandler = new RegistryHandler();\n\t\t\t\twidgetMeta.registryHandler.base = widgetMeta.registry;\n\t\t\t\twidgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n\t\t\t}\n\t\t\twidgetMeta.registryHandler = widgetMeta.registryHandler || new RegistryHandler();\n\t\t\treturn widgetMeta.registryHandler;\n\t\t}\n\t\treturn null;\n\t};\n});\n\nexport const defer = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\tlet isDeferred = false;\n\treturn {\n\t\tpause() {\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (!isDeferred && widgetMeta) {\n\t\t\t\twidgetMeta.deferRefs = widgetMeta.deferRefs + 1;\n\t\t\t\tisDeferred = true;\n\t\t\t}\n\t\t},\n\t\tresume() {\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (isDeferred && widgetMeta) {\n\t\t\t\twidgetMeta.deferRefs = widgetMeta.deferRefs - 1;\n\t\t\t\tisDeferred = false;\n\t\t\t}\n\t\t}\n\t};\n});\n\nexport function renderer(renderer: () => RenderResult): Renderer {\n\tlet _mountOptions: MountOptions = {\n\t\tsync: false,\n\t\tmerge: true,\n\t\ttransition: undefined,\n\t\tdomNode: global.document.body,\n\t\tregistry: new Registry()\n\t};\n\tlet _invalidationQueue: InvalidationQueueItem[] = [];\n\tlet _processQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _deferredProcessQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _applicationQueue: ApplicationInstruction[] = [];\n\tlet _eventMap = new WeakMap<Function, EventListener>();\n\tlet _idToWrapperMap = new Map<string, DNodeWrapper>();\n\tlet _wrapperSiblingMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _idToChildrenWrappers = new Map<string, DNodeWrapper[]>();\n\tlet _insertBeforeMap: undefined | WeakMap<DNodeWrapper, Node> = new WeakMap<DNodeWrapper, Node>();\n\tlet _nodeToWrapperMap = new WeakMap<VNode | WNode<any>, WNodeWrapper>();\n\tlet _renderScheduled: number | undefined;\n\tlet _idleCallbacks: Function[] = [];\n\tlet _deferredRenderCallbacks: Function[] = [];\n\tlet parentInvalidate: () => void;\n\tlet _allMergedNodes: Node[] = [];\n\n\tfunction nodeOperation(\n\t\tpropName: string,\n\t\tpropValue: (() => boolean) | boolean,\n\t\tpreviousValue: boolean,\n\t\tdomNode: HTMLElement & { [index: string]: any }\n\t): void {\n\t\tlet result = propValue && !previousValue;\n\t\tif (typeof propValue === 'function') {\n\t\t\tresult = propValue();\n\t\t}\n\t\tif (result === true) {\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tdomNode[propName]();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction updateEvent(\n\t\tdomNode: Node,\n\t\teventName: string,\n\t\tcurrentValue: (event: Event) => void,\n\t\tpreviousValue?: Function\n\t) {\n\t\tif (previousValue) {\n\t\t\tconst previousEvent = _eventMap.get(previousValue);\n\t\t\tpreviousEvent && domNode.removeEventListener(eventName, previousEvent);\n\t\t}\n\n\t\tlet callback = currentValue;\n\n\t\tif (eventName === 'input') {\n\t\t\tcallback = function(this: any, evt: Event) {\n\t\t\t\tcurrentValue.call(this, evt);\n\t\t\t\t(evt.target as any)['oninput-value'] = (evt.target as HTMLInputElement).value;\n\t\t\t};\n\t\t}\n\n\t\tdomNode.addEventListener(eventName, callback);\n\t\t_eventMap.set(currentValue, callback);\n\t}\n\n\tfunction removeOrphanedEvents(\n\t\tdomNode: Element,\n\t\tpreviousProperties: VNodeProperties,\n\t\tproperties: VNodeProperties,\n\t\tonlyEvents: boolean = false\n\t) {\n\t\tObject.keys(previousProperties).forEach((propName) => {\n\t\t\tconst isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n\t\t\tconst eventName = onlyEvents ? propName : propName.substr(2);\n\t\t\tif (isEvent && !properties[propName]) {\n\t\t\t\tconst eventCallback = _eventMap.get(previousProperties[propName]);\n\t\t\t\tif (eventCallback) {\n\t\t\t\t\tdomNode.removeEventListener(eventName, eventCallback);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction resolveRegistryItem(wrapper: WNodeWrapper, instance?: any, id?: string) {\n\t\tif (!isWidget(wrapper.node.widgetConstructor)) {\n\t\t\tconst owningNode = _nodeToWrapperMap.get(wrapper.node);\n\t\t\tif (owningNode) {\n\t\t\t\tif (owningNode.instance) {\n\t\t\t\t\tinstance = owningNode.instance;\n\t\t\t\t} else {\n\t\t\t\t\tid = owningNode.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet registry: RegistryHandler | undefined;\n\t\t\tif (instance) {\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance);\n\t\t\t\tif (instanceData) {\n\t\t\t\t\tregistry = instanceData.registry;\n\t\t\t\t}\n\t\t\t} else if (id !== undefined) {\n\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\tif (widgetMeta) {\n\t\t\t\t\tif (!widgetMeta.registryHandler) {\n\t\t\t\t\t\twidgetMeta.registryHandler = new RegistryHandler();\n\t\t\t\t\t\twidgetMeta.registryHandler.base = widgetMeta.registry;\n\t\t\t\t\t\twidgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n\t\t\t\t\t}\n\t\t\t\t\tregistry = widgetMeta.registryHandler;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (registry) {\n\t\t\t\tlet registryLabel: symbol | string;\n\t\t\t\tif (isLazyDefine(wrapper.node.widgetConstructor)) {\n\t\t\t\t\tconst { label, registryItem } = wrapper.node.widgetConstructor;\n\t\t\t\t\tif (!registry.has(label)) {\n\t\t\t\t\t\tregistry.define(label, registryItem);\n\t\t\t\t\t}\n\t\t\t\t\tregistryLabel = label;\n\t\t\t\t} else {\n\t\t\t\t\tregistryLabel = wrapper.node.widgetConstructor as any;\n\t\t\t\t}\n\t\t\t\tlet item = registry.get(registryLabel) as any;\n\t\t\t\tif (isWNodeFactory(item)) {\n\t\t\t\t\tconst node = item(wrapper.node.properties, wrapper.node.children);\n\t\t\t\t\tif (isWidgetFunction(node.widgetConstructor)) {\n\t\t\t\t\t\twrapper.registryItem = node.widgetConstructor;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twrapper.registryItem = item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction mapNodeToInstance(nodes: DNode[], wrapper: WNodeWrapper) {\n\t\twhile (nodes.length) {\n\t\t\tlet node = nodes.pop();\n\t\t\tif (isWNode(node) || isVNode(node)) {\n\t\t\t\tif (!_nodeToWrapperMap.has(node)) {\n\t\t\t\t\t_nodeToWrapperMap.set(node, wrapper);\n\t\t\t\t\tif (node.children && node.children.length) {\n\t\t\t\t\t\tnodes = [...nodes, ...node.children];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction renderedToWrapper(\n\t\trendered: DNode[],\n\t\tparent: DNodeWrapper,\n\t\tcurrentParent: DNodeWrapper | null\n\t): DNodeWrapper[] {\n\t\tconst { requiresInsertBefore, hasPreviousSiblings, namespace, depth } = parent;\n\t\tconst wrappedRendered: DNodeWrapper[] = [];\n\t\tconst hasParentWNode = isWNodeWrapper(parent);\n\t\tconst hasVirtualParentNode = isVirtualWrapper(parent);\n\t\tconst currentParentChildren =\n\t\t\t(isVNodeWrapper(currentParent) && _idToChildrenWrappers.get(currentParent.id)) || [];\n\t\tconst hasCurrentParentChildren = currentParentChildren.length > 0;\n\t\tconst insertBefore =\n\t\t\t((requiresInsertBefore || hasPreviousSiblings !== false) && (hasParentWNode || hasVirtualParentNode)) ||\n\t\t\t(hasCurrentParentChildren && rendered.length > 1);\n\t\tlet previousItem: DNodeWrapper | undefined;\n\t\tif (isWNodeWrapper(parent) && rendered.length) {\n\t\t\tmapNodeToInstance([...rendered], parent);\n\t\t}\n\t\tfor (let i = 0; i < rendered.length; i++) {\n\t\t\tlet renderedItem = rendered[i];\n\t\t\tif (!renderedItem || renderedItem === true) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof renderedItem === 'string') {\n\t\t\t\trenderedItem = toTextVNode(renderedItem);\n\t\t\t}\n\t\t\tconst owningNode = _nodeToWrapperMap.get(renderedItem);\n\t\t\tconst wrapper: DNodeWrapper = {\n\t\t\t\tnode: renderedItem,\n\t\t\t\tdepth: depth + 1,\n\t\t\t\torder: i,\n\t\t\t\tparentId: parent.id,\n\t\t\t\trequiresInsertBefore: insertBefore,\n\t\t\t\thasParentWNode,\n\t\t\t\tnamespace: namespace\n\t\t\t} as DNodeWrapper;\n\t\t\tif (isVNode(renderedItem)) {\n\t\t\t\tif (renderedItem.deferredPropertiesCallback) {\n\t\t\t\t\t(wrapper as VNodeWrapper).deferredProperties = renderedItem.deferredPropertiesCallback(false);\n\t\t\t\t}\n\t\t\t\tif (renderedItem.properties.exitAnimation) {\n\t\t\t\t\tparent.hasAnimations = true;\n\t\t\t\t\tlet nextParent = _idToWrapperMap.get(parent.parentId);\n\t\t\t\t\twhile (nextParent) {\n\t\t\t\t\t\tif (nextParent.hasAnimations) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextParent.hasAnimations = true;\n\t\t\t\t\t\tnextParent = _idToWrapperMap.get(nextParent.parentId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (owningNode) {\n\t\t\t\twrapper.owningId = owningNode.id;\n\t\t\t}\n\t\t\tif (isWNode(renderedItem)) {\n\t\t\t\tresolveRegistryItem(wrapper as WNodeWrapper, (parent as any).instance, (parent as any).id);\n\t\t\t}\n\t\t\tif (previousItem) {\n\t\t\t\t_wrapperSiblingMap.set(previousItem, wrapper);\n\t\t\t}\n\t\t\twrappedRendered.push(wrapper);\n\t\t\tpreviousItem = wrapper;\n\t\t}\n\t\treturn wrappedRendered;\n\t}\n\n\tfunction findParentDomNode(currentNode: DNodeWrapper): Node | undefined {\n\t\tlet parentDomNode: Node | undefined;\n\t\tlet parentWrapper = _idToWrapperMap.get(currentNode.parentId);\n\n\t\twhile (!parentDomNode && parentWrapper) {\n\t\t\tif (\n\t\t\t\t!parentDomNode &&\n\t\t\t\tisVNodeWrapper(parentWrapper) &&\n\t\t\t\t!isVirtualWrapper(parentWrapper) &&\n\t\t\t\tparentWrapper.domNode\n\t\t\t) {\n\t\t\t\tparentDomNode = parentWrapper.domNode;\n\t\t\t}\n\t\t\tparentWrapper = _idToWrapperMap.get(parentWrapper.parentId);\n\t\t}\n\t\treturn parentDomNode;\n\t}\n\n\tfunction runDeferredProperties(next: VNodeWrapper) {\n\t\tconst { deferredPropertiesCallback } = next.node;\n\t\tif (deferredPropertiesCallback) {\n\t\t\tconst properties = next.node.properties;\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tif (_idToWrapperMap.has(next.owningId)) {\n\t\t\t\t\tconst deferredProperties = next.deferredProperties;\n\t\t\t\t\tnext.deferredProperties = deferredPropertiesCallback(true);\n\t\t\t\t\tprocessProperties(next, {\n\t\t\t\t\t\tproperties: { ...deferredProperties, ...properties }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction findInsertBefore(next: DNodeWrapper) {\n\t\tlet insertBefore: Node | null = null;\n\t\tlet searchNode: DNodeWrapper | undefined = next;\n\t\twhile (!insertBefore) {\n\t\t\tconst nextSibling = _wrapperSiblingMap.get(searchNode);\n\t\t\tif (nextSibling) {\n\t\t\t\tlet domNode = nextSibling.domNode;\n\t\t\t\tif ((isWNodeWrapper(nextSibling) || isVirtualWrapper(nextSibling)) && nextSibling.childDomWrapperId) {\n\t\t\t\t\tconst childWrapper = _idToWrapperMap.get(nextSibling.childDomWrapperId);\n\t\t\t\t\tif (childWrapper) {\n\t\t\t\t\t\tdomNode = childWrapper.domNode;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (domNode && domNode.parentNode) {\n\t\t\t\t\tinsertBefore = domNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsearchNode = nextSibling;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsearchNode = searchNode && _idToWrapperMap.get(searchNode.parentId);\n\t\t\tif (!searchNode || (isVNodeWrapper(searchNode) && !isVirtualWrapper(searchNode))) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn insertBefore;\n\t}\n\n\tfunction setValue(domNode: any, propValue?: any, previousValue?: any) {\n\t\tconst domValue = domNode.value;\n\t\tconst onInputValue = domNode['oninput-value'];\n\t\tconst onSelectValue = domNode['select-value'];\n\n\t\tif (onSelectValue && domValue !== onSelectValue) {\n\t\t\tdomNode.value = onSelectValue;\n\t\t\tif (domNode.value === onSelectValue) {\n\t\t\t\tdomNode['select-value'] = undefined;\n\t\t\t}\n\t\t} else if ((onInputValue && domValue === onInputValue) || propValue !== previousValue) {\n\t\t\tdomNode.value = propValue;\n\t\t\tdomNode['oninput-value'] = undefined;\n\t\t}\n\t}\n\n\tfunction setProperties(\n\t\tdomNode: HTMLElement,\n\t\tcurrentProperties: VNodeProperties = {},\n\t\tnextWrapper: VNodeWrapper,\n\t\tincludesEventsAndAttributes = true\n\t): void {\n\t\tconst properties = nextWrapper.deferredProperties\n\t\t\t? { ...nextWrapper.deferredProperties, ...nextWrapper.node.properties }\n\t\t\t: nextWrapper.node.properties;\n\t\tconst propNames = Object.keys(properties);\n\t\tconst propCount = propNames.length;\n\t\tif (propNames.indexOf('classes') === -1 && currentProperties.classes) {\n\t\t\tdomNode.removeAttribute('class');\n\t\t}\n\n\t\tincludesEventsAndAttributes && removeOrphanedEvents(domNode, currentProperties, properties);\n\n\t\tfor (let i = 0; i < propCount; i++) {\n\t\t\tconst propName = propNames[i];\n\t\t\tlet propValue = properties[propName];\n\t\t\tconst previousValue = currentProperties[propName];\n\t\t\tif (propName === 'classes') {\n\t\t\t\tconst previousClassString = createClassPropValue(previousValue);\n\t\t\t\tlet currentClassString = createClassPropValue(propValue);\n\t\t\t\tif (previousClassString !== currentClassString) {\n\t\t\t\t\tif (currentClassString) {\n\t\t\t\t\t\tif (nextWrapper.merged) {\n\t\t\t\t\t\t\tconst domClasses = (domNode.getAttribute('class') || '').split(' ');\n\t\t\t\t\t\t\tfor (let i = 0; i < domClasses.length; i++) {\n\t\t\t\t\t\t\t\tif (currentClassString.indexOf(domClasses[i]) === -1) {\n\t\t\t\t\t\t\t\t\tcurrentClassString = `${domClasses[i]} ${currentClassString}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdomNode.setAttribute('class', currentClassString);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdomNode.removeAttribute('class');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (nodeOperations.indexOf(propName) !== -1) {\n\t\t\t\tnodeOperation(propName, propValue, previousValue, domNode);\n\t\t\t} else if (propName === 'styles') {\n\t\t\t\tconst styleNames = Object.keys(propValue);\n\t\t\t\tconst styleCount = styleNames.length;\n\t\t\t\tfor (let j = 0; j < styleCount; j++) {\n\t\t\t\t\tconst styleName = styleNames[j];\n\t\t\t\t\tconst newStyleValue = propValue[styleName];\n\t\t\t\t\tconst oldStyleValue = previousValue && previousValue[styleName];\n\t\t\t\t\tif (newStyleValue === oldStyleValue) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t(domNode.style as any)[styleName] = newStyleValue || '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!propValue && typeof previousValue === 'string') {\n\t\t\t\t\tpropValue = '';\n\t\t\t\t}\n\t\t\t\tif (propName === 'value') {\n\t\t\t\t\tif ((domNode as HTMLElement).tagName === 'SELECT') {\n\t\t\t\t\t\t(domNode as any)['select-value'] = propValue;\n\t\t\t\t\t}\n\t\t\t\t\tsetValue(domNode, propValue, previousValue);\n\t\t\t\t} else if (propName !== 'key' && propValue !== previousValue) {\n\t\t\t\t\tconst type = typeof propValue;\n\t\t\t\t\tif (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateEvent(domNode, propName.substr(2), propValue, previousValue);\n\t\t\t\t\t} else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateAttribute(domNode, propName, propValue, nextWrapper.namespace);\n\t\t\t\t\t} else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n\t\t\t\t\t\tif ((domNode as any)[propName] !== propValue) {\n\t\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runDeferredRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _deferredRenderCallbacks;\n\t\t_deferredRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tglobal.requestAnimationFrame(run);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runAfterRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _idleCallbacks;\n\t\t_idleCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tif (global.requestIdleCallback) {\n\t\t\t\t\tglobal.requestIdleCallback(run);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(run);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction processProperties(next: VNodeWrapper, previousProperties: PreviousProperties) {\n\t\tif (next.node.attributes && next.node.events) {\n\t\t\tupdateAttributes(\n\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\tpreviousProperties.attributes || {},\n\t\t\t\tnext.node.attributes,\n\t\t\t\tnext.namespace\n\t\t\t);\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next, false);\n\t\t\tconst events = next.node.events || {};\n\t\t\tif (previousProperties.events) {\n\t\t\t\tremoveOrphanedEvents(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tpreviousProperties.events || {},\n\t\t\t\t\tnext.node.events,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t\tpreviousProperties.events = previousProperties.events || {};\n\t\t\tObject.keys(events).forEach((event) => {\n\t\t\t\tupdateEvent(next.domNode as HTMLElement, event, events[event], previousProperties.events[event]);\n\t\t\t});\n\t\t} else {\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next);\n\t\t}\n\t}\n\n\tfunction mount(mountOptions: Partial<MountOptions> = {}) {\n\t\t_mountOptions = { ..._mountOptions, ...mountOptions };\n\t\tconst { domNode } = _mountOptions;\n\t\tconst renderResult = wrapNodes(renderer)({});\n\t\tconst nextWrapper = {\n\t\t\tid: `${wrapperId++}`,\n\t\t\tnode: renderResult,\n\t\t\torder: 0,\n\t\t\tdepth: 1,\n\t\t\towningId: '-1',\n\t\t\tparentId: '-1',\n\t\t\tsiblingId: '-1',\n\t\t\tproperties: {}\n\t\t};\n\t\t_idToWrapperMap.set('-1', {\n\t\t\tid: `-1`,\n\t\t\tdepth: 0,\n\t\t\torder: 0,\n\t\t\towningId: '',\n\t\t\tdomNode,\n\t\t\tnode: v('fake'),\n\t\t\tparentId: '-1'\n\t\t});\n\t\t_processQueue.push({\n\t\t\tcurrent: [],\n\t\t\tnext: [nextWrapper],\n\t\t\tmeta: { mergeNodes: arrayFrom(domNode.childNodes) }\n\t\t});\n\t\t_runProcessQueue();\n\t\t_runDomInstructionQueue();\n\t\t_cleanUpMergedNodes();\n\t\t_insertBeforeMap = undefined;\n\t\t_runCallbacks();\n\t}\n\n\tfunction invalidate() {\n\t\tparentInvalidate && parentInvalidate();\n\t}\n\n\tfunction _schedule(): void {\n\t\tconst { sync } = _mountOptions;\n\t\tif (sync) {\n\t\t\t_runInvalidationQueue();\n\t\t} else if (!_renderScheduled) {\n\t\t\t_renderScheduled = global.requestAnimationFrame(() => {\n\t\t\t\t_runInvalidationQueue();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction getWNodeWrapper(id: string) {\n\t\tconst wrapper = _idToWrapperMap.get(id);\n\t\tif (wrapper && isWNodeWrapper(wrapper)) {\n\t\t\treturn wrapper;\n\t\t}\n\t}\n\n\tfunction _runInvalidationQueue() {\n\t\t_renderScheduled = undefined;\n\t\tlet invalidationQueue = [..._invalidationQueue];\n\t\tconst previouslyRendered = [];\n\t\t_invalidationQueue = [];\n\t\tinvalidationQueue.sort((a, b) => {\n\t\t\tlet result = b.depth - a.depth;\n\t\t\tif (result === 0) {\n\t\t\t\tresult = b.order - a.order;\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t\tif (_deferredProcessQueue.length) {\n\t\t\t_processQueue = [..._deferredProcessQueue];\n\t\t\t_deferredProcessQueue = [];\n\t\t\t_runProcessQueue();\n\t\t\tif (_deferredProcessQueue.length) {\n\t\t\t\t_invalidationQueue = [...invalidationQueue];\n\t\t\t\tinvalidationQueue = [];\n\t\t\t}\n\t\t}\n\t\tlet item: InvalidationQueueItem | undefined;\n\t\twhile ((item = invalidationQueue.pop())) {\n\t\t\tlet { id } = item;\n\t\t\tconst current = getWNodeWrapper(id);\n\t\t\tif (!current || previouslyRendered.indexOf(id) !== -1 || !_idToWrapperMap.has(current.parentId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpreviouslyRendered.push(id);\n\t\t\tconst sibling = _wrapperSiblingMap.get(current);\n\t\t\tconst next = {\n\t\t\t\tnode: {\n\t\t\t\t\ttype: WNODE,\n\t\t\t\t\twidgetConstructor: current.node.widgetConstructor,\n\t\t\t\t\tproperties: current.properties || {},\n\t\t\t\t\tchildren: current.node.children || []\n\t\t\t\t},\n\t\t\t\tinstance: current.instance,\n\t\t\t\tid: current.id,\n\t\t\t\tproperties: current.properties,\n\t\t\t\tdepth: current.depth,\n\t\t\t\torder: current.order,\n\t\t\t\towningId: current.owningId,\n\t\t\t\tparentId: current.parentId,\n\t\t\t\tregistryItem: current.registryItem\n\t\t\t};\n\n\t\t\tsibling && _wrapperSiblingMap.set(next, sibling);\n\t\t\tconst result = _updateWidget({ current, next });\n\t\t\tif (result && result.item) {\n\t\t\t\t_processQueue.push(result.item);\n\t\t\t\t_idToWrapperMap.set(id, next);\n\t\t\t\t_runProcessQueue();\n\t\t\t}\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_cleanUpMergedNodes();\n\t\t_runCallbacks();\n\t}\n\n\tfunction _cleanUpMergedNodes() {\n\t\tif (_deferredProcessQueue.length === 0) {\n\t\t\tlet mergedNode: Node | undefined;\n\t\t\twhile ((mergedNode = _allMergedNodes.pop())) {\n\t\t\t\tmergedNode.parentNode && mergedNode.parentNode.removeChild(mergedNode);\n\t\t\t}\n\t\t\t_mountOptions.merge = false;\n\t\t}\n\t}\n\n\tfunction _runProcessQueue() {\n\t\tlet item: DetachApplication | AttachApplication | ProcessItem | undefined;\n\t\twhile ((item = _processQueue.pop())) {\n\t\t\tif (isAttachApplication(item)) {\n\t\t\t\titem.type === 'attach' && setDomNodeOnParentWrapper(item.id);\n\t\t\t\tif (item.instance) {\n\t\t\t\t\t_applicationQueue.push(item as any);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst { current, next, meta } = item;\n\t\t\t\t_process(current || EMPTY_ARRAY, next || EMPTY_ARRAY, meta);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runDomInstructionQueue(): void {\n\t\t_applicationQueue.reverse();\n\t\tlet item: ApplicationInstruction | undefined;\n\t\twhile ((item = _applicationQueue.pop())) {\n\t\t\tif (item.type === 'create') {\n\t\t\t\tconst {\n\t\t\t\t\tparentDomNode,\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode, merged, requiresInsertBefore, node }\n\t\t\t\t} = item;\n\n\t\t\t\tprocessProperties(next, { properties: {} });\n\t\t\t\trunDeferredProperties(next);\n\t\t\t\tif (!merged) {\n\t\t\t\t\tlet insertBefore: any;\n\t\t\t\t\tif (requiresInsertBefore) {\n\t\t\t\t\t\tinsertBefore = findInsertBefore(next);\n\t\t\t\t\t} else if (_insertBeforeMap) {\n\t\t\t\t\t\tinsertBefore = _insertBeforeMap.get(next);\n\t\t\t\t\t}\n\t\t\t\t\tparentDomNode.insertBefore(domNode!, insertBefore);\n\t\t\t\t\tif (isDomVNode(next.node) && next.node.onAttach) {\n\t\t\t\t\t\tnext.node.onAttach();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((domNode as HTMLElement).tagName === 'OPTION' && domNode!.parentElement) {\n\t\t\t\t\tsetValue(domNode!.parentElement);\n\t\t\t\t}\n\t\t\t\tconst { enterAnimation, enterAnimationActive } = node.properties;\n\t\t\t\tif (_mountOptions.transition && enterAnimation && enterAnimation !== true) {\n\t\t\t\t\t_mountOptions.transition.enter(domNode as HTMLElement, enterAnimation, enterAnimationActive);\n\t\t\t\t}\n\t\t\t\tconst owningWrapper = _nodeToWrapperMap.get(next.node);\n\t\t\t\tif (owningWrapper && node.properties.key != null) {\n\t\t\t\t\tif (owningWrapper.instance) {\n\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(owningWrapper.instance);\n\t\t\t\t\t\tinstanceData && instanceData.nodeHandler.add(domNode as HTMLElement, `${node.properties.key}`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddNodeToMap(owningWrapper.id, node.properties.key, domNode as HTMLElement);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\titem.next.inserted = true;\n\t\t\t} else if (item.type === 'update') {\n\t\t\t\tconst {\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode },\n\t\t\t\t\tcurrent,\n\t\t\t\t\tcurrent: { domNode: currentDomNode }\n\t\t\t\t} = item;\n\t\t\t\tif (isTextNode(domNode) && isTextNode(currentDomNode) && domNode !== currentDomNode) {\n\t\t\t\t\tcurrentDomNode.parentNode && currentDomNode.parentNode.replaceChild(domNode, currentDomNode);\n\t\t\t\t} else {\n\t\t\t\t\tconst previousProperties = buildPreviousProperties(domNode, current);\n\t\t\t\t\tprocessProperties(next, previousProperties);\n\t\t\t\t\trunDeferredProperties(next);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'delete') {\n\t\t\t\tconst { current } = item;\n\t\t\t\tconst { exitAnimation, exitAnimationActive } = current.node.properties;\n\t\t\t\tif (_mountOptions.transition && exitAnimation && exitAnimation !== true) {\n\t\t\t\t\t_mountOptions.transition.exit(current.domNode as HTMLElement, exitAnimation, exitAnimationActive);\n\t\t\t\t} else {\n\t\t\t\t\tcurrent.domNode!.parentNode!.removeChild(current.domNode!);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'attach') {\n\t\t\t\tconst { instance, attached } = item;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance);\n\t\t\t\tif (instanceData) {\n\t\t\t\t\tinstanceData.nodeHandler.addRoot();\n\t\t\t\t\tattached && instanceData.onAttach();\n\t\t\t\t}\n\t\t\t} else if (item.type === 'detach') {\n\t\t\t\tif (item.current.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(item.current.instance);\n\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t}\n\t\t\t\titem.current.instance = undefined;\n\t\t\t}\n\t\t}\n\t\tif (_deferredProcessQueue.length === 0) {\n\t\t\t_nodeToWrapperMap = new WeakMap();\n\t\t}\n\t}\n\n\tfunction _runCallbacks() {\n\t\trunAfterRenderCallbacks();\n\t\trunDeferredRenderCallbacks();\n\t}\n\n\tfunction _processMergeNodes(next: DNodeWrapper, mergeNodes: Node[]) {\n\t\tconst { merge } = _mountOptions;\n\t\tif (merge && mergeNodes.length) {\n\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\tlet {\n\t\t\t\t\tnode: { tag }\n\t\t\t\t} = next;\n\t\t\t\tfor (let i = 0; i < mergeNodes.length; i++) {\n\t\t\t\t\tconst domElement = mergeNodes[i] as Element;\n\t\t\t\t\tconst tagName = domElement.tagName || '';\n\t\t\t\t\tif (tag.toUpperCase() === tagName.toUpperCase()) {\n\t\t\t\t\t\tconst mergeNodeIndex = _allMergedNodes.indexOf(domElement);\n\t\t\t\t\t\tif (mergeNodeIndex !== -1) {\n\t\t\t\t\t\t\t_allMergedNodes.splice(mergeNodeIndex, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmergeNodes.splice(i, 1);\n\t\t\t\t\t\tnext.domNode = domElement;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnext.mergeNodes = mergeNodes;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction registerDistinguishableCallback(childNodes: DNodeWrapper[], index: number) {\n\t\t_idleCallbacks.push(() => {\n\t\t\tconst parentWNodeWrapper = getWNodeWrapper(childNodes[index].owningId);\n\t\t\tcheckDistinguishable(childNodes, index, parentWNodeWrapper);\n\t\t});\n\t}\n\n\tfunction createKeyMap(wrappers: DNodeWrapper[]): (string | number)[] | false {\n\t\tconst keys: (string | number)[] = [];\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tconst wrapper = wrappers[i];\n\t\t\tif (wrapper.node.properties.key != null) {\n\t\t\t\tkeys.push(wrapper.node.properties.key);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn keys;\n\t}\n\n\tfunction _process(current: DNodeWrapper[], next: DNodeWrapper[], meta: ProcessMeta = {}): void {\n\t\tlet { mergeNodes = [], oldIndex = 0, newIndex = 0 } = meta;\n\t\tconst currentLength = current.length;\n\t\tconst nextLength = next.length;\n\t\tconst hasPreviousSiblings = currentLength > 1 || (currentLength > 0 && currentLength < nextLength);\n\t\tlet instructions: Instruction[] = [];\n\t\tlet replace = false;\n\t\tif (oldIndex === 0 && newIndex === 0 && currentLength) {\n\t\t\tconst currentKeys = createKeyMap(current);\n\t\t\tif (currentKeys) {\n\t\t\t\tconst nextKeys = createKeyMap(next);\n\t\t\t\tif (nextKeys) {\n\t\t\t\t\tfor (let i = 0; i < currentKeys.length; i++) {\n\t\t\t\t\t\tif (nextKeys.indexOf(currentKeys[i]) !== -1) {\n\t\t\t\t\t\t\tinstructions = [];\n\t\t\t\t\t\t\treplace = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplace = true;\n\t\t\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (replace || (currentLength === 0 && !_mountOptions.merge)) {\n\t\t\tfor (let i = 0; i < next.length; i++) {\n\t\t\t\tinstructions.push({ current: undefined, next: next[i] });\n\t\t\t}\n\t\t} else {\n\t\t\tif (newIndex < nextLength) {\n\t\t\t\tlet currentWrapper = oldIndex < currentLength ? current[oldIndex] : undefined;\n\t\t\t\tconst nextWrapper = next[newIndex];\n\t\t\t\tnextWrapper.hasPreviousSiblings = hasPreviousSiblings;\n\n\t\t\t\t_processMergeNodes(nextWrapper, mergeNodes);\n\n\t\t\t\tif (currentWrapper && same(currentWrapper, nextWrapper)) {\n\t\t\t\t\toldIndex++;\n\t\t\t\t\tnewIndex++;\n\t\t\t\t\tif (isVNodeWrapper(currentWrapper) && isVNodeWrapper(nextWrapper)) {\n\t\t\t\t\t\tnextWrapper.inserted = currentWrapper.inserted;\n\t\t\t\t\t}\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: nextWrapper });\n\t\t\t\t} else if (!currentWrapper || findIndexOfChild(current, nextWrapper, oldIndex + 1) === -1) {\n\t\t\t\t\thas('dojo-debug') && current.length && registerDistinguishableCallback(next, newIndex);\n\t\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\t\tnewIndex++;\n\t\t\t\t} else if (findIndexOfChild(next, currentWrapper, newIndex + 1) === -1) {\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\t\toldIndex++;\n\t\t\t\t} else {\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(next, newIndex);\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\t\toldIndex++;\n\t\t\t\t\tnewIndex++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newIndex < nextLength) {\n\t\t\t\t_processQueue.push({ current, next, meta: { mergeNodes, oldIndex, newIndex } });\n\t\t\t}\n\t\t\tif (currentLength > oldIndex && newIndex >= nextLength) {\n\t\t\t\tfor (let i = oldIndex; i < currentLength; i++) {\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, i);\n\t\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < instructions.length; i++) {\n\t\t\tconst result = _processOne(instructions[i]);\n\t\t\tif (result === false) {\n\t\t\t\tif (_mountOptions.merge && mergeNodes.length) {\n\t\t\t\t\tif (newIndex < nextLength) {\n\t\t\t\t\t\t_processQueue.pop();\n\t\t\t\t\t}\n\t\t\t\t\t_processQueue.push({ next, current, meta });\n\t\t\t\t\t_deferredProcessQueue = _processQueue;\n\t\t\t\t\t_processQueue = [];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst { widget, item, dom } = result;\n\t\t\twidget && _processQueue.push(widget);\n\t\t\titem && _processQueue.push(item);\n\t\t\tdom && _applicationQueue.push(dom);\n\t\t}\n\t}\n\n\tfunction _processOne({ current, next }: Instruction): ProcessResult | false {\n\t\tif (current !== next) {\n\t\t\tif (!current && next) {\n\t\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\t\treturn _createDom({ next });\n\t\t\t\t} else {\n\t\t\t\t\treturn _createWidget({ next });\n\t\t\t\t}\n\t\t\t} else if (current && next) {\n\t\t\t\tif (isVNodeWrapper(current) && isVNodeWrapper(next)) {\n\t\t\t\t\treturn _updateDom({ current, next });\n\t\t\t\t} else if (isWNodeWrapper(current) && isWNodeWrapper(next)) {\n\t\t\t\t\treturn _updateWidget({ current, next });\n\t\t\t\t}\n\t\t\t} else if (current && !next) {\n\t\t\t\tif (isVNodeWrapper(current)) {\n\t\t\t\t\treturn _removeDom({ current });\n\t\t\t\t} else if (isWNodeWrapper(current)) {\n\t\t\t\t\treturn _removeWidget({ current });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t}\n\n\tfunction resolveMiddleware(middlewares: any, id: string): any {\n\t\tconst keys = Object.keys(middlewares);\n\t\tconst results: any = {};\n\t\tconst uniqueId = `${id}-${metaId++}`;\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst middleware = middlewares[keys[i]]();\n\t\t\tconst payload: any = {\n\t\t\t\tid: uniqueId,\n\t\t\t\tproperties: () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\treturn { ...widgetMeta.properties };\n\t\t\t\t\t}\n\t\t\t\t\treturn {};\n\t\t\t\t},\n\t\t\t\tchildren: () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\treturn widgetMeta.children;\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (middleware.middlewares) {\n\t\t\t\tconst resolvedMiddleware = resolveMiddleware(middleware.middlewares, id);\n\t\t\t\tpayload.middleware = resolvedMiddleware;\n\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t} else {\n\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\tfunction _createWidget({ next }: CreateWidgetInstruction): ProcessResult | false {\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tlet { registry } = _mountOptions;\n\t\tlet Constructor = next.registryItem || widgetConstructor;\n\t\tif (!isWidget(Constructor)) {\n\t\t\tresolveRegistryItem(next);\n\t\t\tif (!next.registryItem) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tConstructor = next.registryItem;\n\t\t}\n\n\t\tlet rendered: RenderResult;\n\t\tlet invalidate: () => void;\n\t\tnext.properties = next.node.properties;\n\t\tnext.id = next.id || `${wrapperId++}`;\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tconst { id, depth, order } = next;\n\t\tif (!isWidgetBaseConstructor(Constructor)) {\n\t\t\tlet widgetMeta = widgetMetaMap.get(id);\n\t\t\tif (!widgetMeta) {\n\t\t\t\tinvalidate = () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t\t\tif (!widgetMeta.rendering && _idToWrapperMap.has(id)) {\n\t\t\t\t\t\t\t_invalidationQueue.push({ id, depth, order });\n\t\t\t\t\t\t\t_schedule();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\twidgetMeta = {\n\t\t\t\t\tdirty: false,\n\t\t\t\t\tinvalidator: invalidate,\n\t\t\t\t\tproperties: next.node.properties,\n\t\t\t\t\tchildren: next.node.children,\n\t\t\t\t\tdeferRefs: 0,\n\t\t\t\t\trendering: true,\n\t\t\t\t\tregistry: _mountOptions.registry\n\t\t\t\t};\n\n\t\t\t\twidgetMetaMap.set(next.id, widgetMeta);\n\t\t\t\twidgetMeta.middleware = (Constructor as any).middlewares\n\t\t\t\t\t? resolveMiddleware((Constructor as any).middlewares, id)\n\t\t\t\t\t: {};\n\t\t\t} else {\n\t\t\t\tinvalidate = widgetMeta.invalidator;\n\t\t\t}\n\n\t\t\trendered = Constructor({\n\t\t\t\tid,\n\t\t\t\tproperties: () => next.node.properties,\n\t\t\t\tchildren: () => next.node.children,\n\t\t\t\tmiddleware: widgetMeta.middleware\n\t\t\t});\n\t\t\twidgetMeta.rendering = false;\n\t\t\tif (widgetMeta.deferRefs > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tlet instance = new Constructor() as WidgetBaseInterface & {\n\t\t\t\tinvalidate: any;\n\t\t\t\tregistry: any;\n\t\t\t};\n\t\t\tinstance.registry.base = registry;\n\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\tinvalidate = () => {\n\t\t\t\tinstanceData.dirty = true;\n\t\t\t\tif (!instanceData.rendering && _idToWrapperMap.has(id)) {\n\t\t\t\t\t_invalidationQueue.push({ id, depth, order });\n\t\t\t\t\t_schedule();\n\t\t\t\t}\n\t\t\t};\n\t\t\tinstanceData.invalidate = invalidate;\n\t\t\tinstanceData.rendering = true;\n\t\t\tinstance.__setProperties__(next.node.properties);\n\t\t\tinstance.__setChildren__(next.node.children);\n\t\t\tnext.instance = instance;\n\t\t\trendered = instance.__render__();\n\t\t\tinstanceData.rendering = false;\n\t\t}\n\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tchildren = renderedToWrapper(rendered, next, null);\n\t\t\t_idToChildrenWrappers.set(id, children);\n\t\t}\n\n\t\tif (!parentInvalidate && !(Constructor as any).isWNodeWrapper) {\n\t\t\tparentInvalidate = invalidate;\n\t\t}\n\n\t\treturn {\n\t\t\titem: {\n\t\t\t\tnext: children,\n\t\t\t\tmeta: { mergeNodes: next.mergeNodes }\n\t\t\t},\n\t\t\twidget: { type: 'attach', instance: next.instance, id, attached: true }\n\t\t};\n\t}\n\n\tfunction _updateWidget({ current, next }: UpdateWidgetInstruction): ProcessResult {\n\t\tcurrent = getWNodeWrapper(current.id) || current;\n\t\tconst { instance, domNode, hasAnimations } = current;\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tconst Constructor = next.registryItem || widgetConstructor;\n\n\t\tif (!isWidget(Constructor)) {\n\t\t\treturn {};\n\t\t}\n\t\tlet rendered: RenderResult;\n\t\tlet processResult: ProcessResult = {};\n\t\tlet didRender = false;\n\t\tlet currentChildren = _idToChildrenWrappers.get(current.id);\n\t\tnext.hasAnimations = hasAnimations;\n\t\tnext.id = current.id;\n\t\tnext.childDomWrapperId = current.childDomWrapperId;\n\t\tnext.properties = next.node.properties;\n\t\t_wrapperSiblingMap.delete(current);\n\t\tif (domNode && domNode.parentNode) {\n\t\t\tnext.domNode = domNode;\n\t\t}\n\n\t\tif (!isWidgetBaseConstructor(Constructor)) {\n\t\t\tconst widgetMeta = widgetMetaMap.get(next.id);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.properties = next.properties;\n\t\t\t\twidgetMeta.rendering = true;\n\t\t\t\trunDiffs(widgetMeta, current.properties, next.properties);\n\t\t\t\tif (current.node.children.length > 0 || next.node.children.length > 0) {\n\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t}\n\t\t\t\tif (!widgetMeta.dirty) {\n\t\t\t\t\tpropertiesDiff(\n\t\t\t\t\t\tcurrent.properties,\n\t\t\t\t\t\tnext.properties,\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidgetMeta.customDiffProperties ? [...widgetMeta.customDiffProperties.values()] : []\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (widgetMeta.dirty) {\n\t\t\t\t\t_idToChildrenWrappers.delete(next.id);\n\t\t\t\t\tdidRender = true;\n\t\t\t\t\twidgetMeta.dirty = false;\n\t\t\t\t\trendered = Constructor({\n\t\t\t\t\t\tid: next.id,\n\t\t\t\t\t\tproperties: () => next.node.properties,\n\t\t\t\t\t\tchildren: () => next.node.children,\n\t\t\t\t\t\tmiddleware: widgetMeta.middleware\n\t\t\t\t\t});\n\t\t\t\t\tif (widgetMeta.deferRefs > 0) {\n\t\t\t\t\t\trendered = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twidgetMeta.rendering = false;\n\t\t\t}\n\t\t} else {\n\t\t\tconst instanceData = widgetInstanceMap.get(instance!)!;\n\t\t\tnext.instance = instance;\n\t\t\tinstanceData.rendering = true;\n\t\t\tinstance!.__setProperties__(next.node.properties);\n\t\t\tinstance!.__setChildren__(next.node.children);\n\t\t\tif (instanceData.dirty) {\n\t\t\t\tdidRender = true;\n\t\t\t\t_idToChildrenWrappers.delete(next.id);\n\t\t\t\trendered = instance!.__render__();\n\t\t\t}\n\t\t\tinstanceData.rendering = false;\n\t\t}\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tprocessResult.widget = { type: 'attach', instance, id: next.id, attached: false };\n\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tchildren = renderedToWrapper(rendered, next, current);\n\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t}\n\n\t\tif (didRender) {\n\t\t\tprocessResult.item = {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tnext: children,\n\t\t\t\tmeta: {}\n\t\t\t};\n\t\t}\n\t\treturn processResult;\n\t}\n\n\tfunction _removeWidget({ current }: RemoveWidgetInstruction): ProcessResult {\n\t\tcurrent = getWNodeWrapper(current.id) || current;\n\t\t_idToWrapperMap.delete(current.id);\n\t\tconst meta = widgetMetaMap.get(current.id);\n\t\tlet currentChildren = _idToChildrenWrappers.get(current.id);\n\t\t_idToChildrenWrappers.delete(current.id);\n\t\t_wrapperSiblingMap.delete(current);\n\t\tlet processResult: ProcessResult = {\n\t\t\titem: {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tmeta: {}\n\t\t\t}\n\t\t};\n\t\tif (meta) {\n\t\t\tmeta.registryHandler && meta.registryHandler.destroy();\n\t\t\tmeta.destroyMap && destroyHandles(meta.destroyMap);\n\t\t\twidgetMetaMap.delete(current.id);\n\t\t} else {\n\t\t\tprocessResult.widget = { type: 'detach', current, instance: current.instance };\n\t\t}\n\n\t\treturn processResult;\n\t}\n\n\tfunction setDomNodeOnParentWrapper(id: string) {\n\t\tlet wrapper = _idToWrapperMap.get(id)!;\n\t\tlet children = [...(_idToChildrenWrappers.get(id) || [])];\n\t\tlet child: DNodeWrapper | undefined;\n\t\twhile (children.length && !wrapper.domNode) {\n\t\t\tchild = children.shift();\n\t\t\tif (child) {\n\t\t\t\tif (child.domNode) {\n\t\t\t\t\twrapper.childDomWrapperId = child.id;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet nextChildren = _idToChildrenWrappers.get(child.id);\n\t\t\t\tif (nextChildren) {\n\t\t\t\t\tchildren = [...nextChildren, ...children];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _createDom({ next }: CreateDomInstruction): ProcessResult {\n\t\tconst parentDomNode = findParentDomNode(next)!;\n\t\tconst isVirtual = isVirtualWrapper(next);\n\t\tconst isBody = isBodyWrapper(next);\n\t\tlet mergeNodes: Node[] = [];\n\t\tnext.id = `${wrapperId++}`;\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tif (!next.domNode) {\n\t\t\tif ((next.node as any).domNode) {\n\t\t\t\tnext.domNode = (next.node as any).domNode;\n\t\t\t} else {\n\t\t\t\tif (next.node.tag === 'svg') {\n\t\t\t\t\tnext.namespace = NAMESPACE_SVG;\n\t\t\t\t}\n\t\t\t\tif (isBody) {\n\t\t\t\t\tnext.domNode = global.document.body;\n\t\t\t\t} else if (next.node.tag && !isVirtual) {\n\t\t\t\t\tif (next.namespace) {\n\t\t\t\t\t\tnext.domNode = global.document.createElementNS(next.namespace, next.node.tag);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext.domNode = global.document.createElement(next.node.tag);\n\t\t\t\t\t}\n\t\t\t\t} else if (next.node.text != null) {\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_insertBeforeMap && _allMergedNodes.length) {\n\t\t\t\tif (parentDomNode === _allMergedNodes[0].parentNode) {\n\t\t\t\t\t_insertBeforeMap.set(next, _allMergedNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (_mountOptions.merge) {\n\t\t\tnext.merged = true;\n\t\t\tif (isTextNode(next.domNode)) {\n\t\t\t\tif (next.domNode.data !== next.node.text) {\n\t\t\t\t\t_allMergedNodes = [next.domNode, ..._allMergedNodes];\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t\tnext.merged = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmergeNodes = arrayFrom(next.domNode.childNodes);\n\t\t\t\t_allMergedNodes = [..._allMergedNodes, ...mergeNodes];\n\t\t\t}\n\t\t}\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (next.domNode || isVirtual) {\n\t\t\tif (next.node.children && next.node.children.length) {\n\t\t\t\tchildren = renderedToWrapper(next.node.children, next, null);\n\t\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t\t}\n\t\t}\n\t\tconst dom: ApplicationInstruction | undefined =\n\t\t\tisVirtual || isBody\n\t\t\t\t? undefined\n\t\t\t\t: {\n\t\t\t\t\t\tnext: next!,\n\t\t\t\t\t\tparentDomNode: parentDomNode,\n\t\t\t\t\t\ttype: 'create'\n\t\t\t\t  };\n\t\tif (children) {\n\t\t\treturn {\n\t\t\t\titem: {\n\t\t\t\t\tcurrent: [],\n\t\t\t\t\tnext: children,\n\t\t\t\t\tmeta: { mergeNodes }\n\t\t\t\t},\n\t\t\t\tdom,\n\t\t\t\twidget: isVirtual ? { type: 'attach', id: (next as any).id, attached: false } : undefined\n\t\t\t};\n\t\t}\n\t\treturn { dom };\n\t}\n\n\tfunction _updateDom({ current, next }: UpdateDomInstruction): ProcessResult {\n\t\tnext.domNode = current.domNode;\n\t\tnext.namespace = current.namespace;\n\t\tnext.id = current.id;\n\t\tnext.childDomWrapperId = current.childDomWrapperId;\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tlet currentChildren = _idToChildrenWrappers.get(next.id);\n\t\tif (next.node.text != null && next.node.text !== current.node.text) {\n\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t} else if (next.node.children) {\n\t\t\tchildren = renderedToWrapper(next.node.children, next, current);\n\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t}\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_idToWrapperMap.set(next.id, next);\n\t\treturn {\n\t\t\titem: {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tnext: children,\n\t\t\t\tmeta: {}\n\t\t\t},\n\t\t\tdom: { type: 'update', next, current }\n\t\t};\n\t}\n\n\tfunction _removeDom({ current }: RemoveDomInstruction): ProcessResult {\n\t\tconst isVirtual = isVirtualWrapper(current);\n\t\tconst isBody = isBodyWrapper(current);\n\t\tconst children = _idToChildrenWrappers.get(current.id);\n\t\t_idToChildrenWrappers.delete(current.id);\n\t\t_idToWrapperMap.delete(current.id);\n\t\t_wrapperSiblingMap.delete(current);\n\t\tif (current.node.properties.key) {\n\t\t\tconst widgetMeta = widgetMetaMap.get(current.owningId);\n\t\t\tconst parentWrapper = getWNodeWrapper(current.owningId);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.nodeMap && widgetMeta.nodeMap.delete(current.node.properties.key);\n\t\t\t} else if (parentWrapper && parentWrapper.instance) {\n\t\t\t\tconst instanceData = widgetInstanceMap.get(parentWrapper.instance);\n\t\t\t\tinstanceData && instanceData.nodeHandler.remove(current.node.properties.key);\n\t\t\t}\n\t\t}\n\t\tif (current.hasAnimations || isVirtual || isBody) {\n\t\t\treturn {\n\t\t\t\titem: { current: children, meta: {} },\n\t\t\t\tdom: isVirtual || isBody ? undefined : { type: 'delete', current }\n\t\t\t};\n\t\t}\n\n\t\tif (children) {\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tlet wrappers = children || [];\n\t\t\t\tlet wrapper: DNodeWrapper | undefined;\n\t\t\t\tlet bodyIds = [];\n\t\t\t\twhile ((wrapper = wrappers.pop())) {\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\twrapper = getWNodeWrapper(wrapper.id) || wrapper;\n\t\t\t\t\t\tif (wrapper.instance) {\n\t\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(wrapper.instance);\n\t\t\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t\t\t\twrapper.instance = undefined;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst meta = widgetMetaMap.get(wrapper.id);\n\t\t\t\t\t\t\tif (meta) {\n\t\t\t\t\t\t\t\tmeta.registryHandler && meta.registryHandler.destroy();\n\t\t\t\t\t\t\t\tmeta.destroyMap && destroyHandles(meta.destroyMap);\n\t\t\t\t\t\t\t\twidgetMetaMap.delete(wrapper.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet wrapperChildren = _idToChildrenWrappers.get(wrapper.id);\n\t\t\t\t\tif (wrapperChildren) {\n\t\t\t\t\t\twrappers.push(...wrapperChildren);\n\t\t\t\t\t}\n\t\t\t\t\tif (isBodyWrapper(wrapper)) {\n\t\t\t\t\t\tbodyIds.push(wrapper.id);\n\t\t\t\t\t} else if (bodyIds.indexOf(wrapper.parentId) !== -1) {\n\t\t\t\t\t\tif (isWNodeWrapper(wrapper) || isVirtualWrapper(wrapper)) {\n\t\t\t\t\t\t\tbodyIds.push(wrapper.id);\n\t\t\t\t\t\t} else if (wrapper.domNode && wrapper.domNode.parentNode) {\n\t\t\t\t\t\t\twrapper.domNode.parentNode.removeChild(wrapper.domNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t_idToChildrenWrappers.delete(wrapper.id);\n\t\t\t\t\t_idToWrapperMap.delete(wrapper.id);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tdom: { type: 'delete', current }\n\t\t};\n\t}\n\n\treturn {\n\t\tmount,\n\t\tinvalidate\n\t};\n}\n\nexport default renderer;\n","import Map from '../shim/Map';\nimport WeakMap from '../shim/WeakMap';\nimport { auto } from './diff';\nimport {\n\tAfterRender,\n\tBeforeProperties,\n\tBeforeRender,\n\tDiffPropertyReaction,\n\tDNode,\n\tRender,\n\tWidgetMetaConstructor,\n\tWidgetBaseInterface,\n\tWidgetProperties,\n\tMetaBase,\n\tRenderResult\n} from './interfaces';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { WIDGET_BASE_TYPE } from './Registry';\nimport { Handle } from '../core/Destroyable';\nimport { Base } from './meta/Base';\nimport { widgetInstanceMap, v } from './vdom';\n\ninterface ReactionFunctionConfig {\n\tpropertyName: string;\n\treaction: DiffPropertyReaction;\n}\n\nexport type BoundFunctionData = { boundFunc: (...args: any[]) => any; scope: any };\n\nconst decoratorMap = new WeakMap<Function, Map<string, any[]>>();\nconst builtDecoratorMap = new WeakMap<Function, Map<string, any[]>>();\nconst boundAuto = auto.bind(null);\n\nfunction isDomMeta(meta: any): meta is Base {\n\treturn Boolean(meta.afterRender);\n}\n\nconst IGNORE_LIST: (string | symbol)[] = ['render', ...Object.getOwnPropertyNames(Object.getPrototypeOf({}))];\n\nconst autoBindCache = new Map<any, string[]>();\n\nfunction autoBind(instance: any) {\n\tlet prototype = instance.constructor.prototype;\n\n\tlet keys: string[] = [];\n\n\tif (autoBindCache.has(prototype)) {\n\t\tkeys = autoBindCache.get(prototype) as string[];\n\t} else {\n\t\twhile (prototype) {\n\t\t\tconst ownKeys = Object.getOwnPropertyNames(prototype);\n\n\t\t\tif (prototype.constructor.hasOwnProperty('_type')) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tkeys = [...keys, ...ownKeys];\n\n\t\t\tprototype = Object.getPrototypeOf(prototype);\n\t\t}\n\n\t\tkeys = keys.filter((k) => typeof instance[k] === 'function' && IGNORE_LIST.indexOf(k) === -1);\n\n\t\tautoBindCache.set(prototype, keys);\n\t}\n\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i];\n\n\t\tconst boundFunc = instance[key].bind(instance);\n\t\tObject.defineProperty(instance, key, {\n\t\t\tconfigurable: true,\n\t\t\tget() {\n\t\t\t\treturn boundFunc;\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase<P = WidgetProperties, C extends DNode = DNode> implements WidgetBaseInterface<P, C> {\n\t/**\n\t * static identifier\n\t */\n\tstatic _type = WIDGET_BASE_TYPE;\n\n\t/**\n\t * children array\n\t */\n\tprivate _children: (C | null)[];\n\n\t/**\n\t * Indicates if it is the initial set properties cycle\n\t */\n\tprivate _initialProperties = true;\n\n\t/**\n\t * internal widget properties\n\t */\n\tprivate _properties: P & WidgetProperties & { [index: string]: any };\n\n\t/**\n\t * Array of property keys considered changed from the previous set properties\n\t */\n\tprivate _changedPropertyKeys: string[] = [];\n\n\t/**\n\t * map of decorators that are applied to this widget\n\t */\n\tprivate _decoratorCache: Map<string, any[]>;\n\n\tprivate _registry: RegistryHandler = new RegistryHandler();\n\n\tprivate _metaMap: Map<WidgetMetaConstructor<any>, MetaBase> | undefined;\n\n\tprivate _boundRenderFunc: Render;\n\n\tprivate _boundInvalidate: () => void;\n\n\tprivate _nodeHandler: NodeHandler = new NodeHandler();\n\n\tprivate _handles: Handle[] = [];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis._children = [];\n\t\tthis._decoratorCache = new Map<string, any[]>();\n\t\tthis._properties = {} as P;\n\t\tthis._boundRenderFunc = this.render.bind(this);\n\t\tthis._boundInvalidate = this.invalidate.bind(this);\n\t\tthis.own(this._registry);\n\t\tthis.own(this._registry.on('invalidate', this._boundInvalidate));\n\n\t\twidgetInstanceMap.set(this, {\n\t\t\tdirty: true,\n\t\t\tonAttach: (): void => {\n\t\t\t\tthis.onAttach();\n\t\t\t},\n\t\t\tonDetach: (): void => {\n\t\t\t\tthis.onDetach();\n\t\t\t\tthis.destroy();\n\t\t\t},\n\t\t\tnodeHandler: this._nodeHandler,\n\t\t\trendering: false,\n\t\t\tinputProperties: {},\n\t\t\tregistry: this.registry\n\t\t});\n\n\t\tthis.own({\n\t\t\tdestroy: () => {\n\t\t\t\twidgetInstanceMap.delete(this);\n\t\t\t\tthis._nodeHandler.clear();\n\t\t\t\tthis._nodeHandler.destroy();\n\t\t\t}\n\t\t});\n\n\t\tthis._runAfterConstructors();\n\t}\n\n\tprotected meta<T extends MetaBase>(MetaType: WidgetMetaConstructor<T>): T {\n\t\tif (this._metaMap === undefined) {\n\t\t\tthis._metaMap = new Map<WidgetMetaConstructor<any>, MetaBase>();\n\t\t}\n\t\tlet cached = this._metaMap.get(MetaType);\n\t\tif (!cached) {\n\t\t\tcached = new MetaType({\n\t\t\t\tinvalidate: this._boundInvalidate,\n\t\t\t\tnodeHandler: this._nodeHandler,\n\t\t\t\tbind: this\n\t\t\t});\n\t\t\tthis.own(cached);\n\t\t\tthis._metaMap.set(MetaType, cached);\n\t\t}\n\n\t\treturn cached as T;\n\t}\n\n\tprotected onAttach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tprotected onDetach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tpublic get properties(): Readonly<P> & Readonly<WidgetProperties> {\n\t\treturn this._properties;\n\t}\n\n\tpublic get changedPropertyKeys(): string[] {\n\t\treturn [...this._changedPropertyKeys];\n\t}\n\n\tpublic __setProperties__(originalProperties: this['properties']): void {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData) {\n\t\t\tinstanceData.inputProperties = originalProperties;\n\t\t}\n\t\tconst properties = this._runBeforeProperties(originalProperties);\n\t\tconst registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n\t\tconst changedPropertyKeys: string[] = [];\n\t\tconst propertyNames = Object.keys(properties);\n\n\t\tif (this._initialProperties) {\n\t\t\tautoBind(this);\n\t\t}\n\n\t\tif (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n\t\t\tconst allProperties = [...propertyNames, ...Object.keys(this._properties)];\n\t\t\tconst checkedProperties: (string | number)[] = [];\n\t\t\tconst diffPropertyResults: any = {};\n\t\t\tlet runReactions = false;\n\n\t\t\tfor (let i = 0; i < allProperties.length; i++) {\n\t\t\t\tconst propertyName = allProperties[i];\n\t\t\t\tif (checkedProperties.indexOf(propertyName) !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcheckedProperties.push(propertyName);\n\t\t\t\tconst previousProperty = this._properties[propertyName];\n\t\t\t\tconst newProperty = properties[propertyName];\n\t\t\t\tif (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n\t\t\t\t\trunReactions = true;\n\t\t\t\t\tconst diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n\t\t\t\t\tfor (let i = 0; i < diffFunctions.length; i++) {\n\t\t\t\t\t\tconst result = diffFunctions[i](previousProperty, newProperty);\n\t\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst result = boundAuto(previousProperty, newProperty);\n\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (runReactions) {\n\t\t\t\tconst reactionFunctions: ReactionFunctionConfig[] = this.getDecorator('diffReaction');\n\t\t\t\tconst executedReactions: Function[] = [];\n\t\t\t\treactionFunctions.forEach(({ reaction, propertyName }) => {\n\t\t\t\t\tconst propertyChanged = changedPropertyKeys.indexOf(propertyName) !== -1;\n\t\t\t\t\tconst reactionRun = executedReactions.indexOf(reaction) !== -1;\n\t\t\t\t\tif (propertyChanged && !reactionRun) {\n\t\t\t\t\t\treaction.call(this, this._properties, diffPropertyResults);\n\t\t\t\t\t\texecutedReactions.push(reaction);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._properties = diffPropertyResults;\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t} else {\n\t\t\tthis._initialProperties = false;\n\t\t\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\t\t\tconst propertyName = propertyNames[i];\n\t\t\t\tif (typeof properties[propertyName] === 'function') {\n\t\t\t\t\tproperties[propertyName] = properties[propertyName];\n\t\t\t\t} else {\n\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t\tthis._properties = { ...properties };\n\t\t}\n\n\t\tif (this._changedPropertyKeys.length > 0) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tpublic get children(): (C | null)[] {\n\t\treturn this._children;\n\t}\n\n\tpublic __setChildren__(children: (C | null)[]): void {\n\t\tif (this._children.length > 0 || children.length > 0) {\n\t\t\tthis._children = children;\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tpublic __render__(): RenderResult {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData) {\n\t\t\tinstanceData.dirty = false;\n\t\t}\n\t\tconst render = this._runBeforeRenders();\n\t\tconst dNode = this._runAfterRenders(render());\n\t\treturn dNode;\n\t}\n\n\tpublic invalidate(): void {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData && instanceData.invalidate) {\n\t\t\tinstanceData.invalidate();\n\t\t}\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\treturn v('div', {}, this.children);\n\t}\n\n\t/**\n\t * Function to add decorators to WidgetBase\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @param value The value of the decorator\n\t */\n\tprotected addDecorator(decoratorKey: string, value: any): void {\n\t\tvalue = Array.isArray(value) ? value : [value];\n\t\tif (this.hasOwnProperty('constructor')) {\n\t\t\tlet decoratorList = decoratorMap.get(this.constructor);\n\t\t\tif (!decoratorList) {\n\t\t\t\tdecoratorList = new Map<string, any[]>();\n\t\t\t\tdecoratorMap.set(this.constructor, decoratorList);\n\t\t\t}\n\n\t\t\tlet specificDecoratorList = decoratorList.get(decoratorKey);\n\t\t\tif (!specificDecoratorList) {\n\t\t\t\tspecificDecoratorList = [];\n\t\t\t\tdecoratorList.set(decoratorKey, specificDecoratorList);\n\t\t\t}\n\t\t\tspecificDecoratorList.push(...value);\n\t\t} else {\n\t\t\tconst decorators = this.getDecorator(decoratorKey);\n\t\t\tthis._decoratorCache.set(decoratorKey, [...decorators, ...value]);\n\t\t}\n\t}\n\n\t/**\n\t * Function to build the list of decorators from the global decorator map.\n\t *\n\t * @param decoratorKey  The key of the decorator\n\t * @return An array of decorator values\n\t * @private\n\t */\n\tprivate _buildDecoratorList(decoratorKey: string): any[] {\n\t\tconst allDecorators = [];\n\n\t\tlet constructor = this.constructor;\n\n\t\twhile (constructor) {\n\t\t\tconst instanceMap = decoratorMap.get(constructor);\n\t\t\tif (instanceMap) {\n\t\t\t\tconst decorators = instanceMap.get(decoratorKey);\n\n\t\t\t\tif (decorators) {\n\t\t\t\t\tallDecorators.unshift(...decorators);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconstructor = Object.getPrototypeOf(constructor);\n\t\t}\n\n\t\tconst buildDecorators = builtDecoratorMap.get(this.constructor) || new Map();\n\t\tbuildDecorators.set(decoratorKey, allDecorators);\n\t\tbuiltDecoratorMap.set(this.constructor, buildDecorators);\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Function to retrieve decorator values\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @returns An array of decorator values\n\t */\n\tprotected getDecorator(decoratorKey: string): any[] {\n\t\tlet decoratorCache = builtDecoratorMap.get(this.constructor);\n\t\tlet allDecorators =\n\t\t\tthis._decoratorCache.get(decoratorKey) || (decoratorCache && decoratorCache.get(decoratorKey));\n\n\t\tif (allDecorators !== undefined) {\n\t\t\treturn allDecorators;\n\t\t}\n\n\t\tallDecorators = this._buildDecoratorList(decoratorKey);\n\n\t\tallDecorators = [...allDecorators];\n\t\tthis._decoratorCache.set(decoratorKey, allDecorators);\n\t\treturn allDecorators;\n\t}\n\n\tpublic get registry(): RegistryHandler {\n\t\treturn this._registry;\n\t}\n\n\tprivate _runBeforeProperties(properties: any) {\n\t\tconst beforeProperties: BeforeProperties[] = this.getDecorator('beforeProperties');\n\t\tif (beforeProperties.length > 0) {\n\t\t\treturn beforeProperties.reduce(\n\t\t\t\t(properties, beforePropertiesFunction) => {\n\t\t\t\t\treturn { ...properties, ...beforePropertiesFunction.call(this, properties) };\n\t\t\t\t},\n\t\t\t\t{ ...properties }\n\t\t\t);\n\t\t}\n\t\treturn properties;\n\t}\n\n\t/**\n\t * Run all registered before renders and return the updated render method\n\t */\n\tprivate _runBeforeRenders(): Render {\n\t\tconst beforeRenders = this.getDecorator('beforeRender');\n\n\t\tif (beforeRenders.length > 0) {\n\t\t\treturn beforeRenders.reduce((render: Render, beforeRenderFunction: BeforeRender) => {\n\t\t\t\tconst updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n\t\t\t\tif (!updatedRender) {\n\t\t\t\t\tconsole.warn('Render function not returned from beforeRender, using previous render');\n\t\t\t\t\treturn render;\n\t\t\t\t}\n\t\t\t\treturn updatedRender;\n\t\t\t}, this._boundRenderFunc);\n\t\t}\n\t\treturn this._boundRenderFunc;\n\t}\n\n\t/**\n\t * Run all registered after renders and return the decorated DNodes\n\t *\n\t * @param dNode The DNodes to run through the after renders\n\t */\n\tprivate _runAfterRenders(dNode: DNode | DNode[]): DNode | DNode[] {\n\t\tconst afterRenders = this.getDecorator('afterRender');\n\n\t\tif (afterRenders.length > 0) {\n\t\t\tdNode = afterRenders.reduce((dNode: DNode | DNode[], afterRenderFunction: AfterRender) => {\n\t\t\t\treturn afterRenderFunction.call(this, dNode);\n\t\t\t}, dNode);\n\t\t}\n\n\t\tif (this._metaMap !== undefined) {\n\t\t\tthis._metaMap.forEach((meta) => {\n\t\t\t\tisDomMeta(meta) && meta.afterRender();\n\t\t\t});\n\t\t}\n\n\t\treturn dNode;\n\t}\n\n\tprivate _runAfterConstructors(): void {\n\t\tconst afterConstructors = this.getDecorator('afterConstructor');\n\n\t\tif (afterConstructors.length > 0) {\n\t\t\tafterConstructors.forEach((afterConstructor) => afterConstructor.call(this));\n\t\t}\n\t}\n\n\tprotected own(handle: Handle): void {\n\t\tthis._handles.push(handle);\n\t}\n\n\tprotected destroy() {\n\t\twhile (this._handles.length > 0) {\n\t\t\tconst handle = this._handles.pop();\n\t\t\tif (handle) {\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default WidgetBase;\n","export type DecoratorHandler = (target: any, propertyKey?: string) => void;\n\n/**\n * Generic decorator handler to take care of whether or not the decorator was called at the class level\n * or the method level.\n *\n * @param handler\n */\nexport function handleDecorator(handler: DecoratorHandler) {\n\treturn function(target: any, propertyKey?: string, descriptor?: PropertyDescriptor) {\n\t\tif (typeof target === 'function') {\n\t\t\thandler(target.prototype, undefined);\n\t\t} else {\n\t\t\thandler(target, propertyKey);\n\t\t}\n\t};\n}\n\nexport default handleDecorator;\n","import { handleDecorator } from './handleDecorator';\nimport { BeforeProperties } from './../interfaces';\n\n/**\n * Decorator that adds the function passed of target method to be run\n * in the `beforeProperties` lifecycle.\n */\nexport function beforeProperties(method: BeforeProperties): (target: any) => void;\nexport function beforeProperties(): (target: any, propertyKey: string) => void;\nexport function beforeProperties(method?: BeforeProperties) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\ttarget.addDecorator('beforeProperties', propertyKey ? target[propertyKey] : method);\n\t});\n}\n\nexport default beforeProperties;\n","import WeakMap from '../../shim/WeakMap';\nimport { WidgetBase } from './../WidgetBase';\nimport { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\nimport { InjectorItem, RegistryLabel } from './../interfaces';\n\n/**\n * Map of instances against registered injectors.\n */\nconst registeredInjectorsMap: WeakMap<WidgetBase, InjectorItem[]> = new WeakMap();\n\n/**\n * Defines the contract requires for the get properties function\n * used to map the injected properties.\n */\nexport interface GetProperties<T = any> {\n\t(payload: any, properties: T): T;\n}\n\n/**\n * Defines the inject configuration required for use of the `inject` decorator\n */\nexport interface InjectConfig {\n\t/**\n\t * The label of the registry injector\n\t */\n\tname: RegistryLabel;\n\n\t/**\n\t * Function that returns propertues to inject using the passed properties\n\t * and the injected payload.\n\t */\n\tgetProperties: GetProperties;\n}\n\n/**\n * Decorator retrieves an injector from an available registry using the name and\n * calls the `getProperties` function with the payload from the injector\n * and current properties with the the injected properties returned.\n *\n * @param InjectConfig the inject configuration\n */\nexport function inject({ name, getProperties }: InjectConfig) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\tbeforeProperties(function(this: WidgetBase & { own: Function }, properties: any) {\n\t\t\tconst injectorItem = this.registry.getInjector(name);\n\t\t\tif (injectorItem) {\n\t\t\t\tconst { injector, invalidator } = injectorItem;\n\t\t\t\tconst registeredInjectors = registeredInjectorsMap.get(this) || [];\n\t\t\t\tif (registeredInjectors.length === 0) {\n\t\t\t\t\tregisteredInjectorsMap.set(this, registeredInjectors);\n\t\t\t\t}\n\t\t\t\tif (registeredInjectors.indexOf(injectorItem) === -1) {\n\t\t\t\t\tthis.own(\n\t\t\t\t\t\tinvalidator.on('invalidate', () => {\n\t\t\t\t\t\t\tthis.invalidate();\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tregisteredInjectors.push(injectorItem);\n\t\t\t\t}\n\t\t\t\treturn getProperties(injector(), properties);\n\t\t\t}\n\t\t})(target);\n\t});\n}\n\nexport default inject;\n","import { handleDecorator } from './handleDecorator';\nimport { DiffPropertyFunction } from './../interfaces';\nimport { auto } from './../diff';\n\n/**\n * Decorator that can be used to register a function as a specific property diff\n *\n * @param propertyName  The name of the property of which the diff function is applied\n * @param diffType      The diff type, default is DiffType.AUTO.\n * @param diffFunction  A diff function to run if diffType if DiffType.CUSTOM\n */\nexport function diffProperty(\n\tpropertyName: string,\n\tdiffFunction: DiffPropertyFunction = auto,\n\treactionFunction?: Function\n) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\ttarget.addDecorator(`diffProperty:${propertyName}`, diffFunction.bind(null));\n\t\ttarget.addDecorator('registeredDiffProperty', propertyName);\n\t\tif (reactionFunction || propertyKey) {\n\t\t\ttarget.addDecorator('diffReaction', {\n\t\t\t\tpropertyName,\n\t\t\t\treaction: propertyKey ? target[propertyKey] : reactionFunction\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport default diffProperty;\n","import { Constructor, SupportedClassName } from './../interfaces';\nimport { Registry } from './../Registry';\nimport { Injector } from './../Injector';\nimport { inject } from './../decorators/inject';\nimport { WidgetBase } from './../WidgetBase';\nimport { handleDecorator } from './../decorators/handleDecorator';\nimport { diffProperty } from './../decorators/diffProperty';\nimport { shallow } from './../diff';\n\n/**\n * A lookup object for available class names\n */\nexport type ClassNames = {\n\t[key: string]: string;\n};\n\n/**\n * A lookup object for available widget classes names\n */\nexport interface Theme {\n\t[key: string]: object;\n}\n\n/**\n * Classes property interface\n */\nexport interface Classes {\n\t[widgetKey: string]: {\n\t\t[classKey: string]: SupportedClassName[];\n\t};\n}\n\n/**\n * Properties required for the Themed mixin\n */\nexport interface ThemedProperties<T = ClassNames> {\n\ttheme?: Theme;\n\tclasses?: Classes;\n\textraClasses?: { [P in keyof T]?: string };\n}\n\nexport const THEME_KEY = ' _key';\n\nexport const INJECTED_THEME_KEY = '__theme_injector';\n\n/**\n * Interface for the ThemedMixin\n */\nexport interface ThemedMixin<T = ClassNames> {\n\ttheme(classes: SupportedClassName): SupportedClassName;\n\ttheme(classes: SupportedClassName[]): SupportedClassName[];\n\tproperties: ThemedProperties<T>;\n}\n\n/**\n * Decorator for base css classes\n */\nexport function theme(theme: {}) {\n\treturn handleDecorator((target) => {\n\t\ttarget.addDecorator('baseThemeClasses', theme);\n\t});\n}\n\n/**\n * Creates a reverse lookup for the classes passed in via the `theme` function.\n *\n * @param classes The baseClasses object\n * @requires\n */\nfunction createThemeClassesLookup(classes: ClassNames[]): ClassNames {\n\treturn classes.reduce(\n\t\t(currentClassNames, baseClass) => {\n\t\t\tObject.keys(baseClass).forEach((key: string) => {\n\t\t\t\tcurrentClassNames[baseClass[key]] = key;\n\t\t\t});\n\t\t\treturn currentClassNames;\n\t\t},\n\t\t<ClassNames>{}\n\t);\n}\n\n/**\n * Convenience function that is given a theme and an optional registry, the theme\n * injector is defined against the registry, returning the theme.\n *\n * @param theme the theme to set\n * @param themeRegistry registry to define the theme injector against. Defaults\n * to the global registry\n *\n * @returns the theme injector used to set the theme\n */\nexport function registerThemeInjector(theme: any, themeRegistry: Registry): Injector {\n\tconst themeInjector = new Injector(theme);\n\tthemeRegistry.defineInjector(INJECTED_THEME_KEY, (invalidator) => {\n\t\tthemeInjector.setInvalidator(invalidator);\n\t\treturn () => themeInjector;\n\t});\n\treturn themeInjector;\n}\n\n/**\n * Function that returns a class decorated with with Themed functionality\n */\n\nexport function ThemedMixin<E, T extends Constructor<WidgetBase<ThemedProperties<E>>>>(\n\tBase: T\n): Constructor<ThemedMixin<E>> & T {\n\t@inject({\n\t\tname: INJECTED_THEME_KEY,\n\t\tgetProperties: (theme: Injector<Theme>, properties: ThemedProperties): ThemedProperties => {\n\t\t\tif (!properties.theme) {\n\t\t\t\treturn { theme: theme.get() };\n\t\t\t}\n\t\t\treturn {};\n\t\t}\n\t})\n\tabstract class Themed extends Base {\n\t\tpublic abstract properties: ThemedProperties<E>;\n\n\t\t/**\n\t\t * The Themed baseClasses\n\t\t */\n\t\tprivate _registeredBaseTheme: ClassNames | undefined;\n\n\t\t/**\n\t\t * Registered base theme keys\n\t\t */\n\t\tprivate _registeredBaseThemeKeys: string[] = [];\n\n\t\t/**\n\t\t * Reverse lookup of the theme classes\n\t\t */\n\t\tprivate _baseThemeClassesReverseLookup: ClassNames | undefined;\n\n\t\t/**\n\t\t * Indicates if classes meta data need to be calculated.\n\t\t */\n\t\tprivate _recalculateClasses = true;\n\n\t\t/**\n\t\t * Extra classes map\n\t\t */\n\t\tprivate _classes!: Classes;\n\n\t\t/**\n\t\t * Loaded theme\n\t\t */\n\t\tprivate _theme: ClassNames = {};\n\n\t\tpublic theme(classes: SupportedClassName): SupportedClassName;\n\t\tpublic theme(classes: SupportedClassName[]): SupportedClassName[];\n\t\tpublic theme(classes: SupportedClassName | SupportedClassName[]): SupportedClassName | SupportedClassName[] {\n\t\t\tif (this._recalculateClasses) {\n\t\t\t\tthis._recalculateThemeClasses();\n\t\t\t}\n\t\t\tif (Array.isArray(classes)) {\n\t\t\t\treturn classes.map((className) => this._getThemeClass(className));\n\t\t\t}\n\t\t\treturn this._getThemeClass(classes);\n\t\t}\n\n\t\t/**\n\t\t * Function fired when `theme` or `extraClasses` are changed.\n\t\t */\n\t\t@diffProperty('theme', shallow)\n\t\t@diffProperty('extraClasses', shallow)\n\t\t@diffProperty('classes', shallow)\n\t\tprotected onPropertiesChanged() {\n\t\t\tthis._recalculateClasses = true;\n\t\t}\n\n\t\tprivate _getThemeClass(className: SupportedClassName): SupportedClassName {\n\t\t\tif (className === undefined || className === null || className === false || className === true) {\n\t\t\t\treturn className;\n\t\t\t}\n\n\t\t\tconst extraClasses = this.properties.extraClasses || ({} as any);\n\t\t\tconst themeClassName = this._baseThemeClassesReverseLookup![className];\n\t\t\tlet resultClassNames: string[] = [];\n\t\t\tif (!themeClassName) {\n\t\t\t\tconsole.warn(`Class name: '${className}' not found in theme`);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this._classes) {\n\t\t\t\tconst classes = Object.keys(this._classes).reduce(\n\t\t\t\t\t(classes, key) => {\n\t\t\t\t\t\tconst classNames = Object.keys(this._classes[key]);\n\t\t\t\t\t\tfor (let i = 0; i < classNames.length; i++) {\n\t\t\t\t\t\t\tconst extraClass = this._classes[key][classNames[i]];\n\t\t\t\t\t\t\tif (classNames[i] === themeClassName && extraClass) {\n\t\t\t\t\t\t\t\textraClass.forEach((className) => {\n\t\t\t\t\t\t\t\t\tif (className && className !== true) {\n\t\t\t\t\t\t\t\t\t\tclasses.push(className);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn classes;\n\t\t\t\t\t},\n\t\t\t\t\t[] as string[]\n\t\t\t\t);\n\n\t\t\t\tresultClassNames.push(...classes);\n\t\t\t}\n\n\t\t\tif (extraClasses[themeClassName]) {\n\t\t\t\tresultClassNames.push(extraClasses[themeClassName]);\n\t\t\t}\n\n\t\t\tif (this._theme[themeClassName]) {\n\t\t\t\tresultClassNames.push(this._theme[themeClassName]);\n\t\t\t} else {\n\t\t\t\tresultClassNames.push(this._registeredBaseTheme![themeClassName]);\n\t\t\t}\n\t\t\treturn resultClassNames.join(' ');\n\t\t}\n\n\t\tprivate _recalculateThemeClasses() {\n\t\t\tconst { theme = {}, classes = {} } = this.properties;\n\t\t\tif (!this._registeredBaseTheme) {\n\t\t\t\tconst baseThemes = this.getDecorator('baseThemeClasses');\n\t\t\t\tif (baseThemes.length === 0) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t'A base theme has not been provided to this widget. Please use the @theme decorator to add a theme.'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tthis._registeredBaseTheme = baseThemes.reduce((finalBaseTheme, baseTheme) => {\n\t\t\t\t\tconst { [THEME_KEY]: key, ...classes } = baseTheme;\n\t\t\t\t\tthis._registeredBaseThemeKeys.push(key);\n\t\t\t\t\treturn { ...finalBaseTheme, ...classes };\n\t\t\t\t}, {});\n\t\t\t\tthis._baseThemeClassesReverseLookup = createThemeClassesLookup(baseThemes);\n\t\t\t}\n\n\t\t\tthis._theme = this._registeredBaseThemeKeys.reduce((baseTheme, themeKey) => {\n\t\t\t\treturn { ...baseTheme, ...theme[themeKey] };\n\t\t\t}, {});\n\n\t\t\tthis._classes = Object.keys(classes).reduce((computed, key) => {\n\t\t\t\tif (this._registeredBaseThemeKeys.indexOf(key) > -1) {\n\t\t\t\t\tcomputed = { ...computed, [key]: classes[key] };\n\t\t\t\t}\n\t\t\t\treturn computed;\n\t\t\t}, {});\n\n\t\t\tthis._recalculateClasses = false;\n\t\t}\n\t}\n\n\treturn Themed;\n}\n\nexport default ThemedMixin;\n","import { WidgetProperties } from '../interfaces';\nimport { CustomElementChildType } from '../registerCustomElement';\nimport Registry from '../Registry';\n\nexport type CustomElementPropertyNames<P extends object> = ((keyof P) | (keyof WidgetProperties))[];\n\n/**\n * Defines the custom element configuration used by the customElement decorator\n */\nexport interface CustomElementConfig<P extends object = { [index: string]: any }> {\n\t/**\n\t * The tag of the custom element\n\t */\n\ttag?: string;\n\n\t/**\n\t * List of widget properties to expose as properties on the custom element\n\t */\n\tproperties?: CustomElementPropertyNames<P>;\n\n\t/**\n\t * List of attributes on the custom element to map to widget properties\n\t */\n\tattributes?: CustomElementPropertyNames<P>;\n\n\t/**\n\t * List of events to expose\n\t */\n\tevents?: CustomElementPropertyNames<P>;\n\n\tchildType?: CustomElementChildType;\n\n\tregistryFactory?: () => Registry;\n}\n\n/**\n * This Decorator is provided properties that define the behavior of a custom element, and\n * registers that custom element.\n */\nexport function customElement<P extends object = { [index: string]: any }>(config: CustomElementConfig<P>) {\n\t// rename \"tag\" to \"tagName\"\n\tconst { tag: tagName, ...configRest } = config;\n\tconst userDefinedConfig: CustomElementConfig<P> & { tagName?: string } = configRest;\n\n\tif (tagName) {\n\t\tuserDefinedConfig.tagName = tagName;\n\t}\n\n\treturn function(target: any) {\n\t\ttarget.__customElementDescriptor = {\n\t\t\t...target.__customElementDescriptor,\n\t\t\t...userDefinedConfig\n\t\t};\n\t};\n}\n\nexport default customElement;\n","import { WidgetBase } from '@dojo/framework/core/WidgetBase';\nimport { v } from '@dojo/framework/core/vdom';\nimport { theme, ThemedMixin } from '@dojo/framework/core/mixins/Themed';\nimport { customElement } from '@dojo/framework/core/decorators/customElement';\nimport { WNode } from '@dojo/framework/core/interfaces';\nimport { MenuItem } from './MenuItem';\n\nimport * as css from './styles/menu.m.css';\n\ninterface MenuProperties {\n\tonSelected: (data: any) => void;\n}\n\n@theme(css)\n@customElement<MenuProperties>({\n\ttag: 'demo-menu',\n\tevents: ['onSelected']\n})\nexport class Menu extends ThemedMixin(WidgetBase)<MenuProperties, WNode<MenuItem>> {\n\tprivate _selectedId!: number;\n\n\tprivate _onSelected(id: number, data: any) {\n\t\tthis._selectedId = id;\n\t\tthis.properties.onSelected(data);\n\t\tthis.invalidate();\n\t}\n\n\trender() {\n\t\tconst items = this.children.map((child, index) => {\n\t\t\tif (child) {\n\t\t\t\tconst properties: Partial<any> = {\n\t\t\t\t\tonSelected: (data: any) => {\n\t\t\t\t\t\tthis._onSelected(index, data);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (this._selectedId !== undefined) {\n\t\t\t\t\tproperties.selected = index === this._selectedId;\n\t\t\t\t}\n\t\t\t\tchild.properties = { ...child.properties, ...properties };\n\t\t\t}\n\t\t\treturn child;\n\t\t});\n\n\t\treturn v('nav', { classes: this.theme(css.root) }, [\n\t\t\tv(\n\t\t\t\t'ol',\n\t\t\t\t{\n\t\t\t\t\tclasses: this.theme(css.menuContainer)\n\t\t\t\t},\n\t\t\t\titems\n\t\t\t)\n\t\t]);\n\t}\n}\n\nexport default Menu;\n","import { WidgetBase } from '@dojo/framework/core/WidgetBase';\nimport { v } from '@dojo/framework/core/vdom';\nimport { customElement } from '@dojo/framework/core/decorators/customElement';\nimport { theme, ThemedMixin } from '@dojo/framework/core/mixins/Themed';\n\nimport * as css from './styles/menuItem.m.css';\n\nexport interface MenuItemProperties {\n\tselected?: boolean;\n\tdata?: any;\n\ttitle?: string;\n\tonSelected?: (data: any) => void;\n}\n\n@customElement<MenuItemProperties>({\n\ttag: 'demo-menu-item',\n\tevents: ['onSelected'],\n\tattributes: ['title'],\n\tproperties: ['data', 'selected']\n})\n@theme(css)\nexport class MenuItem extends ThemedMixin(WidgetBase)<MenuItemProperties> {\n\tprivate _onClick() {\n\t\tthis.properties.onSelected && this.properties.onSelected(this.properties.data);\n\t}\n\n\tprotected render() {\n\t\tconst { selected } = this.properties;\n\n\t\treturn v('li', { classes: this.theme(css.root) }, [\n\t\t\tv(\n\t\t\t\t'span',\n\t\t\t\t{\n\t\t\t\t\tclasses: this.theme([css.item, selected ? css.selected : null]),\n\t\t\t\t\tonclick: this._onClick\n\t\t\t\t},\n\t\t\t\t[this.properties.title]\n\t\t\t)\n\t\t]);\n\t}\n}\n\nexport default MenuItem;\n","import { WidgetBase } from '@dojo/framework/core/WidgetBase';\nimport renderer, { w } from '@dojo/framework/core/vdom';\nimport { Menu } from './widgets/Menu';\nimport { MenuItem } from './widgets/MenuItem';\n\nclass Example extends WidgetBase {\n\tprivate _onSelected(data: any) {\n\t\tconsole.log(data);\n\t}\n\n\tprotected render() {\n\t\treturn w(Menu, { onSelected: this._onSelected }, [\n\t\t\tw(MenuItem, { key: 'a', title: 'Menu Item A' }),\n\t\t\tw(MenuItem, { key: 'b', title: 'Menu Item B', selected: true }),\n\t\t\tw(MenuItem, { key: 'c', title: 'Menu Item C' })\n\t\t]);\n\t}\n}\n\nconst element = document.getElementById('widget') as HTMLElement;\nconst r = renderer(() => w(Example, {}));\nr.mount({ domNode: element });\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"demo/menu\",\"root\":\"menu-m__root__34HPG\",\"menuContainer\":\"menu-m__menuContainer__1lZUl\",\"home\":\"menu-m__home__3ExrL\",\"logo\":\"menu-m__logo__2cdP4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"demo/menuItem\",\"root\":\"menuItem-m__root__3nC3w\",\"item\":\"menuItem-m__item__2otQ-\",\"selected\":\"menuItem-m__selected__3H86O\"};"],"sourceRoot":""}