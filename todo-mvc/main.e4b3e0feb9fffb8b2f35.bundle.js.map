{"version":3,"sources":["webpack://dojo_todo_mvc/WeakMap.ts","webpack://dojo_todo_mvc/Set.ts","webpack://dojo_todo_mvc/object.ts","webpack://dojo_todo_mvc/Map.ts","webpack://dojo_todo_mvc/Destroyable.ts","webpack://dojo_todo_mvc/Evented.ts","webpack://dojo_todo_mvc/Registry.ts","webpack://dojo_todo_mvc/diff.ts","webpack://dojo_todo_mvc/RegistryHandler.ts","webpack://dojo_todo_mvc/vdom.ts","webpack://dojo_todo_mvc/HashHistory.ts","webpack://dojo_todo_mvc/Router.ts","webpack://dojo_todo_mvc/injector.ts","webpack://dojo_todo_mvc/Pointer.ts","webpack://dojo_todo_mvc/util.ts","webpack://dojo_todo_mvc/array.ts","webpack://dojo_todo_mvc/Patch.ts","webpack://dojo_todo_mvc/compare.ts","webpack://dojo_todo_mvc/Store.ts","webpack://dojo_todo_mvc/store.ts","webpack://dojo_todo_mvc/process.ts","webpack://dojo_todo_mvc/operations.ts","webpack://dojo_todo_mvc/cache.ts","webpack://dojo_todo_mvc/Outlet.ts","webpack://dojo_todo_mvc/Link.ts","webpack://dojo_todo_mvc/ActiveLink.ts","webpack://dojo_todo_mvc/./src/App.tsx","webpack://dojo_todo_mvc/./src/main.tsx","webpack://dojo_todo_mvc/RouterInjector.ts","webpack://dojo_todo_mvc/./src/App.m.css"],"names":["shim_WeakMap","global","WeakMap","shim_Set","Set","object_assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","is","object_keys","getOwnPropertyDescriptors","entries","values","Object","assign","keys","Map","shim_Map","noop","shim_Promise","resolve","destroyed","Error","Destroyable_Destroyable","[object Object]","this","handles","handle","_handles","push","splice","indexOf","destroy","forEach","own","regexMap","Evented_Evented","listenersMap","event","methods","type","globString","targetString","regex","has","get","RegExp","replace","set","test","isGlobMatch","method","call","listener","Array","isArray","map","_addListener","listeners","core_Evented","WIDGET_BASE_TYPE","isWidgetBaseConstructor","item","Boolean","_type","isWidgetFunction","isWidget","isWNodeFactory","node","isFactory","Registry_Registry","widgetLabel","emit","action","label","undefined","_widgetRegistry","toString","then","widgetCtor","emitLoadedEvent","error","injectorFactory","_injectorRegistry","invalidator","injectorItem","injector","promise","hasOwnProperty","default","isWidgetConstructorDefaultExport","hasInjector","core_Registry","isObjectOrArray","value","prototype","reference","previousProperty","newProperty","changed","auto","result","ignore","shallow","depth","validOldProperty","validNewProperty","previousKeys","newKeys","length","some","key","core_RegistryHandler","super","_registry","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","delete","base","widget","define","defineInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","i","registry","registeredLabels","on","EMPTY_ARRAY","nodeOperations","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","WNODE","VNODE","DOMVNODE","isTextNode","nodeType","isWNodeWrapper","child","isWNode","isVNodeWrapper","isVNode","isVirtualWrapper","tag","isBodyWrapper","wrapper","isDomVNode","w","widgetConstructorOrNode","properties","children","widgetConstructor","v","propertiesOrChildren","deferredPropertiesCallback","classes","styles","newProperties","__rest","_a","nodeClasses","nodeStyles","nodeProperties","REGISTRY_ITEM","FromRegistry","spreadChildren","reduce","tsx","__autoRegistryItem","name","buildPreviousProperties","domNode","current","diffType","attributes","deferredProperties","events","propName","attrName","getAttribute","props","property","same","dnode1","dnode2","widgetConstructor1","registryItem","widgetConstructor2","instance","findIndexOfChild","sameAs","start","createClassPropValue","classNames","className","updateAttribute","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","arrayFrom","arr","slice","createFactory","callback","middlewares","factory","create","returns","widgetInstanceMap","widgetMetaMap","requestedDomNodes","wrapperId","metaId","addNodeToMap","id","widgetMeta","nodeMap","destroyHandles","destroyMap","clear","vdom_invalidator","widgetId","split","vdom_diffProperty","add","propertyName","diff","customDiffMap","customDiffProperties","propertyDiffMap","vdom_destroy","destroyFunction","getRegistry","registryHandler","isDeferred","deferRefs","vdom_renderer","renderer","_renderScheduled","parentInvalidate","_mountOptions","sync","merge","transition","document","body","_invalidationQueue","_processQueue","_deferredProcessQueue","_applicationQueue","_eventMap","_idToWrapperMap","_wrapperSiblingMap","_idToChildrenWrappers","_insertBeforeMap","_nodeToWrapperMap","_idleCallbacks","_deferredRenderCallbacks","_allMergedNodes","nodeOperation","propValue","previousValue","updateEvent","eventName","currentValue","previousEvent","removeEventListener","evt","target","addEventListener","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","eventCallback","resolveRegistryItem","owningNode","instanceData","registryLabel","isLazyDefine","renderedToWrapper","rendered","parent","currentParent","requiresInsertBefore","hasPreviousSiblings","wrappedRendered","hasParentWNode","hasVirtualParentNode","hasCurrentParentChildren","insertBefore","previousItem","nodes","pop","mapNodeToInstance","renderedItem","text","order","parentId","exitAnimation","hasAnimations","nextParent","owningId","runDeferredProperties","next","processProperties","findInsertBefore","searchNode","nextSibling","childDomWrapperId","childWrapper","parentNode","setValue","domValue","onInputValue","onSelectValue","setProperties","currentProperties","nextWrapper","includesEventsAndAttributes","propNames","propCount","previousClassString","currentClassString","merged","domClasses","styleNames","styleCount","j","styleName","newStyleValue","style","tagName","lastIndexOf","previousAttributes","attrNames","attrCount","updateAttributes","_schedule","_runInvalidationQueue","requestAnimationFrame","getWNodeWrapper","invalidationQueue","previouslyRendered","sort","a","b","_runProcessQueue","sibling","_updateWidget","_runDomInstructionQueue","_cleanUpMergedNodes","_runCallbacks","mergedNode","removeChild","setDomNodeOnParentWrapper","meta","_process","reverse","parentDomNode","onAttach","parentElement","enterAnimation","enterAnimationActive","enter","owningWrapper","nodeHandler","inserted","currentDomNode","replaceChild","exitAnimationActive","exit","attached","addRoot","onDetach","callbacks","run","shift","requestIdleCallback","setTimeout","runAfterRenderCallbacks","runDeferredRenderCallbacks","createKeyMap","wrappers","mergeNodes","oldIndex","newIndex","currentLength","nextLength","instructions","currentKeys","nextKeys","currentWrapper","domElement","toUpperCase","mergeNodeIndex","_processMergeNodes","_processOne","dom","currentNode","parentWrapper","findParentDomNode","isVirtual","isBody","data","createTextNode","childNodes","createElementNS","createElement","_createDom","invalidate","Constructor","dirty","rendering","__setProperties__","__setChildren__","__render__","middleware","resolveMiddleware","results","uniqueId","payload","resolvedMiddleware","_createWidget","currentChildren","_updateDom","remove","bodyIds","wrapperChildren","_removeDom","processResult","_removeWidget","didRender","size","diffMap","runDiffs","ignoreProperties","propertyNames","propertiesDiff","nextChildren","mount","mountOptions","renderResult","wrapNodes","siblingId","HashHistory_HashHistory","window","onChange","_onChange","path","normalizePath","_window","location","hash","_current","_onChangeFunction","prefix","PARAM","paramRegExp","ROUTE_SEGMENT_SCORE","DYNAMIC_SEGMENT_PENALTY","matchingParams","params","previousParams","every","Router_Router","config","options","_routes","_outletMap","_matchedOutlets","_currentParams","_currentQueryParams","requestedPath","_stripLeadingSlash","previousMatchedOutlets","queryParamString","_getQueryParams","segments","routeConfig","routeConfigs","route","matchedRoutes","segmentIndex","paramIndex","routeMatch","segment","childRoute","matchedOutletName","matchedRoute","match","score","outlet","matchedOutlet","queryParams","isError","isExact","previousMatchedOutlet","errorOutlet","previousMatchedOutletKeys","context","_options","_register","autostart","_history","HistoryManager","_defaultOutlet","link","setPath","linkPath","fullPath","fullQueryParams","param","index","defaultParams","fullParams","outletIdentifier","currentParams","routes","parentRoute","defaultRoute","parsedPath","queryParam","queryParameters","middleware_injector","injector_injectorFactory","getInjector","decode","encode","walk","object","clone","continueOnUndefined","pointerTarget","String","nextSegment","isNaN","parseInt","Pointer","_segments","join","wrapNative","nativeFunction","args","apply","from","of","copyWithin","fill","find","findIndex","includes","OperationType","isObject","isEqual","element","keysForA","getFriendlyDifferenceMessage","expected","actual","actualType","getFriendlyTypeName","expectedType","offset","min","Math","findArrayDifference","findShallowObjectKeyDifference","inverse","operation","state","op","ADD","REMOVE","TEST","REPLACE","Patch_Patch","operations","_operations","undoOperations","patchedObject","Patch_add","isString","Store_DefaultState","_state","patchResult","at","array","stringSegments","filter","hasMultipleSegments","pointer","stores_Store","_adapter","_changePaths","_callbackId","paths","callbackId","_addOnChange","changePaths","bind","callbackIdsCalled","newValue","callbackItem","_runOnChanges","store_factory","createStoreMiddleware","initial","store","initialized","injectedStore","registeredPaths","executor","process","processMap","valueSymbol","Symbol","proxyError","processExecutor","commands","before","after","transformer","async","executorPayload","commandsCopy","command","createProxy","proxies","proxied","proxyOperations","createHandler","partialPath","obj","prop","stringPath","proxiedValue","Proxy","removeProxies","operations_replace","deleteProperty","operations_remove","proxy","resolvedResults","commandFunction","Promise","all","e","message","createProcess","nextCallback","processCallback","previousCallback","previousBefore","previousAfter","combineCallbacks","middleware_cache","cache_factory","cacheMap","routing_Outlet","cache","diffProperty","Outlet_factory","routerKey","subscribe","currentRouterKey","currentHandle","router","outletContext","getOutlet","routing_Link","Link_factory","to","isOutlet","onClick","Link_rest","linkProps","href","onclick","defaultPrevented","button","metaKey","ctrlKey","preventDefault","routing_ActiveLink","ActiveLink_factory","activeClasses","ActiveLink_rest","isActive","linkParams","contextParams","paramsEqual","counter","commandFactory","createWidget","findTodo","todo","addTodoCommand","Date","now","trim","todos","deleteTodoCommand","completed","completedCount","clearCompletedCommand","toggleTodoCommand","toggleAllTodosCommand","complete","todoInputCommand","clearTodoInputCommand","todoEditModeCommand","editingId","editingLabel","todoReadModeCommand","saveTodoCommand","updateTodoCommand","addTodo","todoInput","deleteTodo","toggleTodo","toggleAllTodos","todoEditMode","todoReadMode","saveTodo","updateTodoInput","clearCompleted","App","which","itemCount","matchDetails","filtered","filterName","App_m","onkeyup","focus","oninput","placeholder","checked","onchange","ondblclick","onblur","main_registry","routerOptions","RouterInjector_rest","registerRouterInjector","module","exports"," _key","todoapp","main","todoList","title","newTodo","toggleAll","todoItem","edit","editing","view","toggle","todoLabel","footer","todoCountLabel","todoCount","filters","filterLink","selected"],"mappings":"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","file":"main.e4b3e0feb9fffb8b2f35.bundle.js","sourcesContent":["import global from './global';\n`!has('es6-iterator')`;\nimport { isArrayLike, Iterable } from './iterator';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface WeakMap<K extends object, V> {\n\t/**\n\t * Remove a `key` from the map\n\t *\n\t * @param key The key to remove\n\t * @return `true` if the value was removed, otherwise `false`\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Retrieve the value, based on the supplied `key`\n\t *\n\t * @param key The key to retrieve the `value` for\n\t * @return the `value` based on the `key` if found, otherwise `false`\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Determines if a `key` is present in the map\n\t *\n\t * @param key The `key` to check\n\t * @return `true` if the key is part of the map, otherwise `false`.\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Set a `value` for a particular `key`.\n\t *\n\t * @param key The `key` to set the `value` for\n\t * @param value The `value` to set\n\t * @return the instances\n\t */\n\tset(key: K, value: V): this;\n\n\treadonly [Symbol.toStringTag]: 'WeakMap';\n}\n\nexport interface WeakMapConstructor {\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t */\n\tnew (): WeakMap<object, any>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable?: [K, V][]): WeakMap<K, V>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable: Iterable<[K, V]>): WeakMap<K, V>;\n\n\treadonly prototype: WeakMap<object, any>;\n}\n\nexport let WeakMap: WeakMapConstructor = global.WeakMap;\n\ninterface Entry<K, V> {\n\tkey: K;\n\tvalue: V;\n}\n\nif (!has('es6-weakmap')) {\n\tconst DELETED: any = {};\n\n\tconst getUID = function getUID(): number {\n\t\treturn Math.floor(Math.random() * 100000000);\n\t};\n\n\tconst generateName = (function() {\n\t\tlet startId = Math.floor(Date.now() % 100000000);\n\n\t\treturn function generateName(): string {\n\t\t\treturn '__wm' + getUID() + (startId++ + '__');\n\t\t};\n\t})();\n\n\tWeakMap = global.WeakMap = class WeakMap<K, V> {\n\t\tprivate readonly _name: string;\n\t\tprivate readonly _frozenEntries: Entry<K, V>[];\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tthis._name = generateName();\n\n\t\t\tthis._frozenEntries = [];\n\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst item = iterable[i];\n\t\t\t\t\t\tthis.set(item[0], item[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const [key, value] of iterable) {\n\t\t\t\t\t\tthis.set(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _getFrozenEntryIndex(key: any): number {\n\t\t\tfor (let i = 0; i < this._frozenEntries.length; i++) {\n\t\t\t\tif (this._frozenEntries[i].key === key) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t}\n\n\t\tdelete(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\tentry.value = DELETED;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\tthis._frozenEntries.splice(frozenIndex, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tget(key: any): V | undefined {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\treturn entry.value;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn this._frozenEntries[frozenIndex].value;\n\t\t\t}\n\t\t}\n\n\t\thas(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tset(key: any, value?: any): this {\n\t\t\tif (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n\t\t\t\tthrow new TypeError('Invalid value used as weak map key');\n\t\t\t}\n\t\t\tlet entry: Entry<K, V> = key[this._name];\n\t\t\tif (!entry || entry.key !== key) {\n\t\t\t\tentry = Object.create(null, {\n\t\t\t\t\tkey: { value: key }\n\t\t\t\t});\n\n\t\t\t\tif (Object.isFrozen(key)) {\n\t\t\t\t\tthis._frozenEntries.push(entry);\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty(key, this._name, {\n\t\t\t\t\t\tvalue: entry\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tentry.value = value;\n\t\t\treturn this;\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'WeakMap' = 'WeakMap';\n\t};\n}\n\nexport default WeakMap;\n","import global from './global';\n`!has('es6-iterator')`;\nimport { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface Set<T> {\n\t/**\n\t * Adds a `value` to the `Set`\n\t *\n\t * @param value The value to add to the set\n\t * @returns The instance of the `Set`\n\t */\n\tadd(value: T): this;\n\n\t/**\n\t * Removes all the values from the `Set`.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Removes a `value` from the set\n\t *\n\t * @param value The value to be removed\n\t * @returns `true` if the value was removed\n\t */\n\tdelete(value: T): boolean;\n\n\t/**\n\t * Returns an iterator that yields each entry.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[T, T]>;\n\n\t/**\n\t * Executes a given function for each set entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated `Set` instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void;\n\n\t/**\n\t * Identifies if a value is part of the set.\n\t *\n\t * @param value The value to check\n\t * @returns `true` if the value is part of the set otherwise `false`\n\t */\n\thas(value: T): boolean;\n\n\t/**\n\t * Despite its name, returns an iterable of the values in the set,\n\t */\n\tkeys(): IterableIterator<T>;\n\n\t/**\n\t * Returns the number of values in the `Set`.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterable of values in the set.\n\t */\n\tvalues(): IterableIterator<T>;\n\n\t/** Iterates over values in the set. */\n\t[Symbol.iterator](): IterableIterator<T>;\n\n\treadonly [Symbol.toStringTag]: 'Set';\n}\n\nexport interface SetConstructor {\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t */\n\tnew (): Set<any>;\n\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t *\n\t * @param iterator The iterable structure to initialize the set with\n\t */\n\tnew <T>(iterator?: T[]): Set<T>;\n\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t *\n\t * @param iterator The iterable structure to initialize the set with\n\t */\n\tnew <T>(iterator: Iterable<T>): Set<T>;\n\n\treadonly prototype: Set<any>;\n}\n\nexport let Set: SetConstructor = global.Set;\n\nif (!has('es6-set')) {\n\tSet = global.Set = class Set<T> {\n\t\tprivate readonly _setData: T[] = [];\n\n\t\tstatic [Symbol.species] = Set;\n\n\t\tconstructor(iterable?: ArrayLike<T> | Iterable<T>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tthis.add(iterable[i]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tadd(value: T): this {\n\t\t\tif (this.has(value)) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis._setData.push(value);\n\t\t\treturn this;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._setData.length = 0;\n\t\t}\n\n\t\tdelete(value: T): boolean {\n\t\t\tconst idx = this._setData.indexOf(value);\n\t\t\tif (idx === -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._setData.splice(idx, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[T, T]> {\n\t\t\treturn new ShimIterator<[any, any]>(this._setData.map<[any, any]>((value) => [value, value]));\n\t\t}\n\n\t\tforEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void {\n\t\t\tconst iterator = this.values();\n\t\t\tlet result = iterator.next();\n\t\t\twhile (!result.done) {\n\t\t\t\tcallbackfn.call(thisArg, result.value, result.value, this);\n\t\t\t\tresult = iterator.next();\n\t\t\t}\n\t\t}\n\n\t\thas(value: T): boolean {\n\t\t\treturn this._setData.indexOf(value) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._setData.length;\n\t\t}\n\n\t\tvalues(): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Set' = 'Set';\n\t};\n}\n\nexport default Set;\n","import has from '../core/has';\n\nexport interface ObjectAssign {\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source The source object from which to copy properties.\n\t */\n\t<T, U>(target: T, source: U): T & U;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t */\n\t<T, U, V>(target: T, source1: U, source2: V): T & U & V;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t * @param source3 The third source object from which to copy properties.\n\t */\n\t<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param sources One or more source objects from which to copy properties\n\t */\n\t(target: object, ...sources: any[]): any;\n}\n\nexport interface ObjectEnteries {\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T extends { [key: string]: any }, K extends keyof T>(o: T): [keyof T, T[K]][];\n\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): [string, any][];\n}\n\nexport interface ObjectGetOwnPropertyDescriptors {\n\t<T>(o: T): { [K in keyof T]: PropertyDescriptor };\n\t(o: any): { [key: string]: PropertyDescriptor };\n}\n\nexport interface ObjectValues {\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T>(o: { [s: string]: T }): T[];\n\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): any[];\n}\n\nexport let assign: ObjectAssign;\n\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor: <T, K extends keyof T>(o: T, propertyKey: K) => PropertyDescriptor | undefined;\n\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames: (o: any) => string[];\n\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols: (o: any) => symbol[];\n\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is: (value1: any, value2: any) => boolean;\n\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys: (o: object) => string[];\n\n/* ES7 Object static methods */\n\nexport let getOwnPropertyDescriptors: ObjectGetOwnPropertyDescriptors;\n\nexport let entries: ObjectEnteries;\n\nexport let values: ObjectValues;\n\nif (!has('es6-object')) {\n\tconst keys = Object.keys.bind(Object);\n\tObject.keys = function symbolAwareKeys(o: object): string[] {\n\t\treturn keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tObject.assign = function assign(target: any, ...sources: any[]) {\n\t\tif (target == null) {\n\t\t\t// TypeError if undefined or null\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t}\n\n\t\tconst to = Object(target);\n\t\tsources.forEach((nextSource) => {\n\t\t\tif (nextSource) {\n\t\t\t\t// Skip over if undefined or null\n\t\t\t\tkeys(nextSource).forEach((nextKey) => {\n\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn to;\n\t};\n\n\tconst getOwnPropertyNames = Object.getOwnPropertyNames.bind(Object);\n\tObject.getOwnPropertyNames = function symbolAwareGetOwnPropertyNames(o: any): string[] {\n\t\treturn getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tObject.getOwnPropertySymbols = function getOwnPropertySymbols(o: any): symbol[] {\n\t\treturn getOwnPropertyNames(o)\n\t\t\t.filter((key) => Boolean(key.match(/^@@.+/)))\n\t\t\t.map((key) => Symbol.for(key.substring(2)));\n\t};\n\n\tObject.is = function is(value1: any, value2: any): boolean {\n\t\tif (value1 === value2) {\n\t\t\treturn value1 !== 0 || 1 / value1 === 1 / value2; // -0\n\t\t}\n\t\treturn value1 !== value1 && value2 !== value2; // NaN\n\t};\n}\n\nif (!has('es2017-object')) {\n\tObject.getOwnPropertyDescriptors = function getOwnPropertyDescriptors<T>(\n\t\to: T\n\t): { [P in keyof T]: TypedPropertyDescriptor<T[P]> } & { [x: string]: PropertyDescriptor } {\n\t\treturn Object.getOwnPropertyNames(o).reduce(\n\t\t\t(previous, key) => {\n\t\t\t\tprevious[key] = Object.getOwnPropertyDescriptor(o, key)!;\n\t\t\t\treturn previous;\n\t\t\t},\n\t\t\t{} as { [P in keyof T]: TypedPropertyDescriptor<T[P]> } & { [x: string]: PropertyDescriptor }\n\t\t);\n\t};\n\n\tObject.entries = function entries(o: any): [string, any][] {\n\t\treturn keys(o).map((key) => [key, o[key]] as [string, any]);\n\t};\n\n\tObject.values = function values(o: any): any[] {\n\t\treturn keys(o).map((key) => o[key]);\n\t};\n}\n\nassign = Object.assign;\ngetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\ngetOwnPropertyNames = Object.getOwnPropertyNames;\ngetOwnPropertySymbols = Object.getOwnPropertySymbols;\nis = Object.is;\nkeys = Object.keys;\ngetOwnPropertyDescriptors = Object.getOwnPropertyDescriptors;\nentries = Object.entries;\nvalues = Object.values;\n\nexport default Object;\n","`!has('es6-iterator')`;\nimport { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface Map<K, V> {\n\t/**\n\t * Deletes all keys and their associated values.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Deletes a given key and its associated value.\n\t *\n\t * @param key The key to delete\n\t * @return true if the key exists, false if it does not\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Returns an iterator that yields each key/value pair as an array.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[K, V]>;\n\n\t/**\n\t * Executes a given function for each map entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated Map instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;\n\n\t/**\n\t * Returns the value associated with a given key.\n\t *\n\t * @param key The key to look up\n\t * @return The value if one exists or undefined\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Returns an iterator that yields each key in the map.\n\t *\n\t * @return An iterator containing the instance's keys.\n\t */\n\tkeys(): IterableIterator<K>;\n\n\t/**\n\t * Checks for the presence of a given key.\n\t *\n\t * @param key The key to check for\n\t * @return true if the key exists, false if it does not\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Sets the value associated with a given key.\n\t *\n\t * @param key The key to define a value to\n\t * @param value The value to assign\n\t * @return The Map instance\n\t */\n\tset(key: K, value: V): this;\n\n\t/**\n\t * Returns the number of key / value pairs in the Map.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterator that yields each value in the map.\n\t *\n\t * @return An iterator containing the instance's values.\n\t */\n\tvalues(): IterableIterator<V>;\n\n\t/** Returns an iterable of entries in the map. */\n\t[Symbol.iterator](): IterableIterator<[K, V]>;\n\n\treadonly [Symbol.toStringTag]: string;\n}\n\nexport interface MapConstructor {\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t */\n\tnew (): Map<any, any>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator?: [K, V][]): Map<K, V>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator: Iterable<[K, V]>): Map<K, V>;\n\n\treadonly prototype: Map<any, any>;\n\n\treadonly [Symbol.species]: MapConstructor;\n}\n\nexport let Map: MapConstructor = global.Map;\n\nif (!has('es6-map')) {\n\tMap = global.Map = class Map<K, V> {\n\t\tprotected readonly _keys: K[] = [];\n\t\tprotected readonly _values: V[] = [];\n\n\t\t/**\n\t\t * An alternative to Array.prototype.indexOf using Object.is\n\t\t * to check for equality. See http://mzl.la/1zuKO2V\n\t\t */\n\t\tprotected _indexOfKey(keys: K[], key: K): number {\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tif (objectIs(keys[i], key)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\tstatic [Symbol.species] = Map;\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst value = iterable[i];\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._keys.length;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._keys.length = this._values.length = 0;\n\t\t}\n\n\t\tdelete(key: K): boolean {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\tif (index < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._keys.splice(index, 1);\n\t\t\tthis._values.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[K, V]> {\n\t\t\tconst values = this._keys.map(\n\t\t\t\t(key: K, i: number): [K, V] => {\n\t\t\t\t\treturn [key, this._values[i]];\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn new ShimIterator(values);\n\t\t}\n\n\t\tforEach(callback: (value: V, key: K, mapInstance: Map<K, V>) => any, context?: {}) {\n\t\t\tconst keys = this._keys;\n\t\t\tconst values = this._values;\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tcallback.call(context, values[i], keys[i], this);\n\t\t\t}\n\t\t}\n\n\t\tget(key: K): V | undefined {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\treturn index < 0 ? undefined : this._values[index];\n\t\t}\n\n\t\thas(key: K): boolean {\n\t\t\treturn this._indexOfKey(this._keys, key) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<K> {\n\t\t\treturn new ShimIterator(this._keys);\n\t\t}\n\n\t\tset(key: K, value: V): Map<K, V> {\n\t\t\tlet index = this._indexOfKey(this._keys, key);\n\t\t\tindex = index < 0 ? this._keys.length : index;\n\t\t\tthis._keys[index] = key;\n\t\t\tthis._values[index] = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tvalues(): IterableIterator<V> {\n\t\t\treturn new ShimIterator(this._values);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\t\treturn this.entries();\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Map' = 'Map';\n\t};\n}\n\nexport default Map;\n","import Promise from '../shim/Promise';\n\n/**\n * Used through the toolkit as a consistent API to manage how callers can \"cleanup\"\n * when doing a function.\n */\nexport interface Handle {\n\t/**\n\t * Perform the destruction/cleanup logic associated with this Handle\n\t */\n\tdestroy(): void;\n}\n\n/**\n * No op function used to replace a Destroyable instance's `destroy` method, once the instance has been destroyed\n */\nfunction noop(): Promise<boolean> {\n\treturn Promise.resolve(false);\n}\n\n/**\n * No op function used to replace a Destroyable instance's `own` method, once the instance has been destroyed\n */\nfunction destroyed(): never {\n\tthrow new Error('Call made to destroyed method');\n}\n\nexport class Destroyable {\n\t/**\n\t * The instance's handles\n\t */\n\tprivate handles: Handle[];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.handles = [];\n\t}\n\n\t/**\n\t * Register handles for the instance that will be destroyed when `this.destroy` is called\n\t *\n\t * @param {Handle} handle The handle to add for the instance\n\t * @returns {Handle} A wrapper Handle. When the wrapper Handle's `destroy` method is invoked, the original handle is\n\t *                   removed from the instance, and its `destroy` method is invoked.\n\t */\n\town(handle: Handle): Handle {\n\t\tconst { handles: _handles } = this;\n\t\t_handles.push(handle);\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\t_handles.splice(_handles.indexOf(handle));\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Destroys all handlers registered for the instance\n\t *\n\t * @returns {Promise<any} A Promise that resolves once all handles have been destroyed\n\t */\n\tdestroy(): Promise<any> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.handles.forEach((handle) => {\n\t\t\t\thandle && handle.destroy && handle.destroy();\n\t\t\t});\n\t\t\tthis.destroy = noop;\n\t\t\tthis.own = destroyed;\n\t\t\tresolve(true);\n\t\t});\n\t}\n}\n\nexport default Destroyable;\n","import Map from '../shim/Map';\nimport { Destroyable, Handle } from './Destroyable';\n\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map<string, RegExp>();\n\nexport type EventType = string | symbol;\n\n/**\n * The base event object, which provides a `type` property\n */\nexport interface EventObject<T = EventType> {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: T;\n}\n\n/**\n * Determines if the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString: string | symbol, targetString: string | symbol): boolean {\n\tif (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n\t\tlet regex: RegExp;\n\t\tif (regexMap.has(globString)) {\n\t\t\tregex = regexMap.get(globString)!;\n\t\t} else {\n\t\t\tregex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n\t\t\tregexMap.set(globString, regex);\n\t\t}\n\t\treturn regex.test(targetString);\n\t} else {\n\t\treturn globString === targetString;\n\t}\n}\n\nexport type EventedCallback<T = EventType, E extends EventObject<T> = EventObject<T>> = {\n\t/**\n\t * A callback that takes an `event` argument\n\t *\n\t * @param event The event object\n\t */\n\n\t(event: E): boolean | void;\n};\n\nexport interface CustomEventTypes<T extends EventObject<any> = EventObject<any>> {\n\t[index: string]: T;\n}\n\n/**\n * A type which is either a targeted event listener or an array of listeners\n * @template T The type of target for the events\n * @template E The event type for the events\n */\nexport type EventedCallbackOrArray<T = EventType, E extends EventObject<T> = EventObject<T>> =\n\t| EventedCallback<T, E>\n\t| EventedCallback<T, E>[];\n\n/**\n * Event Class\n */\nexport class Evented<\n\tM extends CustomEventTypes = {},\n\tT = EventType,\n\tO extends EventObject<T> = EventObject<T>\n> extends Destroyable {\n\t// The following member is purely so TypeScript remembers the type of `M` when extending so\n\t// that the utilities in `on.ts` will work https://github.com/Microsoft/TypeScript/issues/20348\n\t// tslint:disable-next-line\n\tprotected __typeMap__?: M;\n\t/**\n\t * map of listeners keyed by event type\n\t */\n\tprotected listenersMap: Map<T | keyof M, EventedCallback<T, O>[]> = new Map();\n\n\t/**\n\t * Emits the event object for the specified type\n\t *\n\t * @param event the event to emit\n\t */\n\temit<K extends keyof M>(event: M[K]): void;\n\temit(event: O): void;\n\temit(event: any): void {\n\t\tthis.listenersMap.forEach((methods, type) => {\n\t\t\tif (isGlobMatch(type as any, event.type)) {\n\t\t\t\t[...methods].forEach((method) => {\n\t\t\t\t\tmethod.call(this, event);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Catch all handler for various call signatures. The signatures are defined in\n\t * `BaseEventedEvents`.  You can add your own event type -> handler types by extending\n\t * `BaseEventedEvents`.  See example for details.\n\t *\n\t * @param args\n\t *\n\t * @example\n\t *\n\t * interface WidgetBaseEvents extends BaseEventedEvents {\n\t *     (type: 'properties:changed', handler: PropertiesChangedHandler): Handle;\n\t * }\n\t * class WidgetBase extends Evented {\n\t *    on: WidgetBaseEvents;\n\t * }\n\t *\n\t * @return {any}\n\t */\n\ton<K extends keyof M>(type: K, listener: EventedCallbackOrArray<K, M[K]>): Handle;\n\ton(type: T, listener: EventedCallbackOrArray<T, O>): Handle;\n\ton(type: any, listener: EventedCallbackOrArray<any, any>): Handle {\n\t\tif (Array.isArray(listener)) {\n\t\t\tconst handles = listener.map((listener) => this._addListener(type, listener));\n\t\t\treturn {\n\t\t\t\tdestroy() {\n\t\t\t\t\thandles.forEach((handle) => handle.destroy());\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn this._addListener(type, listener);\n\t}\n\n\tprivate _addListener(type: T | keyof M, listener: EventedCallback<T, O>) {\n\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\tlisteners.push(listener);\n\t\tthis.listenersMap.set(type, listeners);\n\t\treturn {\n\t\t\tdestroy: () => {\n\t\t\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport default Evented;\n","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport {\n\tConstructor,\n\tInjectorFactory,\n\tInjectorItem,\n\tRegistryLabel,\n\tWidgetBaseConstructor,\n\tWidgetBaseInterface,\n\tESMDefaultWidgetBase,\n\tWidgetBaseConstructorFunction,\n\tESMDefaultWidgetBaseFunction,\n\tCallback,\n\tWNodeFactory,\n\tRenderResult,\n\tWidgetBaseTypes\n} from './interfaces';\n\nexport type RegistryItem =\n\t| WidgetBaseConstructor\n\t| WNodeFactory<any>\n\t| Promise<WidgetBaseConstructor | WNodeFactory<any>>\n\t| WidgetBaseConstructorFunction\n\t| ESMDefaultWidgetBaseFunction;\n\n/**\n * Widget base type\n */\nexport const WIDGET_BASE_TYPE = '__widget_base_type';\n\nexport interface RegistryEventObject extends EventObject<RegistryLabel> {\n\taction: string;\n\titem: WNodeFactory<any> | WidgetBaseConstructor | InjectorItem;\n}\n/**\n * Widget Registry Interface\n */\nexport interface RegistryInterface {\n\t/**\n\t * Define a WidgetRegistryItem against a label\n\t *\n\t * @param label The label of the widget to register\n\t * @param registryItem The registry item to define\n\t */\n\tdefine(label: RegistryLabel, registryItem: RegistryItem): void;\n\n\t/**\n\t * Return a RegistryItem for the given label, null if an entry doesn't exist\n\t *\n\t * @param widgetLabel The label of the widget to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tget(label: RegistryLabel): WNodeFactory<any> | Callback<any, any, RenderResult> | Constructor<any> | null;\n\tget<T extends WNodeFactory<any>>(label: RegistryLabel): T | null;\n\tget<T extends Callback<any, any, RenderResult>>(label: RegistryLabel): T | null;\n\tget<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\n\t/**\n\t * Returns a boolean if an entry for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a widget registry item exists\n\t */\n\thas(label: RegistryLabel): boolean;\n\n\t/**\n\t * Define an Injector against a label\n\t *\n\t * @param label The label of the injector to register\n\t * @param registryItem The injector factory\n\t */\n\tdefineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void;\n\n\t/**\n\t * Return an Injector registry item for the given label, null if an entry doesn't exist\n\t *\n\t * @param label The label of the injector to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tgetInjector<T>(label: RegistryLabel): InjectorItem<T> | null;\n\n\t/**\n\t * Returns a boolean if an injector for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a injector registry item exists\n\t */\n\thasInjector(label: RegistryLabel): boolean;\n}\n\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor<T extends WidgetBaseInterface = any>(item: any): item is Constructor<T> {\n\treturn Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\n\nexport function isWidgetFunction(item: any): item is Callback<any, any, RenderResult> {\n\treturn Boolean(item && item.isWidget);\n}\n\nexport function isWNodeFactory<W extends WidgetBaseTypes>(node: any): node is WNodeFactory<W> {\n\tif (typeof node === 'function' && node.isFactory) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function isWidget<T extends WidgetBaseInterface = any>(\n\titem: any\n): item is Constructor<T> | Callback<any, any, RenderResult> {\n\treturn isWidgetBaseConstructor(item) || isWidgetFunction(item);\n}\n\nexport function isWidgetConstructorDefaultExport<T extends WidgetBaseTypes>(\n\titem: any\n): item is ESMDefaultWidgetBase<T> {\n\treturn Boolean(\n\t\titem &&\n\t\t\titem.hasOwnProperty('__esModule') &&\n\t\t\titem.hasOwnProperty('default') &&\n\t\t\t(isWidget(item.default) || isWNodeFactory(item.default))\n\t);\n}\n\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented<{}, RegistryLabel, RegistryEventObject> implements RegistryInterface {\n\t/**\n\t * internal map of labels and RegistryItem\n\t */\n\tprivate _widgetRegistry: Map<RegistryLabel, RegistryItem> | undefined;\n\n\tprivate _injectorRegistry: Map<RegistryLabel, InjectorItem> | undefined;\n\n\t/**\n\t * Emit loaded event for registry label\n\t */\n\tprivate emitLoadedEvent(\n\t\twidgetLabel: RegistryLabel,\n\t\titem: WNodeFactory<any> | WidgetBaseConstructor | InjectorItem\n\t): void {\n\t\tthis.emit({\n\t\t\ttype: widgetLabel,\n\t\t\taction: 'loaded',\n\t\t\titem\n\t\t});\n\t}\n\n\tpublic define(label: RegistryLabel, item: RegistryItem): void {\n\t\tif (this._widgetRegistry === undefined) {\n\t\t\tthis._widgetRegistry = new Map();\n\t\t}\n\n\t\tif (this._widgetRegistry.has(label)) {\n\t\t\tthrow new Error(`widget has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tthis._widgetRegistry.set(label, item);\n\n\t\tif (item instanceof Promise) {\n\t\t\titem.then(\n\t\t\t\t(widgetCtor) => {\n\t\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\t\treturn widgetCtor;\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (isWidgetBaseConstructor(item)) {\n\t\t\tthis.emitLoadedEvent(label, item);\n\t\t}\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void {\n\t\tif (this._injectorRegistry === undefined) {\n\t\t\tthis._injectorRegistry = new Map();\n\t\t}\n\n\t\tif (this._injectorRegistry.has(label)) {\n\t\t\tthrow new Error(`injector has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tconst invalidator = new Evented();\n\n\t\tconst injectorItem: InjectorItem = {\n\t\t\tinjector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n\t\t\tinvalidator\n\t\t};\n\n\t\tthis._injectorRegistry.set(label, injectorItem);\n\t\tthis.emitLoadedEvent(label, injectorItem);\n\t}\n\n\tpublic get(label: RegistryLabel): WNodeFactory<any> | Callback<any, any, RenderResult> | Constructor<any> | null;\n\tpublic get<T extends WNodeFactory<any>>(label: RegistryLabel): T | null;\n\tpublic get<T extends Callback<any, any, RenderResult>>(label: RegistryLabel): T | null;\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel\n\t): WNodeFactory<T> | Callback<any, any, RenderResult> | Constructor<T> | null {\n\t\tif (!this._widgetRegistry || !this.has(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst item = this._widgetRegistry.get(label);\n\n\t\tif (isWidget<T>(item) || isWNodeFactory(item)) {\n\t\t\treturn item;\n\t\t}\n\n\t\tif (item instanceof Promise) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst promise = (<WidgetBaseConstructorFunction>item)();\n\t\tthis._widgetRegistry.set(label, promise);\n\n\t\tpromise.then(\n\t\t\t(widgetCtor) => {\n\t\t\t\tif (isWidgetConstructorDefaultExport<T>(widgetCtor)) {\n\t\t\t\t\twidgetCtor = widgetCtor.default;\n\t\t\t\t}\n\n\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\treturn widgetCtor;\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t);\n\n\t\treturn null;\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel): InjectorItem<T> | null {\n\t\tif (!this._injectorRegistry || !this.hasInjector(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._injectorRegistry.get(label)!;\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n\t}\n}\n\nexport default Registry;\n","import { PropertyChangeRecord } from './interfaces';\nimport { WIDGET_BASE_TYPE } from './Registry';\n\nfunction isObjectOrArray(value: any): boolean {\n\treturn Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\n\nexport function always(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: true,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function ignore(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: false,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function reference(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: previousProperty !== newProperty,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function shallow(previousProperty: any, newProperty: any, depth = 0): PropertyChangeRecord {\n\tlet changed = false;\n\n\tconst validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n\tconst validNewProperty = newProperty && isObjectOrArray(newProperty);\n\n\tif (!validOldProperty || !validNewProperty) {\n\t\treturn {\n\t\t\tchanged: true,\n\t\t\tvalue: newProperty\n\t\t};\n\t}\n\n\tconst previousKeys = Object.keys(previousProperty);\n\tconst newKeys = Object.keys(newProperty);\n\n\tif (previousKeys.length !== newKeys.length) {\n\t\tchanged = true;\n\t} else {\n\t\tchanged = newKeys.some((key) => {\n\t\t\tif (depth > 0) {\n\t\t\t\treturn shallow(newProperty[key], previousProperty[key], depth - 1).changed;\n\t\t\t}\n\t\t\treturn newProperty[key] !== previousProperty[key];\n\t\t});\n\t}\n\treturn {\n\t\tchanged,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function auto(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\tlet result;\n\tif (typeof newProperty === 'function') {\n\t\tif (newProperty._type === WIDGET_BASE_TYPE) {\n\t\t\tresult = reference(previousProperty, newProperty);\n\t\t} else {\n\t\t\tresult = ignore(previousProperty, newProperty);\n\t\t}\n\t} else if (isObjectOrArray(newProperty)) {\n\t\tresult = shallow(previousProperty, newProperty);\n\t} else {\n\t\tresult = reference(previousProperty, newProperty);\n\t}\n\treturn result;\n}\n","import { Map } from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport { Constructor, InjectorFactory, InjectorItem, RegistryLabel, WidgetBaseInterface } from './interfaces';\nimport { Registry, RegistryEventObject, RegistryItem } from './Registry';\n\nexport type RegistryHandlerEventMap = {\n\tinvalidate: EventObject<'invalidate'>;\n};\n\nexport class RegistryHandler extends Evented<RegistryHandlerEventMap> {\n\tprivate _registry = new Registry();\n\tprivate _registryWidgetLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprivate _registryInjectorLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprotected baseRegistry!: Registry;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.own(this._registry);\n\t\tconst destroy = () => {\n\t\t\tif (this.baseRegistry) {\n\t\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis.baseRegistry = undefined as any;\n\t\t\t}\n\t\t};\n\t\tthis.own({ destroy });\n\t}\n\n\tpublic set base(baseRegistry: Registry) {\n\t\tif (this.baseRegistry) {\n\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t}\n\t\tthis.baseRegistry = baseRegistry;\n\t}\n\n\tpublic get base(): Registry {\n\t\treturn this.baseRegistry;\n\t}\n\n\tpublic define(label: RegistryLabel, widget: RegistryItem): void {\n\t\tthis._registry.define(label, widget);\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injector: InjectorFactory): void {\n\t\tthis._registry.defineInjector(label, injector);\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean = false\n\t): Constructor<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel, globalPrecedence: boolean = false): InjectorItem<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n\t}\n\n\tprivate _get(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean,\n\t\tgetFunctionName: 'getInjector' | 'get',\n\t\tlabelMap: Map<Registry, RegistryLabel[]>\n\t): any {\n\t\tconst registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n\t\tfor (let i = 0; i < registries.length; i++) {\n\t\t\tconst registry: any = registries[i];\n\t\t\tif (!registry) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst item = registry[getFunctionName](label);\n\t\t\tconst registeredLabels = labelMap.get(registry) || [];\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t} else if (registeredLabels.indexOf(label) === -1) {\n\t\t\t\tconst handle = registry.on(label, (event: RegistryEventObject) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.action === 'loaded' &&\n\t\t\t\t\t\t(this as any)[getFunctionName](label, globalPrecedence) === event.item\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.emit({ type: 'invalidate' });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.own(handle);\n\t\t\t\tlabelMap.set(registry, [...registeredLabels, label]);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default RegistryHandler;\n","import global from '../shim/global';\nimport has from '../core/has';\nimport WeakMap from '../shim/WeakMap';\nimport Set from '../shim/Set';\nimport Map from '../shim/Map';\nimport {\n\tWNode,\n\tVNode,\n\tDNode,\n\tVNodeProperties,\n\tTransitionStrategy,\n\tSupportedClassName,\n\tDomVNode,\n\tLazyDefine,\n\tConstructor,\n\tRenderResult,\n\tWidgetBaseInterface,\n\tCallback,\n\tMiddlewareMap,\n\tWNodeFactory,\n\tUnionToIntersection,\n\tWidgetProperties,\n\tMiddlewareResultFactory,\n\tWidgetBaseTypes,\n\tRegistryLabel,\n\tDeferredVirtualProperties,\n\tDomOptions\n} from './interfaces';\nimport { Registry, isWidget, isWidgetBaseConstructor, isWidgetFunction, isWNodeFactory } from './Registry';\nimport { auto } from './diff';\nimport RegistryHandler from './RegistryHandler';\nimport { NodeHandler } from './NodeHandler';\n\ndeclare global {\n\tnamespace JSX {\n\t\ttype Element = WNode;\n\t\tinterface ElementAttributesProperty {\n\t\t\tproperties: {};\n\t\t}\n\t\tinterface IntrinsicElements {\n\t\t\t[key: string]: VNodeProperties;\n\t\t}\n\t}\n}\n\nexport interface BaseNodeWrapper {\n\tid: string;\n\towningId: string;\n\tnode: WNode<any> | VNode;\n\tdomNode?: Node;\n\tdepth: number;\n\torder: number;\n\trequiresInsertBefore?: boolean;\n\thasPreviousSiblings?: boolean;\n\thasParentWNode?: boolean;\n\tnamespace?: string;\n\thasAnimations?: boolean;\n\tparentId: string;\n\tchildDomWrapperId?: string;\n}\n\nexport interface WNodeWrapper extends BaseNodeWrapper {\n\tnode: WNode<any>;\n\tinstance?: any;\n\tmergeNodes?: Node[];\n\tnodeHandlerCalled?: boolean;\n\tregistryItem?: Callback<any, any, RenderResult> | Constructor<any> | null;\n\tproperties: any;\n}\n\nexport interface WidgetMeta {\n\tdirty: boolean;\n\tinvalidator: () => void;\n\tmiddleware?: any;\n\tregistryHandler?: RegistryHandler;\n\tregistry: Registry;\n\tproperties: any;\n\tchildren?: DNode[];\n\trendering: boolean;\n\tnodeMap?: Map<string | number, HTMLElement>;\n\tdestroyMap?: Map<string, () => void>;\n\tdeferRefs: number;\n\tcustomDiffProperties?: Set<string>;\n\tcustomDiffMap?: Map<string, Map<string, (current: any, next: any) => void>>;\n}\n\nexport interface WidgetData {\n\tonDetach: () => void;\n\tonAttach: () => void;\n\tdirty: boolean;\n\tnodeHandler: NodeHandler;\n\tinvalidate?: Function;\n\trendering: boolean;\n\tinputProperties: any;\n\tregistry: RegistryHandler;\n}\n\nexport interface VNodeWrapper extends BaseNodeWrapper {\n\tnode: VNode | DomVNode;\n\tmerged?: boolean;\n\tinserted?: boolean;\n\tdeferredProperties?: VNodeProperties;\n}\n\nexport type DNodeWrapper = VNodeWrapper | WNodeWrapper;\n\nexport interface MountOptions {\n\tsync: boolean;\n\tmerge: boolean;\n\ttransition?: TransitionStrategy;\n\tdomNode: HTMLElement;\n\tregistry: Registry;\n}\n\nexport interface Renderer {\n\tinvalidate(): void;\n\tmount(mountOptions?: Partial<MountOptions>): void;\n}\n\ninterface ProcessItem {\n\tcurrent?: (WNodeWrapper | VNodeWrapper)[];\n\tnext?: (WNodeWrapper | VNodeWrapper)[];\n\tmeta: ProcessMeta;\n}\n\ninterface ProcessResult {\n\titem?: ProcessItem;\n\twidget?: AttachApplication | DetachApplication;\n\tdom?: ApplicationInstruction;\n}\n\ninterface ProcessMeta {\n\tmergeNodes?: Node[];\n\toldIndex?: number;\n\tnewIndex?: number;\n}\n\ninterface InvalidationQueueItem {\n\tid: string;\n\tdepth: number;\n\torder: number;\n}\n\ninterface Instruction {\n\tcurrent: undefined | DNodeWrapper;\n\tnext: undefined | DNodeWrapper;\n}\n\ninterface CreateWidgetInstruction {\n\tnext: WNodeWrapper;\n}\n\ninterface UpdateWidgetInstruction {\n\tcurrent: WNodeWrapper;\n\tnext: WNodeWrapper;\n}\n\ninterface RemoveWidgetInstruction {\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomInstruction {\n\tnext: VNodeWrapper;\n}\n\ninterface UpdateDomInstruction {\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface RemoveDomInstruction {\n\tcurrent: VNodeWrapper;\n}\n\ninterface AttachApplication {\n\ttype: 'attach';\n\tid: string;\n\tinstance?: WidgetBaseInterface;\n\tattached?: boolean;\n}\n\ninterface DetachApplication {\n\ttype: 'detach';\n\tcurrent: WNodeWrapper;\n\tinstance?: WidgetBaseInterface;\n}\n\ninterface CreateDomApplication {\n\ttype: 'create';\n\tcurrent?: VNodeWrapper;\n\tnext: VNodeWrapper;\n\tparentDomNode: Node;\n}\n\ninterface DeleteDomApplication {\n\ttype: 'delete';\n\tcurrent: VNodeWrapper;\n}\n\ninterface UpdateDomApplication {\n\ttype: 'update';\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface PreviousProperties {\n\tproperties: any;\n\tattributes?: any;\n\tevents?: any;\n}\n\ntype ApplicationInstruction =\n\t| CreateDomApplication\n\t| UpdateDomApplication\n\t| DeleteDomApplication\n\t| Required<AttachApplication>\n\t| DetachApplication;\n\nconst EMPTY_ARRAY: DNodeWrapper[] = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\nconst WNODE = '__WNODE_TYPE';\nconst VNODE = '__VNODE_TYPE';\nconst DOMVNODE = '__DOMVNODE_TYPE';\n\nexport function isTextNode(item: any): item is Text {\n\treturn item && item.nodeType === 3;\n}\n\nfunction isLazyDefine(item: any): item is LazyDefine<any> {\n\treturn Boolean(item && item.label);\n}\n\nfunction isWNodeWrapper(child: DNodeWrapper): child is WNodeWrapper {\n\treturn child && isWNode(child.node);\n}\n\nfunction isVNodeWrapper(child?: DNodeWrapper | null): child is VNodeWrapper {\n\treturn !!child && isVNode(child.node);\n}\n\nfunction isVirtualWrapper(child?: DNodeWrapper | null): boolean {\n\treturn isVNodeWrapper(child) && child.node.tag === 'virtual';\n}\n\nfunction isBodyWrapper(wrapper?: DNodeWrapper): boolean {\n\treturn isVNodeWrapper(wrapper) && wrapper.node.tag === 'body';\n}\n\nfunction isAttachApplication(value: any): value is AttachApplication | DetachApplication {\n\treturn !!value.type;\n}\n\nexport function isWNode<W extends WidgetBaseTypes = any>(child: any): child is WNode<W> {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === WNODE);\n}\n\nexport function isVNode(child: DNode): child is VNode {\n\treturn Boolean(\n\t\tchild && child !== true && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE)\n\t);\n}\n\nexport function isDomVNode(child: DNode): child is DomVNode {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === DOMVNODE);\n}\n\nexport function isElementNode(value: any): value is Element {\n\treturn !!value.tagName;\n}\n\nfunction toTextVNode(data: any): VNode {\n\treturn {\n\t\ttag: '',\n\t\tproperties: {},\n\t\tchildren: undefined,\n\t\ttext: `${data}`,\n\t\ttype: VNODE\n\t};\n}\n\nfunction updateAttributes(\n\tdomNode: Element,\n\tpreviousAttributes: { [index: string]: string | undefined },\n\tattributes: { [index: string]: string | undefined },\n\tnamespace?: string\n) {\n\tconst attrNames = Object.keys(attributes);\n\tconst attrCount = attrNames.length;\n\tfor (let i = 0; i < attrCount; i++) {\n\t\tconst attrName = attrNames[i];\n\t\tconst attrValue = attributes[attrName];\n\t\tconst previousAttrValue = previousAttributes[attrName];\n\t\tif (attrValue !== previousAttrValue) {\n\t\t\tupdateAttribute(domNode, attrName, attrValue, namespace);\n\t\t}\n\t}\n}\n\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w<W extends WidgetBaseTypes>(\n\tnode: WNode<W>,\n\tproperties: Partial<W['properties']>,\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseTypes>(\n\twidgetConstructor: Constructor<W> | RegistryLabel | WNodeFactory<W> | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseTypes>(\n\twidgetConstructorOrNode:\n\t\t| Constructor<W>\n\t\t| RegistryLabel\n\t\t| WNodeFactory<W>\n\t\t| WNode<W>\n\t\t| LazyDefine<W>\n\t\t| Callback<any, any, RenderResult>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W> {\n\tif (isWNodeFactory<W>(widgetConstructorOrNode)) {\n\t\treturn widgetConstructorOrNode(properties, children);\n\t}\n\n\tif (isWNode<W>(widgetConstructorOrNode)) {\n\t\tproperties = { ...(widgetConstructorOrNode.properties as any), ...(properties as any) };\n\t\tchildren = children ? children : widgetConstructorOrNode.children;\n\t\twidgetConstructorOrNode = widgetConstructorOrNode.widgetConstructor;\n\t}\n\n\treturn {\n\t\tchildren: children || [],\n\t\twidgetConstructor: widgetConstructorOrNode,\n\t\tproperties,\n\t\ttype: WNODE\n\t};\n}\n\n/**\n * Wrapper function for calls to create VNodes.\n */\nexport function v(node: VNode, properties: VNodeProperties, children: undefined | DNode[]): VNode;\nexport function v(node: VNode, properties: VNodeProperties): VNode;\nexport function v(tag: string, children: undefined | DNode[]): VNode;\nexport function v<K extends keyof HTMLElementTagNameMap>(\n\ttag: K,\n\tproperties: DeferredVirtualProperties | VNodeProperties<HTMLElementTagNameMap[K]>,\n\tchildren?: DNode[]\n): VNode;\nexport function v(tag: string, properties: DeferredVirtualProperties | VNodeProperties, children?: DNode[]): VNode;\nexport function v(tag: string): VNode;\nexport function v(\n\ttag: string | VNode,\n\tpropertiesOrChildren: VNodeProperties | DeferredVirtualProperties | DNode[] = {},\n\tchildren: undefined | DNode[] = undefined\n): VNode {\n\tlet properties: VNodeProperties | DeferredVirtualProperties = propertiesOrChildren;\n\tlet deferredPropertiesCallback;\n\n\tif (Array.isArray(propertiesOrChildren)) {\n\t\tchildren = propertiesOrChildren;\n\t\tproperties = {};\n\t}\n\n\tif (typeof properties === 'function') {\n\t\tdeferredPropertiesCallback = properties;\n\t\tproperties = {};\n\t}\n\n\tif (isVNode(tag)) {\n\t\tlet { classes = [], styles = {}, ...newProperties } = properties;\n\t\tlet { classes: nodeClasses = [], styles: nodeStyles = {}, ...nodeProperties } = tag.properties;\n\t\tnodeClasses = Array.isArray(nodeClasses) ? nodeClasses : [nodeClasses];\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tstyles = { ...nodeStyles, ...styles };\n\t\tproperties = { ...nodeProperties, ...newProperties, classes: [...nodeClasses, ...classes], styles };\n\t\tchildren = children ? children : tag.children;\n\t\ttag = tag.tag;\n\t}\n\n\treturn {\n\t\ttag,\n\t\tdeferredPropertiesCallback,\n\t\tchildren,\n\t\tproperties,\n\t\ttype: VNODE\n\t};\n}\n\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom(\n\t{ node, attrs = {}, props = {}, on = {}, diffType = 'none', onAttach }: DomOptions,\n\tchildren?: DNode[]\n): DomVNode {\n\treturn {\n\t\ttag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n\t\tproperties: props,\n\t\tattributes: attrs,\n\t\tevents: on,\n\t\tchildren,\n\t\ttype: DOMVNODE,\n\t\tdomNode: node,\n\t\ttext: isElementNode(node) ? undefined : node.data,\n\t\tdiffType,\n\t\tonAttach\n\t};\n}\n\nexport const REGISTRY_ITEM = '__registry_item';\n\nexport class FromRegistry<P> {\n\tstatic type = REGISTRY_ITEM;\n\tproperties: P = {} as P;\n\tname: string | undefined;\n}\n\nexport function fromRegistry<P>(tag: string): Constructor<FromRegistry<P>> {\n\treturn class extends FromRegistry<P> {\n\t\tproperties: P = {} as P;\n\t\tstatic type = REGISTRY_ITEM;\n\t\tname = tag;\n\t};\n}\n\nfunction spreadChildren(children: any[], child: any): any[] {\n\tif (Array.isArray(child)) {\n\t\treturn child.reduce(spreadChildren, children);\n\t} else {\n\t\treturn [...children, child];\n\t}\n}\n\nexport function tsx(tag: any, properties = {}, ...children: any[]): DNode {\n\tchildren = children.reduce(spreadChildren, []);\n\tproperties = properties === null ? {} : properties;\n\tif (typeof tag === 'string') {\n\t\treturn v(tag, properties, children);\n\t} else if (tag.type === 'registry' && (properties as any).__autoRegistryItem) {\n\t\tconst name = (properties as any).__autoRegistryItem;\n\t\tdelete (properties as any).__autoRegistryItem;\n\t\treturn w(name, properties, children);\n\t} else if (tag.type === REGISTRY_ITEM) {\n\t\tconst registryItem = new tag();\n\t\treturn w(registryItem.name, properties, children);\n\t} else {\n\t\treturn w(tag, properties, children);\n\t}\n}\n\nexport function propertiesDiff(current: any, next: any, invalidator: () => void, ignoreProperties: string[]) {\n\tconst propertyNames = [...Object.keys(current), ...Object.keys(next)];\n\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\tif (ignoreProperties.indexOf(propertyNames[i]) > -1) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst result = auto(current[propertyNames[i]], next[propertyNames[i]]);\n\t\tif (result.changed) {\n\t\t\tinvalidator();\n\t\t\tbreak;\n\t\t}\n\t\tignoreProperties.push(propertyNames[i]);\n\t}\n}\n\nfunction buildPreviousProperties(domNode: any, current: VNodeWrapper) {\n\tconst {\n\t\tnode: { diffType, properties, attributes }\n\t} = current;\n\tif (!diffType || diffType === 'vdom') {\n\t\treturn {\n\t\t\tproperties: current.deferredProperties\n\t\t\t\t? { ...current.deferredProperties, ...current.node.properties }\n\t\t\t\t: current.node.properties,\n\t\t\tattributes: current.node.attributes,\n\t\t\tevents: current.node.events\n\t\t};\n\t} else if (diffType === 'none') {\n\t\treturn {\n\t\t\tproperties: {},\n\t\t\tattributes: current.node.attributes ? {} : undefined,\n\t\t\tevents: current.node.events\n\t\t};\n\t}\n\tlet newProperties: any = {\n\t\tproperties: {}\n\t};\n\tif (attributes) {\n\t\tnewProperties.attributes = {};\n\t\tnewProperties.events = current.node.events;\n\t\tObject.keys(properties).forEach((propName) => {\n\t\t\tnewProperties.properties[propName] = domNode[propName];\n\t\t});\n\t\tObject.keys(attributes).forEach((attrName) => {\n\t\t\tnewProperties.attributes[attrName] = domNode.getAttribute(attrName);\n\t\t});\n\t\treturn newProperties;\n\t}\n\tnewProperties.properties = Object.keys(properties).reduce(\n\t\t(props, property) => {\n\t\t\tprops[property] = domNode.getAttribute(property) || domNode[property];\n\t\t\treturn props;\n\t\t},\n\t\t{} as any\n\t);\n\treturn newProperties;\n}\n\nfunction checkDistinguishable(wrappers: DNodeWrapper[], index: number, parentWNodeWrapper?: WNodeWrapper) {\n\tconst wrapperToCheck = wrappers[index];\n\tif (isVNodeWrapper(wrapperToCheck) && !wrapperToCheck.node.tag) {\n\t\treturn;\n\t}\n\tconst { key } = wrapperToCheck.node.properties;\n\tlet parentName = 'unknown';\n\tif (parentWNodeWrapper) {\n\t\tconst {\n\t\t\tnode: { widgetConstructor }\n\t\t} = parentWNodeWrapper;\n\t\tparentName = (widgetConstructor as any).name || 'unknown';\n\t}\n\n\tif (key === undefined || key === null) {\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tif (i !== index) {\n\t\t\t\tconst wrapper = wrappers[i];\n\t\t\t\tif (same(wrapper, wrapperToCheck)) {\n\t\t\t\t\tlet nodeIdentifier: string;\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\tnodeIdentifier = (wrapper.node.widgetConstructor as any).name || 'unknown';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodeIdentifier = wrapper.node.tag;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`A widget (${parentName}) has had a child added or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction same(dnode1: DNodeWrapper, dnode2: DNodeWrapper): boolean {\n\tif (isVNodeWrapper(dnode1) && isVNodeWrapper(dnode2)) {\n\t\tif (isDomVNode(dnode1.node) && isDomVNode(dnode2.node)) {\n\t\t\tif (dnode1.node.domNode !== dnode2.node.domNode) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (dnode1.node.tag !== dnode2.node.tag) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t} else if (isWNodeWrapper(dnode1) && isWNodeWrapper(dnode2)) {\n\t\tconst widgetConstructor1 = dnode1.registryItem || dnode1.node.widgetConstructor;\n\t\tconst widgetConstructor2 = dnode2.registryItem || dnode2.node.widgetConstructor;\n\t\tif (dnode1.instance === undefined && typeof widgetConstructor2 === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (widgetConstructor1 !== widgetConstructor2) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction findIndexOfChild(children: DNodeWrapper[], sameAs: DNodeWrapper, start: number) {\n\tfor (let i = start; i < children.length; i++) {\n\t\tif (same(children[i], sameAs)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction createClassPropValue(classes: SupportedClassName | SupportedClassName[] = []) {\n\tlet classNames = '';\n\tif (Array.isArray(classes)) {\n\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\tlet className = classes[i];\n\t\t\tif (className && className !== true) {\n\t\t\t\tclassNames = classNames ? `${classNames} ${className}` : className;\n\t\t\t}\n\t\t}\n\t\treturn classNames;\n\t}\n\tif (classes && classes !== true) {\n\t\tclassNames = classes;\n\t}\n\treturn classNames;\n}\n\nfunction updateAttribute(domNode: Element, attrName: string, attrValue: string | undefined, namespace?: string) {\n\tif (namespace === NAMESPACE_SVG && attrName === 'href' && attrValue) {\n\t\tdomNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n\t} else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n\t\tdomNode.removeAttribute(attrName);\n\t} else {\n\t\tdomNode.setAttribute(attrName, attrValue);\n\t}\n}\n\nfunction arrayFrom(arr: any) {\n\treturn Array.prototype.slice.call(arr);\n}\n\nfunction createFactory(callback: any, middlewares: any): any {\n\tconst factory = (properties: any, children?: any) => {\n\t\tif (properties) {\n\t\t\tconst result = w(callback, properties, children);\n\t\t\tcallback.isWidget = true;\n\t\t\tcallback.middlewares = middlewares;\n\t\t\treturn result;\n\t\t}\n\t\treturn {\n\t\t\tmiddlewares,\n\t\t\tcallback\n\t\t};\n\t};\n\tfactory.isFactory = true;\n\treturn factory;\n}\n\nexport function create<T extends MiddlewareMap, MiddlewareProps = ReturnType<T[keyof T]>['properties']>(\n\tmiddlewares: T = {} as T\n) {\n\tfunction properties<Props extends {}>() {\n\t\tfunction returns<ReturnValue>(\n\t\t\tcallback: Callback<WidgetProperties & Props & UnionToIntersection<MiddlewareProps>, T, ReturnValue>\n\t\t): ReturnValue extends RenderResult\n\t\t\t? WNodeFactory<{\n\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\tchildren: DNode[];\n\t\t\t  }>\n\t\t\t: MiddlewareResultFactory<WidgetProperties & Props & UnionToIntersection<MiddlewareProps>, T, ReturnValue> {\n\t\t\treturn createFactory(callback, middlewares);\n\t\t}\n\t\treturn returns;\n\t}\n\n\tfunction returns<ReturnValue>(\n\t\tcallback: Callback<WidgetProperties & UnionToIntersection<MiddlewareProps>, T, ReturnValue>\n\t): ReturnValue extends RenderResult\n\t\t? WNodeFactory<{\n\t\t\t\tproperties: WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\tchildren: DNode[];\n\t\t  }>\n\t\t: MiddlewareResultFactory<WidgetProperties & UnionToIntersection<MiddlewareProps>, T, ReturnValue> {\n\t\treturn createFactory(callback, middlewares);\n\t}\n\treturns.properties = properties;\n\treturn returns;\n}\n\nconst factory = create();\n\nfunction wrapNodes(renderer: () => RenderResult) {\n\tconst result = renderer();\n\tconst isWNodeWrapper = isWNode(result);\n\tconst callback = () => {\n\t\treturn result;\n\t};\n\tcallback.isWNodeWrapper = isWNodeWrapper;\n\treturn factory(callback);\n}\n\nexport const widgetInstanceMap = new WeakMap<WidgetBaseInterface, WidgetData>();\nconst widgetMetaMap = new Map<string, WidgetMeta>();\nconst requestedDomNodes = new Set();\nlet wrapperId = 0;\nlet metaId = 0;\n\nfunction addNodeToMap(id: string, key: string | number, node: HTMLElement) {\n\tconst widgetMeta = widgetMetaMap.get(id);\n\tif (widgetMeta) {\n\t\twidgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n\t\tconst existingNode = widgetMeta.nodeMap.get(key);\n\t\tif (!existingNode) {\n\t\t\twidgetMeta.nodeMap.set(key, node);\n\t\t}\n\t\tif (requestedDomNodes.has(`${id}-${key}`)) {\n\t\t\twidgetMeta.invalidator();\n\t\t\trequestedDomNodes.delete(`${id}-${key}`);\n\t\t}\n\t}\n}\n\nfunction destroyHandles(destroyMap: Map<string, () => void>) {\n\tdestroyMap.forEach((destroy) => destroy());\n\tdestroyMap.clear();\n}\n\nfunction runDiffs(meta: WidgetMeta, current: any, next: any) {\n\tmeta.customDiffMap = meta.customDiffMap || new Map();\n\tif (meta.customDiffMap.size) {\n\t\tmeta.customDiffMap.forEach((diffMap) => {\n\t\t\tdiffMap.forEach((diff) => diff({ ...current }, { ...next }));\n\t\t});\n\t}\n}\n\nexport const invalidator = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\treturn () => {\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\treturn widgetMeta.invalidator();\n\t\t}\n\t};\n});\n\nexport const node = factory(({ id }) => {\n\treturn {\n\t\tget(key: string | number): HTMLElement | null {\n\t\t\tconst [widgetId] = id.split('-');\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n\t\t\t\tconst node = widgetMeta.nodeMap.get(key);\n\t\t\t\tif (node) {\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t\trequestedDomNodes.add(`${widgetId}-${key}`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n});\n\nexport const diffProperty = factory(({ id }) => {\n\treturn (propertyName: string, diff: (current: any, next: any) => void) => {\n\t\tconst [widgetId] = id.split('-');\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\twidgetMeta.customDiffMap = widgetMeta.customDiffMap || new Map();\n\t\t\twidgetMeta.customDiffProperties = widgetMeta.customDiffProperties || new Set();\n\t\t\tconst propertyDiffMap = widgetMeta.customDiffMap.get(id) || new Map();\n\t\t\tif (!propertyDiffMap.has(propertyName)) {\n\t\t\t\tpropertyDiffMap.set(propertyName, diff);\n\t\t\t\twidgetMeta.customDiffProperties.add(propertyName);\n\t\t\t}\n\t\t\twidgetMeta.customDiffMap.set(id, propertyDiffMap);\n\t\t}\n\t};\n});\n\nexport const destroy = factory(({ id }) => {\n\treturn (destroyFunction: () => void): void => {\n\t\tconst [widgetId] = id.split('-');\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\twidgetMeta.destroyMap = widgetMeta.destroyMap || new Map();\n\t\t\tif (!widgetMeta.destroyMap.has(id)) {\n\t\t\t\twidgetMeta.destroyMap.set(id, destroyFunction);\n\t\t\t}\n\t\t}\n\t};\n});\n\nexport const getRegistry = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\treturn (): RegistryHandler | null => {\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\tif (!widgetMeta.registryHandler) {\n\t\t\t\twidgetMeta.registryHandler = new RegistryHandler();\n\t\t\t\twidgetMeta.registryHandler.base = widgetMeta.registry;\n\t\t\t\twidgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n\t\t\t}\n\t\t\twidgetMeta.registryHandler = widgetMeta.registryHandler || new RegistryHandler();\n\t\t\treturn widgetMeta.registryHandler;\n\t\t}\n\t\treturn null;\n\t};\n});\n\nexport const defer = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\tlet isDeferred = false;\n\treturn {\n\t\tpause() {\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (!isDeferred && widgetMeta) {\n\t\t\t\twidgetMeta.deferRefs = widgetMeta.deferRefs + 1;\n\t\t\t\tisDeferred = true;\n\t\t\t}\n\t\t},\n\t\tresume() {\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (isDeferred && widgetMeta) {\n\t\t\t\twidgetMeta.deferRefs = widgetMeta.deferRefs - 1;\n\t\t\t\tisDeferred = false;\n\t\t\t}\n\t\t}\n\t};\n});\n\nexport function renderer(renderer: () => RenderResult): Renderer {\n\tlet _mountOptions: MountOptions = {\n\t\tsync: false,\n\t\tmerge: true,\n\t\ttransition: undefined,\n\t\tdomNode: global.document.body,\n\t\tregistry: new Registry()\n\t};\n\tlet _invalidationQueue: InvalidationQueueItem[] = [];\n\tlet _processQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _deferredProcessQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _applicationQueue: ApplicationInstruction[] = [];\n\tlet _eventMap = new WeakMap<Function, EventListener>();\n\tlet _idToWrapperMap = new Map<string, DNodeWrapper>();\n\tlet _wrapperSiblingMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _idToChildrenWrappers = new Map<string, DNodeWrapper[]>();\n\tlet _insertBeforeMap: undefined | WeakMap<DNodeWrapper, Node> = new WeakMap<DNodeWrapper, Node>();\n\tlet _nodeToWrapperMap = new WeakMap<VNode | WNode<any>, WNodeWrapper>();\n\tlet _renderScheduled: number | undefined;\n\tlet _idleCallbacks: Function[] = [];\n\tlet _deferredRenderCallbacks: Function[] = [];\n\tlet parentInvalidate: () => void;\n\tlet _allMergedNodes: Node[] = [];\n\n\tfunction nodeOperation(\n\t\tpropName: string,\n\t\tpropValue: (() => boolean) | boolean,\n\t\tpreviousValue: boolean,\n\t\tdomNode: HTMLElement & { [index: string]: any }\n\t): void {\n\t\tlet result = propValue && !previousValue;\n\t\tif (typeof propValue === 'function') {\n\t\t\tresult = propValue();\n\t\t}\n\t\tif (result === true) {\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tdomNode[propName]();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction updateEvent(\n\t\tdomNode: Node,\n\t\teventName: string,\n\t\tcurrentValue: (event: Event) => void,\n\t\tpreviousValue?: Function\n\t) {\n\t\tif (previousValue) {\n\t\t\tconst previousEvent = _eventMap.get(previousValue);\n\t\t\tpreviousEvent && domNode.removeEventListener(eventName, previousEvent);\n\t\t}\n\n\t\tlet callback = currentValue;\n\n\t\tif (eventName === 'input') {\n\t\t\tcallback = function(this: any, evt: Event) {\n\t\t\t\tcurrentValue.call(this, evt);\n\t\t\t\t(evt.target as any)['oninput-value'] = (evt.target as HTMLInputElement).value;\n\t\t\t};\n\t\t}\n\n\t\tdomNode.addEventListener(eventName, callback);\n\t\t_eventMap.set(currentValue, callback);\n\t}\n\n\tfunction removeOrphanedEvents(\n\t\tdomNode: Element,\n\t\tpreviousProperties: VNodeProperties,\n\t\tproperties: VNodeProperties,\n\t\tonlyEvents: boolean = false\n\t) {\n\t\tObject.keys(previousProperties).forEach((propName) => {\n\t\t\tconst isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n\t\t\tconst eventName = onlyEvents ? propName : propName.substr(2);\n\t\t\tif (isEvent && !properties[propName]) {\n\t\t\t\tconst eventCallback = _eventMap.get(previousProperties[propName]);\n\t\t\t\tif (eventCallback) {\n\t\t\t\t\tdomNode.removeEventListener(eventName, eventCallback);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction resolveRegistryItem(wrapper: WNodeWrapper, instance?: any, id?: string) {\n\t\tif (!isWidget(wrapper.node.widgetConstructor)) {\n\t\t\tconst owningNode = _nodeToWrapperMap.get(wrapper.node);\n\t\t\tif (owningNode) {\n\t\t\t\tif (owningNode.instance) {\n\t\t\t\t\tinstance = owningNode.instance;\n\t\t\t\t} else {\n\t\t\t\t\tid = owningNode.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet registry: RegistryHandler | undefined;\n\t\t\tif (instance) {\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance);\n\t\t\t\tif (instanceData) {\n\t\t\t\t\tregistry = instanceData.registry;\n\t\t\t\t}\n\t\t\t} else if (id !== undefined) {\n\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\tif (widgetMeta) {\n\t\t\t\t\tif (!widgetMeta.registryHandler) {\n\t\t\t\t\t\twidgetMeta.registryHandler = new RegistryHandler();\n\t\t\t\t\t\twidgetMeta.registryHandler.base = widgetMeta.registry;\n\t\t\t\t\t\twidgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n\t\t\t\t\t}\n\t\t\t\t\tregistry = widgetMeta.registryHandler;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (registry) {\n\t\t\t\tlet registryLabel: symbol | string;\n\t\t\t\tif (isLazyDefine(wrapper.node.widgetConstructor)) {\n\t\t\t\t\tconst { label, registryItem } = wrapper.node.widgetConstructor;\n\t\t\t\t\tif (!registry.has(label)) {\n\t\t\t\t\t\tregistry.define(label, registryItem);\n\t\t\t\t\t}\n\t\t\t\t\tregistryLabel = label;\n\t\t\t\t} else {\n\t\t\t\t\tregistryLabel = wrapper.node.widgetConstructor as any;\n\t\t\t\t}\n\t\t\t\tlet item = registry.get(registryLabel) as any;\n\t\t\t\tif (isWNodeFactory(item)) {\n\t\t\t\t\tconst node = item(wrapper.node.properties, wrapper.node.children);\n\t\t\t\t\tif (isWidgetFunction(node.widgetConstructor)) {\n\t\t\t\t\t\twrapper.registryItem = node.widgetConstructor;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twrapper.registryItem = item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction mapNodeToInstance(nodes: DNode[], wrapper: WNodeWrapper) {\n\t\twhile (nodes.length) {\n\t\t\tlet node = nodes.pop();\n\t\t\tif (isWNode(node) || isVNode(node)) {\n\t\t\t\tif (!_nodeToWrapperMap.has(node)) {\n\t\t\t\t\t_nodeToWrapperMap.set(node, wrapper);\n\t\t\t\t\tif (node.children && node.children.length) {\n\t\t\t\t\t\tnodes = [...nodes, ...node.children];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction renderedToWrapper(\n\t\trendered: DNode[],\n\t\tparent: DNodeWrapper,\n\t\tcurrentParent: DNodeWrapper | null\n\t): DNodeWrapper[] {\n\t\tconst { requiresInsertBefore, hasPreviousSiblings, namespace, depth } = parent;\n\t\tconst wrappedRendered: DNodeWrapper[] = [];\n\t\tconst hasParentWNode = isWNodeWrapper(parent);\n\t\tconst hasVirtualParentNode = isVirtualWrapper(parent);\n\t\tconst currentParentChildren =\n\t\t\t(isVNodeWrapper(currentParent) && _idToChildrenWrappers.get(currentParent.id)) || [];\n\t\tconst hasCurrentParentChildren = currentParentChildren.length > 0;\n\t\tconst insertBefore =\n\t\t\t((requiresInsertBefore || hasPreviousSiblings !== false) && (hasParentWNode || hasVirtualParentNode)) ||\n\t\t\t(hasCurrentParentChildren && rendered.length > 1);\n\t\tlet previousItem: DNodeWrapper | undefined;\n\t\tif (isWNodeWrapper(parent) && rendered.length) {\n\t\t\tmapNodeToInstance([...rendered], parent);\n\t\t}\n\t\tfor (let i = 0; i < rendered.length; i++) {\n\t\t\tlet renderedItem = rendered[i];\n\t\t\tif (!renderedItem || renderedItem === true) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof renderedItem === 'string') {\n\t\t\t\trenderedItem = toTextVNode(renderedItem);\n\t\t\t}\n\t\t\tconst owningNode = _nodeToWrapperMap.get(renderedItem);\n\t\t\tconst wrapper: DNodeWrapper = {\n\t\t\t\tnode: renderedItem,\n\t\t\t\tdepth: depth + 1,\n\t\t\t\torder: i,\n\t\t\t\tparentId: parent.id,\n\t\t\t\trequiresInsertBefore: insertBefore,\n\t\t\t\thasParentWNode,\n\t\t\t\tnamespace: namespace\n\t\t\t} as DNodeWrapper;\n\t\t\tif (isVNode(renderedItem)) {\n\t\t\t\tif (renderedItem.deferredPropertiesCallback) {\n\t\t\t\t\t(wrapper as VNodeWrapper).deferredProperties = renderedItem.deferredPropertiesCallback(false);\n\t\t\t\t}\n\t\t\t\tif (renderedItem.properties.exitAnimation) {\n\t\t\t\t\tparent.hasAnimations = true;\n\t\t\t\t\tlet nextParent = _idToWrapperMap.get(parent.parentId);\n\t\t\t\t\twhile (nextParent) {\n\t\t\t\t\t\tif (nextParent.hasAnimations) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextParent.hasAnimations = true;\n\t\t\t\t\t\tnextParent = _idToWrapperMap.get(nextParent.parentId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (owningNode) {\n\t\t\t\twrapper.owningId = owningNode.id;\n\t\t\t}\n\t\t\tif (isWNode(renderedItem)) {\n\t\t\t\tresolveRegistryItem(wrapper as WNodeWrapper, (parent as any).instance, (parent as any).id);\n\t\t\t}\n\t\t\tif (previousItem) {\n\t\t\t\t_wrapperSiblingMap.set(previousItem, wrapper);\n\t\t\t}\n\t\t\twrappedRendered.push(wrapper);\n\t\t\tpreviousItem = wrapper;\n\t\t}\n\t\treturn wrappedRendered;\n\t}\n\n\tfunction findParentDomNode(currentNode: DNodeWrapper): Node | undefined {\n\t\tlet parentDomNode: Node | undefined;\n\t\tlet parentWrapper = _idToWrapperMap.get(currentNode.parentId);\n\n\t\twhile (!parentDomNode && parentWrapper) {\n\t\t\tif (\n\t\t\t\t!parentDomNode &&\n\t\t\t\tisVNodeWrapper(parentWrapper) &&\n\t\t\t\t!isVirtualWrapper(parentWrapper) &&\n\t\t\t\tparentWrapper.domNode\n\t\t\t) {\n\t\t\t\tparentDomNode = parentWrapper.domNode;\n\t\t\t}\n\t\t\tparentWrapper = _idToWrapperMap.get(parentWrapper.parentId);\n\t\t}\n\t\treturn parentDomNode;\n\t}\n\n\tfunction runDeferredProperties(next: VNodeWrapper) {\n\t\tconst { deferredPropertiesCallback } = next.node;\n\t\tif (deferredPropertiesCallback) {\n\t\t\tconst properties = next.node.properties;\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tif (_idToWrapperMap.has(next.owningId)) {\n\t\t\t\t\tconst deferredProperties = next.deferredProperties;\n\t\t\t\t\tnext.deferredProperties = deferredPropertiesCallback(true);\n\t\t\t\t\tprocessProperties(next, {\n\t\t\t\t\t\tproperties: { ...deferredProperties, ...properties }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction findInsertBefore(next: DNodeWrapper) {\n\t\tlet insertBefore: Node | null = null;\n\t\tlet searchNode: DNodeWrapper | undefined = next;\n\t\twhile (!insertBefore) {\n\t\t\tconst nextSibling = _wrapperSiblingMap.get(searchNode);\n\t\t\tif (nextSibling) {\n\t\t\t\tlet domNode = nextSibling.domNode;\n\t\t\t\tif ((isWNodeWrapper(nextSibling) || isVirtualWrapper(nextSibling)) && nextSibling.childDomWrapperId) {\n\t\t\t\t\tconst childWrapper = _idToWrapperMap.get(nextSibling.childDomWrapperId);\n\t\t\t\t\tif (childWrapper) {\n\t\t\t\t\t\tdomNode = childWrapper.domNode;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (domNode && domNode.parentNode) {\n\t\t\t\t\tinsertBefore = domNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsearchNode = nextSibling;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsearchNode = searchNode && _idToWrapperMap.get(searchNode.parentId);\n\t\t\tif (!searchNode || (isVNodeWrapper(searchNode) && !isVirtualWrapper(searchNode))) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn insertBefore;\n\t}\n\n\tfunction setValue(domNode: any, propValue?: any, previousValue?: any) {\n\t\tconst domValue = domNode.value;\n\t\tconst onInputValue = domNode['oninput-value'];\n\t\tconst onSelectValue = domNode['select-value'];\n\n\t\tif (onSelectValue && domValue !== onSelectValue) {\n\t\t\tdomNode.value = onSelectValue;\n\t\t\tif (domNode.value === onSelectValue) {\n\t\t\t\tdomNode['select-value'] = undefined;\n\t\t\t}\n\t\t} else if ((onInputValue && domValue === onInputValue) || propValue !== previousValue) {\n\t\t\tdomNode.value = propValue;\n\t\t\tdomNode['oninput-value'] = undefined;\n\t\t}\n\t}\n\n\tfunction setProperties(\n\t\tdomNode: HTMLElement,\n\t\tcurrentProperties: VNodeProperties = {},\n\t\tnextWrapper: VNodeWrapper,\n\t\tincludesEventsAndAttributes = true\n\t): void {\n\t\tconst properties = nextWrapper.deferredProperties\n\t\t\t? { ...nextWrapper.deferredProperties, ...nextWrapper.node.properties }\n\t\t\t: nextWrapper.node.properties;\n\t\tconst propNames = Object.keys(properties);\n\t\tconst propCount = propNames.length;\n\t\tif (propNames.indexOf('classes') === -1 && currentProperties.classes) {\n\t\t\tdomNode.removeAttribute('class');\n\t\t}\n\n\t\tincludesEventsAndAttributes && removeOrphanedEvents(domNode, currentProperties, properties);\n\n\t\tfor (let i = 0; i < propCount; i++) {\n\t\t\tconst propName = propNames[i];\n\t\t\tlet propValue = properties[propName];\n\t\t\tconst previousValue = currentProperties[propName];\n\t\t\tif (propName === 'classes') {\n\t\t\t\tconst previousClassString = createClassPropValue(previousValue);\n\t\t\t\tlet currentClassString = createClassPropValue(propValue);\n\t\t\t\tif (previousClassString !== currentClassString) {\n\t\t\t\t\tif (currentClassString) {\n\t\t\t\t\t\tif (nextWrapper.merged) {\n\t\t\t\t\t\t\tconst domClasses = (domNode.getAttribute('class') || '').split(' ');\n\t\t\t\t\t\t\tfor (let i = 0; i < domClasses.length; i++) {\n\t\t\t\t\t\t\t\tif (currentClassString.indexOf(domClasses[i]) === -1) {\n\t\t\t\t\t\t\t\t\tcurrentClassString = `${domClasses[i]} ${currentClassString}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdomNode.setAttribute('class', currentClassString);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdomNode.removeAttribute('class');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (nodeOperations.indexOf(propName) !== -1) {\n\t\t\t\tnodeOperation(propName, propValue, previousValue, domNode);\n\t\t\t} else if (propName === 'styles') {\n\t\t\t\tconst styleNames = Object.keys(propValue);\n\t\t\t\tconst styleCount = styleNames.length;\n\t\t\t\tfor (let j = 0; j < styleCount; j++) {\n\t\t\t\t\tconst styleName = styleNames[j];\n\t\t\t\t\tconst newStyleValue = propValue[styleName];\n\t\t\t\t\tconst oldStyleValue = previousValue && previousValue[styleName];\n\t\t\t\t\tif (newStyleValue === oldStyleValue) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t(domNode.style as any)[styleName] = newStyleValue || '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!propValue && typeof previousValue === 'string') {\n\t\t\t\t\tpropValue = '';\n\t\t\t\t}\n\t\t\t\tif (propName === 'value') {\n\t\t\t\t\tif ((domNode as HTMLElement).tagName === 'SELECT') {\n\t\t\t\t\t\t(domNode as any)['select-value'] = propValue;\n\t\t\t\t\t}\n\t\t\t\t\tsetValue(domNode, propValue, previousValue);\n\t\t\t\t} else if (propName !== 'key' && propValue !== previousValue) {\n\t\t\t\t\tconst type = typeof propValue;\n\t\t\t\t\tif (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateEvent(domNode, propName.substr(2), propValue, previousValue);\n\t\t\t\t\t} else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateAttribute(domNode, propName, propValue, nextWrapper.namespace);\n\t\t\t\t\t} else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n\t\t\t\t\t\tif ((domNode as any)[propName] !== propValue) {\n\t\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runDeferredRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _deferredRenderCallbacks;\n\t\t_deferredRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tglobal.requestAnimationFrame(run);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runAfterRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _idleCallbacks;\n\t\t_idleCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tif (global.requestIdleCallback) {\n\t\t\t\t\tglobal.requestIdleCallback(run);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(run);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction processProperties(next: VNodeWrapper, previousProperties: PreviousProperties) {\n\t\tif (next.node.attributes && next.node.events) {\n\t\t\tupdateAttributes(\n\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\tpreviousProperties.attributes || {},\n\t\t\t\tnext.node.attributes,\n\t\t\t\tnext.namespace\n\t\t\t);\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next, false);\n\t\t\tconst events = next.node.events || {};\n\t\t\tif (previousProperties.events) {\n\t\t\t\tremoveOrphanedEvents(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tpreviousProperties.events || {},\n\t\t\t\t\tnext.node.events,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t\tpreviousProperties.events = previousProperties.events || {};\n\t\t\tObject.keys(events).forEach((event) => {\n\t\t\t\tupdateEvent(next.domNode as HTMLElement, event, events[event], previousProperties.events[event]);\n\t\t\t});\n\t\t} else {\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next);\n\t\t}\n\t}\n\n\tfunction mount(mountOptions: Partial<MountOptions> = {}) {\n\t\t_mountOptions = { ..._mountOptions, ...mountOptions };\n\t\tconst { domNode } = _mountOptions;\n\t\tconst renderResult = wrapNodes(renderer)({});\n\t\tconst nextWrapper = {\n\t\t\tid: `${wrapperId++}`,\n\t\t\tnode: renderResult,\n\t\t\torder: 0,\n\t\t\tdepth: 1,\n\t\t\towningId: '-1',\n\t\t\tparentId: '-1',\n\t\t\tsiblingId: '-1',\n\t\t\tproperties: {}\n\t\t};\n\t\t_idToWrapperMap.set('-1', {\n\t\t\tid: `-1`,\n\t\t\tdepth: 0,\n\t\t\torder: 0,\n\t\t\towningId: '',\n\t\t\tdomNode,\n\t\t\tnode: v('fake'),\n\t\t\tparentId: '-1'\n\t\t});\n\t\t_processQueue.push({\n\t\t\tcurrent: [],\n\t\t\tnext: [nextWrapper],\n\t\t\tmeta: { mergeNodes: arrayFrom(domNode.childNodes) }\n\t\t});\n\t\t_runProcessQueue();\n\t\t_runDomInstructionQueue();\n\t\t_cleanUpMergedNodes();\n\t\t_insertBeforeMap = undefined;\n\t\t_runCallbacks();\n\t}\n\n\tfunction invalidate() {\n\t\tparentInvalidate && parentInvalidate();\n\t}\n\n\tfunction _schedule(): void {\n\t\tconst { sync } = _mountOptions;\n\t\tif (sync) {\n\t\t\t_runInvalidationQueue();\n\t\t} else if (!_renderScheduled) {\n\t\t\t_renderScheduled = global.requestAnimationFrame(() => {\n\t\t\t\t_runInvalidationQueue();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction getWNodeWrapper(id: string) {\n\t\tconst wrapper = _idToWrapperMap.get(id);\n\t\tif (wrapper && isWNodeWrapper(wrapper)) {\n\t\t\treturn wrapper;\n\t\t}\n\t}\n\n\tfunction _runInvalidationQueue() {\n\t\t_renderScheduled = undefined;\n\t\tlet invalidationQueue = [..._invalidationQueue];\n\t\tconst previouslyRendered = [];\n\t\t_invalidationQueue = [];\n\t\tinvalidationQueue.sort((a, b) => {\n\t\t\tlet result = b.depth - a.depth;\n\t\t\tif (result === 0) {\n\t\t\t\tresult = b.order - a.order;\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t\tif (_deferredProcessQueue.length) {\n\t\t\t_processQueue = [..._deferredProcessQueue];\n\t\t\t_deferredProcessQueue = [];\n\t\t\t_runProcessQueue();\n\t\t\tif (_deferredProcessQueue.length) {\n\t\t\t\t_invalidationQueue = [...invalidationQueue];\n\t\t\t\tinvalidationQueue = [];\n\t\t\t}\n\t\t}\n\t\tlet item: InvalidationQueueItem | undefined;\n\t\twhile ((item = invalidationQueue.pop())) {\n\t\t\tlet { id } = item;\n\t\t\tconst current = getWNodeWrapper(id);\n\t\t\tif (!current || previouslyRendered.indexOf(id) !== -1 || !_idToWrapperMap.has(current.parentId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpreviouslyRendered.push(id);\n\t\t\tconst sibling = _wrapperSiblingMap.get(current);\n\t\t\tconst next = {\n\t\t\t\tnode: {\n\t\t\t\t\ttype: WNODE,\n\t\t\t\t\twidgetConstructor: current.node.widgetConstructor,\n\t\t\t\t\tproperties: current.properties || {},\n\t\t\t\t\tchildren: current.node.children || []\n\t\t\t\t},\n\t\t\t\tinstance: current.instance,\n\t\t\t\tid: current.id,\n\t\t\t\tproperties: current.properties,\n\t\t\t\tdepth: current.depth,\n\t\t\t\torder: current.order,\n\t\t\t\towningId: current.owningId,\n\t\t\t\tparentId: current.parentId,\n\t\t\t\tregistryItem: current.registryItem\n\t\t\t};\n\n\t\t\tsibling && _wrapperSiblingMap.set(next, sibling);\n\t\t\tconst result = _updateWidget({ current, next });\n\t\t\tif (result && result.item) {\n\t\t\t\t_processQueue.push(result.item);\n\t\t\t\t_idToWrapperMap.set(id, next);\n\t\t\t\t_runProcessQueue();\n\t\t\t}\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_cleanUpMergedNodes();\n\t\t_runCallbacks();\n\t}\n\n\tfunction _cleanUpMergedNodes() {\n\t\tif (_deferredProcessQueue.length === 0) {\n\t\t\tlet mergedNode: Node | undefined;\n\t\t\twhile ((mergedNode = _allMergedNodes.pop())) {\n\t\t\t\tmergedNode.parentNode && mergedNode.parentNode.removeChild(mergedNode);\n\t\t\t}\n\t\t\t_mountOptions.merge = false;\n\t\t}\n\t}\n\n\tfunction _runProcessQueue() {\n\t\tlet item: DetachApplication | AttachApplication | ProcessItem | undefined;\n\t\twhile ((item = _processQueue.pop())) {\n\t\t\tif (isAttachApplication(item)) {\n\t\t\t\titem.type === 'attach' && setDomNodeOnParentWrapper(item.id);\n\t\t\t\tif (item.instance) {\n\t\t\t\t\t_applicationQueue.push(item as any);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst { current, next, meta } = item;\n\t\t\t\t_process(current || EMPTY_ARRAY, next || EMPTY_ARRAY, meta);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runDomInstructionQueue(): void {\n\t\t_applicationQueue.reverse();\n\t\tlet item: ApplicationInstruction | undefined;\n\t\twhile ((item = _applicationQueue.pop())) {\n\t\t\tif (item.type === 'create') {\n\t\t\t\tconst {\n\t\t\t\t\tparentDomNode,\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode, merged, requiresInsertBefore, node }\n\t\t\t\t} = item;\n\n\t\t\t\tprocessProperties(next, { properties: {} });\n\t\t\t\trunDeferredProperties(next);\n\t\t\t\tif (!merged) {\n\t\t\t\t\tlet insertBefore: any;\n\t\t\t\t\tif (requiresInsertBefore) {\n\t\t\t\t\t\tinsertBefore = findInsertBefore(next);\n\t\t\t\t\t} else if (_insertBeforeMap) {\n\t\t\t\t\t\tinsertBefore = _insertBeforeMap.get(next);\n\t\t\t\t\t}\n\t\t\t\t\tparentDomNode.insertBefore(domNode!, insertBefore);\n\t\t\t\t\tif (isDomVNode(next.node) && next.node.onAttach) {\n\t\t\t\t\t\tnext.node.onAttach();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((domNode as HTMLElement).tagName === 'OPTION' && domNode!.parentElement) {\n\t\t\t\t\tsetValue(domNode!.parentElement);\n\t\t\t\t}\n\t\t\t\tconst { enterAnimation, enterAnimationActive } = node.properties;\n\t\t\t\tif (_mountOptions.transition && enterAnimation && enterAnimation !== true) {\n\t\t\t\t\t_mountOptions.transition.enter(domNode as HTMLElement, enterAnimation, enterAnimationActive);\n\t\t\t\t}\n\t\t\t\tconst owningWrapper = _nodeToWrapperMap.get(next.node);\n\t\t\t\tif (owningWrapper && node.properties.key != null) {\n\t\t\t\t\tif (owningWrapper.instance) {\n\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(owningWrapper.instance);\n\t\t\t\t\t\tinstanceData && instanceData.nodeHandler.add(domNode as HTMLElement, `${node.properties.key}`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddNodeToMap(owningWrapper.id, node.properties.key, domNode as HTMLElement);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\titem.next.inserted = true;\n\t\t\t} else if (item.type === 'update') {\n\t\t\t\tconst {\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode },\n\t\t\t\t\tcurrent,\n\t\t\t\t\tcurrent: { domNode: currentDomNode }\n\t\t\t\t} = item;\n\t\t\t\tif (isTextNode(domNode) && isTextNode(currentDomNode) && domNode !== currentDomNode) {\n\t\t\t\t\tcurrentDomNode.parentNode && currentDomNode.parentNode.replaceChild(domNode, currentDomNode);\n\t\t\t\t} else {\n\t\t\t\t\tconst previousProperties = buildPreviousProperties(domNode, current);\n\t\t\t\t\tprocessProperties(next, previousProperties);\n\t\t\t\t\trunDeferredProperties(next);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'delete') {\n\t\t\t\tconst { current } = item;\n\t\t\t\tconst { exitAnimation, exitAnimationActive } = current.node.properties;\n\t\t\t\tif (_mountOptions.transition && exitAnimation && exitAnimation !== true) {\n\t\t\t\t\t_mountOptions.transition.exit(current.domNode as HTMLElement, exitAnimation, exitAnimationActive);\n\t\t\t\t} else {\n\t\t\t\t\tcurrent.domNode!.parentNode!.removeChild(current.domNode!);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'attach') {\n\t\t\t\tconst { instance, attached } = item;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance);\n\t\t\t\tif (instanceData) {\n\t\t\t\t\tinstanceData.nodeHandler.addRoot();\n\t\t\t\t\tattached && instanceData.onAttach();\n\t\t\t\t}\n\t\t\t} else if (item.type === 'detach') {\n\t\t\t\tif (item.current.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(item.current.instance);\n\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t}\n\t\t\t\titem.current.instance = undefined;\n\t\t\t}\n\t\t}\n\t\tif (_deferredProcessQueue.length === 0) {\n\t\t\t_nodeToWrapperMap = new WeakMap();\n\t\t}\n\t}\n\n\tfunction _runCallbacks() {\n\t\trunAfterRenderCallbacks();\n\t\trunDeferredRenderCallbacks();\n\t}\n\n\tfunction _processMergeNodes(next: DNodeWrapper, mergeNodes: Node[]) {\n\t\tconst { merge } = _mountOptions;\n\t\tif (merge && mergeNodes.length) {\n\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\tlet {\n\t\t\t\t\tnode: { tag }\n\t\t\t\t} = next;\n\t\t\t\tfor (let i = 0; i < mergeNodes.length; i++) {\n\t\t\t\t\tconst domElement = mergeNodes[i] as Element;\n\t\t\t\t\tconst tagName = domElement.tagName || '';\n\t\t\t\t\tif (tag.toUpperCase() === tagName.toUpperCase()) {\n\t\t\t\t\t\tconst mergeNodeIndex = _allMergedNodes.indexOf(domElement);\n\t\t\t\t\t\tif (mergeNodeIndex !== -1) {\n\t\t\t\t\t\t\t_allMergedNodes.splice(mergeNodeIndex, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmergeNodes.splice(i, 1);\n\t\t\t\t\t\tnext.domNode = domElement;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnext.mergeNodes = mergeNodes;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction registerDistinguishableCallback(childNodes: DNodeWrapper[], index: number) {\n\t\t_idleCallbacks.push(() => {\n\t\t\tconst parentWNodeWrapper = getWNodeWrapper(childNodes[index].owningId);\n\t\t\tcheckDistinguishable(childNodes, index, parentWNodeWrapper);\n\t\t});\n\t}\n\n\tfunction createKeyMap(wrappers: DNodeWrapper[]): (string | number)[] | false {\n\t\tconst keys: (string | number)[] = [];\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tconst wrapper = wrappers[i];\n\t\t\tif (wrapper.node.properties.key != null) {\n\t\t\t\tkeys.push(wrapper.node.properties.key);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn keys;\n\t}\n\n\tfunction _process(current: DNodeWrapper[], next: DNodeWrapper[], meta: ProcessMeta = {}): void {\n\t\tlet { mergeNodes = [], oldIndex = 0, newIndex = 0 } = meta;\n\t\tconst currentLength = current.length;\n\t\tconst nextLength = next.length;\n\t\tconst hasPreviousSiblings = currentLength > 1 || (currentLength > 0 && currentLength < nextLength);\n\t\tlet instructions: Instruction[] = [];\n\t\tlet replace = false;\n\t\tif (oldIndex === 0 && newIndex === 0 && currentLength) {\n\t\t\tconst currentKeys = createKeyMap(current);\n\t\t\tif (currentKeys) {\n\t\t\t\tconst nextKeys = createKeyMap(next);\n\t\t\t\tif (nextKeys) {\n\t\t\t\t\tfor (let i = 0; i < currentKeys.length; i++) {\n\t\t\t\t\t\tif (nextKeys.indexOf(currentKeys[i]) !== -1) {\n\t\t\t\t\t\t\tinstructions = [];\n\t\t\t\t\t\t\treplace = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplace = true;\n\t\t\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (replace || (currentLength === 0 && !_mountOptions.merge)) {\n\t\t\tfor (let i = 0; i < next.length; i++) {\n\t\t\t\tinstructions.push({ current: undefined, next: next[i] });\n\t\t\t}\n\t\t} else {\n\t\t\tif (newIndex < nextLength) {\n\t\t\t\tlet currentWrapper = oldIndex < currentLength ? current[oldIndex] : undefined;\n\t\t\t\tconst nextWrapper = next[newIndex];\n\t\t\t\tnextWrapper.hasPreviousSiblings = hasPreviousSiblings;\n\n\t\t\t\t_processMergeNodes(nextWrapper, mergeNodes);\n\n\t\t\t\tif (currentWrapper && same(currentWrapper, nextWrapper)) {\n\t\t\t\t\toldIndex++;\n\t\t\t\t\tnewIndex++;\n\t\t\t\t\tif (isVNodeWrapper(currentWrapper) && isVNodeWrapper(nextWrapper)) {\n\t\t\t\t\t\tnextWrapper.inserted = currentWrapper.inserted;\n\t\t\t\t\t}\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: nextWrapper });\n\t\t\t\t} else if (!currentWrapper || findIndexOfChild(current, nextWrapper, oldIndex + 1) === -1) {\n\t\t\t\t\thas('dojo-debug') && current.length && registerDistinguishableCallback(next, newIndex);\n\t\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\t\tnewIndex++;\n\t\t\t\t} else if (findIndexOfChild(next, currentWrapper, newIndex + 1) === -1) {\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\t\toldIndex++;\n\t\t\t\t} else {\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(next, newIndex);\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\t\toldIndex++;\n\t\t\t\t\tnewIndex++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newIndex < nextLength) {\n\t\t\t\t_processQueue.push({ current, next, meta: { mergeNodes, oldIndex, newIndex } });\n\t\t\t}\n\t\t\tif (currentLength > oldIndex && newIndex >= nextLength) {\n\t\t\t\tfor (let i = oldIndex; i < currentLength; i++) {\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, i);\n\t\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < instructions.length; i++) {\n\t\t\tconst result = _processOne(instructions[i]);\n\t\t\tif (result === false) {\n\t\t\t\tif (_mountOptions.merge && mergeNodes.length) {\n\t\t\t\t\tif (newIndex < nextLength) {\n\t\t\t\t\t\t_processQueue.pop();\n\t\t\t\t\t}\n\t\t\t\t\t_processQueue.push({ next, current, meta });\n\t\t\t\t\t_deferredProcessQueue = _processQueue;\n\t\t\t\t\t_processQueue = [];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst { widget, item, dom } = result;\n\t\t\twidget && _processQueue.push(widget);\n\t\t\titem && _processQueue.push(item);\n\t\t\tdom && _applicationQueue.push(dom);\n\t\t}\n\t}\n\n\tfunction _processOne({ current, next }: Instruction): ProcessResult | false {\n\t\tif (current !== next) {\n\t\t\tif (!current && next) {\n\t\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\t\treturn _createDom({ next });\n\t\t\t\t} else {\n\t\t\t\t\treturn _createWidget({ next });\n\t\t\t\t}\n\t\t\t} else if (current && next) {\n\t\t\t\tif (isVNodeWrapper(current) && isVNodeWrapper(next)) {\n\t\t\t\t\treturn _updateDom({ current, next });\n\t\t\t\t} else if (isWNodeWrapper(current) && isWNodeWrapper(next)) {\n\t\t\t\t\treturn _updateWidget({ current, next });\n\t\t\t\t}\n\t\t\t} else if (current && !next) {\n\t\t\t\tif (isVNodeWrapper(current)) {\n\t\t\t\t\treturn _removeDom({ current });\n\t\t\t\t} else if (isWNodeWrapper(current)) {\n\t\t\t\t\treturn _removeWidget({ current });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t}\n\n\tfunction resolveMiddleware(middlewares: any, id: string): any {\n\t\tconst keys = Object.keys(middlewares);\n\t\tconst results: any = {};\n\t\tconst uniqueId = `${id}-${metaId++}`;\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst middleware = middlewares[keys[i]]();\n\t\t\tconst payload: any = {\n\t\t\t\tid: uniqueId,\n\t\t\t\tproperties: () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\treturn { ...widgetMeta.properties };\n\t\t\t\t\t}\n\t\t\t\t\treturn {};\n\t\t\t\t},\n\t\t\t\tchildren: () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\treturn widgetMeta.children;\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (middleware.middlewares) {\n\t\t\t\tconst resolvedMiddleware = resolveMiddleware(middleware.middlewares, id);\n\t\t\t\tpayload.middleware = resolvedMiddleware;\n\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t} else {\n\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\tfunction _createWidget({ next }: CreateWidgetInstruction): ProcessResult | false {\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tlet { registry } = _mountOptions;\n\t\tlet Constructor = next.registryItem || widgetConstructor;\n\t\tif (!isWidget(Constructor)) {\n\t\t\tresolveRegistryItem(next);\n\t\t\tif (!next.registryItem) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tConstructor = next.registryItem;\n\t\t}\n\n\t\tlet rendered: RenderResult;\n\t\tlet invalidate: () => void;\n\t\tnext.properties = next.node.properties;\n\t\tnext.id = next.id || `${wrapperId++}`;\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tconst { id, depth, order } = next;\n\t\tif (!isWidgetBaseConstructor(Constructor)) {\n\t\t\tlet widgetMeta = widgetMetaMap.get(id);\n\t\t\tif (!widgetMeta) {\n\t\t\t\tinvalidate = () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t\t\tif (!widgetMeta.rendering && _idToWrapperMap.has(id)) {\n\t\t\t\t\t\t\t_invalidationQueue.push({ id, depth, order });\n\t\t\t\t\t\t\t_schedule();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\twidgetMeta = {\n\t\t\t\t\tdirty: false,\n\t\t\t\t\tinvalidator: invalidate,\n\t\t\t\t\tproperties: next.node.properties,\n\t\t\t\t\tchildren: next.node.children,\n\t\t\t\t\tdeferRefs: 0,\n\t\t\t\t\trendering: true,\n\t\t\t\t\tregistry: _mountOptions.registry\n\t\t\t\t};\n\n\t\t\t\twidgetMetaMap.set(next.id, widgetMeta);\n\t\t\t\twidgetMeta.middleware = (Constructor as any).middlewares\n\t\t\t\t\t? resolveMiddleware((Constructor as any).middlewares, id)\n\t\t\t\t\t: {};\n\t\t\t} else {\n\t\t\t\tinvalidate = widgetMeta.invalidator;\n\t\t\t}\n\n\t\t\trendered = Constructor({\n\t\t\t\tid,\n\t\t\t\tproperties: () => next.node.properties,\n\t\t\t\tchildren: () => next.node.children,\n\t\t\t\tmiddleware: widgetMeta.middleware\n\t\t\t});\n\t\t\twidgetMeta.rendering = false;\n\t\t\tif (widgetMeta.deferRefs > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tlet instance = new Constructor() as WidgetBaseInterface & {\n\t\t\t\tinvalidate: any;\n\t\t\t\tregistry: any;\n\t\t\t};\n\t\t\tinstance.registry.base = registry;\n\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\tinvalidate = () => {\n\t\t\t\tinstanceData.dirty = true;\n\t\t\t\tif (!instanceData.rendering && _idToWrapperMap.has(id)) {\n\t\t\t\t\t_invalidationQueue.push({ id, depth, order });\n\t\t\t\t\t_schedule();\n\t\t\t\t}\n\t\t\t};\n\t\t\tinstanceData.invalidate = invalidate;\n\t\t\tinstanceData.rendering = true;\n\t\t\tinstance.__setProperties__(next.node.properties);\n\t\t\tinstance.__setChildren__(next.node.children);\n\t\t\tnext.instance = instance;\n\t\t\trendered = instance.__render__();\n\t\t\tinstanceData.rendering = false;\n\t\t}\n\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tchildren = renderedToWrapper(rendered, next, null);\n\t\t\t_idToChildrenWrappers.set(id, children);\n\t\t}\n\n\t\tif (!parentInvalidate && !(Constructor as any).isWNodeWrapper) {\n\t\t\tparentInvalidate = invalidate;\n\t\t}\n\n\t\treturn {\n\t\t\titem: {\n\t\t\t\tnext: children,\n\t\t\t\tmeta: { mergeNodes: next.mergeNodes }\n\t\t\t},\n\t\t\twidget: { type: 'attach', instance: next.instance, id, attached: true }\n\t\t};\n\t}\n\n\tfunction _updateWidget({ current, next }: UpdateWidgetInstruction): ProcessResult {\n\t\tcurrent = getWNodeWrapper(current.id) || current;\n\t\tconst { instance, domNode, hasAnimations } = current;\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tconst Constructor = next.registryItem || widgetConstructor;\n\n\t\tif (!isWidget(Constructor)) {\n\t\t\treturn {};\n\t\t}\n\t\tlet rendered: RenderResult;\n\t\tlet processResult: ProcessResult = {};\n\t\tlet didRender = false;\n\t\tlet currentChildren = _idToChildrenWrappers.get(current.id);\n\t\tnext.hasAnimations = hasAnimations;\n\t\tnext.id = current.id;\n\t\tnext.childDomWrapperId = current.childDomWrapperId;\n\t\tnext.properties = next.node.properties;\n\t\t_wrapperSiblingMap.delete(current);\n\t\tif (domNode && domNode.parentNode) {\n\t\t\tnext.domNode = domNode;\n\t\t}\n\n\t\tif (!isWidgetBaseConstructor(Constructor)) {\n\t\t\tconst widgetMeta = widgetMetaMap.get(next.id);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.properties = next.properties;\n\t\t\t\twidgetMeta.rendering = true;\n\t\t\t\trunDiffs(widgetMeta, current.properties, next.properties);\n\t\t\t\tif (current.node.children.length > 0 || next.node.children.length > 0) {\n\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t}\n\t\t\t\tif (!widgetMeta.dirty) {\n\t\t\t\t\tpropertiesDiff(\n\t\t\t\t\t\tcurrent.properties,\n\t\t\t\t\t\tnext.properties,\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidgetMeta.customDiffProperties ? [...widgetMeta.customDiffProperties.values()] : []\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (widgetMeta.dirty) {\n\t\t\t\t\t_idToChildrenWrappers.delete(next.id);\n\t\t\t\t\tdidRender = true;\n\t\t\t\t\twidgetMeta.dirty = false;\n\t\t\t\t\trendered = Constructor({\n\t\t\t\t\t\tid: next.id,\n\t\t\t\t\t\tproperties: () => next.node.properties,\n\t\t\t\t\t\tchildren: () => next.node.children,\n\t\t\t\t\t\tmiddleware: widgetMeta.middleware\n\t\t\t\t\t});\n\t\t\t\t\tif (widgetMeta.deferRefs > 0) {\n\t\t\t\t\t\trendered = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twidgetMeta.rendering = false;\n\t\t\t}\n\t\t} else {\n\t\t\tconst instanceData = widgetInstanceMap.get(instance!)!;\n\t\t\tnext.instance = instance;\n\t\t\tinstanceData.rendering = true;\n\t\t\tinstance!.__setProperties__(next.node.properties);\n\t\t\tinstance!.__setChildren__(next.node.children);\n\t\t\tif (instanceData.dirty) {\n\t\t\t\tdidRender = true;\n\t\t\t\t_idToChildrenWrappers.delete(next.id);\n\t\t\t\trendered = instance!.__render__();\n\t\t\t}\n\t\t\tinstanceData.rendering = false;\n\t\t}\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tprocessResult.widget = { type: 'attach', instance, id: next.id, attached: false };\n\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tchildren = renderedToWrapper(rendered, next, current);\n\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t}\n\n\t\tif (didRender) {\n\t\t\tprocessResult.item = {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tnext: children,\n\t\t\t\tmeta: {}\n\t\t\t};\n\t\t}\n\t\treturn processResult;\n\t}\n\n\tfunction _removeWidget({ current }: RemoveWidgetInstruction): ProcessResult {\n\t\tcurrent = getWNodeWrapper(current.id) || current;\n\t\t_idToWrapperMap.delete(current.id);\n\t\tconst meta = widgetMetaMap.get(current.id);\n\t\tlet currentChildren = _idToChildrenWrappers.get(current.id);\n\t\t_idToChildrenWrappers.delete(current.id);\n\t\t_wrapperSiblingMap.delete(current);\n\t\tlet processResult: ProcessResult = {\n\t\t\titem: {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tmeta: {}\n\t\t\t}\n\t\t};\n\t\tif (meta) {\n\t\t\tmeta.registryHandler && meta.registryHandler.destroy();\n\t\t\tmeta.destroyMap && destroyHandles(meta.destroyMap);\n\t\t\twidgetMetaMap.delete(current.id);\n\t\t} else {\n\t\t\tprocessResult.widget = { type: 'detach', current, instance: current.instance };\n\t\t}\n\n\t\treturn processResult;\n\t}\n\n\tfunction setDomNodeOnParentWrapper(id: string) {\n\t\tlet wrapper = _idToWrapperMap.get(id)!;\n\t\tlet children = [...(_idToChildrenWrappers.get(id) || [])];\n\t\tlet child: DNodeWrapper | undefined;\n\t\twhile (children.length && !wrapper.domNode) {\n\t\t\tchild = children.shift();\n\t\t\tif (child) {\n\t\t\t\tif (child.domNode) {\n\t\t\t\t\twrapper.childDomWrapperId = child.id;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet nextChildren = _idToChildrenWrappers.get(child.id);\n\t\t\t\tif (nextChildren) {\n\t\t\t\t\tchildren = [...nextChildren, ...children];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _createDom({ next }: CreateDomInstruction): ProcessResult {\n\t\tconst parentDomNode = findParentDomNode(next)!;\n\t\tconst isVirtual = isVirtualWrapper(next);\n\t\tconst isBody = isBodyWrapper(next);\n\t\tlet mergeNodes: Node[] = [];\n\t\tnext.id = `${wrapperId++}`;\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tif (!next.domNode) {\n\t\t\tif ((next.node as any).domNode) {\n\t\t\t\tnext.domNode = (next.node as any).domNode;\n\t\t\t} else {\n\t\t\t\tif (next.node.tag === 'svg') {\n\t\t\t\t\tnext.namespace = NAMESPACE_SVG;\n\t\t\t\t}\n\t\t\t\tif (isBody) {\n\t\t\t\t\tnext.domNode = global.document.body;\n\t\t\t\t} else if (next.node.tag && !isVirtual) {\n\t\t\t\t\tif (next.namespace) {\n\t\t\t\t\t\tnext.domNode = global.document.createElementNS(next.namespace, next.node.tag);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext.domNode = global.document.createElement(next.node.tag);\n\t\t\t\t\t}\n\t\t\t\t} else if (next.node.text != null) {\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_insertBeforeMap && _allMergedNodes.length) {\n\t\t\t\tif (parentDomNode === _allMergedNodes[0].parentNode) {\n\t\t\t\t\t_insertBeforeMap.set(next, _allMergedNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (_mountOptions.merge) {\n\t\t\tnext.merged = true;\n\t\t\tif (isTextNode(next.domNode)) {\n\t\t\t\tif (next.domNode.data !== next.node.text) {\n\t\t\t\t\t_allMergedNodes = [next.domNode, ..._allMergedNodes];\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t\tnext.merged = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmergeNodes = arrayFrom(next.domNode.childNodes);\n\t\t\t\t_allMergedNodes = [..._allMergedNodes, ...mergeNodes];\n\t\t\t}\n\t\t}\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (next.domNode || isVirtual) {\n\t\t\tif (next.node.children && next.node.children.length) {\n\t\t\t\tchildren = renderedToWrapper(next.node.children, next, null);\n\t\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t\t}\n\t\t}\n\t\tconst dom: ApplicationInstruction | undefined =\n\t\t\tisVirtual || isBody\n\t\t\t\t? undefined\n\t\t\t\t: {\n\t\t\t\t\t\tnext: next!,\n\t\t\t\t\t\tparentDomNode: parentDomNode,\n\t\t\t\t\t\ttype: 'create'\n\t\t\t\t  };\n\t\tif (children) {\n\t\t\treturn {\n\t\t\t\titem: {\n\t\t\t\t\tcurrent: [],\n\t\t\t\t\tnext: children,\n\t\t\t\t\tmeta: { mergeNodes }\n\t\t\t\t},\n\t\t\t\tdom,\n\t\t\t\twidget: isVirtual ? { type: 'attach', id: (next as any).id, attached: false } : undefined\n\t\t\t};\n\t\t}\n\t\treturn { dom };\n\t}\n\n\tfunction _updateDom({ current, next }: UpdateDomInstruction): ProcessResult {\n\t\tnext.domNode = current.domNode;\n\t\tnext.namespace = current.namespace;\n\t\tnext.id = current.id;\n\t\tnext.childDomWrapperId = current.childDomWrapperId;\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tlet currentChildren = _idToChildrenWrappers.get(next.id);\n\t\tif (next.node.text != null && next.node.text !== current.node.text) {\n\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t} else if (next.node.children) {\n\t\t\tchildren = renderedToWrapper(next.node.children, next, current);\n\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t}\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_idToWrapperMap.set(next.id, next);\n\t\treturn {\n\t\t\titem: {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tnext: children,\n\t\t\t\tmeta: {}\n\t\t\t},\n\t\t\tdom: { type: 'update', next, current }\n\t\t};\n\t}\n\n\tfunction _removeDom({ current }: RemoveDomInstruction): ProcessResult {\n\t\tconst isVirtual = isVirtualWrapper(current);\n\t\tconst isBody = isBodyWrapper(current);\n\t\tconst children = _idToChildrenWrappers.get(current.id);\n\t\t_idToChildrenWrappers.delete(current.id);\n\t\t_idToWrapperMap.delete(current.id);\n\t\t_wrapperSiblingMap.delete(current);\n\t\tif (current.node.properties.key) {\n\t\t\tconst widgetMeta = widgetMetaMap.get(current.owningId);\n\t\t\tconst parentWrapper = getWNodeWrapper(current.owningId);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.nodeMap && widgetMeta.nodeMap.delete(current.node.properties.key);\n\t\t\t} else if (parentWrapper && parentWrapper.instance) {\n\t\t\t\tconst instanceData = widgetInstanceMap.get(parentWrapper.instance);\n\t\t\t\tinstanceData && instanceData.nodeHandler.remove(current.node.properties.key);\n\t\t\t}\n\t\t}\n\t\tif (current.hasAnimations || isVirtual || isBody) {\n\t\t\treturn {\n\t\t\t\titem: { current: children, meta: {} },\n\t\t\t\tdom: isVirtual || isBody ? undefined : { type: 'delete', current }\n\t\t\t};\n\t\t}\n\n\t\tif (children) {\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tlet wrappers = children || [];\n\t\t\t\tlet wrapper: DNodeWrapper | undefined;\n\t\t\t\tlet bodyIds = [];\n\t\t\t\twhile ((wrapper = wrappers.pop())) {\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\twrapper = getWNodeWrapper(wrapper.id) || wrapper;\n\t\t\t\t\t\tif (wrapper.instance) {\n\t\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(wrapper.instance);\n\t\t\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t\t\t\twrapper.instance = undefined;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst meta = widgetMetaMap.get(wrapper.id);\n\t\t\t\t\t\t\tif (meta) {\n\t\t\t\t\t\t\t\tmeta.registryHandler && meta.registryHandler.destroy();\n\t\t\t\t\t\t\t\tmeta.destroyMap && destroyHandles(meta.destroyMap);\n\t\t\t\t\t\t\t\twidgetMetaMap.delete(wrapper.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet wrapperChildren = _idToChildrenWrappers.get(wrapper.id);\n\t\t\t\t\tif (wrapperChildren) {\n\t\t\t\t\t\twrappers.push(...wrapperChildren);\n\t\t\t\t\t}\n\t\t\t\t\tif (isBodyWrapper(wrapper)) {\n\t\t\t\t\t\tbodyIds.push(wrapper.id);\n\t\t\t\t\t} else if (bodyIds.indexOf(wrapper.parentId) !== -1) {\n\t\t\t\t\t\tif (isWNodeWrapper(wrapper) || isVirtualWrapper(wrapper)) {\n\t\t\t\t\t\t\tbodyIds.push(wrapper.id);\n\t\t\t\t\t\t} else if (wrapper.domNode && wrapper.domNode.parentNode) {\n\t\t\t\t\t\t\twrapper.domNode.parentNode.removeChild(wrapper.domNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t_idToChildrenWrappers.delete(wrapper.id);\n\t\t\t\t\t_idToWrapperMap.delete(wrapper.id);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tdom: { type: 'delete', current }\n\t\t};\n\t}\n\n\treturn {\n\t\tmount,\n\t\tinvalidate\n\t};\n}\n\nexport default renderer;\n","import global from '../../shim/global';\nimport { History, HistoryOptions, OnChangeFunction } from './../interfaces';\n\nexport class HashHistory implements History {\n\tprivate _onChangeFunction: OnChangeFunction;\n\tprivate _current: string;\n\tprivate _window: Window;\n\n\tconstructor({ window = global.window, onChange }: HistoryOptions) {\n\t\tthis._onChangeFunction = onChange;\n\t\tthis._window = window;\n\t\tthis._window.addEventListener('hashchange', this._onChange, false);\n\t\tthis._current = this.normalizePath(this._window.location.hash);\n\t\tthis._onChangeFunction(this._current);\n\t}\n\n\tpublic normalizePath(path: string): string {\n\t\treturn path.replace('#', '');\n\t}\n\n\tpublic prefix(path: string) {\n\t\tif (path[0] !== '#') {\n\t\t\treturn `#${path}`;\n\t\t}\n\t\treturn path;\n\t}\n\n\tpublic set(path: string) {\n\t\tthis._window.location.hash = this.prefix(path);\n\t\tthis._onChange();\n\t}\n\n\tpublic get current(): string {\n\t\treturn this._current;\n\t}\n\n\tpublic destroy() {\n\t\tthis._window.removeEventListener('hashchange', this._onChange);\n\t}\n\n\tprivate _onChange = () => {\n\t\tconst path = this.normalizePath(this._window.location.hash);\n\t\tif (path !== this._current) {\n\t\t\tthis._current = path;\n\t\t\tthis._onChangeFunction(this._current);\n\t\t}\n\t};\n}\n\nexport default HashHistory;\n","import Evented from '../core/Evented';\nimport { RouteConfig, History, OutletContext, Params, RouterInterface, Route, RouterOptions } from './interfaces';\nimport { HashHistory } from './history/HashHistory';\nimport { EventObject } from '../core/Evented';\n\nconst PARAM = '__PARAM__';\n\nconst paramRegExp = new RegExp(/^{.+}$/);\n\ninterface RouteWrapper {\n\troute: Route;\n\tsegments: string[];\n\tparent?: RouteWrapper;\n\ttype?: string;\n\tparams: Params;\n}\n\nexport interface NavEvent extends EventObject<string> {\n\toutlet?: string;\n\tcontext?: OutletContext;\n}\n\nexport interface OutletEvent extends EventObject<string> {\n\toutlet: OutletContext;\n\taction: 'enter' | 'exit';\n}\n\nconst ROUTE_SEGMENT_SCORE = 7;\nconst DYNAMIC_SEGMENT_PENALTY = 2;\n\nfunction matchingParams({ params: previousParams }: OutletContext, { params }: OutletContext) {\n\tconst matching = Object.keys(previousParams).every((key) => previousParams[key] === params[key]);\n\tif (!matching) {\n\t\treturn false;\n\t}\n\treturn Object.keys(params).every((key) => previousParams[key] === params[key]);\n}\n\nexport class Router extends Evented<{ nav: NavEvent; outlet: OutletEvent }> implements RouterInterface {\n\tprivate _routes: Route[] = [];\n\tprivate _outletMap: { [index: string]: Route } = Object.create(null);\n\tprivate _matchedOutlets: { [index: string]: OutletContext } = Object.create(null);\n\tprivate _currentParams: Params = {};\n\tprivate _currentQueryParams: Params = {};\n\tprivate _defaultOutlet: string | undefined;\n\tprivate _history!: History;\n\tprivate _options: RouterOptions;\n\n\tconstructor(config: RouteConfig[], options: RouterOptions = {}) {\n\t\tsuper();\n\t\tthis._options = options;\n\t\tthis._register(config);\n\t\tif (options.autostart || true) {\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\t/**\n\t * Sets the path against the registered history manager\n\t *\n\t * @param path The path to set on the history manager\n\t */\n\tpublic setPath(path: string): void {\n\t\tthis._history.set(path);\n\t}\n\n\tpublic start() {\n\t\tconst { HistoryManager = HashHistory, base, window } = this._options;\n\t\tthis._history = new HistoryManager({ onChange: this._onChange, base, window });\n\t\tif (this._matchedOutlets.errorOutlet && this._defaultOutlet) {\n\t\t\tconst path = this.link(this._defaultOutlet);\n\t\t\tif (path) {\n\t\t\t\tthis.setPath(path);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Generate a link for a given outlet identifier and optional params.\n\t *\n\t * @param outlet The outlet to generate a link for\n\t * @param params Optional Params for the generated link\n\t */\n\tpublic link(outlet: string, params: Params = {}): string | undefined {\n\t\tconst { _outletMap, _currentParams, _currentQueryParams } = this;\n\t\tlet route = _outletMap[outlet];\n\t\tif (route === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet linkPath: string | undefined = route.fullPath;\n\t\tif (route.fullQueryParams.length > 0) {\n\t\t\tlet queryString = route.fullQueryParams.reduce((queryParamString, param, index) => {\n\t\t\t\tif (index > 0) {\n\t\t\t\t\treturn `${queryParamString}&${param}={${param}}`;\n\t\t\t\t}\n\t\t\t\treturn `?${param}={${param}}`;\n\t\t\t}, '');\n\t\t\tlinkPath = `${linkPath}${queryString}`;\n\t\t}\n\t\tparams = { ...route.defaultParams, ..._currentQueryParams, ..._currentParams, ...params };\n\n\t\tif (Object.keys(params).length === 0 && route.fullParams.length > 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst fullParams = [...route.fullParams, ...route.fullQueryParams];\n\t\tfor (let i = 0; i < fullParams.length; i++) {\n\t\t\tconst param = fullParams[i];\n\t\t\tif (params[param]) {\n\t\t\t\tlinkPath = linkPath.replace(`{${param}}`, params[param]);\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t\treturn this._history.prefix(linkPath);\n\t}\n\n\t/**\n\t * Returns the outlet context for the outlet identifier if one has been matched\n\t *\n\t * @param outletIdentifier The outlet identifer\n\t */\n\tpublic getOutlet(outletIdentifier: string): OutletContext | undefined {\n\t\treturn this._matchedOutlets[outletIdentifier];\n\t}\n\n\t/**\n\t * Returns all the params for the current matched outlets\n\t */\n\tpublic get currentParams() {\n\t\treturn this._currentParams;\n\t}\n\n\t/**\n\t * Strips the leading slash on a path if one exists\n\t *\n\t * @param path The path to strip a leading slash\n\t */\n\tprivate _stripLeadingSlash(path: string): string {\n\t\tif (path[0] === '/') {\n\t\t\treturn path.slice(1);\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * Registers the routing configuration\n\t *\n\t * @param config The configuration\n\t * @param routes The routes\n\t * @param parentRoute The parent route\n\t */\n\tprivate _register(config: RouteConfig[], routes?: Route[], parentRoute?: Route): void {\n\t\troutes = routes ? routes : this._routes;\n\t\tfor (let i = 0; i < config.length; i++) {\n\t\t\tlet { path, outlet, children, defaultRoute = false, defaultParams = {} } = config[i];\n\t\t\tlet [parsedPath, queryParamString] = path.split('?');\n\t\t\tlet queryParams: string[] = [];\n\t\t\tparsedPath = this._stripLeadingSlash(parsedPath);\n\n\t\t\tconst segments: string[] = parsedPath.split('/');\n\t\t\tconst route: Route = {\n\t\t\t\tparams: [],\n\t\t\t\toutlet,\n\t\t\t\tpath: parsedPath,\n\t\t\t\tsegments,\n\t\t\t\tdefaultParams: parentRoute ? { ...parentRoute.defaultParams, ...defaultParams } : defaultParams,\n\t\t\t\tchildren: [],\n\t\t\t\tfullPath: parentRoute ? `${parentRoute.fullPath}/${parsedPath}` : parsedPath,\n\t\t\t\tfullParams: [],\n\t\t\t\tfullQueryParams: [],\n\t\t\t\tscore: parentRoute ? parentRoute.score : 0\n\t\t\t};\n\t\t\tif (defaultRoute) {\n\t\t\t\tthis._defaultOutlet = outlet;\n\t\t\t}\n\t\t\tfor (let i = 0; i < segments.length; i++) {\n\t\t\t\tconst segment = segments[i];\n\t\t\t\troute.score += ROUTE_SEGMENT_SCORE;\n\t\t\t\tif (paramRegExp.test(segment)) {\n\t\t\t\t\troute.score -= DYNAMIC_SEGMENT_PENALTY;\n\t\t\t\t\troute.params.push(segment.replace('{', '').replace('}', ''));\n\t\t\t\t\tsegments[i] = PARAM;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (queryParamString) {\n\t\t\t\tqueryParams = queryParamString.split('&').map((queryParam) => {\n\t\t\t\t\treturn queryParam.replace('{', '').replace('}', '');\n\t\t\t\t});\n\t\t\t}\n\t\t\troute.fullQueryParams = parentRoute ? [...parentRoute.fullQueryParams, ...queryParams] : queryParams;\n\n\t\t\troute.fullParams = parentRoute ? [...parentRoute.fullParams, ...route.params] : route.params;\n\n\t\t\tif (children && children.length > 0) {\n\t\t\t\tthis._register(children, route.children, route);\n\t\t\t}\n\t\t\tthis._outletMap[outlet] = route;\n\t\t\troutes.push(route);\n\t\t}\n\t}\n\n\t/**\n\t * Returns an object of query params\n\t *\n\t * @param queryParamString The string of query params, e.g `paramOne=one&paramTwo=two`\n\t */\n\tprivate _getQueryParams(queryParamString?: string): { [index: string]: string } {\n\t\tconst queryParams: { [index: string]: string } = {};\n\t\tif (queryParamString) {\n\t\t\tconst queryParameters = queryParamString.split('&');\n\t\t\tfor (let i = 0; i < queryParameters.length; i++) {\n\t\t\t\tconst [key, value] = queryParameters[i].split('=');\n\t\t\t\tqueryParams[key] = value;\n\t\t\t}\n\t\t}\n\t\treturn queryParams;\n\t}\n\n\t/**\n\t * Called on change of the route by the the registered history manager. Matches the path against\n\t * the registered outlets.\n\t *\n\t * @param requestedPath The path of the requested route\n\t */\n\tprivate _onChange = (requestedPath: string): void => {\n\t\trequestedPath = this._stripLeadingSlash(requestedPath);\n\t\tconst previousMatchedOutlets = this._matchedOutlets;\n\t\tthis._matchedOutlets = Object.create(null);\n\t\tconst [path, queryParamString] = requestedPath.split('?');\n\t\tthis._currentQueryParams = this._getQueryParams(queryParamString);\n\t\tconst segments = path.split('/');\n\t\tlet routeConfigs: RouteWrapper[] = this._routes.map((route) => ({\n\t\t\troute,\n\t\t\tsegments: [...segments],\n\t\t\tparent: undefined,\n\t\t\tparams: {}\n\t\t}));\n\t\tlet routeConfig: RouteWrapper | undefined;\n\t\tlet matchedRoutes: RouteWrapper[] = [];\n\t\twhile ((routeConfig = routeConfigs.pop())) {\n\t\t\tconst { route, parent, segments, params } = routeConfig;\n\t\t\tlet segmentIndex = 0;\n\t\t\tlet type = 'index';\n\t\t\tlet paramIndex = 0;\n\t\t\tlet routeMatch = true;\n\t\t\tif (segments.length < route.segments.length) {\n\t\t\t\trouteMatch = false;\n\t\t\t} else {\n\t\t\t\twhile (segments.length > 0) {\n\t\t\t\t\tif (route.segments[segmentIndex] === undefined) {\n\t\t\t\t\t\ttype = 'partial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst segment = segments.shift()!;\n\t\t\t\t\tif (route.segments[segmentIndex] === PARAM) {\n\t\t\t\t\t\tparams[route.params[paramIndex++]] = segment;\n\t\t\t\t\t\tthis._currentParams = { ...this._currentParams, ...params };\n\t\t\t\t\t} else if (route.segments[segmentIndex] !== segment) {\n\t\t\t\t\t\trouteMatch = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tsegmentIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (routeMatch) {\n\t\t\t\trouteConfig.type = type;\n\t\t\t\tmatchedRoutes.push({ route, parent, type, params, segments: [] });\n\t\t\t\tif (segments.length) {\n\t\t\t\t\trouteConfigs = [\n\t\t\t\t\t\t...routeConfigs,\n\t\t\t\t\t\t...route.children.map((childRoute) => ({\n\t\t\t\t\t\t\troute: childRoute,\n\t\t\t\t\t\t\tsegments: [...segments],\n\t\t\t\t\t\t\tparent: routeConfig,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tparams: { ...params }\n\t\t\t\t\t\t}))\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet matchedOutletName: string | undefined = undefined;\n\t\tlet matchedRoute: any = matchedRoutes.reduce((match: any, matchedRoute: any) => {\n\t\t\tif (!match) {\n\t\t\t\treturn matchedRoute;\n\t\t\t}\n\t\t\tif (match.route.score > matchedRoute.route.score) {\n\t\t\t\treturn match;\n\t\t\t}\n\t\t\treturn matchedRoute;\n\t\t}, undefined);\n\n\t\tif (matchedRoute) {\n\t\t\tif (matchedRoute.type === 'partial') {\n\t\t\t\tmatchedRoute.type = 'error';\n\t\t\t}\n\t\t\tmatchedOutletName = matchedRoute.route.outlet;\n\t\t\twhile (matchedRoute) {\n\t\t\t\tlet { type, params, parent, route } = matchedRoute;\n\t\t\t\tconst matchedOutlet = {\n\t\t\t\t\tid: route.outlet,\n\t\t\t\t\tqueryParams: this._currentQueryParams,\n\t\t\t\t\tparams,\n\t\t\t\t\ttype,\n\t\t\t\t\tisError: () => type === 'error',\n\t\t\t\t\tisExact: () => type === 'index'\n\t\t\t\t};\n\t\t\t\tconst previousMatchedOutlet = previousMatchedOutlets[route.outlet];\n\t\t\t\tthis._matchedOutlets[route.outlet] = matchedOutlet;\n\t\t\t\tif (!previousMatchedOutlet || !matchingParams(previousMatchedOutlet, matchedOutlet)) {\n\t\t\t\t\tthis.emit({ type: 'outlet', outlet: matchedOutlet, action: 'enter' });\n\t\t\t\t}\n\t\t\t\tmatchedRoute = parent;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._matchedOutlets.errorOutlet = {\n\t\t\t\tid: 'errorOutlet',\n\t\t\t\tqueryParams: {},\n\t\t\t\tparams: {},\n\t\t\t\tisError: () => true,\n\t\t\t\tisExact: () => false,\n\t\t\t\ttype: 'error'\n\t\t\t};\n\t\t}\n\n\t\tconst previousMatchedOutletKeys = Object.keys(previousMatchedOutlets);\n\t\tfor (let i = 0; i < previousMatchedOutletKeys.length; i++) {\n\t\t\tconst key = previousMatchedOutletKeys[i];\n\t\t\tconst matchedOutlet = this._matchedOutlets[key];\n\t\t\tif (!matchedOutlet || !matchingParams(previousMatchedOutlets[key], matchedOutlet)) {\n\t\t\t\tthis.emit({ type: 'outlet', outlet: previousMatchedOutlets[key], action: 'exit' });\n\t\t\t}\n\t\t}\n\t\tthis.emit({\n\t\t\ttype: 'nav',\n\t\t\toutlet: matchedOutletName,\n\t\t\tcontext: matchedOutletName ? this._matchedOutlets[matchedOutletName] : undefined\n\t\t});\n\t};\n}\n\nexport default Router;\n","import { create, getRegistry, invalidator, destroy } from '../vdom';\nimport { RegistryLabel } from '../interfaces';\nimport { Handle } from '../Destroyable';\n\nconst injectorFactory = create({ getRegistry, invalidator, destroy });\n\nexport const injector = injectorFactory(({ middleware: { getRegistry, invalidator, destroy } }) => {\n\tconst handles: Handle[] = [];\n\tdestroy(() => {\n\t\tlet handle: Handle | undefined;\n\t\twhile ((handle = handles.pop())) {\n\t\t\thandle.destroy();\n\t\t}\n\t});\n\tconst registry = getRegistry();\n\treturn {\n\t\tsubscribe(label: RegistryLabel, callback: Function = invalidator) {\n\t\t\tif (registry) {\n\t\t\t\tconst item = registry.getInjector(label);\n\t\t\t\tif (item) {\n\t\t\t\t\tconst handle = item.invalidator.on('invalidate', () => {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t});\n\t\t\t\t\thandles.push(handle);\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tconst index = handles.indexOf(handle);\n\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\thandles.splice(index, 1);\n\t\t\t\t\t\t\thandle.destroy();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tget<T>(label: RegistryLabel): T | null {\n\t\t\tif (registry) {\n\t\t\t\tconst item = registry.getInjector<T>(label);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item.injector();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n});\n\nexport default injector;\n","export function decode(segment: string) {\n\treturn segment.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n\nfunction encode(segment: string) {\n\treturn segment.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\nexport interface PointerTarget {\n\tobject: any;\n\ttarget: any;\n\tsegment: string;\n}\n\nexport function walk(segments: string[], object: any, clone = true, continueOnUndefined = true): PointerTarget {\n\tif (clone) {\n\t\tobject = { ...object };\n\t}\n\tconst pointerTarget: PointerTarget = {\n\t\tobject,\n\t\ttarget: object,\n\t\tsegment: ''\n\t};\n\n\treturn segments.reduce((pointerTarget, segment, index) => {\n\t\tif (pointerTarget.target === undefined) {\n\t\t\treturn pointerTarget;\n\t\t}\n\t\tif (Array.isArray(pointerTarget.target) && segment === '-') {\n\t\t\tsegment = String(pointerTarget.target.length - 1);\n\t\t}\n\t\tif (index + 1 < segments.length) {\n\t\t\tconst nextSegment: any = segments[index + 1];\n\t\t\tlet target = pointerTarget.target[segment];\n\n\t\t\tif (target === undefined && !continueOnUndefined) {\n\t\t\t\tpointerTarget.target = undefined;\n\t\t\t\treturn pointerTarget;\n\t\t\t}\n\n\t\t\tif (clone || target === undefined) {\n\t\t\t\tif (Array.isArray(target)) {\n\t\t\t\t\ttarget = [...target];\n\t\t\t\t} else if (typeof target === 'object') {\n\t\t\t\t\ttarget = { ...target };\n\t\t\t\t} else if (isNaN(nextSegment) || isNaN(parseInt(nextSegment, 0))) {\n\t\t\t\t\ttarget = {};\n\t\t\t\t} else {\n\t\t\t\t\ttarget = [];\n\t\t\t\t}\n\t\t\t\tpointerTarget.target[segment] = target;\n\t\t\t\tpointerTarget.target = target;\n\t\t\t} else {\n\t\t\t\tpointerTarget.target = target;\n\t\t\t}\n\t\t} else {\n\t\t\tpointerTarget.segment = segment;\n\t\t}\n\t\treturn pointerTarget;\n\t}, pointerTarget);\n}\n\nexport class Pointer<T = any, U = any> {\n\tprivate readonly _segments: string[];\n\n\tconstructor(segments: string | string[]) {\n\t\tif (Array.isArray(segments)) {\n\t\t\tthis._segments = segments;\n\t\t} else {\n\t\t\tthis._segments = (segments[0] === '/' ? segments : `/${segments}`).split('/');\n\t\t\tthis._segments.shift();\n\t\t}\n\t\tif (segments.length === 0 || ((segments.length === 1 && segments[0] === '/') || segments[0] === '')) {\n\t\t\tthrow new Error('Access to the root is not supported.');\n\t\t}\n\t\tthis._segments = this._segments.map(decode);\n\t}\n\n\tpublic get segments(): string[] {\n\t\treturn this._segments;\n\t}\n\n\tpublic get path(): string {\n\t\treturn `/${this._segments.map(encode).join('/')}`;\n\t}\n\n\tget(object: T): U {\n\t\tconst pointerTarget: PointerTarget = walk(this.segments, object, false, false);\n\t\tif (pointerTarget.target === undefined) {\n\t\t\treturn undefined as any;\n\t\t}\n\t\treturn pointerTarget.target[pointerTarget.segment];\n\t}\n\n\ttoJSON(): string {\n\t\treturn this.toString();\n\t}\n\n\ttoString(): string {\n\t\treturn this.path;\n\t}\n}\n","/**\n * Helper function to generate a value property descriptor\n *\n * @param value        The value the property descriptor should be set to\n * @param enumerable   If the property should be enumberable, defaults to false\n * @param writable     If the property should be writable, defaults to true\n * @param configurable If the property should be configurable, defaults to true\n * @return             The property descriptor object\n */\nexport function getValueDescriptor<T>(\n\tvalue: T,\n\tenumerable: boolean = false,\n\twritable: boolean = true,\n\tconfigurable: boolean = true\n): TypedPropertyDescriptor<T> {\n\treturn {\n\t\tvalue: value,\n\t\tenumerable: enumerable,\n\t\twritable: writable,\n\t\tconfigurable: configurable\n\t};\n}\n\n/**\n * A helper function which wraps a function where the first argument becomes the scope\n * of the call\n *\n * @param nativeFunction The source function to be wrapped\n */\nexport function wrapNative<T, U, R>(nativeFunction: (arg1: U) => R): (target: T, arg1: U) => R;\nexport function wrapNative<T, U, V, R>(nativeFunction: (arg1: U, arg2: V) => R): (target: T, arg1: U, arg2: V) => R;\nexport function wrapNative<T, U, V, W, R>(\n\tnativeFunction: (arg1: U, arg2: V, arg3: W) => R\n): (target: T, arg1: U, arg2: V, arg3: W) => R;\nexport function wrapNative<T, U, V, W, X, R>(\n\tnativeFunction: (arg1: U, arg2: V, arg3: W) => R\n): (target: T, arg1: U, arg2: V, arg3: W) => R;\nexport function wrapNative<T, U, V, W, X, Y, R>(\n\tnativeFunction: (arg1: U, arg2: V, arg3: W, arg4: Y) => R\n): (target: T, arg1: U, arg2: V, arg3: W, arg4: Y) => R;\nexport function wrapNative(nativeFunction: (...args: any[]) => any): (target: any, ...args: any[]) => any {\n\treturn function(target: any, ...args: any[]): any {\n\t\treturn nativeFunction.apply(target, args);\n\t};\n}\n","`!has('es6-iterator')`;\nimport { isArrayLike, isIterable, Iterable } from './iterator';\nimport has from '../core/has';\nimport { wrapNative } from './support/util';\n\nexport interface MapCallback<T, U> {\n\t/**\n\t * A callback function when mapping\n\t *\n\t * @param element The element that is currently being mapped\n\t * @param index The current index of the element\n\t */\n\t(element: T, index: number): U;\n}\n\nexport interface FindCallback<T> {\n\t/**\n\t * A callback function when using find\n\t *\n\t * @param element The element that is currenty being analysed\n\t * @param index The current index of the element that is being analysed\n\t * @param array The source array\n\t */\n\t(element: T, index: number, array: ArrayLike<T>): boolean;\n}\n\n/* ES6 Array static methods */\n\nexport interface From {\n\t/**\n\t * The Array.from() method creates a new Array instance from an array-like or iterable object.\n\t *\n\t * @param source An array-like or iterable object to convert to an array\n\t * @param mapFunction A map function to call on each element in the array\n\t * @param thisArg The execution context for the map function\n\t * @return The new Array\n\t */\n\t<T, U>(source: ArrayLike<T> | Iterable<T>, mapFunction: MapCallback<T, U>, thisArg?: any): Array<U>;\n\n\t/**\n\t * The Array.from() method creates a new Array instance from an array-like or iterable object.\n\t *\n\t * @param source An array-like or iterable object to convert to an array\n\t * @return The new Array\n\t */\n\t<T>(source: ArrayLike<T> | Iterable<T>): Array<T>;\n}\n\nexport let from: From;\n\n/**\n * Creates a new array from the function parameters.\n *\n * @param arguments Any number of arguments for the array\n * @return An array from the given arguments\n */\nexport let of: <T>(...items: T[]) => Array<T>;\n\n/* ES6 Array instance methods */\n\n/**\n * Copies data internally within an array or array-like object.\n *\n * @param target The target array-like object\n * @param offset The index to start copying values to; if negative, it counts backwards from length\n * @param start The first (inclusive) index to copy; if negative, it counts backwards from length\n * @param end The last (exclusive) index to copy; if negative, it counts backwards from length\n * @return The target\n */\nexport let copyWithin: <T>(target: ArrayLike<T>, offset: number, start: number, end?: number) => ArrayLike<T>;\n\n/**\n * Fills elements of an array-like object with the specified value.\n *\n * @param target The target to fill\n * @param value The value to fill each element of the target with\n * @param start The first index to fill\n * @param end The (exclusive) index at which to stop filling\n * @return The filled target\n */\nexport let fill: <T>(target: ArrayLike<T>, value: T, start?: number, end?: number) => ArrayLike<T>;\n\n/**\n * Finds and returns the first instance matching the callback or undefined if one is not found.\n *\n * @param target An array-like object\n * @param callback A function returning if the current value matches a criteria\n * @param thisArg The execution context for the find function\n * @return The first element matching the callback, or undefined if one does not exist\n */\nexport let find: <T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}) => T | undefined;\n\n/**\n * Performs a linear search and returns the first index whose value satisfies the passed callback,\n * or -1 if no values satisfy it.\n *\n * @param target An array-like object\n * @param callback A function returning true if the current value satisfies its criteria\n * @param thisArg The execution context for the find function\n * @return The first index whose value satisfies the passed callback, or -1 if no values satisfy it\n */\nexport let findIndex: <T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}) => number;\n\n/* ES7 Array instance methods */\n\n/**\n * Determines whether an array includes a given value\n *\n * @param target the target array-like object\n * @param searchElement the item to search for\n * @param fromIndex the starting index to search from\n * @return `true` if the array includes the element, otherwise `false`\n */\nexport let includes: <T>(target: ArrayLike<T>, searchElement: T, fromIndex?: number) => boolean;\n\n// Util functions for filled implementations\n\nlet toLength: any;\nlet toInteger: any;\nlet normalizeOffset: any;\n\nif (!has('es6-array') || !has('es6-array-fill') || !has('es7-array')) {\n\tconst MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n\t/**\n\t * Ensures a non-negative, non-infinite, safe integer.\n\t *\n\t * @param length The number to validate\n\t * @return A proper length\n\t */\n\ttoLength = function toLength(length: number): number {\n\t\tif (isNaN(length)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlength = Number(length);\n\t\tif (isFinite(length)) {\n\t\t\tlength = Math.floor(length);\n\t\t}\n\t\t// Ensure a non-negative, real, safe integer\n\t\treturn Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n\t};\n\n\t/**\n\t * From ES6 7.1.4 ToInteger()\n\t *\n\t * @param value A value to convert\n\t * @return An integer\n\t */\n\ttoInteger = function toInteger(value: any): number {\n\t\tvalue = Number(value);\n\t\tif (isNaN(value)) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (value === 0 || !isFinite(value)) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn (value > 0 ? 1 : -1) * Math.floor(Math.abs(value));\n\t};\n\n\t/**\n\t * Normalizes an offset against a given length, wrapping it if negative.\n\t *\n\t * @param value The original offset\n\t * @param length The total length to normalize against\n\t * @return If negative, provide a distance from the end (length); otherwise provide a distance from 0\n\t */\n\tnormalizeOffset = function normalizeOffset(value: number, length: number): number {\n\t\treturn value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n\t};\n}\n\nif (!has('es6-array')) {\n\tArray.from = function from(\n\t\tthis: ArrayConstructor,\n\t\tarrayLike: Iterable<any> | ArrayLike<any>,\n\t\tmapFunction?: MapCallback<any, any>,\n\t\tthisArg?: any\n\t): Array<any> {\n\t\tif (arrayLike == null) {\n\t\t\tthrow new TypeError('from: requires an array-like object');\n\t\t}\n\n\t\tif (mapFunction && thisArg) {\n\t\t\tmapFunction = mapFunction.bind(thisArg);\n\t\t}\n\n\t\t/* tslint:disable-next-line:variable-name */\n\t\tconst Constructor = this;\n\t\tconst length: number = toLength((arrayLike as any).length);\n\n\t\t// Support extension\n\t\tconst array: any[] =\n\t\t\ttypeof Constructor === 'function' ? <any[]>Object(new Constructor(length)) : new Array(length);\n\n\t\tif (!isArrayLike(arrayLike) && !isIterable(arrayLike)) {\n\t\t\treturn array;\n\t\t}\n\n\t\t// if this is an array and the normalized length is 0, just return an empty array. this prevents a problem\n\t\t// with the iteration on IE when using a NaN array length.\n\t\tif (isArrayLike(arrayLike)) {\n\t\t\tif (length === 0) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < arrayLike.length; i++) {\n\t\t\t\tarray[i] = mapFunction ? mapFunction(arrayLike[i], i) : arrayLike[i];\n\t\t\t}\n\t\t} else {\n\t\t\tlet i = 0;\n\t\t\tfor (const value of arrayLike) {\n\t\t\t\tarray[i] = mapFunction ? mapFunction(value, i) : value;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\tif ((arrayLike as any).length !== undefined) {\n\t\t\tarray.length = length;\n\t\t}\n\n\t\treturn array;\n\t};\n\n\tArray.of = function of<T>(...items: T[]): Array<T> {\n\t\treturn Array.prototype.slice.call(items);\n\t};\n\n\tArray.prototype.copyWithin = function copyWithin(offset: number, start: number, end?: number) {\n\t\tif (this == null) {\n\t\t\tthrow new TypeError('copyWithin: target must be an array-like object');\n\t\t}\n\n\t\tconst length = toLength(this.length);\n\t\toffset = normalizeOffset(toInteger(offset), length);\n\t\tstart = normalizeOffset(toInteger(start), length);\n\t\tend = normalizeOffset(end === undefined ? length : toInteger(end), length);\n\t\tlet count = Math.min(end! - start, length - offset);\n\n\t\tlet direction = 1;\n\t\tif (offset > start && offset < start + count) {\n\t\t\tdirection = -1;\n\t\t\tstart += count - 1;\n\t\t\toffset += count - 1;\n\t\t}\n\n\t\twhile (count > 0) {\n\t\t\tif (start in this) {\n\t\t\t\tthis[offset] = this[start];\n\t\t\t} else {\n\t\t\t\tdelete this[offset];\n\t\t\t}\n\n\t\t\toffset += direction;\n\t\t\tstart += direction;\n\t\t\tcount--;\n\t\t}\n\n\t\treturn this;\n\t};\n\n\ttype Predicate = (this: void, value: any, index: number, obj: any[]) => boolean;\n\n\tArray.prototype.find = function find(callback: Predicate, thisArg?: {}) {\n\t\tconst index = this.findIndex(callback, thisArg);\n\t\treturn index !== -1 ? this[index] : undefined;\n\t};\n\n\tArray.prototype.findIndex = function findIndex(callback: Predicate, thisArg?: {}): number {\n\t\tconst length = toLength(this.length);\n\n\t\tif (!callback) {\n\t\t\tthrow new TypeError('find: second argument must be a function');\n\t\t}\n\n\t\tif (thisArg) {\n\t\t\tcallback = callback.bind(thisArg);\n\t\t}\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tif (callback(this[i], i, this)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t};\n}\n\nif (!has('es6-array-fill')) {\n\tArray.prototype.fill = function fill(value: any, start?: number, end?: number) {\n\t\tconst length = toLength(this.length);\n\t\tlet i = normalizeOffset(toInteger(start), length);\n\t\tend = normalizeOffset(end === undefined ? length : toInteger(end), length);\n\n\t\twhile (i < (end || 0)) {\n\t\t\tthis[i++] = value;\n\t\t}\n\n\t\treturn this;\n\t};\n}\n\nif (!has('es7-array')) {\n\tArray.prototype.includes = function includes(searchElement, fromIndex = 0) {\n\t\tlet len = toLength(this.length);\n\n\t\tfor (let i = fromIndex; i < len; ++i) {\n\t\t\tconst currentElement = this[i];\n\t\t\tif (\n\t\t\t\tsearchElement === currentElement ||\n\t\t\t\t(searchElement !== searchElement && currentElement !== currentElement)\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n}\n\nfrom = Array.from;\nof = Array.of;\ncopyWithin = wrapNative(Array.prototype.copyWithin);\nfill = wrapNative(Array.prototype.fill);\nfind = wrapNative(Array.prototype.find);\nfindIndex = wrapNative(Array.prototype.findIndex);\nincludes = wrapNative(Array.prototype.includes);\n\nexport default Array;\n","import { Pointer, walk, PointerTarget } from './Pointer';\nimport { getFriendlyDifferenceMessage, isEqual } from './compare';\n\nexport enum OperationType {\n\tADD = 'add',\n\tREMOVE = 'remove',\n\tREPLACE = 'replace',\n\tTEST = 'test'\n}\n\nexport interface BaseOperation<T = any, U = any> {\n\top: OperationType;\n\tpath: Pointer<T, U>;\n}\n\nexport interface AddPatchOperation<T = any, U = any> extends BaseOperation<T, U> {\n\top: OperationType.ADD;\n\tvalue: U;\n}\n\nexport interface RemovePatchOperation<T = any, U = any> extends BaseOperation<T, U> {\n\top: OperationType.REMOVE;\n}\n\nexport interface ReplacePatchOperation<T = any, U = any> extends BaseOperation<T, U> {\n\top: OperationType.REPLACE;\n\tvalue: U;\n}\n\nexport interface TestPatchOperation<T = any, U = any> extends BaseOperation<T, U> {\n\top: OperationType.TEST;\n\tvalue: U;\n}\n\nexport type PatchOperation<T = any, U = any> =\n\t| AddPatchOperation<T, U>\n\t| RemovePatchOperation<T, U>\n\t| ReplacePatchOperation<T, U>\n\t| TestPatchOperation<T, U>;\n\nexport interface PatchResult<T = any, U = any> {\n\tobject: T;\n\tundoOperations: PatchOperation<T, U>[];\n}\n\nfunction add(pointerTarget: PointerTarget, value: any): any {\n\tlet index = parseInt(pointerTarget.segment, 10);\n\tif (Array.isArray(pointerTarget.target) && !isNaN(index)) {\n\t\tpointerTarget.target.splice(index, 0, value);\n\t} else {\n\t\tpointerTarget.target[pointerTarget.segment] = value;\n\t}\n\treturn pointerTarget.object;\n}\n\nfunction replace(pointerTarget: PointerTarget, value: any): any {\n\tlet index = parseInt(pointerTarget.segment, 10);\n\tif (Array.isArray(pointerTarget.target) && !isNaN(index)) {\n\t\tpointerTarget.target.splice(index, 1, value);\n\t} else {\n\t\tpointerTarget.target[pointerTarget.segment] = value;\n\t}\n\treturn pointerTarget.object;\n}\n\nfunction remove(pointerTarget: PointerTarget): any {\n\tif (Array.isArray(pointerTarget.target)) {\n\t\tpointerTarget.target.splice(parseInt(pointerTarget.segment, 10), 1);\n\t} else {\n\t\tdelete pointerTarget.target[pointerTarget.segment];\n\t}\n\treturn pointerTarget.object;\n}\n\nfunction inverse(operation: PatchOperation, state: any): PatchOperation[] {\n\tif (operation.op === OperationType.ADD) {\n\t\tconst op: RemovePatchOperation = {\n\t\t\top: OperationType.REMOVE,\n\t\t\tpath: operation.path\n\t\t};\n\t\tconst test: TestPatchOperation = {\n\t\t\top: OperationType.TEST,\n\t\t\tpath: operation.path,\n\t\t\tvalue: operation.value\n\t\t};\n\t\treturn [test, op];\n\t} else if (operation.op === OperationType.REPLACE) {\n\t\tconst value = operation.path.get(state);\n\t\tlet op: RemovePatchOperation | ReplacePatchOperation;\n\t\tif (value === undefined) {\n\t\t\top = {\n\t\t\t\top: OperationType.REMOVE,\n\t\t\t\tpath: operation.path\n\t\t\t};\n\t\t} else {\n\t\t\top = {\n\t\t\t\top: OperationType.REPLACE,\n\t\t\t\tpath: operation.path,\n\t\t\t\tvalue: operation.path.get(state)\n\t\t\t};\n\t\t}\n\t\tconst test: TestPatchOperation = {\n\t\t\top: OperationType.TEST,\n\t\t\tpath: operation.path,\n\t\t\tvalue: operation.value\n\t\t};\n\t\treturn [test, op];\n\t} else {\n\t\treturn [\n\t\t\t{\n\t\t\t\top: OperationType.ADD,\n\t\t\t\tpath: operation.path,\n\t\t\t\tvalue: operation.path.get(state)\n\t\t\t}\n\t\t];\n\t}\n}\n\nexport class Patch<T = any> {\n\tprivate _operations: PatchOperation<T>[];\n\n\tconstructor(operations: PatchOperation<T> | PatchOperation<T>[]) {\n\t\tthis._operations = Array.isArray(operations) ? operations : [operations];\n\t}\n\n\tpublic apply(object: any): PatchResult<T> {\n\t\tlet undoOperations: PatchOperation<T>[] = [];\n\t\tconst patchedObject = this._operations.reduce((patchedObject, next) => {\n\t\t\tlet object;\n\t\t\tconst pointerTarget = walk(next.path.segments, patchedObject);\n\t\t\tswitch (next.op) {\n\t\t\t\tcase OperationType.ADD:\n\t\t\t\t\tobject = add(pointerTarget, next.value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase OperationType.REPLACE:\n\t\t\t\t\tobject = replace(pointerTarget, next.value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase OperationType.REMOVE:\n\t\t\t\t\tobject = remove(pointerTarget);\n\t\t\t\t\tbreak;\n\t\t\t\tcase OperationType.TEST:\n\t\t\t\t\tconst current = pointerTarget.target[pointerTarget.segment];\n\t\t\t\t\tif (!isEqual(current, next.value)) {\n\t\t\t\t\t\tconst location = next.path.path;\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Test operation failure at \"${location}\". ${getFriendlyDifferenceMessage(\n\t\t\t\t\t\t\t\tnext.value,\n\t\t\t\t\t\t\t\tcurrent\n\t\t\t\t\t\t\t)}.`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn patchedObject;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unknown operation');\n\t\t\t}\n\t\t\tundoOperations = [...inverse(next, patchedObject), ...undoOperations];\n\t\t\treturn object;\n\t\t}, object);\n\t\treturn { object: patchedObject, undoOperations };\n\t}\n}\n","import Set from '../../shim/Set';\nimport { from } from '../../shim/array';\n\nexport function isObject(value: any): value is Object {\n\treturn Object.prototype.toString.call(value) === '[object Object]';\n}\n\nexport function isEqual(a: any, b: any): boolean {\n\tif (Array.isArray(a) && Array.isArray(b)) {\n\t\treturn a.length === b.length && a.every((element: any, i: number) => isEqual(element, b[i]));\n\t} else if (isObject(a) && isObject(b)) {\n\t\tconst keysForA = Object.keys(a).sort();\n\t\tconst keysForB = Object.keys(b).sort();\n\t\treturn isEqual(keysForA, keysForB) && keysForA.every((key) => isEqual(a[key], b[key]));\n\t} else {\n\t\treturn a === b;\n\t}\n}\n\nfunction findArrayDifference(a: any[], b: any[]): number {\n\tconst min = Math.min(a.length, b.length);\n\tfor (let i = 0; i < min; i++) {\n\t\tif (!isEqual(a[i], b[i])) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tif (a.length !== b.length) {\n\t\treturn min;\n\t}\n\n\treturn -1;\n}\n\nfunction findShallowObjectKeyDifference(a: { [key: string]: any }, b: { [key: string]: any }): string | undefined {\n\tconst keys = from(new Set([...Object.keys(a), ...Object.keys(b)]).values());\n\n\tfor (let key of keys) {\n\t\tif (!isEqual(a[key], b[key])) {\n\t\t\treturn key;\n\t\t}\n\t}\n}\n\nexport function getFriendlyDifferenceMessage(expected: any, actual: any): string {\n\tconst actualType = getFriendlyTypeName(actual);\n\tconst expectedType = getFriendlyTypeName(expected);\n\n\tif (Array.isArray(expected) && Array.isArray(actual)) {\n\t\tconst offset = findArrayDifference(expected, actual);\n\n\t\tif (offset !== -1) {\n\t\t\treturn `Arrays differed at offset ${offset}`;\n\t\t}\n\t\treturn 'Arrays are identical';\n\t} else if (isObject(expected) && isObject(actual)) {\n\t\tconst key = findShallowObjectKeyDifference(expected, actual);\n\n\t\tif (key) {\n\t\t\tconst expectedValue = expected[key];\n\t\t\tconst actualValue = actual[key];\n\t\t\treturn `Expected \"${expectedValue}\" for object property ${key} but got \"${actualValue}\" instead`;\n\t\t}\n\t\treturn 'Objects are identical';\n\t} else if (!isEqual(expected, actual)) {\n\t\tif (actualType === expectedType) {\n\t\t\treturn `Expected \"${expected}\" but got \"${actual}\" instead`;\n\t\t} else {\n\t\t\treturn `Expected ${expectedType} \"${expected}\" but got ${actualType} \"${actual}\" instead`;\n\t\t}\n\t}\n\n\treturn 'Values are identical';\n}\n\nfunction getFriendlyTypeName(value: any): string {\n\tif (Array.isArray(value)) {\n\t\treturn 'array';\n\t}\n\treturn typeof value;\n}\n","import { Evented } from '../core/Evented';\nimport { Patch, PatchOperation } from './state/Patch';\nimport { Pointer } from './state/Pointer';\nimport Map from '../shim/Map';\n\n/**\n * The \"path\" to a value of type T on and object of type M. The path string is a JSON Pointer to the location of\n * `value` within `state`.\n *\n */\nexport interface Path<M, T> {\n\tpath: string;\n\tstate: M;\n\tvalue: T;\n}\n\n/**\n * An interface that enables typed traversal of an arbitrary type M. `path` and `at` can be used to generate\n * `Path`s that allow access to properties within M via the `get` method. The returned `Path`s can also be passed to the\n * utility methods `add`, `replace`, and `delete` in order to generate typed operations for modifying the state of a store.\n */\nexport interface State<M> {\n\tget<S>(path: Path<M, S>): S;\n\tat<S extends Path<M, Array<any>>>(path: S, index: number): Path<M, S['value'][0]>;\n\tpath: StatePaths<M>;\n}\n\nexport interface StatePaths<M> {\n\t<T, P0 extends keyof Required<T>>(path: Path<M, T>, a: P0): Path<M, Required<T>[P0]>;\n\t<T, P0 extends keyof T, P1 extends keyof Required<T>[P0]>(path: Path<M, T>, a: P0, b: P1): Path<\n\t\tM,\n\t\tRequired<Required<T>[P0]>[P1]\n\t>;\n\t<T, P0 extends keyof T, P1 extends keyof Required<T>[P0], P2 extends keyof Required<Required<T>[P0]>[P1]>(\n\t\tpath: Path<M, T>,\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2\n\t): Path<M, Required<Required<Required<T>[P0]>[P1]>[P2]>;\n\t<\n\t\tT,\n\t\tP0 extends keyof T,\n\t\tP1 extends keyof Required<T>[P0],\n\t\tP2 extends keyof Required<Required<T>[P0]>[P1],\n\t\tP3 extends keyof Required<Required<Required<T>[P0]>[P1]>[P2]\n\t>(\n\t\tpath: Path<M, T>,\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2,\n\t\td: P3\n\t): Path<M, Required<Required<Required<Required<T>[P0]>[P1]>[P2]>[P3]>;\n\t<\n\t\tT,\n\t\tP0 extends keyof T,\n\t\tP1 extends keyof Required<T>[P0],\n\t\tP2 extends keyof Required<Required<T>[P0]>[P1],\n\t\tP3 extends keyof Required<Required<Required<T>[P0]>[P1]>[P2],\n\t\tP4 extends keyof Required<Required<Required<Required<T>[P0]>[P1]>[P2]>[P3]\n\t>(\n\t\tpath: Path<M, T>,\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2,\n\t\td: P3,\n\t\te: P4\n\t): Path<M, Required<Required<Required<Required<Required<T>[P0]>[P1]>[P2]>[P3]>[P4]>;\n\t<P0 extends keyof M>(a: P0): Path<M, Required<M>[P0]>;\n\t<P0 extends keyof M, P1 extends keyof Required<M>[P0]>(a: P0, b: P1): Path<M, Required<Required<M>[P0]>[P1]>;\n\t<P0 extends keyof M, P1 extends keyof Required<M>[P0], P2 extends keyof Required<Required<M>[P0]>[P1]>(\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2\n\t): Path<M, Required<Required<Required<M>[P0]>[P1]>[P2]>;\n\t<\n\t\tP0 extends keyof M,\n\t\tP1 extends keyof Required<M>[P0],\n\t\tP2 extends keyof Required<Required<M>[P0]>[P1],\n\t\tP3 extends keyof Required<Required<Required<M>[P0]>[P1]>[P2]\n\t>(\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2,\n\t\td: P3\n\t): Path<M, Required<Required<Required<Required<M>[P0]>[P1]>[P2]>[P3]>;\n\t<\n\t\tP0 extends keyof M,\n\t\tP1 extends keyof Required<M>[P0],\n\t\tP2 extends keyof Required<Required<M>[P0]>[P1],\n\t\tP3 extends keyof Required<Required<Required<M>[P0]>[P1]>[P2],\n\t\tP4 extends keyof Required<Required<Required<Required<M>[P0]>[P1]>[P2]>[P3]\n\t>(\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2,\n\t\td: P3,\n\t\te: P4\n\t): Path<M, Required<Required<Required<Required<Required<M>[P0]>[P1]>[P2]>[P3]>[P4]>;\n}\n\ninterface OnChangeCallback {\n\tcallbackId: number;\n\tcallback: () => void;\n}\n\ninterface OnChangeValue {\n\tcallbacks: OnChangeCallback[];\n\tpreviousValue: any;\n}\n\nfunction isString(segment?: string): segment is string {\n\treturn typeof segment === 'string';\n}\n\nexport interface MutableState<T = any> extends State<T> {\n\t/**\n\t * Applies store operations to state and returns the undo operations\n\t */\n\tapply(operations: PatchOperation<T>[]): PatchOperation<T>[];\n}\n\nexport class DefaultState<T = any> implements MutableState<T> {\n\t/**\n\t * The private state object\n\t */\n\tprivate _state = {} as T;\n\n\t/**\n\t * Returns the state at a specific pointer path location.\n\t */\n\tpublic get = <U = any>(path: Path<T, U>): U => {\n\t\treturn path.value;\n\t};\n\n\t/**\n\t * Applies store operations to state and returns the undo operations\n\t */\n\tpublic apply = (operations: PatchOperation<T>[]): PatchOperation<T>[] => {\n\t\tconst patch = new Patch(operations);\n\t\tconst patchResult = patch.apply(this._state);\n\t\tthis._state = patchResult.object;\n\t\treturn patchResult.undoOperations;\n\t};\n\n\tpublic at = <U = any>(path: Path<T, Array<U>>, index: number): Path<T, U> => {\n\t\tconst array = this.get(path);\n\t\tconst value = array && array[index];\n\n\t\treturn {\n\t\t\tpath: `${path.path}/${index}`,\n\t\t\tstate: path.state,\n\t\t\tvalue\n\t\t};\n\t};\n\n\tpublic path: State<T>['path'] = (path: string | Path<T, any>, ...segments: (string | undefined)[]) => {\n\t\tif (typeof path === 'string') {\n\t\t\tsegments = [path, ...segments];\n\t\t} else {\n\t\t\tsegments = [...new Pointer(path.path).segments, ...segments];\n\t\t}\n\n\t\tconst stringSegments = segments.filter<string>(isString);\n\t\tconst hasMultipleSegments = stringSegments.length > 1;\n\t\tconst pointer = new Pointer(hasMultipleSegments ? stringSegments : stringSegments[0] || '');\n\n\t\treturn {\n\t\t\tpath: pointer.path,\n\t\t\tstate: this._state,\n\t\t\tvalue: pointer.get(this._state)\n\t\t};\n\t};\n}\n\n/**\n * Application state store\n */\nexport class Store<T = any> extends Evented implements MutableState<T> {\n\tprivate _adapter: MutableState<T> = new DefaultState<T>();\n\n\tprivate _changePaths = new Map<string, OnChangeValue>();\n\n\tprivate _callbackId = 0;\n\n\t/**\n\t * Returns the state at a specific pointer path location.\n\t */\n\tpublic get = <U = any>(path: Path<T, U>): U => {\n\t\treturn this._adapter.get(path);\n\t};\n\n\tconstructor(options?: { state?: MutableState<T> }) {\n\t\tsuper();\n\t\tif (options && options.state) {\n\t\t\tthis._adapter = options.state;\n\t\t\tthis.path = this._adapter.path.bind(this._adapter);\n\t\t}\n\t}\n\n\t/**\n\t * Applies store operations to state and returns the undo operations\n\t */\n\tpublic apply = (operations: PatchOperation<T>[], invalidate: boolean = false): PatchOperation<T>[] => {\n\t\tconst result = this._adapter.apply(operations);\n\n\t\tif (invalidate) {\n\t\t\tthis.invalidate();\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tpublic at = <U = any>(path: Path<T, Array<U>>, index: number): Path<T, U> => {\n\t\treturn this._adapter.at(path, index);\n\t};\n\n\tpublic onChange = <U = any>(paths: Path<T, U> | Path<T, U>[], callback: () => void) => {\n\t\tconst callbackId = this._callbackId;\n\t\tif (!Array.isArray(paths)) {\n\t\t\tpaths = [paths];\n\t\t}\n\t\tpaths.forEach((path) => this._addOnChange(path, callback, callbackId));\n\t\tthis._callbackId += 1;\n\t\treturn {\n\t\t\tremove: () => {\n\t\t\t\t(paths as Path<T, U>[]).forEach((path) => {\n\t\t\t\t\tconst onChange = this._changePaths.get(path.path);\n\t\t\t\t\tif (onChange) {\n\t\t\t\t\t\tonChange.callbacks = onChange.callbacks.filter((callback) => {\n\t\t\t\t\t\t\treturn callback.callbackId !== callbackId;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n\n\tprivate _addOnChange = <U = any>(path: Path<T, U>, callback: () => void, callbackId: number): void => {\n\t\tlet changePaths = this._changePaths.get(path.path);\n\t\tif (!changePaths) {\n\t\t\tchangePaths = { callbacks: [], previousValue: this.get(path) };\n\t\t}\n\t\tchangePaths.callbacks.push({ callbackId, callback });\n\t\tthis._changePaths.set(path.path, changePaths);\n\t};\n\n\tprivate _runOnChanges() {\n\t\tconst callbackIdsCalled: number[] = [];\n\t\tthis._changePaths.forEach((value: OnChangeValue, path: string) => {\n\t\t\tconst { previousValue, callbacks } = value;\n\t\t\tconst pointer = new Pointer(path);\n\t\t\tconst newValue = pointer.segments.length\n\t\t\t\t? (this._adapter as any).path(pointer.segments[0] as keyof T, ...pointer.segments.slice(1)).value\n\t\t\t\t: undefined;\n\t\t\tif (previousValue !== newValue) {\n\t\t\t\tthis._changePaths.set(path, { callbacks, previousValue: newValue });\n\t\t\t\tcallbacks.forEach((callbackItem) => {\n\t\t\t\t\tconst { callback, callbackId } = callbackItem;\n\t\t\t\t\tif (callbackIdsCalled.indexOf(callbackId) === -1) {\n\t\t\t\t\t\tcallbackIdsCalled.push(callbackId);\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Emits an invalidation event\n\t */\n\tpublic invalidate(): any {\n\t\tthis._runOnChanges();\n\t\tthis.emit({ type: 'invalidate' });\n\t}\n\n\tpublic path: State<T>['path'] = this._adapter.path.bind(this._adapter);\n}\n\nexport default Store;\n","import { destroy, invalidator, create } from '../vdom';\nimport injector from '../middleware/injector';\nimport Store, { StatePaths, Path } from '../../stores/Store';\nimport { Process } from '../../stores/process';\n\nconst factory = create({ destroy, invalidator, injector });\n\nexport const createStoreMiddleware = <S = any>(initial?: (store: Store<S>) => void) => {\n\tlet store = new Store<S>();\n\tlet initialized = false;\n\tinitial && initial(store);\n\tconst storeMiddleware = factory(({ middleware: { destroy, invalidator, injector } }) => {\n\t\tconst handles: any[] = [];\n\t\tdestroy(() => {\n\t\t\tlet handle: any;\n\t\t\twhile ((handle = handles.pop())) {\n\t\t\t\thandle();\n\t\t\t}\n\t\t});\n\t\tif (!initialized) {\n\t\t\tconst injectedStore = injector.get<Store<S>>('state');\n\t\t\tif (injectedStore) {\n\t\t\t\tstore = injectedStore;\n\t\t\t}\n\t\t\tinitialized = true;\n\t\t}\n\t\tconst registeredPaths: string[] = [];\n\t\tconst path: StatePaths<S> = (path: any, ...segments: any) => {\n\t\t\treturn (store as any).path(path, ...segments);\n\t\t};\n\t\treturn {\n\t\t\tget<U = any>(path: Path<S, U>): U {\n\t\t\t\tif (registeredPaths.indexOf(path.path) === -1) {\n\t\t\t\t\tconst handle = store.onChange(path, () => {\n\t\t\t\t\t\tinvalidator();\n\t\t\t\t\t});\n\t\t\t\t\thandles.push(() => handle.remove());\n\t\t\t\t\tregisteredPaths.push(path.path);\n\t\t\t\t}\n\t\t\t\treturn store.get(path);\n\t\t\t},\n\t\t\tpath,\n\t\t\tat<U = any>(path: Path<S, U[]>, index: number) {\n\t\t\t\treturn store.at(path, index);\n\t\t\t},\n\t\t\texecutor<T extends Process<any, any>>(process: T): ReturnType<T> {\n\t\t\t\treturn process(store) as any;\n\t\t\t}\n\t\t};\n\t});\n\treturn storeMiddleware;\n};\n\nexport default createStoreMiddleware;\n","import { isThenable } from '../shim/Promise';\nimport { PatchOperation } from './state/Patch';\nimport { replace, remove } from './state/operations';\nimport { Path, State, Store } from './Store';\nimport Map from '../shim/Map';\nimport has from '../core/has';\n\n/**\n * Default Payload interface\n */\nexport interface DefaultPayload {\n\t[index: string]: any;\n}\n\n/**\n * The arguments passed to a `Command`\n */\nexport interface CommandRequest<T = any, P extends object = DefaultPayload> extends State<T> {\n\tpayload: P;\n\tstate: T;\n}\n\n/**\n * A command factory interface. Returns the passed command. This provides a way to automatically infer and/or\n * verify the type of multiple commands without explicitly specifying the generic for each command\n */\nexport interface CommandFactory<T = any, P extends object = DefaultPayload> {\n\t<R extends object = P>(command: AsyncCommandWithOps<T, R>): AsyncCommandWithOps<T, R>;\n\t<R extends object = P>(command: SyncCommandWithOps<T, R>): SyncCommandWithOps<T, R>;\n\t<R extends object = P>(command: AsyncCommand<T, R>): AsyncCommand<T, R>;\n\t<R extends object = P>(command: SyncCommand<T, R>): SyncCommand<T, R>;\n}\n\nexport interface AsyncCommandWithOps<T = any, P extends object = DefaultPayload> {\n\t(request: CommandRequest<T, P>): Promise<PatchOperation<T>[]>;\n}\n\nexport interface SyncCommandWithOps<T = any, P extends object = DefaultPayload> {\n\t(request: CommandRequest<T, P>): PatchOperation<T>[];\n}\n\nexport interface AsyncCommand<T = any, P extends object = DefaultPayload> {\n\t(request: CommandRequest<T, P>): Promise<void>;\n}\n\nexport interface SyncCommand<T = any, P extends object = DefaultPayload> {\n\t(request: CommandRequest<T, P>): void;\n}\n\n/**\n * Command that returns patch operations based on the command request\n */\nexport type Command<T = any, P extends object = DefaultPayload> =\n\t| SyncCommand<T, P>\n\t| AsyncCommand<T, P>\n\t| SyncCommandWithOps<T, P>\n\t| AsyncCommandWithOps<T, P>;\n\n/**\n * Transformer function\n */\nexport interface Transformer<P extends object = DefaultPayload, R extends object = DefaultPayload> {\n\t(payload: R): P;\n}\n\n/**\n * A process that returns an executor using a Store and Transformer\n */\nexport interface Process<T = any, P extends object = DefaultPayload> {\n\t<R extends object = DefaultPayload>(store: Store<T>, transformer: Transformer<P, R>): ProcessExecutor<T, P, R>;\n\t(store: Store<T>): ProcessExecutor<T, P, P>;\n}\n\n/**\n * Represents an error from a ProcessExecutor\n */\nexport interface ProcessError<T = any> {\n\terror: Error | null;\n\tcommand?: Command<T, any>[] | Command<T, any>;\n}\n\nexport interface ProcessResultExecutor<T = any> {\n\t<P extends object = DefaultPayload, R extends object = DefaultPayload>(\n\t\tprocess: Process<T, P>,\n\t\tpayload: R,\n\t\ttransformer: Transformer<P, R>\n\t): Promise<ProcessResult<T, P> | ProcessError<T>>;\n\t<P extends object = object>(process: Process<T, P>, payload: P): Promise<ProcessResult<T, P> | ProcessError<T>>;\n}\n\n/**\n * Represents a successful result from a ProcessExecutor\n */\nexport interface ProcessResult<T = any, P extends object = DefaultPayload> extends State<T> {\n\texecutor: ProcessResultExecutor<T>;\n\tstore: Store<T>;\n\toperations: PatchOperation<T>[];\n\tundoOperations: PatchOperation<T>[];\n\tapply: (operations: PatchOperation<T>[], invalidate?: boolean) => PatchOperation<T>[];\n\tpayload: P;\n\tid: string;\n\terror?: ProcessError<T> | null;\n}\n\n/**\n * Runs a process for the given arguments.\n */\nexport interface ProcessExecutor<T = any, P extends object = DefaultPayload, R extends object = DefaultPayload> {\n\t(payload: R): Promise<ProcessResult<T, P>>;\n}\n\nexport interface ProcessCallback<T = any, P extends object = DefaultPayload> {\n\t(): {\n\t\tbefore?: ProcessCallbackBefore<T, P>;\n\t\tafter?: ProcessCallbackAfter<T>;\n\t};\n}\n\n/**\n * Callback for a process, returns an error as the first argument\n */\nexport interface ProcessCallbackAfter<T = any> {\n\t(error: ProcessError<T> | null, result: ProcessResult<T>): void;\n}\n\nexport interface ProcessCallbackBefore<T = any, P extends object = DefaultPayload> {\n\t(payload: P, store: Store<T>, id: string): void | Promise<void>;\n}\n\n/**\n * Function for undoing operations\n */\nexport interface Undo {\n\t(): void;\n}\n\n/**\n * ProcessCallbackDecorator callback\n */\ninterface ProcessCallbackDecorator {\n\t(callback?: ProcessCallback): ProcessCallback;\n}\n\n/**\n * CreateProcess factory interface\n */\nexport interface CreateProcess<T = any, P extends object = DefaultPayload> {\n\t(id: string, commands: (Command<T, P>[] | Command<T, P>)[], callback?: ProcessCallback<T>): Process<T, P>;\n}\n\n/**\n * Creates a command factory with the specified type\n */\nexport function createCommandFactory<T, P extends object = DefaultPayload>(): CommandFactory<T, P> {\n\tfunction commandFactory<R extends object = P>(command: AsyncCommand<T, R>): AsyncCommand<T, R>;\n\tfunction commandFactory<R extends object = P>(command: SyncCommand<T, R>): SyncCommand<T, R>;\n\tfunction commandFactory<R extends object = P>(command: AsyncCommandWithOps<T, R>): AsyncCommandWithOps<T, R>;\n\tfunction commandFactory<R extends object = P>(command: SyncCommandWithOps<T, R>): SyncCommandWithOps<T, R>;\n\tfunction commandFactory<R extends object = P>(command: Command<T, R>): Command<T, R> {\n\t\treturn command;\n\t}\n\treturn commandFactory;\n}\n\n/**\n * Commands that can be passed to a process\n */\nexport type Commands<T = any, P extends object = DefaultPayload> = (Command<T, P>[] | Command<T, P>)[];\n\nconst processMap = new Map();\nconst valueSymbol = Symbol('value');\n\nexport function isStateProxy(value: any) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\treturn Boolean(value[valueSymbol]);\n}\n\nexport function getProcess(id: string) {\n\treturn processMap.get(id);\n}\n\nconst proxyError = 'State updates are not available on legacy browsers';\n\nfunction removeProxies(value: any) {\n\tif (typeof value === 'object' && value !== null) {\n\t\tif (value[valueSymbol]) {\n\t\t\tvalue = value[valueSymbol];\n\t\t}\n\n\t\tconst newValue: typeof value = Array.isArray(value) ? [] : {};\n\t\tconst keys = Object.keys(value);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tnewValue[keys[i]] = removeProxies(value[keys[i]]);\n\t\t}\n\n\t\tvalue = newValue;\n\t}\n\n\treturn value;\n}\n\nexport function processExecutor<T = any, P extends object = DefaultPayload>(\n\tid: string,\n\tcommands: Commands<T, P>,\n\tstore: Store<T>,\n\tbefore: ProcessCallbackBefore | undefined,\n\tafter: ProcessCallbackAfter | undefined,\n\ttransformer: Transformer<P> | undefined\n): ProcessExecutor<T, any, any> {\n\tconst { apply, get, path, at } = store;\n\tfunction executor(\n\t\tprocess: Process,\n\t\tpayload: any,\n\t\ttransformer?: Transformer\n\t): Promise<ProcessResult | ProcessError> {\n\t\treturn process(store)(payload);\n\t}\n\n\treturn async (executorPayload: P): Promise<ProcessResult<T, P>> => {\n\t\tconst operations: PatchOperation[] = [];\n\t\tconst commandsCopy = [...commands];\n\t\tlet undoOperations: PatchOperation[] = [];\n\t\tlet command = commandsCopy.shift();\n\t\tlet error: ProcessError | null = null;\n\t\tconst payload = transformer ? transformer(executorPayload) : executorPayload;\n\n\t\tif (before) {\n\t\t\tlet result = before(payload, store, id);\n\t\t\tif (result) {\n\t\t\t\tawait result;\n\t\t\t}\n\t\t}\n\n\t\tfunction createProxy() {\n\t\t\tconst proxies = new Map<string, any>();\n\t\t\tconst proxied = new Map<string, any>();\n\n\t\t\tconst proxyOperations: PatchOperation[] = [];\n\t\t\tconst createHandler = (partialPath?: Path<T, any>) => ({\n\t\t\t\tget(obj: any, prop: string): any {\n\t\t\t\t\tconst fullPath = partialPath ? path(partialPath, prop) : path(prop as keyof T);\n\t\t\t\t\tconst stringPath = fullPath.path;\n\n\t\t\t\t\tif (typeof prop === 'symbol' && prop === valueSymbol) {\n\t\t\t\t\t\treturn proxied.get(stringPath);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet value = partialPath || obj.hasOwnProperty(prop) ? obj[prop] : get(fullPath);\n\n\t\t\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t\t\tlet proxiedValue;\n\t\t\t\t\t\tif (!proxies.has(stringPath)) {\n\t\t\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\t\t\tvalue = value.slice();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvalue = { ...value };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tproxiedValue = new Proxy(value, createHandler(fullPath));\n\t\t\t\t\t\t\tproxies.set(stringPath, proxiedValue);\n\t\t\t\t\t\t\tproxied.set(stringPath, value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tproxiedValue = proxies.get(stringPath);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobj[prop] = value;\n\t\t\t\t\t\treturn proxiedValue;\n\t\t\t\t\t}\n\n\t\t\t\t\tobj[prop] = value;\n\t\t\t\t\treturn value;\n\t\t\t\t},\n\n\t\t\t\tset(obj: any, prop: string, value: any) {\n\t\t\t\t\tvalue = removeProxies(value);\n\n\t\t\t\t\tproxyOperations.push(replace(partialPath ? path(partialPath, prop) : path(prop as keyof T), value));\n\t\t\t\t\tobj[prop] = value;\n\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\n\t\t\t\tdeleteProperty(obj: any, prop: string) {\n\t\t\t\t\tproxyOperations.push(remove(partialPath ? path(partialPath, prop) : path(prop as keyof T)));\n\t\t\t\t\tdelete obj[prop];\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn { proxy: new Proxy({}, createHandler()) as T, operations: proxyOperations };\n\t\t}\n\n\t\ttry {\n\t\t\twhile (command) {\n\t\t\t\tlet results = [];\n\t\t\t\tconst commandArray = Array.isArray(command) ? command : [command];\n\n\t\t\t\tresults = commandArray.map((commandFunction: Command<T, P>) => {\n\t\t\t\t\tlet state: T;\n\t\t\t\t\tlet proxyOperations: PatchOperation[] = [];\n\t\t\t\t\tif (typeof Proxy !== 'undefined') {\n\t\t\t\t\t\tconst { operations, proxy } = createProxy();\n\t\t\t\t\t\tstate = proxy;\n\t\t\t\t\t\tproxyOperations = operations;\n\t\t\t\t\t}\n\t\t\t\t\tlet result = commandFunction({\n\t\t\t\t\t\tat,\n\t\t\t\t\t\tget,\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tpayload,\n\t\t\t\t\t\tget state() {\n\t\t\t\t\t\t\tif (typeof Proxy === 'undefined') {\n\t\t\t\t\t\t\t\tthrow new Error(proxyError);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn state;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (isThenable(result)) {\n\t\t\t\t\t\treturn result.then((result) => {\n\t\t\t\t\t\t\tresult = result ? [...proxyOperations, ...result] : [...proxyOperations];\n\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult =\n\t\t\t\t\t\t\tresult && Array.isArray(result) ? [...proxyOperations, ...result] : [...proxyOperations];\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tlet resolvedResults: PatchOperation[][];\n\t\t\t\tif (results.some(isThenable)) {\n\t\t\t\t\tresolvedResults = await Promise.all(results);\n\t\t\t\t} else {\n\t\t\t\t\tresolvedResults = results as PatchOperation[][];\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < results.length; i++) {\n\t\t\t\t\toperations.push(...resolvedResults[i]);\n\t\t\t\t\tundoOperations = [...apply(resolvedResults[i]), ...undoOperations];\n\t\t\t\t}\n\n\t\t\t\tstore.invalidate();\n\t\t\t\tcommand = commandsCopy.shift();\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (e.message === proxyError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terror = { error: e, command };\n\t\t}\n\n\t\tafter &&\n\t\t\tafter(error, {\n\t\t\t\tundoOperations,\n\t\t\t\tstore,\n\t\t\t\tid,\n\t\t\t\toperations,\n\t\t\t\tapply,\n\t\t\t\tat,\n\t\t\t\tget,\n\t\t\t\tpath,\n\t\t\t\texecutor,\n\t\t\t\tpayload\n\t\t\t});\n\t\treturn Promise.resolve({\n\t\t\tstore,\n\t\t\tundoOperations,\n\t\t\tid,\n\t\t\terror,\n\t\t\toperations,\n\t\t\tapply,\n\t\t\tat,\n\t\t\tget,\n\t\t\tpath,\n\t\t\texecutor,\n\t\t\tpayload\n\t\t});\n\t};\n}\n/**\n * Factories a process using the provided commands and an optional callback. Returns an executor used to run the process.\n *\n * @param commands The commands for the process\n * @param callback Callback called after the process is completed\n */\nexport function createProcess<T = any, P extends object = DefaultPayload>(\n\tid: string,\n\tcommands: Commands<T, P>,\n\tcallbacks?: ProcessCallback | ProcessCallback[]\n): Process<T, P> {\n\tcallbacks = Array.isArray(callbacks) ? callbacks : callbacks ? [callbacks] : [];\n\n\tconst callback = callbacks.length\n\t\t? callbacks.reduce((callback, nextCallback) => {\n\t\t\t\treturn combineCallbacks(nextCallback, id)(callback);\n\t\t  })\n\t\t: undefined;\n\n\tconst { before = undefined, after = undefined } = callback ? callback() : {};\n\n\tprocessMap.set(id, [id, commands, before, after]);\n\treturn (store: Store<T>, transformer?: Transformer<P>) =>\n\t\tprocessExecutor(id, commands, store, before, after, transformer);\n}\n\n/**\n * Creates a process factory that will create processes with the specified callback decorators applied.\n * @param callbacks array of process callback to be used by the returned factory.\n * @param initializers array of process initializers to be used by the returned factory.\n */\nexport function createProcessFactoryWith(callbacks: ProcessCallback[]) {\n\treturn <S, P extends object>(\n\t\tid: string,\n\t\tcommands: (Command<S, P>[] | Command<S, P>)[],\n\t\tcallback?: ProcessCallback<S>\n\t): Process<S, P> => {\n\t\treturn createProcess(id, commands, callback ? [...callbacks, callback] : callbacks);\n\t};\n}\n\n/**\n * Creates a `ProcessCallbackDecorator` from a `ProcessCallback`.\n * @param processCallback the process callback to convert to a decorator.\n * @param id process id to be passed to the before callback\n */\nfunction combineCallbacks(processCallback: ProcessCallback, id: string): ProcessCallbackDecorator {\n\tconst { before, after } = processCallback();\n\treturn (previousCallback?: ProcessCallback) => {\n\t\tconst { before: previousBefore = undefined, after: previousAfter = undefined } = previousCallback\n\t\t\t? previousCallback()\n\t\t\t: {};\n\t\treturn () => ({\n\t\t\tafter(error: ProcessError | null, result: ProcessResult) {\n\t\t\t\tif (previousAfter) {\n\t\t\t\t\tpreviousAfter(error, result);\n\t\t\t\t}\n\n\t\t\t\tif (after) {\n\t\t\t\t\tafter(error, result);\n\t\t\t\t}\n\t\t\t},\n\t\t\tbefore(payload: DefaultPayload, store: Store<any>) {\n\t\t\t\tif (previousBefore) {\n\t\t\t\t\tpreviousBefore(payload, store, id);\n\t\t\t\t}\n\n\t\t\t\tif (before) {\n\t\t\t\t\tbefore(payload, store, id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n}\n\nexport function createCallbackDecorator(\n\tcallback: ProcessCallbackAfter\n): (callbacks?: ProcessCallback[]) => ProcessCallback[] {\n\tif (has('dojo-debug')) {\n\t\tconsole.warn(\n\t\t\t'Process using the the legacy middleware API. Please update to use the latest API, see https://github.com/dojo/framework/blob/master/docs/V5-Migration-Guide.md for details.'\n\t\t);\n\t}\n\tconst convertedCallback = () => ({\n\t\tafter: callback\n\t});\n\treturn (callbacks: ProcessCallback[] = []) => {\n\t\treturn [convertedCallback, ...callbacks];\n\t};\n}\n","import {\n\tRemovePatchOperation,\n\tReplacePatchOperation,\n\tAddPatchOperation,\n\tTestPatchOperation,\n\tOperationType\n} from './Patch';\nimport { Pointer } from './Pointer';\nimport { Path } from '../Store';\n\nexport function add<T = any, U = any>(path: Path<T, U>, value: U): AddPatchOperation<T, U> {\n\treturn {\n\t\top: OperationType.ADD,\n\t\tpath: new Pointer(path.path),\n\t\tvalue\n\t};\n}\n\nexport function replace<T = any, U = any>(path: Path<T, U>, value: U): ReplacePatchOperation<T, U> {\n\treturn {\n\t\top: OperationType.REPLACE,\n\t\tpath: new Pointer(path.path),\n\t\tvalue\n\t};\n}\n\nexport function remove<T = any, U = any>(path: Path<T, U>): RemovePatchOperation<T, U> {\n\treturn {\n\t\top: OperationType.REMOVE,\n\t\tpath: new Pointer(path.path)\n\t};\n}\n\nexport function test<T = any, U = any>(path: Path<T, U>, value: U): TestPatchOperation<T, U> {\n\treturn {\n\t\top: OperationType.TEST,\n\t\tpath: new Pointer(path.path),\n\t\tvalue\n\t};\n}\n","import { create, destroy } from '../vdom';\nimport Map from '../../shim/Map';\n\nconst factory = create({ destroy });\n\nexport const cache = factory(({ middleware: { destroy } }) => {\n\tconst cacheMap = new Map<string, any>();\n\tdestroy(() => {\n\t\tcacheMap.clear();\n\t});\n\treturn {\n\t\tget<T = any>(key: any): T | undefined {\n\t\t\treturn cacheMap.get(key);\n\t\t},\n\t\tset<T = any>(key: any, value: T): void {\n\t\t\tcacheMap.set(key, value);\n\t\t},\n\t\tclear(): void {\n\t\t\tcacheMap.clear();\n\t\t}\n\t};\n});\n\nexport default cache;\n","import { create, diffProperty, invalidator } from '../core/vdom';\nimport injector from '../core/middleware/injector';\nimport cache from '../core/middleware/cache';\nimport { DNode } from '../core/interfaces';\nimport { MatchDetails } from './interfaces';\nimport Router from './Router';\n\nexport interface OutletProperties {\n\trenderer: (matchDetails: MatchDetails) => DNode | DNode[];\n\tid: string;\n\trouterKey?: string;\n}\n\nconst factory = create({ cache, injector, diffProperty, invalidator }).properties<OutletProperties>();\n\nexport const Outlet = factory(function Outlet({\n\tmiddleware: { cache, injector, diffProperty, invalidator },\n\tproperties\n}) {\n\tconst { renderer, id, routerKey = 'router' } = properties();\n\tconst currentHandle = cache.get<Function>('handle');\n\tif (!currentHandle) {\n\t\tconst handle = injector.subscribe(routerKey);\n\t\tif (handle) {\n\t\t\tcache.set('handle', handle);\n\t\t}\n\t}\n\tdiffProperty('routerKey', (current: OutletProperties, next: OutletProperties) => {\n\t\tconst { routerKey: currentRouterKey = 'router' } = current;\n\t\tconst { routerKey = 'router' } = next;\n\t\tif (routerKey !== currentRouterKey) {\n\t\t\tconst currentHandle = cache.get<Function>('handle');\n\t\t\tif (currentHandle) {\n\t\t\t\tcurrentHandle();\n\t\t\t}\n\t\t\tconst handle = injector.subscribe(routerKey);\n\t\t\tif (handle) {\n\t\t\t\tcache.set('handle', handle);\n\t\t\t}\n\t\t}\n\t\tinvalidator();\n\t});\n\tconst router = injector.get<Router>(routerKey);\n\n\tif (router) {\n\t\tconst outletContext = router.getOutlet(id);\n\t\tif (outletContext) {\n\t\t\tconst { queryParams, params, type, isError, isExact } = outletContext;\n\t\t\tconst result = renderer({ queryParams, params, type, isError, isExact, router });\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n});\n\nexport default Outlet;\n","import { create, v } from '../core/vdom';\nimport injector from '../core/middleware/injector';\nimport { VNodeProperties } from '../core/interfaces';\nimport { Params } from './interfaces';\nimport Router from './Router';\n\nexport interface LinkProperties extends VNodeProperties {\n\tkey?: string;\n\trouterKey?: string;\n\tisOutlet?: boolean;\n\tparams?: Params;\n\tonClick?: (event: MouseEvent) => void;\n\tto: string;\n}\n\nconst factory = create({ injector }).properties<LinkProperties>();\n\nexport const Link = factory(function Link({ middleware: { injector }, properties, children }) {\n\tlet { routerKey = 'router', to, isOutlet = true, target, params = {}, onClick, ...props } = properties();\n\tconst router = injector.get<Router>(routerKey);\n\tlet href: string | undefined = to;\n\n\tlet linkProps: VNodeProperties;\n\tif (router) {\n\t\tif (isOutlet) {\n\t\t\thref = router.link(href, params);\n\t\t}\n\t\tconst onclick = (event: MouseEvent) => {\n\t\t\tonClick && onClick(event);\n\n\t\t\tif (!event.defaultPrevented && event.button === 0 && !event.metaKey && !event.ctrlKey && !target) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\thref !== undefined && router.setPath(href);\n\t\t\t}\n\t\t};\n\t\tlinkProps = { ...props, onclick, href };\n\t} else {\n\t\tlinkProps = { ...props, href };\n\t}\n\treturn v('a', linkProps, children());\n});\n\nexport default Link;\n","import { create, diffProperty, invalidator, w } from '../core/vdom';\nimport { Handle } from '../core/Destroyable';\nimport injector from '../core/middleware/injector';\nimport cache from '../core/middleware/cache';\nimport { SupportedClassName } from '../core/interfaces';\nimport Link, { LinkProperties } from './Link';\nimport Router from './Router';\n\nexport interface ActiveLinkProperties extends LinkProperties {\n\tactiveClasses: SupportedClassName[];\n}\n\nfunction paramsEqual(linkParams: any = {}, contextParams: any = {}) {\n\treturn Object.keys(linkParams).every((key) => linkParams[key] === contextParams[key]);\n}\n\nconst factory = create({ injector, diffProperty, cache, invalidator }).properties<ActiveLinkProperties>();\n\nexport const ActiveLink = factory(function ActiveLink({\n\tmiddleware: { diffProperty, injector, cache, invalidator },\n\tproperties,\n\tchildren\n}) {\n\tconst { to, routerKey = 'router', params } = properties();\n\tlet { activeClasses, classes = [], ...props } = properties();\n\n\tdiffProperty('to', (current: ActiveLinkProperties, next: ActiveLinkProperties) => {\n\t\tif (current.to !== next.to) {\n\t\t\tconst router = injector.get<Router>(routerKey);\n\t\t\tconst currentHandle = cache.get<Handle>('handle');\n\t\t\tif (currentHandle) {\n\t\t\t\tcurrentHandle.destroy();\n\t\t\t}\n\t\t\tif (router) {\n\t\t\t\tconst handle = router.on('outlet', ({ outlet }) => {\n\t\t\t\t\tif (outlet.id === to) {\n\t\t\t\t\t\tinvalidator();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tcache.set('handle', handle);\n\t\t\t}\n\t\t\tinvalidator();\n\t\t}\n\t});\n\n\tconst router = injector.get<Router>(routerKey);\n\tif (router) {\n\t\tif (!cache.get('handle')) {\n\t\t\tconst handle = router.on('outlet', ({ outlet }) => {\n\t\t\t\tif (outlet.id === to) {\n\t\t\t\t\tinvalidator();\n\t\t\t\t}\n\t\t\t});\n\t\t\tcache.set('handle', handle);\n\t\t}\n\t\tconst context = router.getOutlet(to);\n\t\tconst isActive = context && paramsEqual(params, context.params);\n\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tif (isActive) {\n\t\t\tclasses = [...classes, ...activeClasses];\n\t\t}\n\t\tprops = { ...props, classes };\n\t}\n\treturn w(Link, props, children());\n});\n\nexport default ActiveLink;\n","import { create, tsx } from '@dojo/framework/core/vdom';\nimport { createStoreMiddleware } from '@dojo/framework/core/middleware/store';\nimport { createCommandFactory, createProcess } from '@dojo/framework/stores/process';\nimport Outlet from '@dojo/framework/routing/Outlet';\nimport ActiveLink from '@dojo/framework/routing/ActiveLink';\n\nimport * as css from './App.m.css';\n\ninterface Todo {\n\tid: string;\n\tlabel: string;\n\tcompleted?: boolean;\n}\n\ninterface State {\n\ttodos?: Todo[];\n\tcurrent?: string;\n\tcompletedCount?: number;\n\teditingId?: string;\n\teditingLabel?: string;\n}\n\nlet counter = 0;\nconst store = createStoreMiddleware<State>();\nconst commandFactory = createCommandFactory<State>();\nconst createWidget = create({ store });\n\nfunction findTodo(id?: string) {\n\treturn (todo: Todo) => todo.id === id;\n}\n\nconst addTodoCommand = commandFactory<{ label: string }>(({ state, payload: { label } }) => {\n\tconst id = `${Date.now()}-${counter++}`;\n\tlabel = label.trim();\n\tif (state.todos) {\n\t\tstate.todos.push({ id, label });\n\t} else {\n\t\tstate.todos = [{ id, label }];\n\t}\n});\n\nconst deleteTodoCommand = commandFactory<{ id: string }>(({ state, payload: { id } }) => {\n\tif (state.todos) {\n\t\tconst index = state.todos.findIndex(findTodo(id));\n\t\tif (index !== -1) {\n\t\t\tif (state.todos[index].completed && state.completedCount) {\n\t\t\t\tstate.completedCount = state.completedCount - 1;\n\t\t\t}\n\t\t\tstate.todos.splice(index, 1);\n\t\t}\n\t}\n});\n\nconst clearCompletedCommand = commandFactory(({ state }) => {\n\tif (state.todos) {\n\t\tstate.todos = state.todos.filter((todo) => !todo.completed);\n\t}\n\tstate.completedCount = 0;\n});\n\nconst toggleTodoCommand = commandFactory<{ id: string }>(({ state, payload: { id } }) => {\n\tif (state.todos) {\n\t\tconst index = state.todos.findIndex(findTodo(id));\n\t\tif (index !== -1) {\n\t\t\tconst completed = state.todos[index].completed;\n\t\t\tlet completedCount = state.completedCount || 0;\n\t\t\tif (completed) {\n\t\t\t\tcompletedCount--;\n\t\t\t} else {\n\t\t\t\tcompletedCount++;\n\t\t\t}\n\t\t\tstate.completedCount = completedCount;\n\t\t\tstate.todos[index].completed = !completed;\n\t\t}\n\t}\n});\n\nconst toggleAllTodosCommand = commandFactory(({ state }) => {\n\tconst completedCount = state.completedCount || 0;\n\tif (state.todos) {\n\t\tconst complete = completedCount !== state.todos.length;\n\t\tstate.todos.forEach((todo) => (todo.completed = complete));\n\t\tif (complete) {\n\t\t\tstate.completedCount = state.todos.length;\n\t\t} else {\n\t\t\tstate.completedCount = 0;\n\t\t}\n\t}\n});\n\nconst todoInputCommand = commandFactory<{ current: string }>(({ state, payload }) => {\n\tstate.current = payload.current;\n});\n\nconst clearTodoInputCommand = commandFactory(({ state }) => {\n\tstate.current = undefined;\n});\n\nconst todoEditModeCommand = commandFactory<{ id: string; label: string }>(({ state, payload: { id, label } }) => {\n\tstate.editingId = id;\n\tstate.editingLabel = label;\n});\n\nconst todoReadModeCommand = commandFactory(({ state }) => {\n\tstate.editingId = undefined;\n\tstate.editingLabel = undefined;\n});\n\nconst saveTodoCommand = commandFactory(({ state }) => {\n\tif (state.todos) {\n\t\tconst todo = state.todos.find(findTodo(state.editingId));\n\t\tif (state.editingLabel && todo) {\n\t\t\ttodo.label = state.editingLabel;\n\t\t}\n\t}\n});\n\nconst updateTodoCommand = commandFactory<{ label: string }>(({ state, payload: { label } }) => {\n\tstate.editingLabel = label;\n});\n\nconst addTodo = createProcess('add-todo', [clearTodoInputCommand, addTodoCommand]);\nconst todoInput = createProcess('input-todo', [todoInputCommand]);\nconst deleteTodo = createProcess('delete-todo', [deleteTodoCommand]);\nconst toggleTodo = createProcess('toggle-todo', [toggleTodoCommand]);\nconst toggleAllTodos = createProcess('toggle-all-todos', [toggleAllTodosCommand]);\nconst todoEditMode = createProcess('edit-mode-todo', [todoEditModeCommand]);\nconst todoReadMode = createProcess('read-mode-todo', [todoReadModeCommand]);\nconst saveTodo = createProcess('save-todo', [saveTodoCommand, todoReadModeCommand]);\nconst updateTodoInput = createProcess('update-todo-input', [updateTodoCommand]);\nconst clearCompleted = createProcess('clear-completed', [clearCompletedCommand]);\n\nfunction filter(filterName: string = 'all', todo: Todo): boolean {\n\tswitch (filterName) {\n\t\tcase 'completed':\n\t\t\treturn !!todo.completed;\n\t\tcase 'active':\n\t\t\treturn !todo.completed;\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\nexport default createWidget(({ middleware }) => {\n\tconst { get, path, executor } = middleware.store;\n\tconst todos = get(path('todos')) || [];\n\tconst current = get(path('current'));\n\tconst completedCount = get(path('completedCount')) || 0;\n\tconst editingId = get(path('editingId'));\n\tconst editingLabel = get(path('editingLabel'));\n\n\tconst add = ({ which }: any) => {\n\t\tif (which === 13 && current) {\n\t\t\texecutor(addTodo)({ label: current });\n\t\t}\n\t};\n\n\tconst itemCount = todos.length - completedCount;\n\n\treturn (\n\t\t<Outlet\n\t\t\tid=\"filter\"\n\t\t\trenderer={(matchDetails) => {\n\t\t\t\tconst filtered = todos.filter((todo) => filter(matchDetails.params.filter, todo));\n\t\t\t\treturn (\n\t\t\t\t\t<section classes={[css.todoapp]}>\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<h1 classes={[css.title]}>todos</h1>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tvalue={current}\n\t\t\t\t\t\t\t\tonkeyup={add}\n\t\t\t\t\t\t\t\tfocus={true}\n\t\t\t\t\t\t\t\tclasses={[css.newTodo]}\n\t\t\t\t\t\t\t\toninput={(event: any) => {\n\t\t\t\t\t\t\t\t\texecutor(todoInput)({ current: event.target.value });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tplaceholder=\"What needs to be done?\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tchecked={todos && completedCount > 0 && todos.length === completedCount}\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tclasses={[css.toggleAll]}\n\t\t\t\t\t\t\t\tonchange={() => {\n\t\t\t\t\t\t\t\t\texecutor(toggleAllTodos)({});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<ul classes={[css.todoList]}>\n\t\t\t\t\t\t\t\t{filtered.map((todo) => (\n\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\tkey={todo.id}\n\t\t\t\t\t\t\t\t\t\tclasses={[\n\t\t\t\t\t\t\t\t\t\t\tcss.todoItem,\n\t\t\t\t\t\t\t\t\t\t\teditingId === todo.id && css.editing,\n\t\t\t\t\t\t\t\t\t\t\tBoolean(todo.completed) && css.completed\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<div classes={[css.view]}>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tonchange={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\texecutor(toggleTodo)({ id: todo.id });\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\tclasses={[css.toggle]}\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={todo.completed}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\t\tondblclick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\texecutor(todoEditMode)({ id: todo.id, label: todo.label });\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tclasses={[css.todoLabel]}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{todo.label}\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tonclick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\texecutor(deleteTodo)({ id: todo.id });\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tclasses={[css.destroy]}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{editingId === todo.id && (\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tclasses={[css.edit]}\n\t\t\t\t\t\t\t\t\t\t\t\tonblur={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\texecutor(todoReadMode)({ id: todo.id });\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tonkeyup={(event: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (event.which === 13) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\texecutor(saveTodo)({});\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (event.which === 27) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\texecutor(todoReadMode)({ id: todo.id });\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\texecutor(updateTodoInput)({ label: event.target.value });\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={editingLabel}\n\t\t\t\t\t\t\t\t\t\t\t\tfocus={() => true}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t{todos.length && (\n\t\t\t\t\t\t\t<footer classes={[css.footer]}>\n\t\t\t\t\t\t\t\t<span classes={[css.todoCountLabel]}>\n\t\t\t\t\t\t\t\t\t<strong classes={[css.todoCount]}>{`${itemCount} `}</strong>\n\t\t\t\t\t\t\t\t\t<span>{`${itemCount === 1 ? 'item' : 'items'} left`}</span>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<ul classes={[css.filters]}>\n\t\t\t\t\t\t\t\t\t<li classes={[css.filter]}>\n\t\t\t\t\t\t\t\t\t\t<ActiveLink\n\t\t\t\t\t\t\t\t\t\t\tto=\"filter\"\n\t\t\t\t\t\t\t\t\t\t\tparams={{ filter: 'all' }}\n\t\t\t\t\t\t\t\t\t\t\tclasses={[css.filterLink]}\n\t\t\t\t\t\t\t\t\t\t\tactiveClasses={[css.selected]}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tall\n\t\t\t\t\t\t\t\t\t\t</ActiveLink>\n\t\t\t\t\t\t\t\t\t\t<ActiveLink\n\t\t\t\t\t\t\t\t\t\t\tto=\"filter\"\n\t\t\t\t\t\t\t\t\t\t\tparams={{ filter: 'active' }}\n\t\t\t\t\t\t\t\t\t\t\tclasses={[css.filterLink]}\n\t\t\t\t\t\t\t\t\t\t\tactiveClasses={[css.selected]}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tactive\n\t\t\t\t\t\t\t\t\t\t</ActiveLink>\n\t\t\t\t\t\t\t\t\t\t<ActiveLink\n\t\t\t\t\t\t\t\t\t\t\tto=\"filter\"\n\t\t\t\t\t\t\t\t\t\t\tparams={{ filter: 'completed' }}\n\t\t\t\t\t\t\t\t\t\t\tclasses={[css.filterLink]}\n\t\t\t\t\t\t\t\t\t\t\tactiveClasses={[css.selected]}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tcompleted\n\t\t\t\t\t\t\t\t\t\t</ActiveLink>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t{completedCount && (\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tonclick={() => {\n\t\t\t\t\t\t\t\t\t\t\texecutor(clearCompleted)({});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tclasses={[css.clearCompleted]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tClear Completed\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</footer>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</section>\n\t\t\t\t);\n\t\t\t}}\n\t\t/>\n\t);\n});\n","import { renderer, tsx } from '@dojo/framework/core/vdom';\nimport Registry from '@dojo/framework/core/Registry';\nimport { registerRouterInjector } from '@dojo/framework/routing/RouterInjector';\n\nimport App from './App';\n\nconst registry = new Registry();\nregisterRouterInjector(\n\t[\n\t\t{\n\t\t\tpath: 'filter/{filter}',\n\t\t\toutlet: 'filter',\n\t\t\tdefaultParams: { filter: 'all' },\n\t\t\tdefaultRoute: true\n\t\t}\n\t],\n\tregistry\n);\n\nconst r = renderer(() => <App />);\nr.mount({ registry });\n","import { Registry } from '../core/Registry';\nimport { RegistryLabel } from '../core/interfaces';\n\nimport { Router } from './Router';\nimport { RouteConfig, RouterOptions } from './interfaces';\n\n/**\n * Router Injector Options\n *\n */\nexport interface RouterInjectorOptions extends RouterOptions {\n\tkey?: RegistryLabel;\n}\n\n/**\n * Creates a router instance for a specific History manager (default is `HashHistory`) and registers\n * the route configuration.\n *\n * @param config The route config to register for the router\n * @param registry An optional registry that defaults to the global registry\n * @param options The router injector options\n */\nexport function registerRouterInjector(\n\tconfig: RouteConfig[],\n\tregistry: Registry,\n\toptions: RouterInjectorOptions = {}\n): Router {\n\tconst { key = 'router', ...routerOptions } = options;\n\n\tif (registry.hasInjector(key)) {\n\t\tthrow new Error('Router has already been defined');\n\t}\n\tconst router = new Router(config, routerOptions);\n\tregistry.defineInjector(key, (invalidator: () => void) => {\n\t\trouter.on('nav', () => invalidator());\n\t\treturn () => router;\n\t});\n\treturn router;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"dojo-todo-mvc/App\",\"todoapp\":\"App-m__todoapp__1-Cbr\",\"main\":\"App-m__main__2QTbx\",\"todoList\":\"App-m__todoList__2fOqu\",\"title\":\"App-m__title__1zJ90\",\"newTodo\":\"App-m__newTodo__3XCFp\",\"toggleAll\":\"App-m__toggleAll__1VT1c\",\"todoItem\":\"App-m__todoItem__1KusA\",\"edit\":\"App-m__edit__1GiKq\",\"editing\":\"App-m__editing__AvJxX\",\"view\":\"App-m__view__3fb0K\",\"toggle\":\"App-m__toggle__3FI7R\",\"todoLabel\":\"App-m__todoLabel__2N8jw\",\"completed\":\"App-m__completed__1QeE4\",\"destroy\":\"App-m__destroy__3qyur\",\"footer\":\"App-m__footer__1Ixgt\",\"todoCountLabel\":\"App-m__todoCountLabel__2Y9bN\",\"todoCount\":\"App-m__todoCount__1poUN\",\"clearCompleted\":\"App-m__clearCompleted__3N6ho\",\"filters\":\"App-m__filters__iqhn9\",\"filter\":\"App-m__filter__3opuw\",\"filterLink\":\"App-m__filterLink__1O7nN\",\"selected\":\"App-m__selected__1kAqt\"};"],"sourceRoot":""}