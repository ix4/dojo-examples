{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@dojo/framework/shim/global.mjs","webpack:///./node_modules/@dojo/framework/core/vdom.mjs","webpack:///./node_modules/@dojo/framework/shim/Map.mjs","webpack:///./node_modules/@dojo/framework/core/Registry.mjs","webpack:///./node_modules/@dojo/framework/core/has.mjs","webpack:///./node_modules/@dojo/framework/shim/WeakMap.mjs","webpack:///./node_modules/@dojo/framework/core/diff.mjs","webpack:///./node_modules/@dojo/framework/core/decorators/handleDecorator.mjs","webpack:///./node_modules/@dojo/framework/core/mixins/Themed.mjs","webpack:///./node_modules/@dojo/framework/core/Evented.mjs","webpack:///./node_modules/@dojo/framework/core/NodeHandler.mjs","webpack:///./node_modules/@dojo/framework/core/WidgetBase.mjs","webpack:///./node_modules/@dojo/framework/shim/support/util.mjs","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/@dojo/framework/core/decorators/diffProperty.mjs","webpack:///./node_modules/@dojo/framework/shim/Promise.mjs","webpack:///./node_modules/@dojo/framework/core/RegistryHandler.mjs","webpack:///./src/common/util.ts","webpack:///./node_modules/@dojo/framework/shim/Set.mjs","webpack:///./node_modules/@dojo/framework/core/decorators/beforeProperties.mjs","webpack:///./node_modules/@dojo/framework/shim/array.mjs","webpack:///./src/theme/label.m.css","webpack:///./node_modules/@dojo/framework/core/Destroyable.mjs","webpack:///./node_modules/@dojo/framework/core/util.mjs","webpack:///./node_modules/@dojo/framework/core/Injector.mjs","webpack:///./node_modules/@dojo/framework/core/decorators/inject.mjs","webpack:///./node_modules/@dojo/framework/core/meta/Base.mjs","webpack:///./node_modules/@dojo/framework/core/decorators/alwaysRender.mjs","webpack:///./src/common/styles/base.m.css","webpack:///./src/theme/icon.m.css","webpack:///./node_modules/@dojo/framework/core/meta/Focus.mjs","webpack:///(webpack)/buildin/global.js","webpack:///./src/theme/text-input.m.css","webpack:///./node_modules/@dojo/framework/core/mixins/Focus.mjs","webpack:///./node_modules/@dojo/framework/shim/object.mjs","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/@dojo/framework/core/registerCustomElement.mjs","webpack:///./src/icon/index.ts","webpack:///./src/theme/helper-text.m.css","webpack:///./src/label/index.ts","webpack:///./node_modules/@dojo/framework/core/meta/Dimensions.mjs","webpack:///./src/theme/button.m.css","webpack:///./node_modules/resize-observer-polyfill/dist/ResizeObserver.js","webpack:///./src/helper-text/index.ts","webpack:///./node_modules/@dojo/framework/shim/ResizeObserver.mjs","webpack:///./node_modules/@dojo/framework/shim/util/wrapper.mjs","webpack:///./node_modules/@dojo/framework/core/meta/Resize.mjs","webpack:///./node_modules/@dojo/framework/core/meta/InputValidity.mjs","webpack:///./src/text-input/index.ts","webpack:///./src/button/index.ts","webpack:///./src/theme/grid-header.m.css","webpack:///./src/theme/grid.m.css","webpack:///./src/theme/grid-cell.m.css","webpack:///./src/theme/grid-placeholder-row.m.css","webpack:///./src/grid/styles/grid.m.css","webpack:///./src/grid/styles/header.m.css","webpack:///./src/theme/grid-row.m.css","webpack:///./src/theme/grid-body.m.css","webpack:///./src/theme/grid-footer.m.css","webpack:///./src/grid/styles/cell.m.css","webpack:///./src/grid/styles/row.m.css","webpack:///./src/grid/styles/body.m.css","webpack:///./node_modules/@dojo/cli-build-widget/template/custom-element.js?3495","webpack:///./node_modules/@dojo/framework/stores/state/Pointer.mjs","webpack:///./node_modules/@dojo/framework/stores/state/Patch.mjs","webpack:///./node_modules/@dojo/framework/stores/state/compare.mjs","webpack:///./node_modules/@dojo/framework/stores/Store.mjs","webpack:///./node_modules/@dojo/framework/stores/state/operations.mjs","webpack:///./node_modules/@dojo/framework/stores/process.mjs","webpack:///./src/grid/processes.ts","webpack:///./src/grid/Header.ts","webpack:///./src/grid/PlaceholderRow.ts","webpack:///./src/grid/Cell.ts","webpack:///./src/grid/Row.ts","webpack:///./src/grid/Body.ts","webpack:///./src/grid/Footer.ts","webpack:///./src/grid/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","globalObject","window","navigator","userAgent","indexOf","globalThis","self","__webpack_exports__","isTextNode","isWNode","isVNode","w","v","dom","tsx","widgetInstanceMap","renderer","_shim_global__WEBPACK_IMPORTED_MODULE_0__","_core_has__WEBPACK_IMPORTED_MODULE_1__","_shim_WeakMap__WEBPACK_IMPORTED_MODULE_2__","_shim_Set__WEBPACK_IMPORTED_MODULE_3__","_shim_Map__WEBPACK_IMPORTED_MODULE_4__","_Registry__WEBPACK_IMPORTED_MODULE_5__","_diff__WEBPACK_IMPORTED_MODULE_6__","_RegistryHandler__WEBPACK_IMPORTED_MODULE_7__","__rest","e","getOwnPropertySymbols","length","EMPTY_ARRAY","nodeOperations","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","WNODE","VNODE","DOMVNODE","item","nodeType","isWNodeWrapper","child","node","isVNodeWrapper","isVirtualWrapper","tag","isBodyWrapper","wrapper","Boolean","type","isDomVNode","isElementNode","tagName","widgetConstructorOrNode","properties","children","assign","widgetConstructor","propertiesOrChildren","deferredPropertiesCallback","Array","isArray","classes","styles","newProperties","_a","nodeClasses","nodeStyles","nodeProperties","attrs","props","on","diffType","onAttach","toLowerCase","attributes","events","domNode","text","undefined","data","REGISTRY_ITEM","FromRegistry","[object Object]","this","spreadChildren","reduce","__autoRegistryItem","buildPreviousProperties","current","deferredProperties","keys","forEach","propName","attrName","getAttribute","same","dnode1","dnode2","widgetConstructor1","registryItem","widgetConstructor2","instance","findIndexOfChild","sameAs","start","createClassPropValue","classNames","className","updateAttribute","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","arrayFrom","arr","slice","createFactory","callback","middlewares","factory","result","isWidget","isFactory","returns","widgetMetaMap","requestedDomNodes","wrapperId","metaId","addNodeToMap","id","widgetMeta","nodeMap","set","has","invalidator","delete","destroyHandles","destroyMap","destroy","clear","widgetId","split","add","propertyName","diff","customDiffMap","customDiffProperties","propertyDiffMap","destroyFunction","registryHandler","base","registry","isDeferred","deferRefs","_renderScheduled","parentInvalidate","_mountOptions","sync","merge","transition","document","body","_invalidationQueue","_processQueue","_deferredProcessQueue","_applicationQueue","_eventMap","_idToWrapperMap","_wrapperSiblingMap","_idToChildrenWrappers","_insertBeforeMap","_nodeToWrapperMap","_idleCallbacks","_deferredRenderCallbacks","_allMergedNodes","nodeOperation","propValue","previousValue","push","updateEvent","eventName","currentValue","previousEvent","removeEventListener","evt","target","addEventListener","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","eventCallback","resolveRegistryItem","owningNode","instanceData","registryLabel","label","isLazyDefine","define","renderedToWrapper","rendered","parent","currentParent","requiresInsertBefore","hasPreviousSiblings","depth","wrappedRendered","hasParentWNode","hasVirtualParentNode","hasCurrentParentChildren","insertBefore","previousItem","nodes","pop","mapNodeToInstance","renderedItem","order","parentId","exitAnimation","hasAnimations","nextParent","owningId","runDeferredProperties","next","processProperties","findInsertBefore","searchNode","nextSibling","childDomWrapperId","childWrapper","parentNode","setValue","domValue","onInputValue","onSelectValue","setProperties","currentProperties","nextWrapper","includesEventsAndAttributes","propNames","propCount","previousClassString","currentClassString","merged","domClasses","styleNames","styleCount","j","styleName","newStyleValue","style","lastIndexOf","previousAttributes","attrNames","attrCount","updateAttributes","event","_schedule","_runInvalidationQueue","requestAnimationFrame","getWNodeWrapper","invalidationQueue","previouslyRendered","sort","a","b","_runProcessQueue","sibling","_updateWidget","_runDomInstructionQueue","_cleanUpMergedNodes","_runCallbacks","mergedNode","removeChild","setDomNodeOnParentWrapper","meta","_process","reverse","parentDomNode","parentElement","enterAnimation","enterAnimationActive","enter","owningWrapper","nodeHandler","inserted","currentDomNode","replaceChild","exitAnimationActive","exit","attached","addRoot","onDetach","callbacks","run","shift","requestIdleCallback","setTimeout","runAfterRenderCallbacks","runDeferredRenderCallbacks","registerDistinguishableCallback","childNodes","index","parentWNodeWrapper","wrappers","wrapperToCheck","parentName","nodeIdentifier","console","warn","checkDistinguishable","createKeyMap","mergeNodes","oldIndex","newIndex","currentLength","nextLength","instructions","replace","currentKeys","nextKeys","currentWrapper","domElement","toUpperCase","mergeNodeIndex","splice","_processMergeNodes","_processOne","widget","currentNode","parentWrapper","findParentDomNode","isVirtual","isBody","createTextNode","createElementNS","createElement","_createDom","invalidate","Constructor","dirty","rendering","__setProperties__","__setChildren__","__render__","middleware","resolveMiddleware","results","uniqueId","payload","resolvedMiddleware","_createWidget","currentChildren","_updateDom","remove","bodyIds","wrapperChildren","_removeDom","processResult","_removeWidget","didRender","size","diffMap","runDiffs","ignoreProperties","propertyNames","changed","propertiesDiff","values","nextChildren","mount","mountOptions","renderResult","wrapNodes","siblingId","Map","_global__WEBPACK_IMPORTED_MODULE_0__","WIDGET_BASE_TYPE","isWidgetBaseConstructor","isWidgetFunction","isWNodeFactory","Registry","_shim_Promise__WEBPACK_IMPORTED_MODULE_0__","_shim_Map__WEBPACK_IMPORTED_MODULE_1__","_core_Evented__WEBPACK_IMPORTED_MODULE_2__","_type","widgetLabel","emit","action","_widgetRegistry","Error","toString","then","widgetCtor","emitLoadedEvent","error","injectorFactory","_injectorRegistry","injectorItem","injector","promise","default","isWidgetConstructorDefaultExport","hasInjector","process","testCache","testFunctions","staticFeatures","DojoHasEnvironment","staticCache","apply","feature","overwrite","normalizedFeature","exists","TypeError","strict","location","versions","fetch","every","fill","Number","POSITIVE_INFINITY","map","entries","Math","imul","Observable","Promise","finally","Set","String","callSite","substitutions","raw","WeakMap","key1","key2","freeze","postMessage","setImmediate","MutationObserver","WebKitMutationObserver","example","observer","observe","setProperty","takeRecords","Animation","KeyframeEffect","AbortController","AbortSignal","IntersectionObserver","ResizeObserver","onpointerdown","reference","shallow","auto","_Registry__WEBPACK_IMPORTED_MODULE_0__","isObjectOrArray","previousProperty","newProperty","validOldProperty","validNewProperty","previousKeys","newKeys","some","ignore","handleDecorator","handler","propertyKey","descriptor","theme","registerThemeInjector","ThemedMixin","_Injector__WEBPACK_IMPORTED_MODULE_0__","_decorators_inject__WEBPACK_IMPORTED_MODULE_1__","_decorators_handleDecorator__WEBPACK_IMPORTED_MODULE_2__","_decorators_diffProperty__WEBPACK_IMPORTED_MODULE_3__","_diff__WEBPACK_IMPORTED_MODULE_4__","__decorate","decorators","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","THEME_KEY","INJECTED_THEME_KEY","addDecorator","themeRegistry","themeInjector","defineInjector","setInvalidator","Base","Themed","super","_registeredBaseThemeKeys","_recalculateClasses","_theme","_recalculateThemeClasses","_getThemeClass","extraClasses","themeClassName","_baseThemeClassesReverseLookup","resultClassNames","_classes","extraClass","_registeredBaseTheme","join","baseThemes","getDecorator","finalBaseTheme","baseTheme","currentClassNames","baseClass","createThemeClassesLookup","themeKey","computed","getProperties","Evented","_shim_Map__WEBPACK_IMPORTED_MODULE_0__","_Destroyable__WEBPACK_IMPORTED_MODULE_1__","regexMap","listenersMap","methods","globString","targetString","regex","RegExp","test","isGlobMatch","method","listener","handles","_addListener","handle","listeners","NodeEventType","core_NodeHandler","_nodeMap","element","Widget","Projector","WidgetBase_WidgetBase","decoratorMap","builtDecoratorMap","boundAuto","IGNORE_LIST","getOwnPropertyNames","getPrototypeOf","autoBindCache","_initialProperties","_changedPropertyKeys","_registry","RegistryHandler","_nodeHandler","_handles","_children","_decoratorCache","_properties","_boundRenderFunc","render","_boundInvalidate","own","vdom","inputProperties","_runAfterConstructors","MetaType","_metaMap","cached","changedPropertyKeys","originalProperties","_runBeforeProperties","registeredDiffPropertyNames","constructor","ownKeys","filter","k","boundFunc","configurable","autoBind","allProperties","checkedProperties","diffPropertyResults","runReactions","diffFunctions","reactionFunctions","executedReactions","reaction","propertyChanged","reactionRun","_runBeforeRenders","_runAfterRenders","decoratorKey","decoratorList","specificDecoratorList","allDecorators","instanceMap","unshift","buildDecorators","decoratorCache","_buildDecoratorList","beforeProperties","beforePropertiesFunction","beforeRenders","beforeRenderFunction","updatedRender","dNode","afterRenders","afterRenderFunction","afterRender","isDomMeta","afterConstructors","afterConstructor","wrapNative","nativeFunction","args","__metadata","__awaiter","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","resolve","reject","fulfilled","step","rejected","done","diffProperty","_handleDecorator__WEBPACK_IMPORTED_MODULE_0__","_diff__WEBPACK_IMPORTED_MODULE_1__","diffFunction","reactionFunction","isThenable","ShimPromise","onFinally","reason","_core_Evented__WEBPACK_IMPORTED_MODULE_1__","_Registry__WEBPACK_IMPORTED_MODULE_2__","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","globalPrecedence","_get","getFunctionName","labelMap","registries","registeredLabels","Keys","formatAriaProperties","aria","from","find","findIndex","includes","_support_util__WEBPACK_IMPORTED_MODULE_1__","of","copyWithin"," _key","root","readonly","invalid","valid","required","disabled","focused","secondary","Destroyable","noop","destroyed","deepAssign","uuid","_vdom__WEBPACK_IMPORTED_MODULE_0__","shouldDeepCopyObject","copyArray","array","inherited","_mixin","deep","sources","kwArgs","copied","copiedClone","source","targetValue","random","dNodes","optionsOrModifier","predicate","modifier","breaker","Injector","_core_Evented__WEBPACK_IMPORTED_MODULE_0__","_payload","_invalidator","inject","_shim_WeakMap__WEBPACK_IMPORTED_MODULE_0__","_handleDecorator__WEBPACK_IMPORTED_MODULE_1__","_beforeProperties__WEBPACK_IMPORTED_MODULE_2__","registeredInjectorsMap","getInjector","registeredInjectors","_core_Destroyable__WEBPACK_IMPORTED_MODULE_0__","_shim_Set__WEBPACK_IMPORTED_MODULE_1__","_requestedNodeKeys","_invalidate","_bind","stringKey","alwaysRender","_beforeProperties__WEBPACK_IMPORTED_MODULE_1__","visuallyHidden","focusable","hidden","icon","downIcon","leftIcon","rightIcon","closeIcon","plusIcon","minusIcon","checkIcon","upIcon","upAltIcon","downAltIcon","searchIcon","barsIcon","settingsIcon","alertIcon","helpIcon","infoIcon","phoneIcon","editIcon","dateIcon","linkIcon","locationIcon","secureIcon","mailIcon","Focus","_Base__WEBPACK_IMPORTED_MODULE_0__","_shim_global__WEBPACK_IMPORTED_MODULE_1__","defaultResults","active","containsFocus","_onFocusChange","_activeElement","activeElement","getNode","_createListener","contains","focus","_removeListener","g","Function","eval","input","inputWrapper","leading","trailing","hasLeading","hasTrailing","helperText","FocusMixin","_decorators_diffProperty__WEBPACK_IMPORTED_MODULE_0__","diffFocus","_currentToken","_previousToken","shouldFocus","is","getOwnPropertyDescriptors","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","marker","runClearTimeout","Item","nextTick","title","browser","env","argv","version","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","CustomElementChildType","DomToWidgetWrapper","register","_WidgetBase__WEBPACK_IMPORTED_MODULE_1__","_vdom__WEBPACK_IMPORTED_MODULE_2__","_shim_array__WEBPACK_IMPORTED_MODULE_3__","_shim_global__WEBPACK_IMPORTED_MODULE_4__","_mixins_Themed__WEBPACK_IMPORTED_MODULE_5__","_decorators_alwaysRender__WEBPACK_IMPORTED_MODULE_6__","RESERVED_PROPS","WidgetConstructor","registryFactory","attributeMap","attributeName","HTMLElement","_eventProperties","_propertiesMap","_initialised","_childType","childType","_waitTillReady","readyState","_hasBeenParsed","_readyCallback","domProperties","_attributesToProperties","isReservedProp","filteredPropertyName","_getProperty","_setProperty","_getEventProperty","_setEventProperty","dispatchEvent","CustomEvent","bubbles","detail","defineProperties","childNode","isElement","isDojoChild","DOJO","NODE","_render","_childConnected","widgetProperties","renderChildren","__children__","Wrapper","themeContext","_getTheme","_renderer","display","getComputedStyle","dojoce","themes","Child","__properties__","oldValue","observedAttributes","__customElementDescriptor","customElements","Icon","_dojo_framework_core_mixins_Themed__WEBPACK_IMPORTED_MODULE_2__","_dojo_framework_core_WidgetBase__WEBPACK_IMPORTED_MODULE_1__","altText","_dojo_framework_core_vdom__WEBPACK_IMPORTED_MODULE_3__","_common_styles_base_m_css__WEBPACK_IMPORTED_MODULE_6__","_theme_icon_m_css__WEBPACK_IMPORTED_MODULE_5__","_common_util__WEBPACK_IMPORTED_MODULE_4__","renderAltText","tslib__WEBPACK_IMPORTED_MODULE_0__","Label","readOnly","_theme_label_m_css__WEBPACK_IMPORTED_MODULE_5__","forId","getRootClasses","for","Dimensions","_core_util__WEBPACK_IMPORTED_MODULE_1__","defaultDimensions","client","height","left","top","width","offset","position","bottom","right","scroll","boundingDimensions","getBoundingClientRect","clientHeight","clientLeft","clientTop","clientWidth","offsetHeight","offsetLeft","offsetTop","offsetWidth","scrollHeight","scrollLeft","scrollTop","scrollWidth","pressed","popup","addon","MapShim","getIndex","entry","anonymous","__entries__","prototypeAccessors","ctx","list","isBrowser","global$1","requestAnimationFrame$1","Date","now","trailingTimeout","transitionKeys","mutationObserverSupported","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","gatherActive","hasActive","broadcastActive","childList","characterData","subtree","disconnect","ref","getInstance","instance_","defineConfigurable","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","positions","getHTMLElementContentRect","paddings","getPaddings","horizPad","vertPad","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","this$1","observation","HelperText","_dojo_framework_core_vdom__WEBPACK_IMPORTED_MODULE_4__","_theme_helper_text_m_css__WEBPACK_IMPORTED_MODULE_3__","aria-hidden","ResizeObserver_default","shim_ResizeObserver","nameOnGlobal","Resize_Resize","_details","predicates","defaultResponse","predicateId","resizeObserver","predicateChanged","previousDetails","predicateResponses","response","InputValidity","validity","message","validationMessage","formatAutocomplete","autocomplete","TextInput","_dojo_framework_core_mixins_Focus__WEBPACK_IMPORTED_MODULE_6__","_uuid","_dojo_framework_core_util__WEBPACK_IMPORTED_MODULE_9__","_state","onBlur","stopPropagation","onChange","onClick","onFocus","onInput","onKeyDown","which","preventDefault","onKeyPress","onKeyUp","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onTouchCancel","previousMessage","previousValid","onValidate","customValidator","_callOnValidate","_dojo_framework_core_meta_InputValidity__WEBPACK_IMPORTED_MODULE_5__","customValid","_dojo_framework_core_meta_Focus__WEBPACK_IMPORTED_MODULE_4__","_theme_text_input_m_css__WEBPACK_IMPORTED_MODULE_10__","labelHidden","maxLength","minLength","pattern","placeholder","_validate","computedHelperText","role","_label_index__WEBPACK_IMPORTED_MODULE_7__","_common_util__WEBPACK_IMPORTED_MODULE_8__","aria-invalid","maxlength","minlength","aria-readonly","onblur","_onBlur","onchange","_onChange","onclick","_onClick","onfocus","_onFocus","oninput","_onInput","onkeydown","_onKeyDown","onkeypress","_onKeyPress","onkeyup","_onKeyUp","onmousedown","_onMouseDown","onmouseup","_onMouseUp","ontouchstart","_onTouchStart","ontouchend","_onTouchEnd","ontouchcancel","_onTouchCancel","_helper_text_index__WEBPACK_IMPORTED_MODULE_13__","_dojo_framework_core_decorators_diffProperty__WEBPACK_IMPORTED_MODULE_11__","_dojo_framework_core_diff__WEBPACK_IMPORTED_MODULE_12__","Button","_dojo_framework_core_mixins_Focus__WEBPACK_IMPORTED_MODULE_3__","_theme_button_m_css__WEBPACK_IMPORTED_MODULE_5__","expanded","getModifierClasses","_common_util__WEBPACK_IMPORTED_MODULE_6__","aria-haspopup","aria-controls","aria-expanded","aria-pressed","getContent","_icon_index__WEBPACK_IMPORTED_MODULE_7__","cell","sortable","sorted","asc","header","filterGroup","edit","loading","spin","rootFixed","headerFixed","cellFixed","widgetFactory","registerCustomElement","defaultExport","decode","segment","encode","walk","segments","clone","continueOnUndefined","pointerTarget","nextSegment","isNaN","parseInt","Pointer","_segments","path","OperationType","isObject","isEqual","keysForA","getFriendlyDifferenceMessage","expected","actual","actualType","getFriendlyTypeName","expectedType","min","findArrayDifference","findShallowObjectKeyDifference","inverse","operation","state","op","ADD","REMOVE","TEST","REPLACE","Patch_Patch","operations","_operations","undoOperations","patchedObject","isString","Store_DefaultState","patchResult","at","stringSegments","hasMultipleSegments","pointer","Store_Store","options","_adapter","_changePaths","_callbackId","paths","callbackId","_addOnChange","changePaths","callbackIdsCalled","newValue","callbackItem","_runOnChanges","operations_replace","operations_remove","processMap","valueSymbol","proxyError","processExecutor","commands","store","before","after","transformer","executor","async","executorPayload","commandsCopy","command","createProxy","proxies","proxied","proxyOperations","createHandler","partialPath","obj","prop","fullPath","stringPath","proxiedValue","Proxy","removeProxies","deleteProperty","resolvedResults","commandFunction","shim_Promise","all","createProcess","nextCallback","processCallback","previousCallback","previousBefore","previousAfter","combineCallbacks","commandFactory","pageChangeCommand","page","preFetcherCommand","fetchedPages","fetcherCommand","fetcher","pageSize","tslib_es6","sortOptions","filterOptions","total","preSortCommand","columnId","direction","preFilterCommand","sortCommand","sortForFirstPage","previousPage","currentPage","err","filterCommand","currentFilters","updaterProcess","updater","rowNumber","updatedItem","fetcherProcess","filterProcess","sortProcess","pageChangeProcess","Header_Header","WidgetBase","_sortRenderer","column","sorter","grid_header_m","_getColumnTitle","_filterRenderer","columnConfig","filterValue","doFilter","text_input","filterer","sortRenderer","filterRenderer","header_m","headerProperties","isSorted","isSortedAsc","_sortColumn","aria-sort","filterable","grid_Header","PlaceholderRow_PlaceholderRow","grid_placeholder_row_m","grid_PlaceholderRow","Cell_Cell","_editing","_editingValue","_idBase","util","_onEdit","editable","_callFocus","rawValue","_focusKey","_onSave","common_util","Enter","Escape","ondblclick","grid_cell_m","cell_m","renderContent","src_button","describedby","grid_Cell","Row_Row","columns","config","updatedValue","grid_row_m","row_m","aria-rowindex","grid_Row","defaultPlaceholderRowRenderer","Body_Body","_start","_end","_resetScroll","max","ceil","pageItemNumber","totalRows","topRow","_rowHeight","bottomRow","_rowsInView","_renderPageSize","onScroll","end","pages","placeholderRowRenderer","pageChange","startPage","endPage","endData","rows","_updater","dimensions","dnode","div","appendChild","offscreen","_renderRows","topPaddingHeight","bottomPaddingHeight","containerProperties","grid_body_m","body_m","onscroll","_onScroll","grid_Body","Footer_Footer","footer","grid_footer_m","grid_Footer","defaultGridMeta","isSorting","editedRow","grid_Grid","_store","_scrollLeft","_pageSize","_handle","previous","storeId","headerHeight","footerHeight","_getProperties","customRenderers","hasFilters","bodyHeight","_getBodyHeight","Resize","grid_m","styles_grid_m","aria-rowcount","row","_sorter","_filterer","_fetcher","_pageChange"],"mappings":"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","file":"grid-6.0.0.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 125);\n","const globalObject = (function () {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof window !== 'undefined' && window.navigator.userAgent.indexOf('jsdom') > -1) {\n        return window;\n    }\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n})();\nexport default globalObject;\n//# sourceMappingURL=global.mjs.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport global from '../shim/global';\nimport has from '../core/has';\nimport WeakMap from '../shim/WeakMap';\nimport Set from '../shim/Set';\nimport Map from '../shim/Map';\nimport { Registry, isWidget, isWidgetBaseConstructor, isWidgetFunction, isWNodeFactory } from './Registry';\nimport { auto } from './diff';\nimport RegistryHandler from './RegistryHandler';\nconst EMPTY_ARRAY = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\nconst WNODE = '__WNODE_TYPE';\nconst VNODE = '__VNODE_TYPE';\nconst DOMVNODE = '__DOMVNODE_TYPE';\nexport function isTextNode(item) {\n    return item && item.nodeType === 3;\n}\nfunction isLazyDefine(item) {\n    return Boolean(item && item.label);\n}\nfunction isWNodeWrapper(child) {\n    return child && isWNode(child.node);\n}\nfunction isVNodeWrapper(child) {\n    return !!child && isVNode(child.node);\n}\nfunction isVirtualWrapper(child) {\n    return isVNodeWrapper(child) && child.node.tag === 'virtual';\n}\nfunction isBodyWrapper(wrapper) {\n    return isVNodeWrapper(wrapper) && wrapper.node.tag === 'body';\n}\nfunction isAttachApplication(value) {\n    return !!value.type;\n}\nexport function isWNode(child) {\n    return Boolean(child && child !== true && typeof child !== 'string' && child.type === WNODE);\n}\nexport function isVNode(child) {\n    return Boolean(child && child !== true && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE));\n}\nexport function isDomVNode(child) {\n    return Boolean(child && child !== true && typeof child !== 'string' && child.type === DOMVNODE);\n}\nexport function isElementNode(value) {\n    return !!value.tagName;\n}\nfunction toTextVNode(data) {\n    return {\n        tag: '',\n        properties: {},\n        children: undefined,\n        text: `${data}`,\n        type: VNODE\n    };\n}\nfunction updateAttributes(domNode, previousAttributes, attributes, namespace) {\n    const attrNames = Object.keys(attributes);\n    const attrCount = attrNames.length;\n    for (let i = 0; i < attrCount; i++) {\n        const attrName = attrNames[i];\n        const attrValue = attributes[attrName];\n        const previousAttrValue = previousAttributes[attrName];\n        if (attrValue !== previousAttrValue) {\n            updateAttribute(domNode, attrName, attrValue, namespace);\n        }\n    }\n}\nexport function w(widgetConstructorOrNode, properties, children) {\n    if (isWNodeFactory(widgetConstructorOrNode)) {\n        return widgetConstructorOrNode(properties, children);\n    }\n    if (isWNode(widgetConstructorOrNode)) {\n        properties = Object.assign({}, widgetConstructorOrNode.properties, properties);\n        children = children ? children : widgetConstructorOrNode.children;\n        widgetConstructorOrNode = widgetConstructorOrNode.widgetConstructor;\n    }\n    return {\n        children: children || [],\n        widgetConstructor: widgetConstructorOrNode,\n        properties,\n        type: WNODE\n    };\n}\nexport function v(tag, propertiesOrChildren = {}, children = undefined) {\n    let properties = propertiesOrChildren;\n    let deferredPropertiesCallback;\n    if (Array.isArray(propertiesOrChildren)) {\n        children = propertiesOrChildren;\n        properties = {};\n    }\n    if (typeof properties === 'function') {\n        deferredPropertiesCallback = properties;\n        properties = {};\n    }\n    if (isVNode(tag)) {\n        let { classes = [], styles = {} } = properties, newProperties = __rest(properties, [\"classes\", \"styles\"]);\n        let _a = tag.properties, { classes: nodeClasses = [], styles: nodeStyles = {} } = _a, nodeProperties = __rest(_a, [\"classes\", \"styles\"]);\n        nodeClasses = Array.isArray(nodeClasses) ? nodeClasses : [nodeClasses];\n        classes = Array.isArray(classes) ? classes : [classes];\n        styles = Object.assign({}, nodeStyles, styles);\n        properties = Object.assign({}, nodeProperties, newProperties, { classes: [...nodeClasses, ...classes], styles });\n        children = children ? children : tag.children;\n        tag = tag.tag;\n    }\n    return {\n        tag,\n        deferredPropertiesCallback,\n        children,\n        properties,\n        type: VNODE\n    };\n}\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom({ node, attrs = {}, props = {}, on = {}, diffType = 'none', onAttach }, children) {\n    return {\n        tag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n        properties: props,\n        attributes: attrs,\n        events: on,\n        children,\n        type: DOMVNODE,\n        domNode: node,\n        text: isElementNode(node) ? undefined : node.data,\n        diffType,\n        onAttach\n    };\n}\nexport const REGISTRY_ITEM = '__registry_item';\nexport class FromRegistry {\n    constructor() {\n        this.properties = {};\n    }\n}\nFromRegistry.type = REGISTRY_ITEM;\nexport function fromRegistry(tag) {\n    var _a;\n    return _a = class extends FromRegistry {\n            constructor() {\n                super(...arguments);\n                this.properties = {};\n                this.name = tag;\n            }\n        },\n        _a.type = REGISTRY_ITEM,\n        _a;\n}\nfunction spreadChildren(children, child) {\n    if (Array.isArray(child)) {\n        return child.reduce(spreadChildren, children);\n    }\n    else {\n        return [...children, child];\n    }\n}\nexport function tsx(tag, properties = {}, ...children) {\n    children = children.reduce(spreadChildren, []);\n    properties = properties === null ? {} : properties;\n    if (typeof tag === 'string') {\n        return v(tag, properties, children);\n    }\n    else if (tag.type === 'registry' && properties.__autoRegistryItem) {\n        const name = properties.__autoRegistryItem;\n        delete properties.__autoRegistryItem;\n        return w(name, properties, children);\n    }\n    else if (tag.type === REGISTRY_ITEM) {\n        const registryItem = new tag();\n        return w(registryItem.name, properties, children);\n    }\n    else {\n        return w(tag, properties, children);\n    }\n}\nexport function propertiesDiff(current, next, invalidator, ignoreProperties) {\n    const propertyNames = [...Object.keys(current), ...Object.keys(next)];\n    for (let i = 0; i < propertyNames.length; i++) {\n        if (ignoreProperties.indexOf(propertyNames[i]) > -1) {\n            continue;\n        }\n        const result = auto(current[propertyNames[i]], next[propertyNames[i]]);\n        if (result.changed) {\n            invalidator();\n            break;\n        }\n        ignoreProperties.push(propertyNames[i]);\n    }\n}\nfunction buildPreviousProperties(domNode, current) {\n    const { node: { diffType, properties, attributes } } = current;\n    if (!diffType || diffType === 'vdom') {\n        return {\n            properties: current.deferredProperties\n                ? Object.assign({}, current.deferredProperties, current.node.properties) : current.node.properties,\n            attributes: current.node.attributes,\n            events: current.node.events\n        };\n    }\n    else if (diffType === 'none') {\n        return {\n            properties: {},\n            attributes: current.node.attributes ? {} : undefined,\n            events: current.node.events\n        };\n    }\n    let newProperties = {\n        properties: {}\n    };\n    if (attributes) {\n        newProperties.attributes = {};\n        newProperties.events = current.node.events;\n        Object.keys(properties).forEach((propName) => {\n            newProperties.properties[propName] = domNode[propName];\n        });\n        Object.keys(attributes).forEach((attrName) => {\n            newProperties.attributes[attrName] = domNode.getAttribute(attrName);\n        });\n        return newProperties;\n    }\n    newProperties.properties = Object.keys(properties).reduce((props, property) => {\n        props[property] = domNode.getAttribute(property) || domNode[property];\n        return props;\n    }, {});\n    return newProperties;\n}\nfunction checkDistinguishable(wrappers, index, parentWNodeWrapper) {\n    const wrapperToCheck = wrappers[index];\n    if (isVNodeWrapper(wrapperToCheck) && !wrapperToCheck.node.tag) {\n        return;\n    }\n    const { key } = wrapperToCheck.node.properties;\n    let parentName = 'unknown';\n    if (parentWNodeWrapper) {\n        const { node: { widgetConstructor } } = parentWNodeWrapper;\n        parentName = widgetConstructor.name || 'unknown';\n    }\n    if (key === undefined || key === null) {\n        for (let i = 0; i < wrappers.length; i++) {\n            if (i !== index) {\n                const wrapper = wrappers[i];\n                if (same(wrapper, wrapperToCheck)) {\n                    let nodeIdentifier;\n                    if (isWNodeWrapper(wrapper)) {\n                        nodeIdentifier = wrapper.node.widgetConstructor.name || 'unknown';\n                    }\n                    else {\n                        nodeIdentifier = wrapper.node.tag;\n                    }\n                    console.warn(`A widget (${parentName}) has had a child added or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`);\n                    break;\n                }\n            }\n        }\n    }\n}\nfunction same(dnode1, dnode2) {\n    if (isVNodeWrapper(dnode1) && isVNodeWrapper(dnode2)) {\n        if (isDomVNode(dnode1.node) && isDomVNode(dnode2.node)) {\n            if (dnode1.node.domNode !== dnode2.node.domNode) {\n                return false;\n            }\n        }\n        if (dnode1.node.tag !== dnode2.node.tag) {\n            return false;\n        }\n        if (dnode1.node.properties.key !== dnode2.node.properties.key) {\n            return false;\n        }\n        return true;\n    }\n    else if (isWNodeWrapper(dnode1) && isWNodeWrapper(dnode2)) {\n        const widgetConstructor1 = dnode1.registryItem || dnode1.node.widgetConstructor;\n        const widgetConstructor2 = dnode2.registryItem || dnode2.node.widgetConstructor;\n        if (dnode1.instance === undefined && typeof widgetConstructor2 === 'string') {\n            return false;\n        }\n        if (widgetConstructor1 !== widgetConstructor2) {\n            return false;\n        }\n        if (dnode1.node.properties.key !== dnode2.node.properties.key) {\n            return false;\n        }\n        return true;\n    }\n    return false;\n}\nfunction findIndexOfChild(children, sameAs, start) {\n    for (let i = start; i < children.length; i++) {\n        if (same(children[i], sameAs)) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction createClassPropValue(classes = []) {\n    let classNames = '';\n    if (Array.isArray(classes)) {\n        for (let i = 0; i < classes.length; i++) {\n            let className = classes[i];\n            if (className && className !== true) {\n                classNames = classNames ? `${classNames} ${className}` : className;\n            }\n        }\n        return classNames;\n    }\n    if (classes && classes !== true) {\n        classNames = classes;\n    }\n    return classNames;\n}\nfunction updateAttribute(domNode, attrName, attrValue, namespace) {\n    if (namespace === NAMESPACE_SVG && attrName === 'href' && attrValue) {\n        domNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n    }\n    else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n        domNode.removeAttribute(attrName);\n    }\n    else {\n        domNode.setAttribute(attrName, attrValue);\n    }\n}\nfunction arrayFrom(arr) {\n    return Array.prototype.slice.call(arr);\n}\nfunction createFactory(callback, middlewares) {\n    const factory = (properties, children) => {\n        if (properties) {\n            const result = w(callback, properties, children);\n            callback.isWidget = true;\n            callback.middlewares = middlewares;\n            return result;\n        }\n        return {\n            middlewares,\n            callback\n        };\n    };\n    factory.isFactory = true;\n    return factory;\n}\nexport function create(middlewares = {}) {\n    function properties() {\n        function returns(callback) {\n            return createFactory(callback, middlewares);\n        }\n        return returns;\n    }\n    function returns(callback) {\n        return createFactory(callback, middlewares);\n    }\n    returns.properties = properties;\n    return returns;\n}\nconst factory = create();\nfunction wrapNodes(renderer) {\n    const result = renderer();\n    const isWNodeWrapper = isWNode(result);\n    const callback = () => {\n        return result;\n    };\n    callback.isWNodeWrapper = isWNodeWrapper;\n    return factory(callback);\n}\nexport const widgetInstanceMap = new WeakMap();\nconst widgetMetaMap = new Map();\nconst requestedDomNodes = new Set();\nlet wrapperId = 0;\nlet metaId = 0;\nfunction addNodeToMap(id, key, node) {\n    const widgetMeta = widgetMetaMap.get(id);\n    if (widgetMeta) {\n        widgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n        const existingNode = widgetMeta.nodeMap.get(key);\n        if (!existingNode) {\n            widgetMeta.nodeMap.set(key, node);\n        }\n        if (requestedDomNodes.has(`${id}-${key}`)) {\n            widgetMeta.invalidator();\n            requestedDomNodes.delete(`${id}-${key}`);\n        }\n    }\n}\nfunction destroyHandles(destroyMap) {\n    destroyMap.forEach((destroy) => destroy());\n    destroyMap.clear();\n}\nfunction runDiffs(meta, current, next) {\n    meta.customDiffMap = meta.customDiffMap || new Map();\n    if (meta.customDiffMap.size) {\n        meta.customDiffMap.forEach((diffMap) => {\n            diffMap.forEach((diff) => diff(Object.assign({}, current), Object.assign({}, next)));\n        });\n    }\n}\nexport const invalidator = factory(({ id }) => {\n    const [widgetId] = id.split('-');\n    return () => {\n        const widgetMeta = widgetMetaMap.get(widgetId);\n        if (widgetMeta) {\n            return widgetMeta.invalidator();\n        }\n    };\n});\nexport const node = factory(({ id }) => {\n    return {\n        get(key) {\n            const [widgetId] = id.split('-');\n            const widgetMeta = widgetMetaMap.get(widgetId);\n            if (widgetMeta) {\n                widgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n                const node = widgetMeta.nodeMap.get(key);\n                if (node) {\n                    return node;\n                }\n                requestedDomNodes.add(`${widgetId}-${key}`);\n            }\n            return null;\n        }\n    };\n});\nexport const diffProperty = factory(({ id }) => {\n    return (propertyName, diff) => {\n        const [widgetId] = id.split('-');\n        const widgetMeta = widgetMetaMap.get(widgetId);\n        if (widgetMeta) {\n            widgetMeta.customDiffMap = widgetMeta.customDiffMap || new Map();\n            widgetMeta.customDiffProperties = widgetMeta.customDiffProperties || new Set();\n            const propertyDiffMap = widgetMeta.customDiffMap.get(id) || new Map();\n            if (!propertyDiffMap.has(propertyName)) {\n                propertyDiffMap.set(propertyName, diff);\n                widgetMeta.customDiffProperties.add(propertyName);\n            }\n            widgetMeta.customDiffMap.set(id, propertyDiffMap);\n        }\n    };\n});\nexport const destroy = factory(({ id }) => {\n    return (destroyFunction) => {\n        const [widgetId] = id.split('-');\n        const widgetMeta = widgetMetaMap.get(widgetId);\n        if (widgetMeta) {\n            widgetMeta.destroyMap = widgetMeta.destroyMap || new Map();\n            if (!widgetMeta.destroyMap.has(id)) {\n                widgetMeta.destroyMap.set(id, destroyFunction);\n            }\n        }\n    };\n});\nexport const getRegistry = factory(({ id }) => {\n    const [widgetId] = id.split('-');\n    return () => {\n        const widgetMeta = widgetMetaMap.get(widgetId);\n        if (widgetMeta) {\n            if (!widgetMeta.registryHandler) {\n                widgetMeta.registryHandler = new RegistryHandler();\n                widgetMeta.registryHandler.base = widgetMeta.registry;\n                widgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n            }\n            widgetMeta.registryHandler = widgetMeta.registryHandler || new RegistryHandler();\n            return widgetMeta.registryHandler;\n        }\n        return null;\n    };\n});\nexport const defer = factory(({ id }) => {\n    const [widgetId] = id.split('-');\n    let isDeferred = false;\n    return {\n        pause() {\n            const widgetMeta = widgetMetaMap.get(widgetId);\n            if (!isDeferred && widgetMeta) {\n                widgetMeta.deferRefs = widgetMeta.deferRefs + 1;\n                isDeferred = true;\n            }\n        },\n        resume() {\n            const widgetMeta = widgetMetaMap.get(widgetId);\n            if (isDeferred && widgetMeta) {\n                widgetMeta.deferRefs = widgetMeta.deferRefs - 1;\n                isDeferred = false;\n            }\n        }\n    };\n});\nexport function renderer(renderer) {\n    let _mountOptions = {\n        sync: false,\n        merge: true,\n        transition: undefined,\n        domNode: global.document.body,\n        registry: new Registry()\n    };\n    let _invalidationQueue = [];\n    let _processQueue = [];\n    let _deferredProcessQueue = [];\n    let _applicationQueue = [];\n    let _eventMap = new WeakMap();\n    let _idToWrapperMap = new Map();\n    let _wrapperSiblingMap = new WeakMap();\n    let _idToChildrenWrappers = new Map();\n    let _insertBeforeMap = new WeakMap();\n    let _nodeToWrapperMap = new WeakMap();\n    let _renderScheduled;\n    let _idleCallbacks = [];\n    let _deferredRenderCallbacks = [];\n    let parentInvalidate;\n    let _allMergedNodes = [];\n    function nodeOperation(propName, propValue, previousValue, domNode) {\n        let result = propValue && !previousValue;\n        if (typeof propValue === 'function') {\n            result = propValue();\n        }\n        if (result === true) {\n            _deferredRenderCallbacks.push(() => {\n                domNode[propName]();\n            });\n        }\n    }\n    function updateEvent(domNode, eventName, currentValue, previousValue) {\n        if (previousValue) {\n            const previousEvent = _eventMap.get(previousValue);\n            previousEvent && domNode.removeEventListener(eventName, previousEvent);\n        }\n        let callback = currentValue;\n        if (eventName === 'input') {\n            callback = function (evt) {\n                currentValue.call(this, evt);\n                evt.target['oninput-value'] = evt.target.value;\n            };\n        }\n        domNode.addEventListener(eventName, callback);\n        _eventMap.set(currentValue, callback);\n    }\n    function removeOrphanedEvents(domNode, previousProperties, properties, onlyEvents = false) {\n        Object.keys(previousProperties).forEach((propName) => {\n            const isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n            const eventName = onlyEvents ? propName : propName.substr(2);\n            if (isEvent && !properties[propName]) {\n                const eventCallback = _eventMap.get(previousProperties[propName]);\n                if (eventCallback) {\n                    domNode.removeEventListener(eventName, eventCallback);\n                }\n            }\n        });\n    }\n    function resolveRegistryItem(wrapper, instance, id) {\n        if (!isWidget(wrapper.node.widgetConstructor)) {\n            const owningNode = _nodeToWrapperMap.get(wrapper.node);\n            if (owningNode) {\n                if (owningNode.instance) {\n                    instance = owningNode.instance;\n                }\n                else {\n                    id = owningNode.id;\n                }\n            }\n            let registry;\n            if (instance) {\n                const instanceData = widgetInstanceMap.get(instance);\n                if (instanceData) {\n                    registry = instanceData.registry;\n                }\n            }\n            else if (id !== undefined) {\n                const widgetMeta = widgetMetaMap.get(id);\n                if (widgetMeta) {\n                    if (!widgetMeta.registryHandler) {\n                        widgetMeta.registryHandler = new RegistryHandler();\n                        widgetMeta.registryHandler.base = widgetMeta.registry;\n                        widgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n                    }\n                    registry = widgetMeta.registryHandler;\n                }\n            }\n            if (registry) {\n                let registryLabel;\n                if (isLazyDefine(wrapper.node.widgetConstructor)) {\n                    const { label, registryItem } = wrapper.node.widgetConstructor;\n                    if (!registry.has(label)) {\n                        registry.define(label, registryItem);\n                    }\n                    registryLabel = label;\n                }\n                else {\n                    registryLabel = wrapper.node.widgetConstructor;\n                }\n                let item = registry.get(registryLabel);\n                if (isWNodeFactory(item)) {\n                    const node = item(wrapper.node.properties, wrapper.node.children);\n                    if (isWidgetFunction(node.widgetConstructor)) {\n                        wrapper.registryItem = node.widgetConstructor;\n                    }\n                }\n                else {\n                    wrapper.registryItem = item;\n                }\n            }\n        }\n    }\n    function mapNodeToInstance(nodes, wrapper) {\n        while (nodes.length) {\n            let node = nodes.pop();\n            if (isWNode(node) || isVNode(node)) {\n                if (!_nodeToWrapperMap.has(node)) {\n                    _nodeToWrapperMap.set(node, wrapper);\n                    if (node.children && node.children.length) {\n                        nodes = [...nodes, ...node.children];\n                    }\n                }\n            }\n        }\n    }\n    function renderedToWrapper(rendered, parent, currentParent) {\n        const { requiresInsertBefore, hasPreviousSiblings, namespace, depth } = parent;\n        const wrappedRendered = [];\n        const hasParentWNode = isWNodeWrapper(parent);\n        const hasVirtualParentNode = isVirtualWrapper(parent);\n        const currentParentChildren = (isVNodeWrapper(currentParent) && _idToChildrenWrappers.get(currentParent.id)) || [];\n        const hasCurrentParentChildren = currentParentChildren.length > 0;\n        const insertBefore = ((requiresInsertBefore || hasPreviousSiblings !== false) && (hasParentWNode || hasVirtualParentNode)) ||\n            (hasCurrentParentChildren && rendered.length > 1);\n        let previousItem;\n        if (isWNodeWrapper(parent) && rendered.length) {\n            mapNodeToInstance([...rendered], parent);\n        }\n        for (let i = 0; i < rendered.length; i++) {\n            let renderedItem = rendered[i];\n            if (!renderedItem || renderedItem === true) {\n                continue;\n            }\n            if (typeof renderedItem === 'string') {\n                renderedItem = toTextVNode(renderedItem);\n            }\n            const owningNode = _nodeToWrapperMap.get(renderedItem);\n            const wrapper = {\n                node: renderedItem,\n                depth: depth + 1,\n                order: i,\n                parentId: parent.id,\n                requiresInsertBefore: insertBefore,\n                hasParentWNode,\n                namespace: namespace\n            };\n            if (isVNode(renderedItem)) {\n                if (renderedItem.deferredPropertiesCallback) {\n                    wrapper.deferredProperties = renderedItem.deferredPropertiesCallback(false);\n                }\n                if (renderedItem.properties.exitAnimation) {\n                    parent.hasAnimations = true;\n                    let nextParent = _idToWrapperMap.get(parent.parentId);\n                    while (nextParent) {\n                        if (nextParent.hasAnimations) {\n                            break;\n                        }\n                        nextParent.hasAnimations = true;\n                        nextParent = _idToWrapperMap.get(nextParent.parentId);\n                    }\n                }\n            }\n            if (owningNode) {\n                wrapper.owningId = owningNode.id;\n            }\n            if (isWNode(renderedItem)) {\n                resolveRegistryItem(wrapper, parent.instance, parent.id);\n            }\n            if (previousItem) {\n                _wrapperSiblingMap.set(previousItem, wrapper);\n            }\n            wrappedRendered.push(wrapper);\n            previousItem = wrapper;\n        }\n        return wrappedRendered;\n    }\n    function findParentDomNode(currentNode) {\n        let parentDomNode;\n        let parentWrapper = _idToWrapperMap.get(currentNode.parentId);\n        while (!parentDomNode && parentWrapper) {\n            if (!parentDomNode &&\n                isVNodeWrapper(parentWrapper) &&\n                !isVirtualWrapper(parentWrapper) &&\n                parentWrapper.domNode) {\n                parentDomNode = parentWrapper.domNode;\n            }\n            parentWrapper = _idToWrapperMap.get(parentWrapper.parentId);\n        }\n        return parentDomNode;\n    }\n    function runDeferredProperties(next) {\n        const { deferredPropertiesCallback } = next.node;\n        if (deferredPropertiesCallback) {\n            const properties = next.node.properties;\n            _deferredRenderCallbacks.push(() => {\n                if (_idToWrapperMap.has(next.owningId)) {\n                    const deferredProperties = next.deferredProperties;\n                    next.deferredProperties = deferredPropertiesCallback(true);\n                    processProperties(next, {\n                        properties: Object.assign({}, deferredProperties, properties)\n                    });\n                }\n            });\n        }\n    }\n    function findInsertBefore(next) {\n        let insertBefore = null;\n        let searchNode = next;\n        while (!insertBefore) {\n            const nextSibling = _wrapperSiblingMap.get(searchNode);\n            if (nextSibling) {\n                let domNode = nextSibling.domNode;\n                if ((isWNodeWrapper(nextSibling) || isVirtualWrapper(nextSibling)) && nextSibling.childDomWrapperId) {\n                    const childWrapper = _idToWrapperMap.get(nextSibling.childDomWrapperId);\n                    if (childWrapper) {\n                        domNode = childWrapper.domNode;\n                    }\n                }\n                if (domNode && domNode.parentNode) {\n                    insertBefore = domNode;\n                    break;\n                }\n                searchNode = nextSibling;\n                continue;\n            }\n            searchNode = searchNode && _idToWrapperMap.get(searchNode.parentId);\n            if (!searchNode || (isVNodeWrapper(searchNode) && !isVirtualWrapper(searchNode))) {\n                break;\n            }\n        }\n        return insertBefore;\n    }\n    function setValue(domNode, propValue, previousValue) {\n        const domValue = domNode.value;\n        const onInputValue = domNode['oninput-value'];\n        const onSelectValue = domNode['select-value'];\n        if (onSelectValue && domValue !== onSelectValue) {\n            domNode.value = onSelectValue;\n            if (domNode.value === onSelectValue) {\n                domNode['select-value'] = undefined;\n            }\n        }\n        else if ((onInputValue && domValue === onInputValue) || propValue !== previousValue) {\n            domNode.value = propValue;\n            domNode['oninput-value'] = undefined;\n        }\n    }\n    function setProperties(domNode, currentProperties = {}, nextWrapper, includesEventsAndAttributes = true) {\n        const properties = nextWrapper.deferredProperties\n            ? Object.assign({}, nextWrapper.deferredProperties, nextWrapper.node.properties) : nextWrapper.node.properties;\n        const propNames = Object.keys(properties);\n        const propCount = propNames.length;\n        if (propNames.indexOf('classes') === -1 && currentProperties.classes) {\n            domNode.removeAttribute('class');\n        }\n        includesEventsAndAttributes && removeOrphanedEvents(domNode, currentProperties, properties);\n        for (let i = 0; i < propCount; i++) {\n            const propName = propNames[i];\n            let propValue = properties[propName];\n            const previousValue = currentProperties[propName];\n            if (propName === 'classes') {\n                const previousClassString = createClassPropValue(previousValue);\n                let currentClassString = createClassPropValue(propValue);\n                if (previousClassString !== currentClassString) {\n                    if (currentClassString) {\n                        if (nextWrapper.merged) {\n                            const domClasses = (domNode.getAttribute('class') || '').split(' ');\n                            for (let i = 0; i < domClasses.length; i++) {\n                                if (currentClassString.indexOf(domClasses[i]) === -1) {\n                                    currentClassString = `${domClasses[i]} ${currentClassString}`;\n                                }\n                            }\n                        }\n                        domNode.setAttribute('class', currentClassString);\n                    }\n                    else {\n                        domNode.removeAttribute('class');\n                    }\n                }\n            }\n            else if (nodeOperations.indexOf(propName) !== -1) {\n                nodeOperation(propName, propValue, previousValue, domNode);\n            }\n            else if (propName === 'styles') {\n                const styleNames = Object.keys(propValue);\n                const styleCount = styleNames.length;\n                for (let j = 0; j < styleCount; j++) {\n                    const styleName = styleNames[j];\n                    const newStyleValue = propValue[styleName];\n                    const oldStyleValue = previousValue && previousValue[styleName];\n                    if (newStyleValue === oldStyleValue) {\n                        continue;\n                    }\n                    domNode.style[styleName] = newStyleValue || '';\n                }\n            }\n            else {\n                if (!propValue && typeof previousValue === 'string') {\n                    propValue = '';\n                }\n                if (propName === 'value') {\n                    if (domNode.tagName === 'SELECT') {\n                        domNode['select-value'] = propValue;\n                    }\n                    setValue(domNode, propValue, previousValue);\n                }\n                else if (propName !== 'key' && propValue !== previousValue) {\n                    const type = typeof propValue;\n                    if (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n                        updateEvent(domNode, propName.substr(2), propValue, previousValue);\n                    }\n                    else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n                        updateAttribute(domNode, propName, propValue, nextWrapper.namespace);\n                    }\n                    else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n                        if (domNode[propName] !== propValue) {\n                            domNode[propName] = propValue;\n                        }\n                    }\n                    else {\n                        domNode[propName] = propValue;\n                    }\n                }\n            }\n        }\n    }\n    function runDeferredRenderCallbacks() {\n        const { sync } = _mountOptions;\n        const callbacks = _deferredRenderCallbacks;\n        _deferredRenderCallbacks = [];\n        if (callbacks.length) {\n            const run = () => {\n                let callback;\n                while ((callback = callbacks.shift())) {\n                    callback();\n                }\n            };\n            if (sync) {\n                run();\n            }\n            else {\n                global.requestAnimationFrame(run);\n            }\n        }\n    }\n    function runAfterRenderCallbacks() {\n        const { sync } = _mountOptions;\n        const callbacks = _idleCallbacks;\n        _idleCallbacks = [];\n        if (callbacks.length) {\n            const run = () => {\n                let callback;\n                while ((callback = callbacks.shift())) {\n                    callback();\n                }\n            };\n            if (sync) {\n                run();\n            }\n            else {\n                if (global.requestIdleCallback) {\n                    global.requestIdleCallback(run);\n                }\n                else {\n                    setTimeout(run);\n                }\n            }\n        }\n    }\n    function processProperties(next, previousProperties) {\n        if (next.node.attributes && next.node.events) {\n            updateAttributes(next.domNode, previousProperties.attributes || {}, next.node.attributes, next.namespace);\n            setProperties(next.domNode, previousProperties.properties, next, false);\n            const events = next.node.events || {};\n            if (previousProperties.events) {\n                removeOrphanedEvents(next.domNode, previousProperties.events || {}, next.node.events, true);\n            }\n            previousProperties.events = previousProperties.events || {};\n            Object.keys(events).forEach((event) => {\n                updateEvent(next.domNode, event, events[event], previousProperties.events[event]);\n            });\n        }\n        else {\n            setProperties(next.domNode, previousProperties.properties, next);\n        }\n    }\n    function mount(mountOptions = {}) {\n        _mountOptions = Object.assign({}, _mountOptions, mountOptions);\n        const { domNode } = _mountOptions;\n        const renderResult = wrapNodes(renderer)({});\n        const nextWrapper = {\n            id: `${wrapperId++}`,\n            node: renderResult,\n            order: 0,\n            depth: 1,\n            owningId: '-1',\n            parentId: '-1',\n            siblingId: '-1',\n            properties: {}\n        };\n        _idToWrapperMap.set('-1', {\n            id: `-1`,\n            depth: 0,\n            order: 0,\n            owningId: '',\n            domNode,\n            node: v('fake'),\n            parentId: '-1'\n        });\n        _processQueue.push({\n            current: [],\n            next: [nextWrapper],\n            meta: { mergeNodes: arrayFrom(domNode.childNodes) }\n        });\n        _runProcessQueue();\n        _runDomInstructionQueue();\n        _cleanUpMergedNodes();\n        _insertBeforeMap = undefined;\n        _runCallbacks();\n    }\n    function invalidate() {\n        parentInvalidate && parentInvalidate();\n    }\n    function _schedule() {\n        const { sync } = _mountOptions;\n        if (sync) {\n            _runInvalidationQueue();\n        }\n        else if (!_renderScheduled) {\n            _renderScheduled = global.requestAnimationFrame(() => {\n                _runInvalidationQueue();\n            });\n        }\n    }\n    function getWNodeWrapper(id) {\n        const wrapper = _idToWrapperMap.get(id);\n        if (wrapper && isWNodeWrapper(wrapper)) {\n            return wrapper;\n        }\n    }\n    function _runInvalidationQueue() {\n        _renderScheduled = undefined;\n        let invalidationQueue = [..._invalidationQueue];\n        const previouslyRendered = [];\n        _invalidationQueue = [];\n        invalidationQueue.sort((a, b) => {\n            let result = b.depth - a.depth;\n            if (result === 0) {\n                result = b.order - a.order;\n            }\n            return result;\n        });\n        if (_deferredProcessQueue.length) {\n            _processQueue = [..._deferredProcessQueue];\n            _deferredProcessQueue = [];\n            _runProcessQueue();\n            if (_deferredProcessQueue.length) {\n                _invalidationQueue = [...invalidationQueue];\n                invalidationQueue = [];\n            }\n        }\n        let item;\n        while ((item = invalidationQueue.pop())) {\n            let { id } = item;\n            const current = getWNodeWrapper(id);\n            if (!current || previouslyRendered.indexOf(id) !== -1 || !_idToWrapperMap.has(current.parentId)) {\n                continue;\n            }\n            previouslyRendered.push(id);\n            const sibling = _wrapperSiblingMap.get(current);\n            const next = {\n                node: {\n                    type: WNODE,\n                    widgetConstructor: current.node.widgetConstructor,\n                    properties: current.properties || {},\n                    children: current.node.children || []\n                },\n                instance: current.instance,\n                id: current.id,\n                properties: current.properties,\n                depth: current.depth,\n                order: current.order,\n                owningId: current.owningId,\n                parentId: current.parentId,\n                registryItem: current.registryItem\n            };\n            sibling && _wrapperSiblingMap.set(next, sibling);\n            const result = _updateWidget({ current, next });\n            if (result && result.item) {\n                _processQueue.push(result.item);\n                _idToWrapperMap.set(id, next);\n                _runProcessQueue();\n            }\n        }\n        _runDomInstructionQueue();\n        _cleanUpMergedNodes();\n        _runCallbacks();\n    }\n    function _cleanUpMergedNodes() {\n        if (_deferredProcessQueue.length === 0) {\n            let mergedNode;\n            while ((mergedNode = _allMergedNodes.pop())) {\n                mergedNode.parentNode && mergedNode.parentNode.removeChild(mergedNode);\n            }\n            _mountOptions.merge = false;\n        }\n    }\n    function _runProcessQueue() {\n        let item;\n        while ((item = _processQueue.pop())) {\n            if (isAttachApplication(item)) {\n                item.type === 'attach' && setDomNodeOnParentWrapper(item.id);\n                if (item.instance) {\n                    _applicationQueue.push(item);\n                }\n            }\n            else {\n                const { current, next, meta } = item;\n                _process(current || EMPTY_ARRAY, next || EMPTY_ARRAY, meta);\n            }\n        }\n    }\n    function _runDomInstructionQueue() {\n        _applicationQueue.reverse();\n        let item;\n        while ((item = _applicationQueue.pop())) {\n            if (item.type === 'create') {\n                const { parentDomNode, next, next: { domNode, merged, requiresInsertBefore, node } } = item;\n                processProperties(next, { properties: {} });\n                runDeferredProperties(next);\n                if (!merged) {\n                    let insertBefore;\n                    if (requiresInsertBefore) {\n                        insertBefore = findInsertBefore(next);\n                    }\n                    else if (_insertBeforeMap) {\n                        insertBefore = _insertBeforeMap.get(next);\n                    }\n                    parentDomNode.insertBefore(domNode, insertBefore);\n                    if (isDomVNode(next.node) && next.node.onAttach) {\n                        next.node.onAttach();\n                    }\n                }\n                if (domNode.tagName === 'OPTION' && domNode.parentElement) {\n                    setValue(domNode.parentElement);\n                }\n                const { enterAnimation, enterAnimationActive } = node.properties;\n                if (_mountOptions.transition && enterAnimation && enterAnimation !== true) {\n                    _mountOptions.transition.enter(domNode, enterAnimation, enterAnimationActive);\n                }\n                const owningWrapper = _nodeToWrapperMap.get(next.node);\n                if (owningWrapper && node.properties.key != null) {\n                    if (owningWrapper.instance) {\n                        const instanceData = widgetInstanceMap.get(owningWrapper.instance);\n                        instanceData && instanceData.nodeHandler.add(domNode, `${node.properties.key}`);\n                    }\n                    else {\n                        addNodeToMap(owningWrapper.id, node.properties.key, domNode);\n                    }\n                }\n                item.next.inserted = true;\n            }\n            else if (item.type === 'update') {\n                const { next, next: { domNode }, current, current: { domNode: currentDomNode } } = item;\n                if (isTextNode(domNode) && isTextNode(currentDomNode) && domNode !== currentDomNode) {\n                    currentDomNode.parentNode && currentDomNode.parentNode.replaceChild(domNode, currentDomNode);\n                }\n                else {\n                    const previousProperties = buildPreviousProperties(domNode, current);\n                    processProperties(next, previousProperties);\n                    runDeferredProperties(next);\n                }\n            }\n            else if (item.type === 'delete') {\n                const { current } = item;\n                const { exitAnimation, exitAnimationActive } = current.node.properties;\n                if (_mountOptions.transition && exitAnimation && exitAnimation !== true) {\n                    _mountOptions.transition.exit(current.domNode, exitAnimation, exitAnimationActive);\n                }\n                else {\n                    current.domNode.parentNode.removeChild(current.domNode);\n                }\n            }\n            else if (item.type === 'attach') {\n                const { instance, attached } = item;\n                const instanceData = widgetInstanceMap.get(instance);\n                if (instanceData) {\n                    instanceData.nodeHandler.addRoot();\n                    attached && instanceData.onAttach();\n                }\n            }\n            else if (item.type === 'detach') {\n                if (item.current.instance) {\n                    const instanceData = widgetInstanceMap.get(item.current.instance);\n                    instanceData && instanceData.onDetach();\n                }\n                item.current.instance = undefined;\n            }\n        }\n        if (_deferredProcessQueue.length === 0) {\n            _nodeToWrapperMap = new WeakMap();\n        }\n    }\n    function _runCallbacks() {\n        runAfterRenderCallbacks();\n        runDeferredRenderCallbacks();\n    }\n    function _processMergeNodes(next, mergeNodes) {\n        const { merge } = _mountOptions;\n        if (merge && mergeNodes.length) {\n            if (isVNodeWrapper(next)) {\n                let { node: { tag } } = next;\n                for (let i = 0; i < mergeNodes.length; i++) {\n                    const domElement = mergeNodes[i];\n                    const tagName = domElement.tagName || '';\n                    if (tag.toUpperCase() === tagName.toUpperCase()) {\n                        const mergeNodeIndex = _allMergedNodes.indexOf(domElement);\n                        if (mergeNodeIndex !== -1) {\n                            _allMergedNodes.splice(mergeNodeIndex, 1);\n                        }\n                        mergeNodes.splice(i, 1);\n                        next.domNode = domElement;\n                        break;\n                    }\n                }\n            }\n            else {\n                next.mergeNodes = mergeNodes;\n            }\n        }\n    }\n    function registerDistinguishableCallback(childNodes, index) {\n        _idleCallbacks.push(() => {\n            const parentWNodeWrapper = getWNodeWrapper(childNodes[index].owningId);\n            checkDistinguishable(childNodes, index, parentWNodeWrapper);\n        });\n    }\n    function createKeyMap(wrappers) {\n        const keys = [];\n        for (let i = 0; i < wrappers.length; i++) {\n            const wrapper = wrappers[i];\n            if (wrapper.node.properties.key != null) {\n                keys.push(wrapper.node.properties.key);\n            }\n            else {\n                return false;\n            }\n        }\n        return keys;\n    }\n    function _process(current, next, meta = {}) {\n        let { mergeNodes = [], oldIndex = 0, newIndex = 0 } = meta;\n        const currentLength = current.length;\n        const nextLength = next.length;\n        const hasPreviousSiblings = currentLength > 1 || (currentLength > 0 && currentLength < nextLength);\n        let instructions = [];\n        let replace = false;\n        if (oldIndex === 0 && newIndex === 0 && currentLength) {\n            const currentKeys = createKeyMap(current);\n            if (currentKeys) {\n                const nextKeys = createKeyMap(next);\n                if (nextKeys) {\n                    for (let i = 0; i < currentKeys.length; i++) {\n                        if (nextKeys.indexOf(currentKeys[i]) !== -1) {\n                            instructions = [];\n                            replace = false;\n                            break;\n                        }\n                        replace = true;\n                        instructions.push({ current: current[i], next: undefined });\n                    }\n                }\n            }\n        }\n        if (replace || (currentLength === 0 && !_mountOptions.merge)) {\n            for (let i = 0; i < next.length; i++) {\n                instructions.push({ current: undefined, next: next[i] });\n            }\n        }\n        else {\n            if (newIndex < nextLength) {\n                let currentWrapper = oldIndex < currentLength ? current[oldIndex] : undefined;\n                const nextWrapper = next[newIndex];\n                nextWrapper.hasPreviousSiblings = hasPreviousSiblings;\n                _processMergeNodes(nextWrapper, mergeNodes);\n                if (currentWrapper && same(currentWrapper, nextWrapper)) {\n                    oldIndex++;\n                    newIndex++;\n                    if (isVNodeWrapper(currentWrapper) && isVNodeWrapper(nextWrapper)) {\n                        nextWrapper.inserted = currentWrapper.inserted;\n                    }\n                    instructions.push({ current: currentWrapper, next: nextWrapper });\n                }\n                else if (!currentWrapper || findIndexOfChild(current, nextWrapper, oldIndex + 1) === -1) {\n                    has('dojo-debug') && current.length && registerDistinguishableCallback(next, newIndex);\n                    instructions.push({ current: undefined, next: nextWrapper });\n                    newIndex++;\n                }\n                else if (findIndexOfChild(next, currentWrapper, newIndex + 1) === -1) {\n                    has('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n                    instructions.push({ current: currentWrapper, next: undefined });\n                    oldIndex++;\n                }\n                else {\n                    has('dojo-debug') && registerDistinguishableCallback(next, newIndex);\n                    has('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n                    instructions.push({ current: currentWrapper, next: undefined });\n                    instructions.push({ current: undefined, next: nextWrapper });\n                    oldIndex++;\n                    newIndex++;\n                }\n            }\n            if (newIndex < nextLength) {\n                _processQueue.push({ current, next, meta: { mergeNodes, oldIndex, newIndex } });\n            }\n            if (currentLength > oldIndex && newIndex >= nextLength) {\n                for (let i = oldIndex; i < currentLength; i++) {\n                    has('dojo-debug') && registerDistinguishableCallback(current, i);\n                    instructions.push({ current: current[i], next: undefined });\n                }\n            }\n        }\n        for (let i = 0; i < instructions.length; i++) {\n            const result = _processOne(instructions[i]);\n            if (result === false) {\n                if (_mountOptions.merge && mergeNodes.length) {\n                    if (newIndex < nextLength) {\n                        _processQueue.pop();\n                    }\n                    _processQueue.push({ next, current, meta });\n                    _deferredProcessQueue = _processQueue;\n                    _processQueue = [];\n                    break;\n                }\n                continue;\n            }\n            const { widget, item, dom } = result;\n            widget && _processQueue.push(widget);\n            item && _processQueue.push(item);\n            dom && _applicationQueue.push(dom);\n        }\n    }\n    function _processOne({ current, next }) {\n        if (current !== next) {\n            if (!current && next) {\n                if (isVNodeWrapper(next)) {\n                    return _createDom({ next });\n                }\n                else {\n                    return _createWidget({ next });\n                }\n            }\n            else if (current && next) {\n                if (isVNodeWrapper(current) && isVNodeWrapper(next)) {\n                    return _updateDom({ current, next });\n                }\n                else if (isWNodeWrapper(current) && isWNodeWrapper(next)) {\n                    return _updateWidget({ current, next });\n                }\n            }\n            else if (current && !next) {\n                if (isVNodeWrapper(current)) {\n                    return _removeDom({ current });\n                }\n                else if (isWNodeWrapper(current)) {\n                    return _removeWidget({ current });\n                }\n            }\n        }\n        return {};\n    }\n    function resolveMiddleware(middlewares, id) {\n        const keys = Object.keys(middlewares);\n        const results = {};\n        const uniqueId = `${id}-${metaId++}`;\n        for (let i = 0; i < keys.length; i++) {\n            const middleware = middlewares[keys[i]]();\n            const payload = {\n                id: uniqueId,\n                properties: () => {\n                    const widgetMeta = widgetMetaMap.get(id);\n                    if (widgetMeta) {\n                        return Object.assign({}, widgetMeta.properties);\n                    }\n                    return {};\n                },\n                children: () => {\n                    const widgetMeta = widgetMetaMap.get(id);\n                    if (widgetMeta) {\n                        return widgetMeta.children;\n                    }\n                    return [];\n                }\n            };\n            if (middleware.middlewares) {\n                const resolvedMiddleware = resolveMiddleware(middleware.middlewares, id);\n                payload.middleware = resolvedMiddleware;\n                results[keys[i]] = middleware.callback(payload);\n            }\n            else {\n                results[keys[i]] = middleware.callback(payload);\n            }\n        }\n        return results;\n    }\n    function _createWidget({ next }) {\n        let { node: { widgetConstructor } } = next;\n        let { registry } = _mountOptions;\n        let Constructor = next.registryItem || widgetConstructor;\n        if (!isWidget(Constructor)) {\n            resolveRegistryItem(next);\n            if (!next.registryItem) {\n                return false;\n            }\n            Constructor = next.registryItem;\n        }\n        let rendered;\n        let invalidate;\n        next.properties = next.node.properties;\n        next.id = next.id || `${wrapperId++}`;\n        _idToWrapperMap.set(next.id, next);\n        const { id, depth, order } = next;\n        if (!isWidgetBaseConstructor(Constructor)) {\n            let widgetMeta = widgetMetaMap.get(id);\n            if (!widgetMeta) {\n                invalidate = () => {\n                    const widgetMeta = widgetMetaMap.get(id);\n                    if (widgetMeta) {\n                        widgetMeta.dirty = true;\n                        if (!widgetMeta.rendering && _idToWrapperMap.has(id)) {\n                            _invalidationQueue.push({ id, depth, order });\n                            _schedule();\n                        }\n                    }\n                };\n                widgetMeta = {\n                    dirty: false,\n                    invalidator: invalidate,\n                    properties: next.node.properties,\n                    children: next.node.children,\n                    deferRefs: 0,\n                    rendering: true,\n                    registry: _mountOptions.registry\n                };\n                widgetMetaMap.set(next.id, widgetMeta);\n                widgetMeta.middleware = Constructor.middlewares\n                    ? resolveMiddleware(Constructor.middlewares, id)\n                    : {};\n            }\n            else {\n                invalidate = widgetMeta.invalidator;\n            }\n            rendered = Constructor({\n                id,\n                properties: () => next.node.properties,\n                children: () => next.node.children,\n                middleware: widgetMeta.middleware\n            });\n            widgetMeta.rendering = false;\n            if (widgetMeta.deferRefs > 0) {\n                return false;\n            }\n        }\n        else {\n            let instance = new Constructor();\n            instance.registry.base = registry;\n            const instanceData = widgetInstanceMap.get(instance);\n            invalidate = () => {\n                instanceData.dirty = true;\n                if (!instanceData.rendering && _idToWrapperMap.has(id)) {\n                    _invalidationQueue.push({ id, depth, order });\n                    _schedule();\n                }\n            };\n            instanceData.invalidate = invalidate;\n            instanceData.rendering = true;\n            instance.__setProperties__(next.node.properties);\n            instance.__setChildren__(next.node.children);\n            next.instance = instance;\n            rendered = instance.__render__();\n            instanceData.rendering = false;\n        }\n        let children;\n        if (rendered) {\n            rendered = Array.isArray(rendered) ? rendered : [rendered];\n            children = renderedToWrapper(rendered, next, null);\n            _idToChildrenWrappers.set(id, children);\n        }\n        if (!parentInvalidate && !Constructor.isWNodeWrapper) {\n            parentInvalidate = invalidate;\n        }\n        return {\n            item: {\n                next: children,\n                meta: { mergeNodes: next.mergeNodes }\n            },\n            widget: { type: 'attach', instance: next.instance, id, attached: true }\n        };\n    }\n    function _updateWidget({ current, next }) {\n        current = getWNodeWrapper(current.id) || current;\n        const { instance, domNode, hasAnimations } = current;\n        let { node: { widgetConstructor } } = next;\n        const Constructor = next.registryItem || widgetConstructor;\n        if (!isWidget(Constructor)) {\n            return {};\n        }\n        let rendered;\n        let processResult = {};\n        let didRender = false;\n        let currentChildren = _idToChildrenWrappers.get(current.id);\n        next.hasAnimations = hasAnimations;\n        next.id = current.id;\n        next.childDomWrapperId = current.childDomWrapperId;\n        next.properties = next.node.properties;\n        _wrapperSiblingMap.delete(current);\n        if (domNode && domNode.parentNode) {\n            next.domNode = domNode;\n        }\n        if (!isWidgetBaseConstructor(Constructor)) {\n            const widgetMeta = widgetMetaMap.get(next.id);\n            if (widgetMeta) {\n                widgetMeta.properties = next.properties;\n                widgetMeta.rendering = true;\n                runDiffs(widgetMeta, current.properties, next.properties);\n                if (current.node.children.length > 0 || next.node.children.length > 0) {\n                    widgetMeta.dirty = true;\n                }\n                if (!widgetMeta.dirty) {\n                    propertiesDiff(current.properties, next.properties, () => {\n                        widgetMeta.dirty = true;\n                    }, widgetMeta.customDiffProperties ? [...widgetMeta.customDiffProperties.values()] : []);\n                }\n                if (widgetMeta.dirty) {\n                    _idToChildrenWrappers.delete(next.id);\n                    didRender = true;\n                    widgetMeta.dirty = false;\n                    rendered = Constructor({\n                        id: next.id,\n                        properties: () => next.node.properties,\n                        children: () => next.node.children,\n                        middleware: widgetMeta.middleware\n                    });\n                    if (widgetMeta.deferRefs > 0) {\n                        rendered = null;\n                    }\n                }\n                widgetMeta.rendering = false;\n            }\n        }\n        else {\n            const instanceData = widgetInstanceMap.get(instance);\n            next.instance = instance;\n            instanceData.rendering = true;\n            instance.__setProperties__(next.node.properties);\n            instance.__setChildren__(next.node.children);\n            if (instanceData.dirty) {\n                didRender = true;\n                _idToChildrenWrappers.delete(next.id);\n                rendered = instance.__render__();\n            }\n            instanceData.rendering = false;\n        }\n        _idToWrapperMap.set(next.id, next);\n        processResult.widget = { type: 'attach', instance, id: next.id, attached: false };\n        let children;\n        if (rendered) {\n            rendered = Array.isArray(rendered) ? rendered : [rendered];\n            children = renderedToWrapper(rendered, next, current);\n            _idToChildrenWrappers.set(next.id, children);\n        }\n        if (didRender) {\n            processResult.item = {\n                current: currentChildren,\n                next: children,\n                meta: {}\n            };\n        }\n        return processResult;\n    }\n    function _removeWidget({ current }) {\n        current = getWNodeWrapper(current.id) || current;\n        _idToWrapperMap.delete(current.id);\n        const meta = widgetMetaMap.get(current.id);\n        let currentChildren = _idToChildrenWrappers.get(current.id);\n        _idToChildrenWrappers.delete(current.id);\n        _wrapperSiblingMap.delete(current);\n        let processResult = {\n            item: {\n                current: currentChildren,\n                meta: {}\n            }\n        };\n        if (meta) {\n            meta.registryHandler && meta.registryHandler.destroy();\n            meta.destroyMap && destroyHandles(meta.destroyMap);\n            widgetMetaMap.delete(current.id);\n        }\n        else {\n            processResult.widget = { type: 'detach', current, instance: current.instance };\n        }\n        return processResult;\n    }\n    function setDomNodeOnParentWrapper(id) {\n        let wrapper = _idToWrapperMap.get(id);\n        let children = [...(_idToChildrenWrappers.get(id) || [])];\n        let child;\n        while (children.length && !wrapper.domNode) {\n            child = children.shift();\n            if (child) {\n                if (child.domNode) {\n                    wrapper.childDomWrapperId = child.id;\n                    break;\n                }\n                let nextChildren = _idToChildrenWrappers.get(child.id);\n                if (nextChildren) {\n                    children = [...nextChildren, ...children];\n                }\n            }\n        }\n    }\n    function _createDom({ next }) {\n        const parentDomNode = findParentDomNode(next);\n        const isVirtual = isVirtualWrapper(next);\n        const isBody = isBodyWrapper(next);\n        let mergeNodes = [];\n        next.id = `${wrapperId++}`;\n        _idToWrapperMap.set(next.id, next);\n        if (!next.domNode) {\n            if (next.node.domNode) {\n                next.domNode = next.node.domNode;\n            }\n            else {\n                if (next.node.tag === 'svg') {\n                    next.namespace = NAMESPACE_SVG;\n                }\n                if (isBody) {\n                    next.domNode = global.document.body;\n                }\n                else if (next.node.tag && !isVirtual) {\n                    if (next.namespace) {\n                        next.domNode = global.document.createElementNS(next.namespace, next.node.tag);\n                    }\n                    else {\n                        next.domNode = global.document.createElement(next.node.tag);\n                    }\n                }\n                else if (next.node.text != null) {\n                    next.domNode = global.document.createTextNode(next.node.text);\n                }\n            }\n            if (_insertBeforeMap && _allMergedNodes.length) {\n                if (parentDomNode === _allMergedNodes[0].parentNode) {\n                    _insertBeforeMap.set(next, _allMergedNodes[0]);\n                }\n            }\n        }\n        else if (_mountOptions.merge) {\n            next.merged = true;\n            if (isTextNode(next.domNode)) {\n                if (next.domNode.data !== next.node.text) {\n                    _allMergedNodes = [next.domNode, ..._allMergedNodes];\n                    next.domNode = global.document.createTextNode(next.node.text);\n                    next.merged = false;\n                }\n            }\n            else {\n                mergeNodes = arrayFrom(next.domNode.childNodes);\n                _allMergedNodes = [..._allMergedNodes, ...mergeNodes];\n            }\n        }\n        let children;\n        if (next.domNode || isVirtual) {\n            if (next.node.children && next.node.children.length) {\n                children = renderedToWrapper(next.node.children, next, null);\n                _idToChildrenWrappers.set(next.id, children);\n            }\n        }\n        const dom = isVirtual || isBody\n            ? undefined\n            : {\n                next: next,\n                parentDomNode: parentDomNode,\n                type: 'create'\n            };\n        if (children) {\n            return {\n                item: {\n                    current: [],\n                    next: children,\n                    meta: { mergeNodes }\n                },\n                dom,\n                widget: isVirtual ? { type: 'attach', id: next.id, attached: false } : undefined\n            };\n        }\n        return { dom };\n    }\n    function _updateDom({ current, next }) {\n        next.domNode = current.domNode;\n        next.namespace = current.namespace;\n        next.id = current.id;\n        next.childDomWrapperId = current.childDomWrapperId;\n        let children;\n        let currentChildren = _idToChildrenWrappers.get(next.id);\n        if (next.node.text != null && next.node.text !== current.node.text) {\n            next.domNode = global.document.createTextNode(next.node.text);\n        }\n        else if (next.node.children) {\n            children = renderedToWrapper(next.node.children, next, current);\n            _idToChildrenWrappers.set(next.id, children);\n        }\n        _wrapperSiblingMap.delete(current);\n        _idToWrapperMap.set(next.id, next);\n        return {\n            item: {\n                current: currentChildren,\n                next: children,\n                meta: {}\n            },\n            dom: { type: 'update', next, current }\n        };\n    }\n    function _removeDom({ current }) {\n        const isVirtual = isVirtualWrapper(current);\n        const isBody = isBodyWrapper(current);\n        const children = _idToChildrenWrappers.get(current.id);\n        _idToChildrenWrappers.delete(current.id);\n        _idToWrapperMap.delete(current.id);\n        _wrapperSiblingMap.delete(current);\n        if (current.node.properties.key) {\n            const widgetMeta = widgetMetaMap.get(current.owningId);\n            const parentWrapper = getWNodeWrapper(current.owningId);\n            if (widgetMeta) {\n                widgetMeta.nodeMap && widgetMeta.nodeMap.delete(current.node.properties.key);\n            }\n            else if (parentWrapper && parentWrapper.instance) {\n                const instanceData = widgetInstanceMap.get(parentWrapper.instance);\n                instanceData && instanceData.nodeHandler.remove(current.node.properties.key);\n            }\n        }\n        if (current.hasAnimations || isVirtual || isBody) {\n            return {\n                item: { current: children, meta: {} },\n                dom: isVirtual || isBody ? undefined : { type: 'delete', current }\n            };\n        }\n        if (children) {\n            _deferredRenderCallbacks.push(() => {\n                let wrappers = children || [];\n                let wrapper;\n                let bodyIds = [];\n                while ((wrapper = wrappers.pop())) {\n                    if (isWNodeWrapper(wrapper)) {\n                        wrapper = getWNodeWrapper(wrapper.id) || wrapper;\n                        if (wrapper.instance) {\n                            const instanceData = widgetInstanceMap.get(wrapper.instance);\n                            instanceData && instanceData.onDetach();\n                            wrapper.instance = undefined;\n                        }\n                        else {\n                            const meta = widgetMetaMap.get(wrapper.id);\n                            if (meta) {\n                                meta.registryHandler && meta.registryHandler.destroy();\n                                meta.destroyMap && destroyHandles(meta.destroyMap);\n                                widgetMetaMap.delete(wrapper.id);\n                            }\n                        }\n                    }\n                    let wrapperChildren = _idToChildrenWrappers.get(wrapper.id);\n                    if (wrapperChildren) {\n                        wrappers.push(...wrapperChildren);\n                    }\n                    if (isBodyWrapper(wrapper)) {\n                        bodyIds.push(wrapper.id);\n                    }\n                    else if (bodyIds.indexOf(wrapper.parentId) !== -1) {\n                        if (isWNodeWrapper(wrapper) || isVirtualWrapper(wrapper)) {\n                            bodyIds.push(wrapper.id);\n                        }\n                        else if (wrapper.domNode && wrapper.domNode.parentNode) {\n                            wrapper.domNode.parentNode.removeChild(wrapper.domNode);\n                        }\n                    }\n                    _idToChildrenWrappers.delete(wrapper.id);\n                    _idToWrapperMap.delete(wrapper.id);\n                }\n            });\n        }\n        return {\n            dom: { type: 'delete', current }\n        };\n    }\n    return {\n        mount,\n        invalidate\n    };\n}\nexport default renderer;\n//# sourceMappingURL=vdom.mjs.map","var _a;\nvar isArrayLike = undefined, ShimIterator = undefined;\n// !has('es6-iterator')\n// elided: import './iterator'\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from '../core/has';\n// !has('es6-symbol')\n// elided: import './Symbol'\nexport let Map = global.Map;\nif (!true) {\n    Map = global.Map = (_a = class Map {\n            constructor(iterable) {\n                this._keys = [];\n                this._values = [];\n                this[Symbol.toStringTag] = 'Map';\n                if (iterable) {\n                    if (isArrayLike(iterable)) {\n                        for (let i = 0; i < iterable.length; i++) {\n                            const value = iterable[i];\n                            this.set(value[0], value[1]);\n                        }\n                    }\n                    else {\n                        for (const value of iterable) {\n                            this.set(value[0], value[1]);\n                        }\n                    }\n                }\n            }\n            /**\n             * An alternative to Array.prototype.indexOf using Object.is\n             * to check for equality. See http://mzl.la/1zuKO2V\n             */\n            _indexOfKey(keys, key) {\n                for (let i = 0, length = keys.length; i < length; i++) {\n                    if (objectIs(keys[i], key)) {\n                        return i;\n                    }\n                }\n                return -1;\n            }\n            get size() {\n                return this._keys.length;\n            }\n            clear() {\n                this._keys.length = this._values.length = 0;\n            }\n            delete(key) {\n                const index = this._indexOfKey(this._keys, key);\n                if (index < 0) {\n                    return false;\n                }\n                this._keys.splice(index, 1);\n                this._values.splice(index, 1);\n                return true;\n            }\n            entries() {\n                const values = this._keys.map((key, i) => {\n                    return [key, this._values[i]];\n                });\n                return new ShimIterator(values);\n            }\n            forEach(callback, context) {\n                const keys = this._keys;\n                const values = this._values;\n                for (let i = 0, length = keys.length; i < length; i++) {\n                    callback.call(context, values[i], keys[i], this);\n                }\n            }\n            get(key) {\n                const index = this._indexOfKey(this._keys, key);\n                return index < 0 ? undefined : this._values[index];\n            }\n            has(key) {\n                return this._indexOfKey(this._keys, key) > -1;\n            }\n            keys() {\n                return new ShimIterator(this._keys);\n            }\n            set(key, value) {\n                let index = this._indexOfKey(this._keys, key);\n                index = index < 0 ? this._keys.length : index;\n                this._keys[index] = key;\n                this._values[index] = value;\n                return this;\n            }\n            values() {\n                return new ShimIterator(this._values);\n            }\n            [Symbol.iterator]() {\n                return this.entries();\n            }\n        },\n        _a[Symbol.species] = _a,\n        _a);\n}\nexport default Map;","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport { Evented } from '../core/Evented';\n/**\n * Widget base type\n */\nexport const WIDGET_BASE_TYPE = '__widget_base_type';\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor(item) {\n    return Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\nexport function isWidgetFunction(item) {\n    return Boolean(item && item.isWidget);\n}\nexport function isWNodeFactory(node) {\n    if (typeof node === 'function' && node.isFactory) {\n        return true;\n    }\n    return false;\n}\nexport function isWidget(item) {\n    return isWidgetBaseConstructor(item) || isWidgetFunction(item);\n}\nexport function isWidgetConstructorDefaultExport(item) {\n    return Boolean(item &&\n        item.hasOwnProperty('__esModule') &&\n        item.hasOwnProperty('default') &&\n        (isWidget(item.default) || isWNodeFactory(item.default)));\n}\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented {\n    /**\n     * Emit loaded event for registry label\n     */\n    emitLoadedEvent(widgetLabel, item) {\n        this.emit({\n            type: widgetLabel,\n            action: 'loaded',\n            item\n        });\n    }\n    define(label, item) {\n        if (this._widgetRegistry === undefined) {\n            this._widgetRegistry = new Map();\n        }\n        if (this._widgetRegistry.has(label)) {\n            throw new Error(`widget has already been registered for '${label.toString()}'`);\n        }\n        this._widgetRegistry.set(label, item);\n        if (item instanceof Promise) {\n            item.then((widgetCtor) => {\n                this._widgetRegistry.set(label, widgetCtor);\n                this.emitLoadedEvent(label, widgetCtor);\n                return widgetCtor;\n            }, (error) => {\n                throw error;\n            });\n        }\n        else if (isWidgetBaseConstructor(item)) {\n            this.emitLoadedEvent(label, item);\n        }\n    }\n    defineInjector(label, injectorFactory) {\n        if (this._injectorRegistry === undefined) {\n            this._injectorRegistry = new Map();\n        }\n        if (this._injectorRegistry.has(label)) {\n            throw new Error(`injector has already been registered for '${label.toString()}'`);\n        }\n        const invalidator = new Evented();\n        const injectorItem = {\n            injector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n            invalidator\n        };\n        this._injectorRegistry.set(label, injectorItem);\n        this.emitLoadedEvent(label, injectorItem);\n    }\n    get(label) {\n        if (!this._widgetRegistry || !this.has(label)) {\n            return null;\n        }\n        const item = this._widgetRegistry.get(label);\n        if (isWidget(item) || isWNodeFactory(item)) {\n            return item;\n        }\n        if (item instanceof Promise) {\n            return null;\n        }\n        const promise = item();\n        this._widgetRegistry.set(label, promise);\n        promise.then((widgetCtor) => {\n            if (isWidgetConstructorDefaultExport(widgetCtor)) {\n                widgetCtor = widgetCtor.default;\n            }\n            this._widgetRegistry.set(label, widgetCtor);\n            this.emitLoadedEvent(label, widgetCtor);\n            return widgetCtor;\n        }, (error) => {\n            throw error;\n        });\n        return null;\n    }\n    getInjector(label) {\n        if (!this._injectorRegistry || !this.hasInjector(label)) {\n            return null;\n        }\n        return this._injectorRegistry.get(label);\n    }\n    has(label) {\n        return Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n    }\n    hasInjector(label) {\n        return Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n    }\n}\nexport default Registry;\n//# sourceMappingURL=Registry.mjs.map","import global from '../shim/global';\n/**\n * A cache of results of feature tests\n */\nexport const testCache = {};\n/**\n * A cache of the un-resolved feature tests\n */\nexport const testFunctions = {};\n/* Grab the staticFeatures if there are available */\nconst { staticFeatures } = global.DojoHasEnvironment || {};\n/* Cleaning up the DojoHasEnviornment */\nif ('DojoHasEnvironment' in global) {\n    delete global.DojoHasEnvironment;\n}\n/**\n * Custom type guard to narrow the `staticFeatures` to either a map or a function that\n * returns a map.\n *\n * @param value The value to guard for\n */\nfunction isStaticFeatureFunction(value) {\n    return typeof value === 'function';\n}\n/**\n * The cache of asserted features that were available in the global scope when the\n * module loaded\n */\nconst staticCache = staticFeatures\n    ? isStaticFeatureFunction(staticFeatures)\n        ? staticFeatures.apply(global)\n        : staticFeatures\n    : {}; /* Providing an empty cache, if none was in the environment\n\n\n/**\n* AMD plugin function.\n*\n* Resolves resourceId into a module id based on possibly-nested tenary expression that branches on has feature test\n* value(s).\n*\n* @param resourceId The id of the module\n* @param normalize Resolves a relative module id into an absolute module id\n*/\nexport function normalize(resourceId, normalize) {\n    const tokens = resourceId.match(/[\\?:]|[^:\\?]*/g) || [];\n    let i = 0;\n    function get(skip) {\n        const term = tokens[i++];\n        if (term === ':') {\n            // empty string module name, resolves to null\n            return null;\n        }\n        else {\n            // postfixed with a ? means it is a feature to branch on, the term is the name of the feature\n            if (tokens[i++] === '?') {\n                if (!skip && has(term)) {\n                    // matched the feature, get the first value from the options\n                    return get();\n                }\n                else {\n                    // did not match, get the second value, passing over the first\n                    get(true);\n                    return get(skip);\n                }\n            }\n            // a module\n            return term;\n        }\n    }\n    const id = get();\n    return id && normalize(id);\n}\n/**\n * Check if a feature has already been registered\n *\n * @param feature the name of the feature\n */\nexport function exists(feature) {\n    const normalizedFeature = feature.toLowerCase();\n    return Boolean(normalizedFeature in staticCache || normalizedFeature in testCache || testFunctions[normalizedFeature]);\n}\n/**\n * Register a new test for a named feature.\n *\n * @example\n * has.add('dom-addeventlistener', !!document.addEventListener);\n *\n * @example\n * has.add('touch-events', function () {\n *    return 'ontouchstart' in document\n * });\n *\n * @param feature the name of the feature\n * @param value the value reported of the feature, or a function that will be executed once on first test\n * @param overwrite if an existing value should be overwritten. Defaults to false.\n */\nexport function add(feature, value, overwrite = false) {\n    const normalizedFeature = feature.toLowerCase();\n    if (exists(normalizedFeature) && !overwrite && !(normalizedFeature in staticCache)) {\n        throw new TypeError(`Feature \"${feature}\" exists and overwrite not true.`);\n    }\n    if (typeof value === 'function') {\n        testFunctions[normalizedFeature] = value;\n    }\n    else {\n        testCache[normalizedFeature] = value;\n        delete testFunctions[normalizedFeature];\n    }\n}\n/**\n * Return the current value of a named feature.\n *\n * @param feature The name of the feature to test.\n */\nexport default function has(feature, strict = false) {\n    let result;\n    const normalizedFeature = feature.toLowerCase();\n    if (normalizedFeature in staticCache) {\n        result = staticCache[normalizedFeature];\n    }\n    else if (testFunctions[normalizedFeature]) {\n        result = testCache[normalizedFeature] = testFunctions[normalizedFeature].call(null);\n        delete testFunctions[normalizedFeature];\n    }\n    else if (normalizedFeature in testCache) {\n        result = testCache[normalizedFeature];\n    }\n    else if (strict) {\n        throw new TypeError(`Attempt to detect unregistered has feature \"${feature}\"`);\n    }\n    return result;\n}\n/*\n * Out of the box feature tests\n */\nadd('public-path', undefined);\n/* flag for dojo debug, default to false */\nadd('dojo-debug', false);\n/* Detects if the environment is \"browser like\" */\nadd('host-browser', typeof document !== 'undefined' && typeof location !== 'undefined');\n/* Detects if the environment appears to be NodeJS */\nadd('host-node', function () {\n    if (typeof process === 'object' && process.versions && process.versions.node) {\n        return process.versions.node;\n    }\n});\nadd('fetch', 'fetch' in global && typeof global.fetch === 'function', true);\nadd('es6-array', () => {\n    return (['from', 'of'].every((key) => key in global.Array) &&\n        ['findIndex', 'find', 'copyWithin'].every((key) => key in global.Array.prototype));\n}, true);\nadd('es6-array-fill', () => {\n    if ('fill' in global.Array.prototype) {\n        /* Some versions of Safari do not properly implement this */\n        return [1].fill(9, Number.POSITIVE_INFINITY)[0] === 1;\n    }\n    return false;\n}, true);\nadd('es7-array', () => 'includes' in global.Array.prototype, true);\n/* Map */\nadd('es6-map', () => {\n    if (typeof global.Map === 'function') {\n        /*\n    IE11 and older versions of Safari are missing critical ES6 Map functionality\n    We wrap this in a try/catch because sometimes the Map constructor exists, but does not\n    take arguments (iOS 8.4)\n     */\n        try {\n            const map = new global.Map([[0, 1]]);\n            return (map.has(0) &&\n                typeof map.keys === 'function' &&\n                has('es6-symbol') &&\n                typeof map.values === 'function' &&\n                typeof map.entries === 'function');\n        }\n        catch (e) {\n            /* istanbul ignore next: not testing on iOS at the moment */\n            return false;\n        }\n    }\n    return false;\n}, true);\nadd('es6-iterator', () => has('es6-map'));\n/* Math */\nadd('es6-math', () => {\n    return [\n        'clz32',\n        'sign',\n        'log10',\n        'log2',\n        'log1p',\n        'expm1',\n        'cosh',\n        'sinh',\n        'tanh',\n        'acosh',\n        'asinh',\n        'atanh',\n        'trunc',\n        'fround',\n        'cbrt',\n        'hypot'\n    ].every((name) => typeof global.Math[name] === 'function');\n}, true);\nadd('es6-math-imul', () => {\n    if ('imul' in global.Math) {\n        /* Some versions of Safari on ios do not properly implement this */\n        return Math.imul(0xffffffff, 5) === -5;\n    }\n    return false;\n}, true);\n/* Object */\nadd('es6-object', () => {\n    return (has('es6-symbol') &&\n        ['assign', 'is', 'getOwnPropertySymbols', 'setPrototypeOf'].every((name) => typeof global.Object[name] === 'function'));\n}, true);\nadd('es2017-object', () => {\n    return ['values', 'entries', 'getOwnPropertyDescriptors'].every((name) => typeof global.Object[name] === 'function');\n}, true);\n/* Observable */\nadd('es-observable', () => typeof global.Observable !== 'undefined', true);\n/* Promise */\nadd('es6-promise', () => typeof global.Promise !== 'undefined' && has('es6-symbol'), true);\nadd('es2018-promise-finally', () => has('es6-promise') && typeof global.Promise.prototype.finally !== 'undefined', true);\n/* Set */\nadd('es6-set', () => {\n    if (typeof global.Set === 'function') {\n        /* IE11 and older versions of Safari are missing critical ES6 Set functionality */\n        const set = new global.Set([1]);\n        return set.has(1) && 'keys' in set && typeof set.keys === 'function' && has('es6-symbol');\n    }\n    return false;\n}, true);\n/* String */\nadd('es6-string', () => {\n    return ([\n        /* static methods */\n        'fromCodePoint'\n    ].every((key) => typeof global.String[key] === 'function') &&\n        [\n            /* instance methods */\n            'codePointAt',\n            'normalize',\n            'repeat',\n            'startsWith',\n            'endsWith',\n            'includes'\n        ].every((key) => typeof global.String.prototype[key] === 'function'));\n}, true);\nadd('es6-string-raw', () => {\n    function getCallSite(callSite, ...substitutions) {\n        const result = [...callSite];\n        result.raw = callSite.raw;\n        return result;\n    }\n    if ('raw' in global.String) {\n        let b = 1;\n        let callSite = getCallSite `a\\n${b}`;\n        callSite.raw = ['a\\\\n'];\n        const supportsTrunc = global.String.raw(callSite, 42) === 'a\\\\n';\n        return supportsTrunc;\n    }\n    return false;\n}, true);\nadd('es2017-string', () => {\n    return ['padStart', 'padEnd'].every((key) => typeof global.String.prototype[key] === 'function');\n}, true);\n/* Symbol */\nadd('es6-symbol', () => typeof global.Symbol !== 'undefined' && typeof Symbol() === 'symbol', true);\n/* WeakMap */\nadd('es6-weakmap', () => {\n    if (typeof global.WeakMap !== 'undefined') {\n        /* IE11 and older versions of Safari are missing critical ES6 Map functionality */\n        const key1 = {};\n        const key2 = {};\n        const map = new global.WeakMap([[key1, 1]]);\n        Object.freeze(key1);\n        return map.get(key1) === 1 && map.set(key2, 2) === map && has('es6-symbol');\n    }\n    return false;\n}, true);\n/* Miscellaneous features */\nadd('microtasks', () => has('es6-promise') || has('host-node') || has('dom-mutationobserver'), true);\nadd('postmessage', () => {\n    // If window is undefined, and we have postMessage, it probably means we're in a web worker. Web workers have\n    // post message but it doesn't work how we expect it to, so it's best just to pretend it doesn't exist.\n    return typeof global.window !== 'undefined' && typeof global.postMessage === 'function';\n}, true);\nadd('raf', () => typeof global.requestAnimationFrame === 'function', true);\nadd('setimmediate', () => typeof global.setImmediate !== 'undefined', true);\n/* DOM Features */\nadd('dom-mutationobserver', () => {\n    if (has('host-browser') && Boolean(global.MutationObserver || global.WebKitMutationObserver)) {\n        // IE11 has an unreliable MutationObserver implementation where setProperty() does not\n        // generate a mutation event, observers can crash, and the queue does not drain\n        // reliably. The following feature test was adapted from\n        // https://gist.github.com/t10ko/4aceb8c71681fdb275e33efe5e576b14\n        const example = document.createElement('div');\n        /* tslint:disable-next-line:variable-name */\n        const HostMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n        const observer = new HostMutationObserver(function () { });\n        observer.observe(example, { attributes: true });\n        example.style.setProperty('display', 'block');\n        return Boolean(observer.takeRecords().length);\n    }\n    return false;\n}, true);\nadd('dom-webanimation', () => has('host-browser') && global.Animation !== undefined && global.KeyframeEffect !== undefined, true);\nadd('abort-controller', () => typeof global.AbortController !== 'undefined');\nadd('abort-signal', () => typeof global.AbortSignal !== 'undefined');\nadd('dom-intersection-observer', () => has('host-browser') && global.IntersectionObserver !== undefined, true);\nadd('dom-resize-observer', () => has('host-browser') && global.ResizeObserver !== undefined, true);\nadd('dom-pointer-events', () => has('host-browser') && global.onpointerdown !== undefined, true);\nadd('build-elide', false);\nadd('test', false);\nadd('global-this', () => typeof global.globalThis !== 'undefined');\n//# sourceMappingURL=has.mjs.map","import global from './global';\nvar isArrayLike = undefined;\n// !has('es6-iterator')\n// elided: import './iterator'\nimport has from '../core/has';\n// !has('es6-symbol')\n// elided: import './Symbol'\nexport let WeakMap = global.WeakMap;\nif (!true) {\n    const DELETED = {};\n    const getUID = function getUID() {\n        return Math.floor(Math.random() * 100000000);\n    };\n    const generateName = (function () {\n        let startId = Math.floor(Date.now() % 100000000);\n        return function generateName() {\n            return '__wm' + getUID() + (startId++ + '__');\n        };\n    })();\n    WeakMap = global.WeakMap = class WeakMap {\n        constructor(iterable) {\n            this[Symbol.toStringTag] = 'WeakMap';\n            this._name = generateName();\n            this._frozenEntries = [];\n            if (iterable) {\n                if (isArrayLike(iterable)) {\n                    for (let i = 0; i < iterable.length; i++) {\n                        const item = iterable[i];\n                        this.set(item[0], item[1]);\n                    }\n                }\n                else {\n                    for (const [key, value] of iterable) {\n                        this.set(key, value);\n                    }\n                }\n            }\n        }\n        _getFrozenEntryIndex(key) {\n            for (let i = 0; i < this._frozenEntries.length; i++) {\n                if (this._frozenEntries[i].key === key) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n        delete(key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            const entry = key[this._name];\n            if (entry && entry.key === key && entry.value !== DELETED) {\n                entry.value = DELETED;\n                return true;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                this._frozenEntries.splice(frozenIndex, 1);\n                return true;\n            }\n            return false;\n        }\n        get(key) {\n            if (key === undefined || key === null) {\n                return undefined;\n            }\n            const entry = key[this._name];\n            if (entry && entry.key === key && entry.value !== DELETED) {\n                return entry.value;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                return this._frozenEntries[frozenIndex].value;\n            }\n        }\n        has(key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            const entry = key[this._name];\n            if (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n                return true;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                return true;\n            }\n            return false;\n        }\n        set(key, value) {\n            if (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n                throw new TypeError('Invalid value used as weak map key');\n            }\n            let entry = key[this._name];\n            if (!entry || entry.key !== key) {\n                entry = Object.create(null, {\n                    key: { value: key }\n                });\n                if (Object.isFrozen(key)) {\n                    this._frozenEntries.push(entry);\n                }\n                else {\n                    Object.defineProperty(key, this._name, {\n                        value: entry\n                    });\n                }\n            }\n            entry.value = value;\n            return this;\n        }\n    };\n}\nexport default WeakMap;","import { WIDGET_BASE_TYPE } from './Registry';\nfunction isObjectOrArray(value) {\n    return Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\nexport function always(previousProperty, newProperty) {\n    return {\n        changed: true,\n        value: newProperty\n    };\n}\nexport function ignore(previousProperty, newProperty) {\n    return {\n        changed: false,\n        value: newProperty\n    };\n}\nexport function reference(previousProperty, newProperty) {\n    return {\n        changed: previousProperty !== newProperty,\n        value: newProperty\n    };\n}\nexport function shallow(previousProperty, newProperty, depth = 0) {\n    let changed = false;\n    const validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n    const validNewProperty = newProperty && isObjectOrArray(newProperty);\n    if (!validOldProperty || !validNewProperty) {\n        return {\n            changed: true,\n            value: newProperty\n        };\n    }\n    const previousKeys = Object.keys(previousProperty);\n    const newKeys = Object.keys(newProperty);\n    if (previousKeys.length !== newKeys.length) {\n        changed = true;\n    }\n    else {\n        changed = newKeys.some((key) => {\n            if (depth > 0) {\n                return shallow(newProperty[key], previousProperty[key], depth - 1).changed;\n            }\n            return newProperty[key] !== previousProperty[key];\n        });\n    }\n    return {\n        changed,\n        value: newProperty\n    };\n}\nexport function auto(previousProperty, newProperty) {\n    let result;\n    if (typeof newProperty === 'function') {\n        if (newProperty._type === WIDGET_BASE_TYPE) {\n            result = reference(previousProperty, newProperty);\n        }\n        else {\n            result = ignore(previousProperty, newProperty);\n        }\n    }\n    else if (isObjectOrArray(newProperty)) {\n        result = shallow(previousProperty, newProperty);\n    }\n    else {\n        result = reference(previousProperty, newProperty);\n    }\n    return result;\n}\n//# sourceMappingURL=diff.mjs.map","/**\n * Generic decorator handler to take care of whether or not the decorator was called at the class level\n * or the method level.\n *\n * @param handler\n */\nexport function handleDecorator(handler) {\n    return function (target, propertyKey, descriptor) {\n        if (typeof target === 'function') {\n            handler(target.prototype, undefined);\n        }\n        else {\n            handler(target, propertyKey);\n        }\n    };\n}\nexport default handleDecorator;\n//# sourceMappingURL=handleDecorator.mjs.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Injector } from './../Injector';\nimport { inject } from './../decorators/inject';\nimport { handleDecorator } from './../decorators/handleDecorator';\nimport { diffProperty } from './../decorators/diffProperty';\nimport { shallow } from './../diff';\nexport const THEME_KEY = ' _key';\nexport const INJECTED_THEME_KEY = '__theme_injector';\n/**\n * Decorator for base css classes\n */\nexport function theme(theme) {\n    return handleDecorator((target) => {\n        target.addDecorator('baseThemeClasses', theme);\n    });\n}\n/**\n * Creates a reverse lookup for the classes passed in via the `theme` function.\n *\n * @param classes The baseClasses object\n * @requires\n */\nfunction createThemeClassesLookup(classes) {\n    return classes.reduce((currentClassNames, baseClass) => {\n        Object.keys(baseClass).forEach((key) => {\n            currentClassNames[baseClass[key]] = key;\n        });\n        return currentClassNames;\n    }, {});\n}\n/**\n * Convenience function that is given a theme and an optional registry, the theme\n * injector is defined against the registry, returning the theme.\n *\n * @param theme the theme to set\n * @param themeRegistry registry to define the theme injector against. Defaults\n * to the global registry\n *\n * @returns the theme injector used to set the theme\n */\nexport function registerThemeInjector(theme, themeRegistry) {\n    const themeInjector = new Injector(theme);\n    themeRegistry.defineInjector(INJECTED_THEME_KEY, (invalidator) => {\n        themeInjector.setInvalidator(invalidator);\n        return () => themeInjector;\n    });\n    return themeInjector;\n}\n/**\n * Function that returns a class decorated with with Themed functionality\n */\nexport function ThemedMixin(Base) {\n    let Themed = class Themed extends Base {\n        constructor() {\n            super(...arguments);\n            /**\n             * Registered base theme keys\n             */\n            this._registeredBaseThemeKeys = [];\n            /**\n             * Indicates if classes meta data need to be calculated.\n             */\n            this._recalculateClasses = true;\n            /**\n             * Loaded theme\n             */\n            this._theme = {};\n        }\n        theme(classes) {\n            if (this._recalculateClasses) {\n                this._recalculateThemeClasses();\n            }\n            if (Array.isArray(classes)) {\n                return classes.map((className) => this._getThemeClass(className));\n            }\n            return this._getThemeClass(classes);\n        }\n        /**\n         * Function fired when `theme` or `extraClasses` are changed.\n         */\n        onPropertiesChanged() {\n            this._recalculateClasses = true;\n        }\n        _getThemeClass(className) {\n            if (className === undefined || className === null || className === false || className === true) {\n                return className;\n            }\n            const extraClasses = this.properties.extraClasses || {};\n            const themeClassName = this._baseThemeClassesReverseLookup[className];\n            let resultClassNames = [];\n            if (!themeClassName) {\n                console.warn(`Class name: '${className}' not found in theme`);\n                return null;\n            }\n            if (this._classes) {\n                const classes = Object.keys(this._classes).reduce((classes, key) => {\n                    const classNames = Object.keys(this._classes[key]);\n                    for (let i = 0; i < classNames.length; i++) {\n                        const extraClass = this._classes[key][classNames[i]];\n                        if (classNames[i] === themeClassName && extraClass) {\n                            extraClass.forEach((className) => {\n                                if (className && className !== true) {\n                                    classes.push(className);\n                                }\n                            });\n                            break;\n                        }\n                    }\n                    return classes;\n                }, []);\n                resultClassNames.push(...classes);\n            }\n            if (extraClasses[themeClassName]) {\n                resultClassNames.push(extraClasses[themeClassName]);\n            }\n            if (this._theme[themeClassName]) {\n                resultClassNames.push(this._theme[themeClassName]);\n            }\n            else {\n                resultClassNames.push(this._registeredBaseTheme[themeClassName]);\n            }\n            return resultClassNames.join(' ');\n        }\n        _recalculateThemeClasses() {\n            const { theme = {}, classes = {} } = this.properties;\n            if (!this._registeredBaseTheme) {\n                const baseThemes = this.getDecorator('baseThemeClasses');\n                if (baseThemes.length === 0) {\n                    console.warn('A base theme has not been provided to this widget. Please use the @theme decorator to add a theme.');\n                }\n                this._registeredBaseTheme = baseThemes.reduce((finalBaseTheme, baseTheme) => {\n                    const _a = THEME_KEY, key = baseTheme[_a], classes = __rest(baseTheme, [typeof _a === \"symbol\" ? _a : _a + \"\"]);\n                    this._registeredBaseThemeKeys.push(key);\n                    return Object.assign({}, finalBaseTheme, classes);\n                }, {});\n                this._baseThemeClassesReverseLookup = createThemeClassesLookup(baseThemes);\n            }\n            this._theme = this._registeredBaseThemeKeys.reduce((baseTheme, themeKey) => {\n                return Object.assign({}, baseTheme, theme[themeKey]);\n            }, {});\n            this._classes = Object.keys(classes).reduce((computed, key) => {\n                if (this._registeredBaseThemeKeys.indexOf(key) > -1) {\n                    computed = Object.assign({}, computed, { [key]: classes[key] });\n                }\n                return computed;\n            }, {});\n            this._recalculateClasses = false;\n        }\n    };\n    __decorate([\n        diffProperty('theme', shallow),\n        diffProperty('extraClasses', shallow),\n        diffProperty('classes', shallow)\n    ], Themed.prototype, \"onPropertiesChanged\", null);\n    Themed = __decorate([\n        inject({\n            name: INJECTED_THEME_KEY,\n            getProperties: (theme, properties) => {\n                if (!properties.theme) {\n                    return { theme: theme.get() };\n                }\n                return {};\n            }\n        })\n    ], Themed);\n    return Themed;\n}\nexport default ThemedMixin;\n//# sourceMappingURL=Themed.mjs.map","import Map from '../shim/Map';\nimport { Destroyable } from './Destroyable';\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map();\n/**\n * Determines if the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString, targetString) {\n    if (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n        let regex;\n        if (regexMap.has(globString)) {\n            regex = regexMap.get(globString);\n        }\n        else {\n            regex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n            regexMap.set(globString, regex);\n        }\n        return regex.test(targetString);\n    }\n    else {\n        return globString === targetString;\n    }\n}\n/**\n * Event Class\n */\nexport class Evented extends Destroyable {\n    constructor() {\n        super(...arguments);\n        /**\n         * map of listeners keyed by event type\n         */\n        this.listenersMap = new Map();\n    }\n    emit(event) {\n        this.listenersMap.forEach((methods, type) => {\n            if (isGlobMatch(type, event.type)) {\n                [...methods].forEach((method) => {\n                    method.call(this, event);\n                });\n            }\n        });\n    }\n    on(type, listener) {\n        if (Array.isArray(listener)) {\n            const handles = listener.map((listener) => this._addListener(type, listener));\n            return {\n                destroy() {\n                    handles.forEach((handle) => handle.destroy());\n                }\n            };\n        }\n        return this._addListener(type, listener);\n    }\n    _addListener(type, listener) {\n        const listeners = this.listenersMap.get(type) || [];\n        listeners.push(listener);\n        this.listenersMap.set(type, listeners);\n        return {\n            destroy: () => {\n                const listeners = this.listenersMap.get(type) || [];\n                listeners.splice(listeners.indexOf(listener), 1);\n            }\n        };\n    }\n}\nexport default Evented;\n//# sourceMappingURL=Evented.mjs.map","import { Evented } from '../core/Evented';\nimport Map from '../shim/Map';\n/**\n * Enum to identify the type of event.\n * Listening to 'Projector' will notify when projector is created or updated\n * Listening to 'Widget' will notify when widget root is created or updated\n */\nexport var NodeEventType;\n(function (NodeEventType) {\n    NodeEventType[\"Projector\"] = \"Projector\";\n    NodeEventType[\"Widget\"] = \"Widget\";\n})(NodeEventType || (NodeEventType = {}));\nexport class NodeHandler extends Evented {\n    constructor() {\n        super(...arguments);\n        this._nodeMap = new Map();\n    }\n    get(key) {\n        return this._nodeMap.get(key);\n    }\n    has(key) {\n        return this._nodeMap.has(key);\n    }\n    add(element, key) {\n        this._nodeMap.set(key, element);\n        this.emit({ type: `${key}` });\n    }\n    addRoot() {\n        this.emit({ type: NodeEventType.Widget });\n    }\n    remove(key) {\n        this._nodeMap.delete(key);\n    }\n    addProjector() {\n        this.emit({ type: NodeEventType.Projector });\n    }\n    clear() {\n        this._nodeMap.clear();\n    }\n}\nexport default NodeHandler;\n//# sourceMappingURL=NodeHandler.mjs.map","import Map from '../shim/Map';\nimport WeakMap from '../shim/WeakMap';\nimport { auto } from './diff';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { WIDGET_BASE_TYPE } from './Registry';\nimport { widgetInstanceMap, v } from './vdom';\nconst decoratorMap = new WeakMap();\nconst builtDecoratorMap = new WeakMap();\nconst boundAuto = auto.bind(null);\nfunction isDomMeta(meta) {\n    return Boolean(meta.afterRender);\n}\nconst IGNORE_LIST = ['render', ...Object.getOwnPropertyNames(Object.getPrototypeOf({}))];\nconst autoBindCache = new Map();\nfunction autoBind(instance) {\n    let prototype = instance.constructor.prototype;\n    let keys = [];\n    if (autoBindCache.has(prototype)) {\n        keys = autoBindCache.get(prototype);\n    }\n    else {\n        while (prototype) {\n            const ownKeys = Object.getOwnPropertyNames(prototype);\n            if (prototype.constructor.hasOwnProperty('_type')) {\n                break;\n            }\n            keys = [...keys, ...ownKeys];\n            prototype = Object.getPrototypeOf(prototype);\n        }\n        keys = keys.filter((k) => typeof instance[k] === 'function' && IGNORE_LIST.indexOf(k) === -1);\n        autoBindCache.set(prototype, keys);\n    }\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const boundFunc = instance[key].bind(instance);\n        Object.defineProperty(instance, key, {\n            configurable: true,\n            get() {\n                return boundFunc;\n            }\n        });\n    }\n}\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase {\n    /**\n     * @constructor\n     */\n    constructor() {\n        /**\n         * Indicates if it is the initial set properties cycle\n         */\n        this._initialProperties = true;\n        /**\n         * Array of property keys considered changed from the previous set properties\n         */\n        this._changedPropertyKeys = [];\n        this._registry = new RegistryHandler();\n        this._nodeHandler = new NodeHandler();\n        this._handles = [];\n        this._children = [];\n        this._decoratorCache = new Map();\n        this._properties = {};\n        this._boundRenderFunc = this.render.bind(this);\n        this._boundInvalidate = this.invalidate.bind(this);\n        this.own(this._registry);\n        this.own(this._registry.on('invalidate', this._boundInvalidate));\n        widgetInstanceMap.set(this, {\n            dirty: true,\n            onAttach: () => {\n                this.onAttach();\n            },\n            onDetach: () => {\n                this.onDetach();\n                this.destroy();\n            },\n            nodeHandler: this._nodeHandler,\n            rendering: false,\n            inputProperties: {},\n            registry: this.registry\n        });\n        this.own({\n            destroy: () => {\n                widgetInstanceMap.delete(this);\n                this._nodeHandler.clear();\n                this._nodeHandler.destroy();\n            }\n        });\n        this._runAfterConstructors();\n    }\n    meta(MetaType) {\n        if (this._metaMap === undefined) {\n            this._metaMap = new Map();\n        }\n        let cached = this._metaMap.get(MetaType);\n        if (!cached) {\n            cached = new MetaType({\n                invalidate: this._boundInvalidate,\n                nodeHandler: this._nodeHandler,\n                bind: this\n            });\n            this.own(cached);\n            this._metaMap.set(MetaType, cached);\n        }\n        return cached;\n    }\n    onAttach() {\n        // Do nothing by default.\n    }\n    onDetach() {\n        // Do nothing by default.\n    }\n    get properties() {\n        return this._properties;\n    }\n    get changedPropertyKeys() {\n        return [...this._changedPropertyKeys];\n    }\n    __setProperties__(originalProperties) {\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData) {\n            instanceData.inputProperties = originalProperties;\n        }\n        const properties = this._runBeforeProperties(originalProperties);\n        const registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n        const changedPropertyKeys = [];\n        const propertyNames = Object.keys(properties);\n        if (this._initialProperties) {\n            autoBind(this);\n        }\n        if (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n            const allProperties = [...propertyNames, ...Object.keys(this._properties)];\n            const checkedProperties = [];\n            const diffPropertyResults = {};\n            let runReactions = false;\n            for (let i = 0; i < allProperties.length; i++) {\n                const propertyName = allProperties[i];\n                if (checkedProperties.indexOf(propertyName) !== -1) {\n                    continue;\n                }\n                checkedProperties.push(propertyName);\n                const previousProperty = this._properties[propertyName];\n                const newProperty = properties[propertyName];\n                if (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n                    runReactions = true;\n                    const diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n                    for (let i = 0; i < diffFunctions.length; i++) {\n                        const result = diffFunctions[i](previousProperty, newProperty);\n                        if (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n                            changedPropertyKeys.push(propertyName);\n                        }\n                        if (propertyName in properties) {\n                            diffPropertyResults[propertyName] = result.value;\n                        }\n                    }\n                }\n                else {\n                    const result = boundAuto(previousProperty, newProperty);\n                    if (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n                        changedPropertyKeys.push(propertyName);\n                    }\n                    if (propertyName in properties) {\n                        diffPropertyResults[propertyName] = result.value;\n                    }\n                }\n            }\n            if (runReactions) {\n                const reactionFunctions = this.getDecorator('diffReaction');\n                const executedReactions = [];\n                reactionFunctions.forEach(({ reaction, propertyName }) => {\n                    const propertyChanged = changedPropertyKeys.indexOf(propertyName) !== -1;\n                    const reactionRun = executedReactions.indexOf(reaction) !== -1;\n                    if (propertyChanged && !reactionRun) {\n                        reaction.call(this, this._properties, diffPropertyResults);\n                        executedReactions.push(reaction);\n                    }\n                });\n            }\n            this._properties = diffPropertyResults;\n            this._changedPropertyKeys = changedPropertyKeys;\n        }\n        else {\n            this._initialProperties = false;\n            for (let i = 0; i < propertyNames.length; i++) {\n                const propertyName = propertyNames[i];\n                if (typeof properties[propertyName] === 'function') {\n                    properties[propertyName] = properties[propertyName];\n                }\n                else {\n                    changedPropertyKeys.push(propertyName);\n                }\n            }\n            this._changedPropertyKeys = changedPropertyKeys;\n            this._properties = Object.assign({}, properties);\n        }\n        if (this._changedPropertyKeys.length > 0) {\n            this.invalidate();\n        }\n    }\n    get children() {\n        return this._children;\n    }\n    __setChildren__(children) {\n        if (this._children.length > 0 || children.length > 0) {\n            this._children = children;\n            this.invalidate();\n        }\n    }\n    __render__() {\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData) {\n            instanceData.dirty = false;\n        }\n        const render = this._runBeforeRenders();\n        const dNode = this._runAfterRenders(render());\n        return dNode;\n    }\n    invalidate() {\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData && instanceData.invalidate) {\n            instanceData.invalidate();\n        }\n    }\n    render() {\n        return v('div', {}, this.children);\n    }\n    /**\n     * Function to add decorators to WidgetBase\n     *\n     * @param decoratorKey The key of the decorator\n     * @param value The value of the decorator\n     */\n    addDecorator(decoratorKey, value) {\n        value = Array.isArray(value) ? value : [value];\n        if (this.hasOwnProperty('constructor')) {\n            let decoratorList = decoratorMap.get(this.constructor);\n            if (!decoratorList) {\n                decoratorList = new Map();\n                decoratorMap.set(this.constructor, decoratorList);\n            }\n            let specificDecoratorList = decoratorList.get(decoratorKey);\n            if (!specificDecoratorList) {\n                specificDecoratorList = [];\n                decoratorList.set(decoratorKey, specificDecoratorList);\n            }\n            specificDecoratorList.push(...value);\n        }\n        else {\n            const decorators = this.getDecorator(decoratorKey);\n            this._decoratorCache.set(decoratorKey, [...decorators, ...value]);\n        }\n    }\n    /**\n     * Function to build the list of decorators from the global decorator map.\n     *\n     * @param decoratorKey  The key of the decorator\n     * @return An array of decorator values\n     * @private\n     */\n    _buildDecoratorList(decoratorKey) {\n        const allDecorators = [];\n        let constructor = this.constructor;\n        while (constructor) {\n            const instanceMap = decoratorMap.get(constructor);\n            if (instanceMap) {\n                const decorators = instanceMap.get(decoratorKey);\n                if (decorators) {\n                    allDecorators.unshift(...decorators);\n                }\n            }\n            constructor = Object.getPrototypeOf(constructor);\n        }\n        const buildDecorators = builtDecoratorMap.get(this.constructor) || new Map();\n        buildDecorators.set(decoratorKey, allDecorators);\n        builtDecoratorMap.set(this.constructor, buildDecorators);\n        return allDecorators;\n    }\n    /**\n     * Function to retrieve decorator values\n     *\n     * @param decoratorKey The key of the decorator\n     * @returns An array of decorator values\n     */\n    getDecorator(decoratorKey) {\n        let decoratorCache = builtDecoratorMap.get(this.constructor);\n        let allDecorators = this._decoratorCache.get(decoratorKey) || (decoratorCache && decoratorCache.get(decoratorKey));\n        if (allDecorators !== undefined) {\n            return allDecorators;\n        }\n        allDecorators = this._buildDecoratorList(decoratorKey);\n        allDecorators = [...allDecorators];\n        this._decoratorCache.set(decoratorKey, allDecorators);\n        return allDecorators;\n    }\n    get registry() {\n        return this._registry;\n    }\n    _runBeforeProperties(properties) {\n        const beforeProperties = this.getDecorator('beforeProperties');\n        if (beforeProperties.length > 0) {\n            return beforeProperties.reduce((properties, beforePropertiesFunction) => {\n                return Object.assign({}, properties, beforePropertiesFunction.call(this, properties));\n            }, Object.assign({}, properties));\n        }\n        return properties;\n    }\n    /**\n     * Run all registered before renders and return the updated render method\n     */\n    _runBeforeRenders() {\n        const beforeRenders = this.getDecorator('beforeRender');\n        if (beforeRenders.length > 0) {\n            return beforeRenders.reduce((render, beforeRenderFunction) => {\n                const updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n                if (!updatedRender) {\n                    console.warn('Render function not returned from beforeRender, using previous render');\n                    return render;\n                }\n                return updatedRender;\n            }, this._boundRenderFunc);\n        }\n        return this._boundRenderFunc;\n    }\n    /**\n     * Run all registered after renders and return the decorated DNodes\n     *\n     * @param dNode The DNodes to run through the after renders\n     */\n    _runAfterRenders(dNode) {\n        const afterRenders = this.getDecorator('afterRender');\n        if (afterRenders.length > 0) {\n            dNode = afterRenders.reduce((dNode, afterRenderFunction) => {\n                return afterRenderFunction.call(this, dNode);\n            }, dNode);\n        }\n        if (this._metaMap !== undefined) {\n            this._metaMap.forEach((meta) => {\n                isDomMeta(meta) && meta.afterRender();\n            });\n        }\n        return dNode;\n    }\n    _runAfterConstructors() {\n        const afterConstructors = this.getDecorator('afterConstructor');\n        if (afterConstructors.length > 0) {\n            afterConstructors.forEach((afterConstructor) => afterConstructor.call(this));\n        }\n    }\n    own(handle) {\n        this._handles.push(handle);\n    }\n    destroy() {\n        while (this._handles.length > 0) {\n            const handle = this._handles.pop();\n            if (handle) {\n                handle.destroy();\n            }\n        }\n    }\n}\n/**\n * static identifier\n */\nWidgetBase._type = WIDGET_BASE_TYPE;\nexport default WidgetBase;\n//# sourceMappingURL=WidgetBase.mjs.map","/**\n * Helper function to generate a value property descriptor\n *\n * @param value        The value the property descriptor should be set to\n * @param enumerable   If the property should be enumberable, defaults to false\n * @param writable     If the property should be writable, defaults to true\n * @param configurable If the property should be configurable, defaults to true\n * @return             The property descriptor object\n */\nexport function getValueDescriptor(value, enumerable = false, writable = true, configurable = true) {\n    return {\n        value: value,\n        enumerable: enumerable,\n        writable: writable,\n        configurable: configurable\n    };\n}\nexport function wrapNative(nativeFunction) {\n    return function (target, ...args) {\n        return nativeFunction.apply(target, args);\n    };\n}\n//# sourceMappingURL=util.mjs.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { handleDecorator } from './handleDecorator';\nimport { auto } from './../diff';\n/**\n * Decorator that can be used to register a function as a specific property diff\n *\n * @param propertyName  The name of the property of which the diff function is applied\n * @param diffType      The diff type, default is DiffType.AUTO.\n * @param diffFunction  A diff function to run if diffType if DiffType.CUSTOM\n */\nexport function diffProperty(propertyName, diffFunction = auto, reactionFunction) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator(`diffProperty:${propertyName}`, diffFunction.bind(null));\n        target.addDecorator('registeredDiffProperty', propertyName);\n        if (reactionFunction || propertyKey) {\n            target.addDecorator('diffReaction', {\n                propertyName,\n                reaction: propertyKey ? target[propertyKey] : reactionFunction\n            });\n        }\n    });\n}\nexport default diffProperty;\n//# sourceMappingURL=diffProperty.mjs.map","var _a;\nimport global from './global';\nvar queueMicroTask = undefined;\n// !has('microtasks')\n// elided: import './support/queue'\n// !has('es6-symbol')\n// elided: import './Symbol'\nimport has from '../core/has';\nexport let ShimPromise = global.Promise;\nexport const isThenable = function isThenable(value) {\n    return value && typeof value.then === 'function';\n};\nif (!true) {\n    global.Promise = ShimPromise = (_a = class Promise {\n            /**\n             * Creates a new Promise.\n             *\n             * @constructor\n             *\n             * @param executor\n             * The executor function is called immediately when the Promise is instantiated. It is responsible for\n             * starting the asynchronous operation when it is invoked.\n             *\n             * The executor must call either the passed `resolve` function when the asynchronous operation has completed\n             * successfully, or the `reject` function when the operation fails.\n             */\n            constructor(executor) {\n                /**\n                 * The current state of this promise.\n                 */\n                this.state = 1 /* Pending */;\n                this[Symbol.toStringTag] = 'Promise';\n                /**\n                 * If true, the resolution of this promise is chained (\"locked in\") to another promise.\n                 */\n                let isChained = false;\n                /**\n                 * Whether or not this promise is in a resolved state.\n                 */\n                const isResolved = () => {\n                    return this.state !== 1 /* Pending */ || isChained;\n                };\n                /**\n                 * Callbacks that should be invoked once the asynchronous operation has completed.\n                 */\n                let callbacks = [];\n                /**\n                 * Initially pushes callbacks onto a queue for execution once this promise settles. After the promise settles,\n                 * enqueues callbacks for execution on the next event loop turn.\n                 */\n                let whenFinished = function (callback) {\n                    if (callbacks) {\n                        callbacks.push(callback);\n                    }\n                };\n                /**\n                 * Settles this promise.\n                 *\n                 * @param newState The resolved state for this promise.\n                 * @param {T|any} value The resolved value for this promise.\n                 */\n                const settle = (newState, value) => {\n                    // A promise can only be settled once.\n                    if (this.state !== 1 /* Pending */) {\n                        return;\n                    }\n                    this.state = newState;\n                    this.resolvedValue = value;\n                    whenFinished = queueMicroTask;\n                    // Only enqueue a callback runner if there are callbacks so that initially fulfilled Promises don't have to\n                    // wait an extra turn.\n                    if (callbacks && callbacks.length > 0) {\n                        queueMicroTask(function () {\n                            if (callbacks) {\n                                let count = callbacks.length;\n                                for (let i = 0; i < count; ++i) {\n                                    callbacks[i].call(null);\n                                }\n                                callbacks = null;\n                            }\n                        });\n                    }\n                };\n                /**\n                 * Resolves this promise.\n                 *\n                 * @param newState The resolved state for this promise.\n                 * @param {T|any} value The resolved value for this promise.\n                 */\n                const resolve = (newState, value) => {\n                    if (isResolved()) {\n                        return;\n                    }\n                    if (isThenable(value)) {\n                        value.then(settle.bind(null, 0 /* Fulfilled */), settle.bind(null, 2 /* Rejected */));\n                        isChained = true;\n                    }\n                    else {\n                        settle(newState, value);\n                    }\n                };\n                this.then = (onFulfilled, onRejected) => {\n                    return new Promise((resolve, reject) => {\n                        // whenFinished initially queues up callbacks for execution after the promise has settled. Once the\n                        // promise has settled, whenFinished will schedule callbacks for execution on the next turn through the\n                        // event loop.\n                        whenFinished(() => {\n                            const callback = this.state === 2 /* Rejected */ ? onRejected : onFulfilled;\n                            if (typeof callback === 'function') {\n                                try {\n                                    resolve(callback(this.resolvedValue));\n                                }\n                                catch (error) {\n                                    reject(error);\n                                }\n                            }\n                            else if (this.state === 2 /* Rejected */) {\n                                reject(this.resolvedValue);\n                            }\n                            else {\n                                resolve(this.resolvedValue);\n                            }\n                        });\n                    });\n                };\n                try {\n                    executor(resolve.bind(null, 0 /* Fulfilled */), resolve.bind(null, 2 /* Rejected */));\n                }\n                catch (error) {\n                    settle(2 /* Rejected */, error);\n                }\n            }\n            static all(iterable) {\n                return new this(function (resolve, reject) {\n                    const values = [];\n                    let complete = 0;\n                    let total = 0;\n                    let populating = true;\n                    function fulfill(index, value) {\n                        values[index] = value;\n                        ++complete;\n                        finish();\n                    }\n                    function finish() {\n                        if (populating || complete < total) {\n                            return;\n                        }\n                        resolve(values);\n                    }\n                    function processItem(index, item) {\n                        ++total;\n                        if (isThenable(item)) {\n                            // If an item Promise rejects, this Promise is immediately rejected with the item\n                            // Promise's rejection error.\n                            item.then(fulfill.bind(null, index), reject);\n                        }\n                        else {\n                            Promise.resolve(item).then(fulfill.bind(null, index));\n                        }\n                    }\n                    let i = 0;\n                    for (const value of iterable) {\n                        processItem(i, value);\n                        i++;\n                    }\n                    populating = false;\n                    finish();\n                });\n            }\n            static race(iterable) {\n                return new this(function (resolve, reject) {\n                    for (const item of iterable) {\n                        if (item instanceof Promise) {\n                            // If a Promise item rejects, this Promise is immediately rejected with the item\n                            // Promise's rejection error.\n                            item.then(resolve, reject);\n                        }\n                        else {\n                            Promise.resolve(item).then(resolve);\n                        }\n                    }\n                });\n            }\n            static reject(reason) {\n                return new this(function (resolve, reject) {\n                    reject(reason);\n                });\n            }\n            static resolve(value) {\n                return new this(function (resolve) {\n                    resolve(value);\n                });\n            }\n            catch(onRejected) {\n                return this.then(undefined, onRejected);\n            }\n        },\n        _a[Symbol.species] = ShimPromise,\n        _a);\n    // this cast is needed in order to omit finally in the class declaration; this was done so the finally code\n    // is not duplicated and always added in the conditional below\n}\nif (!has('es2018-promise-finally')) {\n    global.Promise.prototype.finally = function (onFinally) {\n        return this.then(onFinally && ((value) => Promise.resolve(onFinally()).then(() => value)), onFinally &&\n            ((reason) => Promise.resolve(onFinally()).then(() => {\n                throw reason;\n            })));\n    };\n}\nexport default ShimPromise;","import { Map } from '../shim/Map';\nimport { Evented } from '../core/Evented';\nimport { Registry } from './Registry';\nexport class RegistryHandler extends Evented {\n    constructor() {\n        super();\n        this._registry = new Registry();\n        this._registryWidgetLabelMap = new Map();\n        this._registryInjectorLabelMap = new Map();\n        this.own(this._registry);\n        const destroy = () => {\n            if (this.baseRegistry) {\n                this._registryWidgetLabelMap.delete(this.baseRegistry);\n                this._registryInjectorLabelMap.delete(this.baseRegistry);\n                this.baseRegistry = undefined;\n            }\n        };\n        this.own({ destroy });\n    }\n    set base(baseRegistry) {\n        if (this.baseRegistry) {\n            this._registryWidgetLabelMap.delete(this.baseRegistry);\n            this._registryInjectorLabelMap.delete(this.baseRegistry);\n        }\n        this.baseRegistry = baseRegistry;\n    }\n    get base() {\n        return this.baseRegistry;\n    }\n    define(label, widget) {\n        this._registry.define(label, widget);\n    }\n    defineInjector(label, injector) {\n        this._registry.defineInjector(label, injector);\n    }\n    has(label) {\n        return this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n    }\n    hasInjector(label) {\n        return this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n    }\n    get(label, globalPrecedence = false) {\n        return this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n    }\n    getInjector(label, globalPrecedence = false) {\n        return this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n    }\n    _get(label, globalPrecedence, getFunctionName, labelMap) {\n        const registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n        for (let i = 0; i < registries.length; i++) {\n            const registry = registries[i];\n            if (!registry) {\n                continue;\n            }\n            const item = registry[getFunctionName](label);\n            const registeredLabels = labelMap.get(registry) || [];\n            if (item) {\n                return item;\n            }\n            else if (registeredLabels.indexOf(label) === -1) {\n                const handle = registry.on(label, (event) => {\n                    if (event.action === 'loaded' &&\n                        this[getFunctionName](label, globalPrecedence) === event.item) {\n                        this.emit({ type: 'invalidate' });\n                    }\n                });\n                this.own(handle);\n                labelMap.set(registry, [...registeredLabels, label]);\n            }\n        }\n        return null;\n    }\n}\nexport default RegistryHandler;\n//# sourceMappingURL=RegistryHandler.mjs.map","import { AriaPropertyObject } from './interfaces';\n\nexport enum Keys {\n\tDown = 40,\n\tEnd = 35,\n\tEnter = 13,\n\tEscape = 27,\n\tHome = 36,\n\tLeft = 37,\n\tPageDown = 34,\n\tPageUp = 33,\n\tRight = 39,\n\tSpace = 32,\n\tTab = 9,\n\tUp = 38\n}\n\nexport function formatAriaProperties(aria: AriaPropertyObject): AriaPropertyObject {\n\tconst formattedAria = Object.keys(aria).reduce((a: AriaPropertyObject, key: string) => {\n\t\ta[`aria-${key.toLowerCase()}`] = aria[key];\n\t\treturn a;\n\t}, {});\n\treturn formattedAria;\n}\n","var _a;\nimport global from './global';\nvar isArrayLike = undefined, ShimIterator = undefined;\n// !has('es6-iterator')\n// elided: import './iterator'\nimport has from '../core/has';\n// !has('es6-symbol')\n// elided: import './Symbol'\nexport let Set = global.Set;\nif (!true) {\n    Set = global.Set = (_a = class Set {\n            constructor(iterable) {\n                this._setData = [];\n                this[Symbol.toStringTag] = 'Set';\n                if (iterable) {\n                    if (isArrayLike(iterable)) {\n                        for (let i = 0; i < iterable.length; i++) {\n                            this.add(iterable[i]);\n                        }\n                    }\n                    else {\n                        for (const value of iterable) {\n                            this.add(value);\n                        }\n                    }\n                }\n            }\n            add(value) {\n                if (this.has(value)) {\n                    return this;\n                }\n                this._setData.push(value);\n                return this;\n            }\n            clear() {\n                this._setData.length = 0;\n            }\n            delete(value) {\n                const idx = this._setData.indexOf(value);\n                if (idx === -1) {\n                    return false;\n                }\n                this._setData.splice(idx, 1);\n                return true;\n            }\n            entries() {\n                return new ShimIterator(this._setData.map((value) => [value, value]));\n            }\n            forEach(callbackfn, thisArg) {\n                const iterator = this.values();\n                let result = iterator.next();\n                while (!result.done) {\n                    callbackfn.call(thisArg, result.value, result.value, this);\n                    result = iterator.next();\n                }\n            }\n            has(value) {\n                return this._setData.indexOf(value) > -1;\n            }\n            keys() {\n                return new ShimIterator(this._setData);\n            }\n            get size() {\n                return this._setData.length;\n            }\n            values() {\n                return new ShimIterator(this._setData);\n            }\n            [Symbol.iterator]() {\n                return new ShimIterator(this._setData);\n            }\n        },\n        _a[Symbol.species] = _a,\n        _a);\n}\nexport default Set;","import { handleDecorator } from './handleDecorator';\nexport function beforeProperties(method) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator('beforeProperties', propertyKey ? target[propertyKey] : method);\n    });\n}\nexport default beforeProperties;\n//# sourceMappingURL=beforeProperties.mjs.map","var isArrayLike = undefined, isIterable = undefined;\n// !has('es6-iterator')\n// elided: import './iterator'\nimport has from '../core/has';\nimport { wrapNative } from './support/util';\nexport let from;\nexport let of;\nexport let copyWithin;\nexport let fill;\nexport let find;\nexport let findIndex;\nexport let includes;\nlet toLength;\nlet toInteger;\nlet normalizeOffset;\nif (!true || !true || !true) {\n    const MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n    /**\n     * Ensures a non-negative, non-infinite, safe integer.\n     *\n     * @param length The number to validate\n     * @return A proper length\n     */\n    toLength = function toLength(length) {\n        if (isNaN(length)) {\n            return 0;\n        }\n        length = Number(length);\n        if (isFinite(length)) {\n            length = Math.floor(length);\n        }\n        // Ensure a non-negative, real, safe integer\n        return Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n    };\n    /**\n     * From ES6 7.1.4 ToInteger()\n     *\n     * @param value A value to convert\n     * @return An integer\n     */\n    toInteger = function toInteger(value) {\n        value = Number(value);\n        if (isNaN(value)) {\n            return 0;\n        }\n        if (value === 0 || !isFinite(value)) {\n            return value;\n        }\n        return (value > 0 ? 1 : -1) * Math.floor(Math.abs(value));\n    };\n    /**\n     * Normalizes an offset against a given length, wrapping it if negative.\n     *\n     * @param value The original offset\n     * @param length The total length to normalize against\n     * @return If negative, provide a distance from the end (length); otherwise provide a distance from 0\n     */\n    normalizeOffset = function normalizeOffset(value, length) {\n        return value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n    };\n}\nif (!true) {\n    Array.from = function from(arrayLike, mapFunction, thisArg) {\n        if (arrayLike == null) {\n            throw new TypeError('from: requires an array-like object');\n        }\n        if (mapFunction && thisArg) {\n            mapFunction = mapFunction.bind(thisArg);\n        }\n        /* tslint:disable-next-line:variable-name */\n        const Constructor = this;\n        const length = toLength(arrayLike.length);\n        // Support extension\n        const array = typeof Constructor === 'function' ? Object(new Constructor(length)) : new Array(length);\n        if (!isArrayLike(arrayLike) && !isIterable(arrayLike)) {\n            return array;\n        }\n        // if this is an array and the normalized length is 0, just return an empty array. this prevents a problem\n        // with the iteration on IE when using a NaN array length.\n        if (isArrayLike(arrayLike)) {\n            if (length === 0) {\n                return [];\n            }\n            for (let i = 0; i < arrayLike.length; i++) {\n                array[i] = mapFunction ? mapFunction(arrayLike[i], i) : arrayLike[i];\n            }\n        }\n        else {\n            let i = 0;\n            for (const value of arrayLike) {\n                array[i] = mapFunction ? mapFunction(value, i) : value;\n                i++;\n            }\n        }\n        if (arrayLike.length !== undefined) {\n            array.length = length;\n        }\n        return array;\n    };\n    Array.of = function of(...items) {\n        return Array.prototype.slice.call(items);\n    };\n    Array.prototype.copyWithin = function copyWithin(offset, start, end) {\n        if (this == null) {\n            throw new TypeError('copyWithin: target must be an array-like object');\n        }\n        const length = toLength(this.length);\n        offset = normalizeOffset(toInteger(offset), length);\n        start = normalizeOffset(toInteger(start), length);\n        end = normalizeOffset(end === undefined ? length : toInteger(end), length);\n        let count = Math.min(end - start, length - offset);\n        let direction = 1;\n        if (offset > start && offset < start + count) {\n            direction = -1;\n            start += count - 1;\n            offset += count - 1;\n        }\n        while (count > 0) {\n            if (start in this) {\n                this[offset] = this[start];\n            }\n            else {\n                delete this[offset];\n            }\n            offset += direction;\n            start += direction;\n            count--;\n        }\n        return this;\n    };\n    Array.prototype.find = function find(callback, thisArg) {\n        const index = this.findIndex(callback, thisArg);\n        return index !== -1 ? this[index] : undefined;\n    };\n    Array.prototype.findIndex = function findIndex(callback, thisArg) {\n        const length = toLength(this.length);\n        if (!callback) {\n            throw new TypeError('find: second argument must be a function');\n        }\n        if (thisArg) {\n            callback = callback.bind(thisArg);\n        }\n        for (let i = 0; i < length; i++) {\n            if (callback(this[i], i, this)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\nif (!true) {\n    Array.prototype.fill = function fill(value, start, end) {\n        const length = toLength(this.length);\n        let i = normalizeOffset(toInteger(start), length);\n        end = normalizeOffset(end === undefined ? length : toInteger(end), length);\n        while (i < (end || 0)) {\n            this[i++] = value;\n        }\n        return this;\n    };\n}\nif (!true) {\n    Array.prototype.includes = function includes(searchElement, fromIndex = 0) {\n        let len = toLength(this.length);\n        for (let i = fromIndex; i < len; ++i) {\n            const currentElement = this[i];\n            if (searchElement === currentElement ||\n                (searchElement !== searchElement && currentElement !== currentElement)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\nfrom = Array.from;\nof = Array.of;\ncopyWithin = wrapNative(Array.prototype.copyWithin);\nfill = wrapNative(Array.prototype.fill);\nfind = wrapNative(Array.prototype.find);\nfindIndex = wrapNative(Array.prototype.findIndex);\nincludes = wrapNative(Array.prototype.includes);\nexport default Array;","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/label\",\"root\":\"label-m__root__1Xn7G\",\"readonly\":\"label-m__readonly__79gMw\",\"invalid\":\"label-m__invalid__1HXQX\",\"valid\":\"label-m__valid__3TeO8\",\"required\":\"label-m__required__2a_lw\",\"disabled\":\"label-m__disabled__3gv9p\",\"focused\":\"label-m__focused__2Qy2n\",\"secondary\":\"label-m__secondary__29UpR\"};","import Promise from '../shim/Promise';\n/**\n * No op function used to replace a Destroyable instance's `destroy` method, once the instance has been destroyed\n */\nfunction noop() {\n    return Promise.resolve(false);\n}\n/**\n * No op function used to replace a Destroyable instance's `own` method, once the instance has been destroyed\n */\nfunction destroyed() {\n    throw new Error('Call made to destroyed method');\n}\nexport class Destroyable {\n    /**\n     * @constructor\n     */\n    constructor() {\n        this.handles = [];\n    }\n    /**\n     * Register handles for the instance that will be destroyed when `this.destroy` is called\n     *\n     * @param {Handle} handle The handle to add for the instance\n     * @returns {Handle} A wrapper Handle. When the wrapper Handle's `destroy` method is invoked, the original handle is\n     *                   removed from the instance, and its `destroy` method is invoked.\n     */\n    own(handle) {\n        const { handles: _handles } = this;\n        _handles.push(handle);\n        return {\n            destroy() {\n                _handles.splice(_handles.indexOf(handle));\n                handle.destroy();\n            }\n        };\n    }\n    /**\n     * Destroys all handlers registered for the instance\n     *\n     * @returns {Promise<any} A Promise that resolves once all handles have been destroyed\n     */\n    destroy() {\n        return new Promise((resolve) => {\n            this.handles.forEach((handle) => {\n                handle && handle.destroy && handle.destroy();\n            });\n            this.destroy = noop;\n            this.own = destroyed;\n            resolve(true);\n        });\n    }\n}\nexport default Destroyable;\n//# sourceMappingURL=Destroyable.mjs.map","import { isWNode, isVNode } from './vdom';\nconst slice = Array.prototype.slice;\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Type guard that ensures that the value can be coerced to Object\n * to weed out host objects that do not derive from Object.\n * This function is used to check if we want to deep copy an object or not.\n * Note: In ES6 it is possible to modify an object's Symbol.toStringTag property, which will\n * change the value returned by `toString`. This is a rare edge case that is difficult to handle,\n * so it is not handled here.\n * @param  value The value to check\n * @return       If the value is coercible into an Object\n */\nfunction shouldDeepCopyObject(value) {\n    return Object.prototype.toString.call(value) === '[object Object]';\n}\nfunction copyArray(array, inherited) {\n    return array.map(function (item) {\n        if (Array.isArray(item)) {\n            return copyArray(item, inherited);\n        }\n        return !shouldDeepCopyObject(item)\n            ? item\n            : _mixin({\n                deep: true,\n                inherited: inherited,\n                sources: [item],\n                target: {}\n            });\n    });\n}\nfunction _mixin(kwArgs) {\n    const deep = kwArgs.deep;\n    const inherited = kwArgs.inherited;\n    const target = kwArgs.target;\n    const copied = kwArgs.copied || [];\n    const copiedClone = [...copied];\n    for (let i = 0; i < kwArgs.sources.length; i++) {\n        const source = kwArgs.sources[i];\n        if (source === null || source === undefined) {\n            continue;\n        }\n        for (let key in source) {\n            if (inherited || hasOwnProperty.call(source, key)) {\n                let value = source[key];\n                if (copiedClone.indexOf(value) !== -1) {\n                    continue;\n                }\n                if (deep) {\n                    if (Array.isArray(value)) {\n                        value = copyArray(value, inherited);\n                    }\n                    else if (shouldDeepCopyObject(value)) {\n                        const targetValue = target[key] || {};\n                        copied.push(source);\n                        value = _mixin({\n                            deep: true,\n                            inherited: inherited,\n                            sources: [value],\n                            target: targetValue,\n                            copied\n                        });\n                    }\n                }\n                target[key] = value;\n            }\n        }\n    }\n    return target;\n}\nexport function deepAssign(target, ...sources) {\n    return _mixin({\n        deep: true,\n        inherited: false,\n        sources: sources,\n        target: target\n    });\n}\nexport function deepMixin(target, ...sources) {\n    return _mixin({\n        deep: true,\n        inherited: true,\n        sources: sources,\n        target: target\n    });\n}\nexport function mixin(target, ...sources) {\n    return _mixin({\n        deep: false,\n        inherited: true,\n        sources: sources,\n        target: target\n    });\n}\n/**\n * Returns a function which invokes the given function with the given arguments prepended to its argument list.\n * Like `Function.prototype.bind`, but does not alter execution context.\n *\n * @param targetFunction The function that needs to be bound\n * @param suppliedArgs An optional array of arguments to prepend to the `targetFunction` arguments list\n * @return The bound function\n */\nexport function partial(targetFunction, ...suppliedArgs) {\n    return function () {\n        const args = arguments.length ? suppliedArgs.concat(slice.call(arguments)) : suppliedArgs;\n        return targetFunction.apply(this, args);\n    };\n}\nexport function guaranteeMinimumTimeout(callback, delay) {\n    const startTime = Date.now();\n    let timerId;\n    function timeoutHandler() {\n        const delta = Date.now() - startTime;\n        if (delay == null || delta >= delay) {\n            callback();\n        }\n        else {\n            timerId = setTimeout(timeoutHandler, delay - delta);\n        }\n    }\n    timerId = setTimeout(timeoutHandler, delay);\n    return {\n        destroy: () => {\n            if (timerId != null) {\n                clearTimeout(timerId);\n                timerId = null;\n            }\n        }\n    };\n}\nexport function debounce(callback, delay) {\n    let timer;\n    return function () {\n        timer && timer.destroy();\n        let context = this;\n        let args = arguments;\n        timer = guaranteeMinimumTimeout(function () {\n            callback.apply(context, args);\n            args = context = timer = null;\n        }, delay);\n    };\n}\nexport function throttle(callback, delay) {\n    let ran;\n    return function () {\n        if (ran) {\n            return;\n        }\n        ran = true;\n        let args = arguments;\n        callback.apply(this, args);\n        guaranteeMinimumTimeout(function () {\n            ran = null;\n        }, delay);\n    };\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport function decorate(dNodes, optionsOrModifier, predicate) {\n    let shallow = false;\n    let modifier;\n    if (typeof optionsOrModifier === 'function') {\n        modifier = optionsOrModifier;\n    }\n    else {\n        modifier = optionsOrModifier.modifier;\n        predicate = optionsOrModifier.predicate;\n        shallow = optionsOrModifier.shallow || false;\n    }\n    let nodes = Array.isArray(dNodes) ? [...dNodes] : [dNodes];\n    function breaker() {\n        nodes = [];\n    }\n    while (nodes.length) {\n        const node = nodes.shift();\n        if (node && node !== true) {\n            if (!shallow && (isWNode(node) || isVNode(node)) && node.children) {\n                nodes = [...nodes, ...node.children];\n            }\n            if (!predicate || predicate(node)) {\n                modifier(node, breaker);\n            }\n        }\n    }\n    return dNodes;\n}\n//# sourceMappingURL=util.mjs.map","import { Evented } from '../core/Evented';\nexport class Injector extends Evented {\n    constructor(payload) {\n        super();\n        this._payload = payload;\n    }\n    setInvalidator(invalidator) {\n        this._invalidator = invalidator;\n    }\n    get() {\n        return this._payload;\n    }\n    set(payload) {\n        this._payload = payload;\n        if (this._invalidator) {\n            this._invalidator();\n        }\n    }\n}\nexport default Injector;\n//# sourceMappingURL=Injector.mjs.map","import WeakMap from '../../shim/WeakMap';\nimport { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\n/**\n * Map of instances against registered injectors.\n */\nconst registeredInjectorsMap = new WeakMap();\n/**\n * Decorator retrieves an injector from an available registry using the name and\n * calls the `getProperties` function with the payload from the injector\n * and current properties with the the injected properties returned.\n *\n * @param InjectConfig the inject configuration\n */\nexport function inject({ name, getProperties }) {\n    return handleDecorator((target, propertyKey) => {\n        beforeProperties(function (properties) {\n            const injectorItem = this.registry.getInjector(name);\n            if (injectorItem) {\n                const { injector, invalidator } = injectorItem;\n                const registeredInjectors = registeredInjectorsMap.get(this) || [];\n                if (registeredInjectors.length === 0) {\n                    registeredInjectorsMap.set(this, registeredInjectors);\n                }\n                if (registeredInjectors.indexOf(injectorItem) === -1) {\n                    this.own(invalidator.on('invalidate', () => {\n                        this.invalidate();\n                    }));\n                    registeredInjectors.push(injectorItem);\n                }\n                return getProperties(injector(), properties);\n            }\n        })(target);\n    });\n}\nexport default inject;\n//# sourceMappingURL=inject.mjs.map","import { Destroyable } from '../../core/Destroyable';\nimport Set from '../../shim/Set';\nexport class Base extends Destroyable {\n    constructor(properties) {\n        super();\n        this._requestedNodeKeys = new Set();\n        this._invalidate = properties.invalidate;\n        this.nodeHandler = properties.nodeHandler;\n        if (properties.bind) {\n            this._bind = properties.bind;\n        }\n    }\n    has(key) {\n        return this.nodeHandler.has(key);\n    }\n    getNode(key) {\n        const stringKey = `${key}`;\n        const node = this.nodeHandler.get(stringKey);\n        if (!node && !this._requestedNodeKeys.has(stringKey)) {\n            const handle = this.nodeHandler.on(stringKey, () => {\n                handle.destroy();\n                this._requestedNodeKeys.delete(stringKey);\n                this.invalidate();\n            });\n            this.own(handle);\n            this._requestedNodeKeys.add(stringKey);\n        }\n        return node;\n    }\n    invalidate() {\n        this._invalidate();\n    }\n    afterRender() {\n        // Do nothing by default.\n    }\n}\nexport default Base;\n//# sourceMappingURL=Base.mjs.map","import { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\nexport function alwaysRender() {\n    return handleDecorator((target, propertyKey) => {\n        beforeProperties(function () {\n            this.invalidate();\n        })(target);\n    });\n}\nexport default alwaysRender;\n//# sourceMappingURL=alwaysRender.mjs.map","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/base\",\"visuallyHidden\":\"base-m__visuallyHidden__1AeWe\",\"focusable\":\"base-m__focusable__1_qAN\",\"hidden\":\"base-m__hidden__3QddU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/icon\",\"root\":\"icon-m__root__2L6Ls\",\"icon\":\"icon-m__icon__3tF1v\",\"downIcon\":\"icon-m__downIcon__3GFyI\",\"leftIcon\":\"icon-m__leftIcon__1db8D\",\"rightIcon\":\"icon-m__rightIcon__2a143\",\"closeIcon\":\"icon-m__closeIcon__w1WZi\",\"plusIcon\":\"icon-m__plusIcon__2V_90\",\"minusIcon\":\"icon-m__minusIcon__27KOe\",\"checkIcon\":\"icon-m__checkIcon__mKil4\",\"upIcon\":\"icon-m__upIcon__Rw4TX\",\"upAltIcon\":\"icon-m__upAltIcon__b2BPq\",\"downAltIcon\":\"icon-m__downAltIcon__3QpkE\",\"searchIcon\":\"icon-m__searchIcon__3MWqs\",\"barsIcon\":\"icon-m__barsIcon__3uXWm\",\"settingsIcon\":\"icon-m__settingsIcon__3V--O\",\"alertIcon\":\"icon-m__alertIcon__3YjJO\",\"helpIcon\":\"icon-m__helpIcon__3mL91\",\"infoIcon\":\"icon-m__infoIcon__dZLeo\",\"phoneIcon\":\"icon-m__phoneIcon__1vzkN\",\"editIcon\":\"icon-m__editIcon__2y3IH\",\"dateIcon\":\"icon-m__dateIcon__1_x6R\",\"linkIcon\":\"icon-m__linkIcon__HkV2v\",\"locationIcon\":\"icon-m__locationIcon__24-7y\",\"secureIcon\":\"icon-m__secureIcon__2cTDx\",\"mailIcon\":\"icon-m__mailIcon__12PMY\"};","import { Base } from './Base';\nimport global from '../../shim/global';\nconst defaultResults = {\n    active: false,\n    containsFocus: false\n};\nexport class Focus extends Base {\n    constructor() {\n        super(...arguments);\n        this._onFocusChange = () => {\n            this._activeElement = global.document.activeElement;\n            this.invalidate();\n        };\n    }\n    get(key) {\n        const node = this.getNode(key);\n        if (!node) {\n            return Object.assign({}, defaultResults);\n        }\n        if (!this._activeElement) {\n            this._activeElement = global.document.activeElement;\n            this._createListener();\n        }\n        return {\n            active: node === this._activeElement,\n            containsFocus: !!this._activeElement && node.contains(this._activeElement)\n        };\n    }\n    set(key) {\n        const node = this.getNode(key);\n        node && node.focus();\n    }\n    _createListener() {\n        global.document.addEventListener('focusin', this._onFocusChange);\n        global.document.addEventListener('focusout', this._onFocusChange);\n        this.own({\n            destroy: () => {\n                this._removeListener();\n            }\n        });\n    }\n    _removeListener() {\n        global.document.removeEventListener('focusin', this._onFocusChange);\n        global.document.removeEventListener('focusout', this._onFocusChange);\n    }\n}\nexport default Focus;\n//# sourceMappingURL=Focus.mjs.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/text-input\",\"input\":\"text-input-m__input__11Vim\",\"root\":\"text-input-m__root__1NgZU\",\"inputWrapper\":\"text-input-m__inputWrapper__TxI_q\",\"disabled\":\"text-input-m__disabled__xKv_G\",\"focused\":\"text-input-m__focused__1_cNY\",\"readonly\":\"text-input-m__readonly__39faZ\",\"required\":\"text-input-m__required__1sSaa\",\"invalid\":\"text-input-m__invalid__3ty-B\",\"leading\":\"text-input-m__leading__kBhIU\",\"trailing\":\"text-input-m__trailing__3mxdv\",\"hasLeading\":\"text-input-m__hasLeading__3MZ3U\",\"hasTrailing\":\"text-input-m__hasTrailing__1PKCN\",\"helperText\":\"text-input-m__helperText__3b8Nt\",\"valid\":\"text-input-m__valid__3A71s\"};","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { diffProperty } from './../decorators/diffProperty';\nfunction diffFocus(previousProperty, newProperty) {\n    const result = newProperty && newProperty();\n    return {\n        changed: result,\n        value: newProperty\n    };\n}\nexport function FocusMixin(Base) {\n    class Focus extends Base {\n        constructor() {\n            super(...arguments);\n            this._currentToken = 0;\n            this._previousToken = 0;\n            this.shouldFocus = () => {\n                const result = this._currentToken !== this._previousToken;\n                this._previousToken = this._currentToken;\n                return result;\n            };\n        }\n        isFocusedReaction() {\n            this._currentToken++;\n        }\n        focus() {\n            this._currentToken++;\n            this.invalidate();\n        }\n    }\n    __decorate([\n        diffProperty('focus', diffFocus)\n    ], Focus.prototype, \"isFocusedReaction\", null);\n    return Focus;\n}\nexport default FocusMixin;\n//# sourceMappingURL=Focus.mjs.map","import has from '../core/has';\nexport let assign;\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor;\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames;\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols;\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is;\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys;\n/* ES7 Object static methods */\nexport let getOwnPropertyDescriptors;\nexport let entries;\nexport let values;\nif (!true) {\n    const keys = Object.keys.bind(Object);\n    Object.keys = function symbolAwareKeys(o) {\n        return keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n    };\n    Object.assign = function assign(target, ...sources) {\n        if (target == null) {\n            // TypeError if undefined or null\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        const to = Object(target);\n        sources.forEach((nextSource) => {\n            if (nextSource) {\n                // Skip over if undefined or null\n                keys(nextSource).forEach((nextKey) => {\n                    to[nextKey] = nextSource[nextKey];\n                });\n            }\n        });\n        return to;\n    };\n    const getOwnPropertyNames = Object.getOwnPropertyNames.bind(Object);\n    Object.getOwnPropertyNames = function symbolAwareGetOwnPropertyNames(o) {\n        return getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n    };\n    Object.getOwnPropertySymbols = function getOwnPropertySymbols(o) {\n        return getOwnPropertyNames(o)\n            .filter((key) => Boolean(key.match(/^@@.+/)))\n            .map((key) => Symbol.for(key.substring(2)));\n    };\n    Object.is = function is(value1, value2) {\n        if (value1 === value2) {\n            return value1 !== 0 || 1 / value1 === 1 / value2; // -0\n        }\n        return value1 !== value1 && value2 !== value2; // NaN\n    };\n}\nif (!true) {\n    Object.getOwnPropertyDescriptors = function getOwnPropertyDescriptors(o) {\n        return Object.getOwnPropertyNames(o).reduce((previous, key) => {\n            previous[key] = Object.getOwnPropertyDescriptor(o, key);\n            return previous;\n        }, {});\n    };\n    Object.entries = function entries(o) {\n        return keys(o).map((key) => [key, o[key]]);\n    };\n    Object.values = function values(o) {\n        return keys(o).map((key) => o[key]);\n    };\n}\nassign = Object.assign;\ngetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\ngetOwnPropertyNames = Object.getOwnPropertyNames;\ngetOwnPropertySymbols = Object.getOwnPropertySymbols;\nis = Object.is;\nkeys = Object.keys;\ngetOwnPropertyDescriptors = Object.getOwnPropertyDescriptors;\nentries = Object.entries;\nvalues = Object.values;\nexport default Object;\n//# sourceMappingURL=object.mjs.map","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport Registry from './Registry';\nimport { WidgetBase } from './WidgetBase';\nimport { renderer, w, dom, isTextNode } from './vdom';\nimport { from } from '../shim/array';\nimport global from '../shim/global';\nimport { registerThemeInjector } from './mixins/Themed';\nimport { alwaysRender } from './decorators/alwaysRender';\nconst RESERVED_PROPS = ['focus'];\nexport var CustomElementChildType;\n(function (CustomElementChildType) {\n    CustomElementChildType[\"DOJO\"] = \"DOJO\";\n    CustomElementChildType[\"NODE\"] = \"NODE\";\n    CustomElementChildType[\"TEXT\"] = \"TEXT\";\n})(CustomElementChildType || (CustomElementChildType = {}));\nfunction isElement(item) {\n    return item && item.nodeType === 1;\n}\nfunction isDojoChild(item) {\n    return isElement(item) && item.tagName.indexOf('-') > -1;\n}\nexport function DomToWidgetWrapper(domNode) {\n    let DomToWidgetWrapper = class DomToWidgetWrapper extends WidgetBase {\n        render() {\n            const properties = Object.keys(this.properties).reduce((props, key) => {\n                const value = this.properties[key];\n                if (key.indexOf('on') === 0 || RESERVED_PROPS.indexOf(key) !== -1) {\n                    key = `__${key}`;\n                }\n                props[key] = value;\n                return props;\n            }, {});\n            return dom({ node: domNode, props: properties, diffType: 'dom' });\n        }\n        static get domNode() {\n            return domNode;\n        }\n    };\n    DomToWidgetWrapper = __decorate([\n        alwaysRender()\n    ], DomToWidgetWrapper);\n    return DomToWidgetWrapper;\n}\nexport function create(descriptor, WidgetConstructor) {\n    const { attributes = [], registryFactory = () => new Registry() } = descriptor;\n    const attributeMap = {};\n    attributes.forEach((propertyName) => {\n        const attributeName = propertyName.toLowerCase();\n        attributeMap[attributeName] = propertyName;\n    });\n    return class extends HTMLElement {\n        constructor() {\n            super(...arguments);\n            this._properties = {};\n            this._children = [];\n            this._eventProperties = {};\n            this._propertiesMap = {};\n            this._initialised = false;\n            this._childType = descriptor.childType;\n        }\n        connectedCallback() {\n            if (this._initialised) {\n                return;\n            }\n            this._waitTillReady();\n        }\n        _hasBeenParsed() {\n            if (document.readyState !== 'loading') {\n                return true;\n            }\n            let element = this;\n            while (element) {\n                if (element.nextSibling) {\n                    return true;\n                }\n                element = element.parentNode;\n            }\n            return false;\n        }\n        _waitTillReady() {\n            this._initialised = true;\n            if (this._hasBeenParsed()) {\n                this._readyCallback();\n            }\n            else {\n                setTimeout(() => {\n                    this._waitTillReady();\n                }, 100);\n            }\n        }\n        _readyCallback() {\n            const domProperties = {};\n            const { properties = [], events = [] } = descriptor;\n            this._properties = Object.assign({}, this._properties, this._attributesToProperties(attributes));\n            [...attributes, ...properties].forEach((propertyName) => {\n                const isReservedProp = RESERVED_PROPS.indexOf(propertyName) !== -1;\n                const value = this._propertiesMap[propertyName] || !isReservedProp ? this[propertyName] : undefined;\n                let filteredPropertyName = propertyName.replace(/^on/, '__');\n                if (isReservedProp) {\n                    filteredPropertyName = `__${propertyName}`;\n                }\n                if (value !== undefined) {\n                    this._properties[propertyName] = value;\n                }\n                if (filteredPropertyName !== propertyName) {\n                    domProperties[filteredPropertyName] = {\n                        get: () => this._getProperty(propertyName),\n                        set: (value) => this._setProperty(propertyName, value)\n                    };\n                }\n                if (!isReservedProp) {\n                    domProperties[propertyName] = {\n                        get: () => this._getProperty(propertyName),\n                        set: (value) => this._setProperty(propertyName, value)\n                    };\n                }\n            });\n            events.forEach((propertyName) => {\n                const eventName = propertyName.replace(/^on/, '').toLowerCase();\n                const filteredPropertyName = propertyName.replace(/^on/, '__on');\n                domProperties[filteredPropertyName] = {\n                    get: () => this._getEventProperty(propertyName),\n                    set: (value) => this._setEventProperty(propertyName, value)\n                };\n                this._eventProperties[propertyName] = undefined;\n                this._properties[propertyName] = (...args) => {\n                    const eventCallback = this._getEventProperty(propertyName);\n                    if (typeof eventCallback === 'function') {\n                        eventCallback(...args);\n                    }\n                    this.dispatchEvent(new CustomEvent(eventName, {\n                        bubbles: false,\n                        detail: args\n                    }));\n                };\n            });\n            Object.defineProperties(this, domProperties);\n            const children = from(this.childNodes).filter((childNode) => !isTextNode(childNode) || childNode.data.replace(/^\\s+|\\s+$/g, ''));\n            if (!this._childType) {\n                if (children.some((child) => isDojoChild(child))) {\n                    this._childType = CustomElementChildType.DOJO;\n                }\n                else {\n                    this._childType = CustomElementChildType.NODE;\n                }\n            }\n            from(children).forEach((childNode) => {\n                if (this._childType === CustomElementChildType.DOJO) {\n                    childNode.addEventListener('dojo-ce-render', () => this._render());\n                    childNode.addEventListener('dojo-ce-connected', () => this._render());\n                    this._children.push(DomToWidgetWrapper(childNode));\n                }\n                else {\n                    this._children.push(dom({ node: childNode, diffType: 'dom' }));\n                }\n            });\n            this.addEventListener('dojo-ce-connected', (e) => this._childConnected(e));\n            const widgetProperties = this._properties;\n            const renderChildren = () => this.__children__();\n            const Wrapper = class extends WidgetBase {\n                render() {\n                    return w(WidgetConstructor, widgetProperties, renderChildren());\n                }\n            };\n            const registry = registryFactory();\n            const themeContext = registerThemeInjector(this._getTheme(), registry);\n            global.addEventListener('dojo-theme-set', () => themeContext.set(this._getTheme()));\n            const r = renderer(() => w(Wrapper, {}));\n            this._renderer = r;\n            r.mount({ domNode: this, merge: false, registry });\n            const root = this.children[0];\n            if (root) {\n                const { display = 'block' } = global.getComputedStyle(root);\n                this.style.display = display;\n            }\n            this.dispatchEvent(new CustomEvent('dojo-ce-connected', {\n                bubbles: true,\n                detail: this\n            }));\n        }\n        _getTheme() {\n            if (global && global.dojoce && global.dojoce.theme) {\n                return global.dojoce.themes[global.dojoce.theme];\n            }\n        }\n        _childConnected(e) {\n            const node = e.detail;\n            if (node.parentNode === this) {\n                const exists = this._children.some((child) => child.domNode === node);\n                if (!exists) {\n                    node.addEventListener('dojo-ce-render', () => this._render());\n                    this._children.push(DomToWidgetWrapper(node));\n                    this._render();\n                }\n            }\n        }\n        _render() {\n            if (this._renderer) {\n                this._renderer.invalidate();\n                this.dispatchEvent(new CustomEvent('dojo-ce-render', {\n                    bubbles: false,\n                    detail: this\n                }));\n            }\n        }\n        __properties__() {\n            return Object.assign({}, this._properties, this._eventProperties);\n        }\n        __children__() {\n            if (this._childType === CustomElementChildType.DOJO) {\n                return this._children.filter((Child) => Child.domNode.isWidget).map((Child) => {\n                    const { domNode } = Child;\n                    return w(Child, Object.assign({}, domNode.__properties__()), [...domNode.__children__()]);\n                });\n            }\n            else {\n                return this._children;\n            }\n        }\n        attributeChangedCallback(name, oldValue, value) {\n            const propertyName = attributeMap[name];\n            this._setProperty(propertyName, value);\n        }\n        _setEventProperty(propertyName, value) {\n            this._eventProperties[propertyName] = value;\n        }\n        _getEventProperty(propertyName) {\n            return this._eventProperties[propertyName];\n        }\n        _setProperty(propertyName, value) {\n            this._properties[propertyName] = value;\n            this._render();\n        }\n        _getProperty(propertyName) {\n            return this._properties[propertyName];\n        }\n        _attributesToProperties(attributes) {\n            return attributes.reduce((properties, propertyName) => {\n                const attributeName = propertyName.toLowerCase();\n                const value = this.getAttribute(attributeName);\n                if (value !== null) {\n                    properties[propertyName] = value;\n                }\n                return properties;\n            }, {});\n        }\n        static get observedAttributes() {\n            return Object.keys(attributeMap);\n        }\n        get isWidget() {\n            return true;\n        }\n        set(key, value) {\n            this._propertiesMap[key] = value;\n            if (this._renderer) {\n                this._setProperty(key, value);\n            }\n        }\n    };\n}\nexport function register(WidgetConstructor) {\n    const descriptor = WidgetConstructor.__customElementDescriptor;\n    if (!descriptor) {\n        throw new Error('Cannot get descriptor for Custom Element, have you added the @customElement decorator to your Widget?');\n    }\n    global.customElements.define(descriptor.tagName, create(descriptor, WidgetConstructor));\n}\nexport default register;\n//# sourceMappingURL=registerCustomElement.mjs.map","import { WidgetBase } from '@dojo/framework/core/WidgetBase';\nimport { DNode } from '@dojo/framework/core/interfaces';\nimport { ThemedMixin, ThemedProperties, theme } from '@dojo/framework/core/mixins/Themed';\nimport { v } from '@dojo/framework/core/vdom';\nimport { CustomAriaProperties } from '../common/interfaces';\nimport { formatAriaProperties } from '../common/util';\nimport * as css from '../theme/icon.m.css';\nimport * as baseCss from '../common/styles/base.m.css';\n\nexport type IconType = keyof typeof css;\n\n/**\n * @type IconProperties\n *\n * Properties that can be set on an Icon component\n *\n * @property type           Icon type, e.g. downIcon, searchIcon, etc.\n * @property altText        An optional, visually hidden label for the icon\n */\nexport interface IconProperties extends ThemedProperties, CustomAriaProperties {\n\ttype: IconType;\n\taltText?: string;\n}\n\n@theme(css)\nexport class Icon extends ThemedMixin(WidgetBase)<IconProperties> {\n\tprotected renderAltText(altText: string): DNode {\n\t\treturn v('span', { classes: [baseCss.visuallyHidden] }, [altText]);\n\t}\n\n\trender(): DNode {\n\t\tconst {\n\t\t\taria = {\n\t\t\t\thidden: 'true'\n\t\t\t},\n\t\t\ttype,\n\t\t\taltText\n\t\t} = this.properties;\n\n\t\treturn v('span', { classes: this.theme(css.root) }, [\n\t\t\tv('i', {\n\t\t\t\t...formatAriaProperties(aria),\n\t\t\t\tclasses: this.theme([css.icon, css[type]])\n\t\t\t}),\n\t\t\taltText ? this.renderAltText(altText) : null\n\t\t]);\n\t}\n}\n\nexport default Icon;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/helper-text\",\"root\":\"helper-text-m__root__2oxlK\",\"text\":\"helper-text-m__text__LUHQM\",\"valid\":\"helper-text-m__valid__1mpUr\",\"invalid\":\"helper-text-m__invalid__3HLLo\"};","import { WidgetBase } from '@dojo/framework/core/WidgetBase';\nimport { DNode } from '@dojo/framework/core/interfaces';\nimport { ThemedMixin, ThemedProperties, theme } from '@dojo/framework/core/mixins/Themed';\nimport { v } from '@dojo/framework/core/vdom';\nimport { CustomAriaProperties } from '../common/interfaces';\nimport { formatAriaProperties } from '../common/util';\nimport * as css from '../theme/label.m.css';\nimport * as baseCss from '../common/styles/base.m.css';\n\n/**\n * @type LabelProperties\n *\n * Properties that can be set on a Label component\n *\n * @property forId     ID to explicitly associate the label with an input element\n * @property disabled\n * @property focused\n * @property readOnly\n * @property required\n * @property invalid\n * @property hidden\n * @property secondary\n */\nexport interface LabelProperties extends ThemedProperties, CustomAriaProperties {\n\tforId?: string;\n\tdisabled?: boolean;\n\tfocused?: boolean;\n\treadOnly?: boolean;\n\trequired?: boolean;\n\tinvalid?: boolean;\n\thidden?: boolean;\n\tsecondary?: boolean;\n\twidgetId?: string;\n}\n\n@theme(css)\nexport class Label extends ThemedMixin(WidgetBase)<LabelProperties> {\n\tprotected getRootClasses(): (string | null)[] {\n\t\tconst { disabled, focused, invalid, readOnly, required, secondary } = this.properties;\n\t\treturn [\n\t\t\tcss.root,\n\t\t\tdisabled ? css.disabled : null,\n\t\t\tfocused ? css.focused : null,\n\t\t\tinvalid === true ? css.invalid : null,\n\t\t\tinvalid === false ? css.valid : null,\n\t\t\treadOnly ? css.readonly : null,\n\t\t\trequired ? css.required : null,\n\t\t\tsecondary ? css.secondary : null\n\t\t];\n\t}\n\n\trender(): DNode {\n\t\tconst { aria = {}, forId, hidden, widgetId } = this.properties;\n\n\t\treturn v(\n\t\t\t'label',\n\t\t\t{\n\t\t\t\t...formatAriaProperties(aria),\n\t\t\t\tid: widgetId,\n\t\t\t\tclasses: [\n\t\t\t\t\t...this.theme(this.getRootClasses()),\n\t\t\t\t\thidden ? baseCss.visuallyHidden : null\n\t\t\t\t],\n\t\t\t\tfor: forId\n\t\t\t},\n\t\t\tthis.children\n\t\t);\n\t}\n}\n\nexport default Label;\n","import { Base } from './Base';\nimport { deepAssign } from '../../core/util';\nconst defaultDimensions = {\n    client: {\n        height: 0,\n        left: 0,\n        top: 0,\n        width: 0\n    },\n    offset: {\n        height: 0,\n        left: 0,\n        top: 0,\n        width: 0\n    },\n    position: {\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n    },\n    scroll: {\n        height: 0,\n        left: 0,\n        top: 0,\n        width: 0\n    },\n    size: {\n        width: 0,\n        height: 0\n    }\n};\nexport class Dimensions extends Base {\n    get(key) {\n        const node = this.getNode(key);\n        if (!node) {\n            return deepAssign({}, defaultDimensions);\n        }\n        const boundingDimensions = node.getBoundingClientRect();\n        return {\n            client: {\n                height: node.clientHeight,\n                left: node.clientLeft,\n                top: node.clientTop,\n                width: node.clientWidth\n            },\n            offset: {\n                height: node.offsetHeight,\n                left: node.offsetLeft,\n                top: node.offsetTop,\n                width: node.offsetWidth\n            },\n            position: {\n                bottom: boundingDimensions.bottom,\n                left: boundingDimensions.left,\n                right: boundingDimensions.right,\n                top: boundingDimensions.top\n            },\n            scroll: {\n                height: node.scrollHeight,\n                left: node.scrollLeft,\n                top: node.scrollTop,\n                width: node.scrollWidth\n            },\n            size: {\n                width: boundingDimensions.width,\n                height: boundingDimensions.height\n            }\n        };\n    }\n}\nexport default Dimensions;\n//# sourceMappingURL=Dimensions.mjs.map","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/button\",\"root\":\"button-m__root__K8T1J\",\"pressed\":\"button-m__pressed__2LG7C\",\"popup\":\"button-m__popup__1e22t\",\"addon\":\"button-m__addon__NGE1m\",\"disabled\":\"button-m__disabled__3x8T4\"};","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ResizeObserver = factory());\n}(this, (function () { 'use strict';\n\n/**\n * A collection of shims that provide minimal functionality of the ES6 collections.\n *\n * These implementations are not meant to be used outside of the ResizeObserver\n * modules as they cover only a limited range of use cases.\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\n     * Returns index in provided array that matches the specified key.\n     *\n     * @param {Array<Array>} arr\n     * @param {*} key\n     * @returns {number}\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\n         * @returns {boolean}\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\n         * @param {*} key\n         * @returns {*}\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\n         * @param {*} key\n         * @param {*} value\n         * @returns {void}\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\n         * @param {*} key\n         * @returns {void}\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\n         * @param {*} key\n         * @returns {void}\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\n         * @returns {void}\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\n         * @param {Function} callback\n         * @param {*} [ctx=null]\n         * @returns {void}\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\n * Detects whether window and document objects are available in current environment.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\n * first one is not supported.\n *\n * @returns {number} Requests' identifier.\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\n * Creates a wrapper function which ensures that provided callback will be\n * invoked only once during the specified delay period.\n *\n * @param {Function} callback - Function to be invoked after the delay period.\n * @param {number} delay - Delay after which to invoke callback.\n * @returns {Function}\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\n     * Invokes the original callback function and schedules new invocation if\n     * the \"proxy\" was called during current request.\n     *\n     * @returns {void}\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\n     * Callback invoked after the specified delay. It will further postpone\n     * invocation of the original function delegating it to the\n     * requestAnimationFrame.\n     *\n     * @returns {void}\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\n     * Schedules invocation of the original function.\n     *\n     * @returns {void}\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\n * Singleton controller class which handles updates of ResizeObserver instances.\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\n * Adds observer to observers list.\n *\n * @param {ResizeObserverSPI} observer - Observer to be added.\n * @returns {void}\n */\n\n\n/**\n * Holds reference to the controller's instance.\n *\n * @private {ResizeObserverController}\n */\n\n\n/**\n * Keeps reference to the instance of MutationObserver.\n *\n * @private {MutationObserver}\n */\n\n/**\n * Indicates whether DOM listeners have been added.\n *\n * @private {boolean}\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\n * Removes observer from observers list.\n *\n * @param {ResizeObserverSPI} observer - Observer to be removed.\n * @returns {void}\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\n * Invokes the update of observers. It will continue running updates insofar\n * it detects changes.\n *\n * @returns {void}\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\n * Updates every observer from observers list and notifies them of queued\n * entries.\n *\n * @private\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\n *  dimensions of it's elements.\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\n * Initializes DOM listeners.\n *\n * @private\n * @returns {void}\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\n * Removes DOM listeners.\n *\n * @private\n * @returns {void}\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\n * \"Transitionend\" event handler.\n *\n * @private\n * @param {TransitionEvent} event\n * @returns {void}\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\n * Returns instance of the ResizeObserverController.\n *\n * @returns {ResizeObserverController}\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\n * Defines non-writable/enumerable properties of the provided target object.\n *\n * @param {Object} target - Object for which to define properties.\n * @param {Object} props - Properties to be defined.\n * @returns {Object} Target object.\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\n * Returns the global object associated with provided element.\n *\n * @param {Object} target\n * @returns {Object}\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\n * Converts provided string to a number.\n *\n * @param {number|string} value\n * @returns {number}\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\n * Extracts borders size from provided styles.\n *\n * @param {CSSStyleDeclaration} styles\n * @param {...string} positions - Borders positions (top, right, ...)\n * @returns {number}\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\n * Extracts paddings sizes from provided styles.\n *\n * @param {CSSStyleDeclaration} styles\n * @returns {Object} Paddings box.\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\n * Calculates content rectangle of provided SVG element.\n *\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\n *      to be calculated.\n * @returns {DOMRectInit}\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\n * Calculates content rectangle of provided HTMLElement.\n *\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\n * @returns {DOMRectInit}\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\n * Checks whether provided element is an instance of the SVGGraphicsElement.\n *\n * @param {Element} target - Element to be checked.\n * @returns {boolean}\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\n * Checks whether provided element is a document element (<html>).\n *\n * @param {Element} target - Element to be checked.\n * @returns {boolean}\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\n * Calculates an appropriate content rectangle for provided html or svg element.\n *\n * @param {Element} target - Element content rectangle of which needs to be calculated.\n * @returns {DOMRectInit}\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\n * Creates rectangle with an interface of the DOMRectReadOnly.\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\n *\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\n * @returns {DOMRectReadOnly}\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\n *\n * @param {number} x - X coordinate.\n * @param {number} y - Y coordinate.\n * @param {number} width - Rectangle's width.\n * @param {number} height - Rectangle's height.\n * @returns {DOMRectInit}\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\n * Class that is responsible for computations of the content rectangle of\n * provided DOM element and for keeping track of it's changes.\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\n * Updates content rectangle and tells whether it's width or height properties\n * have changed since the last broadcast.\n *\n * @returns {boolean}\n */\n\n\n/**\n * Reference to the last observed content rectangle.\n *\n * @private {DOMRectInit}\n */\n\n\n/**\n * Broadcasted width of content rectangle.\n *\n * @type {number}\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\n * from the corresponding properties of the last observed content rectangle.\n *\n * @returns {DOMRectInit} Last observed content rectangle.\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\n * Starts observing provided element.\n *\n * @param {Element} target - Element to be observed.\n * @returns {void}\n */\n\n\n/**\n * Registry of the ResizeObservation instances.\n *\n * @private {Map<Element, ResizeObservation>}\n */\n\n\n/**\n * Public ResizeObserver instance which will be passed to the callback\n * function and used as a value of it's \"this\" binding.\n *\n * @private {ResizeObserver}\n */\n\n/**\n * Collection of resize observations that have detected changes in dimensions\n * of elements.\n *\n * @private {Array<ResizeObservation>}\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\n * Stops observing provided element.\n *\n * @param {Element} target - Element to stop observing.\n * @returns {void}\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\n * Stops observing all elements.\n *\n * @returns {void}\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\n * Collects observation instances the associated element of which has changed\n * it's content rectangle.\n *\n * @returns {void}\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\n * Invokes initial callback function with a list of ResizeObserverEntry\n * instances collected from active resize observations.\n *\n * @returns {void}\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\n * Clears the collection of active observations.\n *\n * @returns {void}\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\n * Tells whether observer has active observations.\n *\n * @returns {boolean}\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\n * exposing only those methods and properties that are defined in the spec.\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nreturn index;\n\n})));\n","import { WidgetBase } from '@dojo/framework/core/WidgetBase';\nimport { theme, ThemedMixin } from '@dojo/framework/core/mixins/Themed';\nimport * as css from '../theme/helper-text.m.css';\nimport { v } from '@dojo/framework/core/vdom';\nimport { VNode } from '@dojo/framework/core/interfaces';\n\nexport interface HelperTextProperties {\n\ttext?: string;\n\tvalid?: boolean;\n}\n\n@theme(css)\nexport default class HelperText extends ThemedMixin(WidgetBase)<HelperTextProperties> {\n\tprotected render(): VNode {\n\t\tconst { text, valid } = this.properties;\n\n\t\treturn v(\n\t\t\t'div',\n\t\t\t{\n\t\t\t\tkey: 'root',\n\t\t\t\tclasses: this.theme([\n\t\t\t\t\tcss.root,\n\t\t\t\t\tvalid === true ? css.valid : null,\n\t\t\t\t\tvalid === false ? css.invalid : null\n\t\t\t\t])\n\t\t\t},\n\t\t\t[\n\t\t\t\ttext &&\n\t\t\t\t\tv(\n\t\t\t\t\t\t'p',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'text',\n\t\t\t\t\t\t\tclasses: this.theme(css.text),\n\t\t\t\t\t\t\t'aria-hidden': 'true',\n\t\t\t\t\t\t\ttitle: text\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[text]\n\t\t\t\t\t)\n\t\t\t]\n\t\t);\n\t}\n}\n","import global from './global';\nimport has from '../core/has';\n// !has('build-elide')\nimport * as Resize from 'resize-observer-polyfill';\nimport wrapper from './util/wrapper';\nif (!has('build-elide')) {\n    if (!global.ResizeObserver) {\n        // default is undefined when UMD module is used\n        global.ResizeObserver = Resize.default || Resize;\n    }\n}\nexport default wrapper('ResizeObserver', true);","import global from '../global';\nimport has from '../../core/has';\nexport default function wrapper(nameOnGlobal, constructor = false, bind = false) {\n    if (has('test')) {\n        if (constructor) {\n            return function (...args) {\n                return new global[nameOnGlobal](...args);\n            };\n        }\n        else {\n            return function (...args) {\n                return global[nameOnGlobal](...args);\n            };\n        }\n    }\n    return bind ? global[nameOnGlobal].bind(global) : global[nameOnGlobal];\n}\n//# sourceMappingURL=wrapper.mjs.map","import { Base } from './Base';\nimport Map from '../../shim/Map';\nimport ResizeObserver from '../../shim/ResizeObserver';\nexport class Resize extends Base {\n    constructor() {\n        super(...arguments);\n        this._details = new Map();\n    }\n    get(key, predicates = {}) {\n        const node = this.getNode(key);\n        if (!node) {\n            const defaultResponse = {};\n            for (let predicateId in predicates) {\n                defaultResponse[predicateId] = false;\n            }\n            return defaultResponse;\n        }\n        if (!this._details.has(key)) {\n            this._details.set(key, {});\n            const resizeObserver = new ResizeObserver(([entry]) => {\n                let predicateChanged = false;\n                if (Object.keys(predicates).length) {\n                    const { contentRect } = entry;\n                    const previousDetails = this._details.get(key);\n                    let predicateResponses = {};\n                    for (let predicateId in predicates) {\n                        const response = predicates[predicateId](contentRect);\n                        predicateResponses[predicateId] = response;\n                        if (!predicateChanged && response !== previousDetails[predicateId]) {\n                            predicateChanged = true;\n                        }\n                    }\n                    this._details.set(key, predicateResponses);\n                }\n                else {\n                    predicateChanged = true;\n                }\n                predicateChanged && this.invalidate();\n            });\n            resizeObserver.observe(node);\n            this.own({\n                destroy: () => {\n                    resizeObserver.disconnect();\n                }\n            });\n        }\n        return this._details.get(key);\n    }\n}\nexport default Resize;\n//# sourceMappingURL=Resize.mjs.map","import Base from './Base';\nexport class InputValidity extends Base {\n    get(key, value) {\n        const node = this.getNode(key);\n        if (!node) {\n            return { valid: undefined, message: '' };\n        }\n        if (value !== node.value) {\n            // if the vdom is out of sync with the real dom our\n            // validation check will be one render behind.\n            // Call invalidate on the next loop.\n            setTimeout(() => this.invalidate());\n        }\n        return {\n            valid: node.validity.valid,\n            message: node.validationMessage\n        };\n    }\n}\nexport default InputValidity;\n//# sourceMappingURL=InputValidity.mjs.map","import { WidgetBase } from '@dojo/framework/core/WidgetBase';\nimport { DNode, PropertyChangeRecord } from '@dojo/framework/core/interfaces';\nimport { ThemedMixin, ThemedProperties, theme } from '@dojo/framework/core/mixins/Themed';\nimport { v, w } from '@dojo/framework/core/vdom';\nimport Focus from '@dojo/framework/core/meta/Focus';\nimport InputValidity from '@dojo/framework/core/meta/InputValidity';\nimport { FocusMixin, FocusProperties } from '@dojo/framework/core/mixins/Focus';\nimport Label from '../label/index';\nimport {\n\tCustomAriaProperties,\n\tPointerEventProperties,\n\tKeyEventProperties,\n\tInputEventProperties\n} from '../common/interfaces';\nimport { formatAriaProperties } from '../common/util';\nimport { uuid } from '@dojo/framework/core/util';\nimport * as css from '../theme/text-input.m.css';\nimport diffProperty from '@dojo/framework/core/decorators/diffProperty';\nimport { reference } from '@dojo/framework/core/diff';\nimport HelperText from '../helper-text/index';\n\nexport type TextInputType =\n\t| 'text'\n\t| 'email'\n\t| 'number'\n\t| 'password'\n\t| 'search'\n\t| 'tel'\n\t| 'url'\n\t| 'date';\n\ninterface TextInputInternalState {\n\tdirty?: boolean;\n}\n\n/**\n * @type IconProperties\n *\n * Properties that can be set on a TextInput component\n *\n * @property controls       ID of an element that this input controls\n * @property type           Input type, e.g. text, email, tel, etc.\n * @property maxLength      Maximum number of characters allowed in the input\n * @property minLength      Minimum number of characters allowed in the input\n * @property placeholder    Placeholder text\n * @property value          The current value\n * @property leading\t\tRenderer for leading icon content\n * @property trailing\t\tRenderer for trailing icon content\n */\n\nexport interface TextInputProperties\n\textends ThemedProperties,\n\t\tFocusProperties,\n\t\tPointerEventProperties,\n\t\tKeyEventProperties,\n\t\tInputEventProperties,\n\t\tCustomAriaProperties {\n\tdisabled?: boolean;\n\twidgetId?: string;\n\tname?: string;\n\treadOnly?: boolean;\n\trequired?: boolean;\n\tcontrols?: string;\n\ttype?: TextInputType;\n\tmaxLength?: number | string;\n\tminLength?: number | string;\n\tplaceholder?: string;\n\thelperText?: string;\n\tvalue?: string;\n\tvalid?: { valid?: boolean; message?: string } | boolean;\n\tcustomValidator?: (value: string) => { valid?: boolean; message?: string } | void;\n\tpattern?: string | RegExp;\n\tautocomplete?: boolean | string;\n\tonClick?(value: string): void;\n\tonValidate?: (valid: boolean | undefined, message: string) => void;\n\tleading?: () => DNode;\n\ttrailing?: () => DNode;\n\tlabelHidden?: boolean;\n\tlabel?: string;\n}\n\nfunction formatAutocomplete(autocomplete: string | boolean | undefined): string | undefined {\n\tif (typeof autocomplete === 'boolean') {\n\t\treturn autocomplete ? 'on' : 'off';\n\t}\n\treturn autocomplete;\n}\n\nfunction patternDiffer(\n\tpreviousProperty: string | undefined,\n\tnewProperty: string | RegExp | undefined\n): PropertyChangeRecord {\n\tconst value = newProperty instanceof RegExp ? newProperty.source : newProperty;\n\treturn {\n\t\tchanged: previousProperty !== value,\n\t\tvalue\n\t};\n}\n\n@theme(css)\n@diffProperty('pattern', patternDiffer)\n@diffProperty('leading', reference)\n@diffProperty('trailing', reference)\nexport class TextInput extends ThemedMixin(FocusMixin(WidgetBase))<TextInputProperties> {\n\tprivate _onBlur(event: FocusEvent) {\n\t\tthis.properties.onBlur && this.properties.onBlur((event.target as HTMLInputElement).value);\n\t}\n\tprivate _onChange(event: Event) {\n\t\tevent.stopPropagation();\n\t\tthis._state.dirty = true;\n\t\tthis.properties.onChange &&\n\t\t\tthis.properties.onChange((event.target as HTMLInputElement).value);\n\t}\n\tprivate _onClick(event: MouseEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onClick &&\n\t\t\tthis.properties.onClick((event.target as HTMLInputElement).value);\n\t}\n\tprivate _onFocus(event: FocusEvent) {\n\t\tthis.properties.onFocus &&\n\t\t\tthis.properties.onFocus((event.target as HTMLInputElement).value);\n\t}\n\tprivate _onInput(event: Event) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onInput &&\n\t\t\tthis.properties.onInput((event.target as HTMLInputElement).value);\n\t}\n\tprivate _onKeyDown(event: KeyboardEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onKeyDown &&\n\t\t\tthis.properties.onKeyDown(event.which, () => {\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\t}\n\tprivate _onKeyPress(event: KeyboardEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onKeyPress &&\n\t\t\tthis.properties.onKeyPress(event.which, () => {\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\t}\n\tprivate _onKeyUp(event: KeyboardEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onKeyUp &&\n\t\t\tthis.properties.onKeyUp(event.which, () => {\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\t}\n\tprivate _onMouseDown(event: MouseEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onMouseDown && this.properties.onMouseDown();\n\t}\n\tprivate _onMouseUp(event: MouseEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onMouseUp && this.properties.onMouseUp();\n\t}\n\tprivate _onTouchStart(event: TouchEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onTouchStart && this.properties.onTouchStart();\n\t}\n\tprivate _onTouchEnd(event: TouchEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onTouchEnd && this.properties.onTouchEnd();\n\t}\n\tprivate _onTouchCancel(event: TouchEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onTouchCancel && this.properties.onTouchCancel();\n\t}\n\n\tprivate _callOnValidate(valid: boolean | undefined, message: string) {\n\t\tlet { valid: previousValid } = this.properties;\n\t\tlet previousMessage: string | undefined;\n\n\t\tif (typeof previousValid === 'object') {\n\t\t\tpreviousMessage = previousValid.message;\n\t\t\tpreviousValid = previousValid.valid;\n\t\t}\n\n\t\tif (valid !== previousValid || message !== previousMessage) {\n\t\t\tthis.properties.onValidate && this.properties.onValidate(valid, message);\n\t\t}\n\t}\n\n\tprivate _validate() {\n\t\tconst { customValidator, value = '' } = this.properties;\n\t\tconst { dirty = false } = this._state;\n\t\tif (value === '' && !dirty) {\n\t\t\tthis._callOnValidate(undefined, '');\n\t\t\treturn;\n\t\t}\n\n\t\tthis._state.dirty = true;\n\t\tlet { valid, message = '' } = this.meta(InputValidity).get('input', value);\n\t\tif (valid && customValidator) {\n\t\t\tconst customValid = customValidator(value);\n\t\t\tif (customValid) {\n\t\t\t\tvalid = customValid.valid;\n\t\t\t\tmessage = customValid.message || '';\n\t\t\t}\n\t\t}\n\n\t\tthis._callOnValidate(valid, message);\n\t}\n\n\tprotected get validity() {\n\t\tconst { valid = { valid: undefined, message: undefined } } = this.properties;\n\n\t\tif (typeof valid === 'boolean') {\n\t\t\treturn { valid, message: undefined };\n\t\t}\n\n\t\treturn {\n\t\t\tvalid: valid.valid,\n\t\t\tmessage: valid.message\n\t\t};\n\t}\n\n\tprivate _uuid = uuid();\n\tprivate _state: TextInputInternalState = {};\n\n\tprotected getRootClasses(): (string | null)[] {\n\t\tconst { disabled, readOnly, required, leading, trailing } = this.properties;\n\t\tconst { valid } = this.validity;\n\t\tconst focus = this.meta(Focus).get('root');\n\t\treturn [\n\t\t\tcss.root,\n\t\t\tdisabled ? css.disabled : null,\n\t\t\tfocus.containsFocus ? css.focused : null,\n\t\t\tvalid === false ? css.invalid : null,\n\t\t\tvalid === true ? css.valid : null,\n\t\t\treadOnly ? css.readonly : null,\n\t\t\trequired ? css.required : null,\n\t\t\tleading ? css.hasLeading : null,\n\t\t\ttrailing ? css.hasTrailing : null\n\t\t];\n\t}\n\n\tprotected render(): DNode {\n\t\tconst {\n\t\t\taria = {},\n\t\t\tautocomplete,\n\t\t\tclasses,\n\t\t\tdisabled,\n\t\t\tlabel,\n\t\t\tlabelHidden = false,\n\t\t\tleading,\n\t\t\tmaxLength,\n\t\t\tminLength,\n\t\t\tname,\n\t\t\tpattern,\n\t\t\tplaceholder,\n\t\t\treadOnly,\n\t\t\trequired,\n\t\t\ttheme,\n\t\t\ttrailing,\n\t\t\ttype = 'text',\n\t\t\tvalue,\n\t\t\twidgetId = this._uuid,\n\t\t\thelperText,\n\t\t\tonValidate\n\t\t} = this.properties;\n\n\t\tonValidate && this._validate();\n\t\tconst { valid, message } = this.validity;\n\n\t\tconst focus = this.meta(Focus).get('root');\n\n\t\tconst computedHelperText = (valid === false && message) || helperText;\n\n\t\treturn v(\n\t\t\t'div',\n\t\t\t{\n\t\t\t\tkey: 'root',\n\t\t\t\tclasses: this.theme(this.getRootClasses()),\n\t\t\t\trole: 'presentation'\n\t\t\t},\n\t\t\t[\n\t\t\t\tlabel &&\n\t\t\t\t\tw(\n\t\t\t\t\t\tLabel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttheme,\n\t\t\t\t\t\t\tclasses,\n\t\t\t\t\t\t\tdisabled,\n\t\t\t\t\t\t\tinvalid: valid === false || undefined,\n\t\t\t\t\t\t\tfocused: focus.containsFocus,\n\t\t\t\t\t\t\treadOnly,\n\t\t\t\t\t\t\trequired,\n\t\t\t\t\t\t\thidden: labelHidden,\n\t\t\t\t\t\t\tforId: widgetId\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[label]\n\t\t\t\t\t),\n\t\t\t\tv(\n\t\t\t\t\t'div',\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: 'inputWrapper',\n\t\t\t\t\t\tclasses: this.theme(css.inputWrapper),\n\t\t\t\t\t\trole: 'presentation'\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\tleading &&\n\t\t\t\t\t\t\tv('span', { key: 'leading', classes: this.theme(css.leading) }, [\n\t\t\t\t\t\t\t\tleading()\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\tv('input', {\n\t\t\t\t\t\t\t...formatAriaProperties(aria),\n\t\t\t\t\t\t\t'aria-invalid': valid === false ? 'true' : null,\n\t\t\t\t\t\t\tautocomplete: formatAutocomplete(autocomplete),\n\t\t\t\t\t\t\tclasses: this.theme(css.input),\n\t\t\t\t\t\t\tdisabled,\n\t\t\t\t\t\t\tid: widgetId,\n\t\t\t\t\t\t\tfocus: this.shouldFocus,\n\t\t\t\t\t\t\tkey: 'input',\n\t\t\t\t\t\t\tmaxlength: maxLength ? `${maxLength}` : null,\n\t\t\t\t\t\t\tminlength: minLength ? `${minLength}` : null,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tpattern,\n\t\t\t\t\t\t\tplaceholder,\n\t\t\t\t\t\t\treadOnly,\n\t\t\t\t\t\t\t'aria-readonly': readOnly ? 'true' : null,\n\t\t\t\t\t\t\trequired,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tonblur: this._onBlur,\n\t\t\t\t\t\t\tonchange: this._onChange,\n\t\t\t\t\t\t\tonclick: this._onClick,\n\t\t\t\t\t\t\tonfocus: this._onFocus,\n\t\t\t\t\t\t\toninput: this._onInput,\n\t\t\t\t\t\t\tonkeydown: this._onKeyDown,\n\t\t\t\t\t\t\tonkeypress: this._onKeyPress,\n\t\t\t\t\t\t\tonkeyup: this._onKeyUp,\n\t\t\t\t\t\t\tonmousedown: this._onMouseDown,\n\t\t\t\t\t\t\tonmouseup: this._onMouseUp,\n\t\t\t\t\t\t\tontouchstart: this._onTouchStart,\n\t\t\t\t\t\t\tontouchend: this._onTouchEnd,\n\t\t\t\t\t\t\tontouchcancel: this._onTouchCancel\n\t\t\t\t\t\t}),\n\t\t\t\t\t\ttrailing &&\n\t\t\t\t\t\t\tv('span', { key: 'trailing', classes: this.theme(css.trailing) }, [\n\t\t\t\t\t\t\t\ttrailing()\n\t\t\t\t\t\t\t])\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t\t\tw(HelperText, { text: computedHelperText, valid })\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default TextInput;\n","import { WidgetBase } from '@dojo/framework/core/WidgetBase';\nimport { DNode } from '@dojo/framework/core/interfaces';\nimport { ThemedMixin, ThemedProperties, theme } from '@dojo/framework/core/mixins/Themed';\nimport { FocusMixin, FocusProperties } from '@dojo/framework/core/mixins/Focus';\nimport { v, w } from '@dojo/framework/core/vdom';\nimport * as css from '../theme/button.m.css';\nimport {\n\tCustomAriaProperties,\n\tInputEventProperties,\n\tPointerEventProperties,\n\tKeyEventProperties\n} from '../common/interfaces';\nimport { formatAriaProperties } from '../common/util';\nimport Icon from '../icon/index';\n\nexport type ButtonType = 'submit' | 'reset' | 'button' | 'menu';\n\n/**\n * @type ButtonProperties\n *\n * Properties that can be set on a Button component\n *\n * @property disabled       Whether the button is disabled or clickable\n * @property widgetId       DOM id set on the root button node\n * @property popup       \t\tControls aria-haspopup, aria-expanded, and aria-controls for popup buttons\n * @property name           The button's name attribute\n * @property pressed        Indicates status of a toggle button\n * @property type           Button type can be \"submit\", \"reset\", \"button\", or \"menu\"\n * @property value          Defines a value for the button submitted with form data\n */\nexport interface ButtonProperties\n\textends ThemedProperties,\n\t\tInputEventProperties,\n\t\tFocusProperties,\n\t\tPointerEventProperties,\n\t\tKeyEventProperties,\n\t\tCustomAriaProperties {\n\tdisabled?: boolean;\n\twidgetId?: string;\n\tpopup?: { expanded?: boolean; id?: string } | boolean;\n\tname?: string;\n\tpressed?: boolean;\n\ttype?: ButtonType;\n\tvalue?: string;\n\tonClick?(): void;\n}\n\n@theme(css)\nexport class Button extends ThemedMixin(FocusMixin(WidgetBase))<ButtonProperties> {\n\tprivate _onBlur(event: FocusEvent) {\n\t\tthis.properties.onBlur && this.properties.onBlur();\n\t}\n\tprivate _onClick(event: MouseEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onClick && this.properties.onClick();\n\t}\n\tprivate _onFocus(event: FocusEvent) {\n\t\tthis.properties.onFocus && this.properties.onFocus();\n\t}\n\tprivate _onKeyDown(event: KeyboardEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onKeyDown &&\n\t\t\tthis.properties.onKeyDown(event.which, () => {\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\t}\n\tprivate _onKeyPress(event: KeyboardEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onKeyPress &&\n\t\t\tthis.properties.onKeyPress(event.which, () => {\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\t}\n\tprivate _onKeyUp(event: KeyboardEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onKeyUp &&\n\t\t\tthis.properties.onKeyUp(event.which, () => {\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\t}\n\tprivate _onMouseDown(event: MouseEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onMouseDown && this.properties.onMouseDown();\n\t}\n\tprivate _onMouseUp(event: MouseEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onMouseUp && this.properties.onMouseUp();\n\t}\n\tprivate _onTouchStart(event: TouchEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onTouchStart && this.properties.onTouchStart();\n\t}\n\tprivate _onTouchEnd(event: TouchEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onTouchEnd && this.properties.onTouchEnd();\n\t}\n\tprivate _onTouchCancel(event: TouchEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.properties.onTouchCancel && this.properties.onTouchCancel();\n\t}\n\n\tprotected getContent(): DNode[] {\n\t\treturn this.children;\n\t}\n\n\tprotected getModifierClasses(): (string | null)[] {\n\t\tconst { disabled, popup = false, pressed } = this.properties;\n\n\t\treturn [\n\t\t\tdisabled ? css.disabled : null,\n\t\t\tpopup ? css.popup : null,\n\t\t\tpressed ? css.pressed : null\n\t\t];\n\t}\n\n\trender(): DNode {\n\t\tlet {\n\t\t\taria = {},\n\t\t\tdisabled,\n\t\t\twidgetId,\n\t\t\tpopup = false,\n\t\t\tname,\n\t\t\tpressed,\n\t\t\ttype,\n\t\t\tvalue,\n\t\t\ttheme,\n\t\t\tclasses\n\t\t} = this.properties;\n\n\t\tif (popup === true) {\n\t\t\tpopup = { expanded: false, id: '' };\n\t\t}\n\n\t\treturn v(\n\t\t\t'button',\n\t\t\t{\n\t\t\t\tclasses: this.theme([css.root, ...this.getModifierClasses()]),\n\t\t\t\tdisabled,\n\t\t\t\tid: widgetId,\n\t\t\t\tfocus: this.shouldFocus,\n\t\t\t\tname,\n\t\t\t\ttype,\n\t\t\t\tvalue,\n\t\t\t\tonblur: this._onBlur,\n\t\t\t\tonclick: this._onClick,\n\t\t\t\tonfocus: this._onFocus,\n\t\t\t\tonkeydown: this._onKeyDown,\n\t\t\t\tonkeypress: this._onKeyPress,\n\t\t\t\tonkeyup: this._onKeyUp,\n\t\t\t\tonmousedown: this._onMouseDown,\n\t\t\t\tonmouseup: this._onMouseUp,\n\t\t\t\tontouchstart: this._onTouchStart,\n\t\t\t\tontouchend: this._onTouchEnd,\n\t\t\t\tontouchcancel: this._onTouchCancel,\n\t\t\t\t...formatAriaProperties(aria),\n\t\t\t\t'aria-haspopup': popup ? 'true' : null,\n\t\t\t\t'aria-controls': popup ? popup.id : null,\n\t\t\t\t'aria-expanded': popup ? popup.expanded + '' : null,\n\t\t\t\t'aria-pressed': typeof pressed === 'boolean' ? pressed.toString() : null\n\t\t\t},\n\t\t\t[\n\t\t\t\t...this.getContent(),\n\t\t\t\tpopup\n\t\t\t\t\t? v('span', { classes: this.theme(css.addon) }, [\n\t\t\t\t\t\t\tw(Icon, { type: 'downIcon', theme, classes })\n\t\t\t\t\t  ])\n\t\t\t\t\t: null\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/grid-header\",\"root\":\"grid-header-m__root__10T4d\",\"cell\":\"grid-header-m__cell__14Kc4\",\"sortable\":\"grid-header-m__sortable__2yeMz\",\"sorted\":\"grid-header-m__sorted__2yNUr\",\"desc\":\"grid-header-m__desc__pLIpr\",\"asc\":\"grid-header-m__asc__2gtzM\",\"sort\":\"grid-header-m__sort__1e8Kx\",\"filter\":\"grid-header-m__filter__f6CI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/grid\",\"root\":\"grid-m__root___v2E_\",\"header\":\"grid-m__header__1tmI3\",\"filterGroup\":\"grid-m__filterGroup__2dOAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/grid-cell\",\"root\":\"grid-cell-m__root__3icaN\",\"input\":\"grid-cell-m__input__2J0_c\",\"edit\":\"grid-cell-m__edit__xjg9f base-m__visuallyHidden__1AeWe base-m__focusable__1_qAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/grid-placeholder-row\",\"root\":\"grid-placeholder-row-m__root__1I0Qr grid-row-m__root__2PlMc\",\"loading\":\"grid-placeholder-row-m__loading__1ASJP\",\"spin\":\"grid-placeholder-row-m__spin__2NsZe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/grid\",\"rootFixed\":\"grid-m__rootFixed__2GZXD\",\"headerFixed\":\"grid-m__headerFixed__2X7jF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/header\",\"rootFixed\":\"header-m__rootFixed__1gcHn\",\"cellFixed\":\"header-m__cellFixed__1R9rb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/grid-row\",\"root\":\"grid-row-m__root__2PlMc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/grid-body\",\"root\":\"grid-body-m__root__1yYLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/grid-footer\",\"root\":\"grid-footer-m__root__2hvVs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/cell\",\"rootFixed\":\"cell-m__rootFixed__1lXNB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/row\",\"rootFixed\":\"row-m__rootFixed__3ejCY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/body\",\"rootFixed\":\"body-m__rootFixed__2K95C\"};","/*** IMPORTS FROM imports-loader ***/\nvar widgetFactory = require(\"src/grid\");\n\nvar registerCustomElement = require('@dojo/framework/core/registerCustomElement').default;\n\nvar defaultExport = widgetFactory.default;\ndefaultExport && registerCustomElement(defaultExport);\n\n","export function decode(segment) {\n    return segment.replace(/~1/g, '/').replace(/~0/g, '~');\n}\nfunction encode(segment) {\n    return segment.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\nexport function walk(segments, object, clone = true, continueOnUndefined = true) {\n    if (clone) {\n        object = Object.assign({}, object);\n    }\n    const pointerTarget = {\n        object,\n        target: object,\n        segment: ''\n    };\n    return segments.reduce((pointerTarget, segment, index) => {\n        if (pointerTarget.target === undefined) {\n            return pointerTarget;\n        }\n        if (Array.isArray(pointerTarget.target) && segment === '-') {\n            segment = String(pointerTarget.target.length - 1);\n        }\n        if (index + 1 < segments.length) {\n            const nextSegment = segments[index + 1];\n            let target = pointerTarget.target[segment];\n            if (target === undefined && !continueOnUndefined) {\n                pointerTarget.target = undefined;\n                return pointerTarget;\n            }\n            if (clone || target === undefined) {\n                if (Array.isArray(target)) {\n                    target = [...target];\n                }\n                else if (typeof target === 'object') {\n                    target = Object.assign({}, target);\n                }\n                else if (isNaN(nextSegment) || isNaN(parseInt(nextSegment, 0))) {\n                    target = {};\n                }\n                else {\n                    target = [];\n                }\n                pointerTarget.target[segment] = target;\n                pointerTarget.target = target;\n            }\n            else {\n                pointerTarget.target = target;\n            }\n        }\n        else {\n            pointerTarget.segment = segment;\n        }\n        return pointerTarget;\n    }, pointerTarget);\n}\nexport class Pointer {\n    constructor(segments) {\n        if (Array.isArray(segments)) {\n            this._segments = segments;\n        }\n        else {\n            this._segments = (segments[0] === '/' ? segments : `/${segments}`).split('/');\n            this._segments.shift();\n        }\n        if (segments.length === 0 || ((segments.length === 1 && segments[0] === '/') || segments[0] === '')) {\n            throw new Error('Access to the root is not supported.');\n        }\n        this._segments = this._segments.map(decode);\n    }\n    get segments() {\n        return this._segments;\n    }\n    get path() {\n        return `/${this._segments.map(encode).join('/')}`;\n    }\n    get(object) {\n        const pointerTarget = walk(this.segments, object, false, false);\n        if (pointerTarget.target === undefined) {\n            return undefined;\n        }\n        return pointerTarget.target[pointerTarget.segment];\n    }\n    toJSON() {\n        return this.toString();\n    }\n    toString() {\n        return this.path;\n    }\n}\n//# sourceMappingURL=Pointer.mjs.map","import { walk } from './Pointer';\nimport { getFriendlyDifferenceMessage, isEqual } from './compare';\nexport var OperationType;\n(function (OperationType) {\n    OperationType[\"ADD\"] = \"add\";\n    OperationType[\"REMOVE\"] = \"remove\";\n    OperationType[\"REPLACE\"] = \"replace\";\n    OperationType[\"TEST\"] = \"test\";\n})(OperationType || (OperationType = {}));\nfunction add(pointerTarget, value) {\n    let index = parseInt(pointerTarget.segment, 10);\n    if (Array.isArray(pointerTarget.target) && !isNaN(index)) {\n        pointerTarget.target.splice(index, 0, value);\n    }\n    else {\n        pointerTarget.target[pointerTarget.segment] = value;\n    }\n    return pointerTarget.object;\n}\nfunction replace(pointerTarget, value) {\n    let index = parseInt(pointerTarget.segment, 10);\n    if (Array.isArray(pointerTarget.target) && !isNaN(index)) {\n        pointerTarget.target.splice(index, 1, value);\n    }\n    else {\n        pointerTarget.target[pointerTarget.segment] = value;\n    }\n    return pointerTarget.object;\n}\nfunction remove(pointerTarget) {\n    if (Array.isArray(pointerTarget.target)) {\n        pointerTarget.target.splice(parseInt(pointerTarget.segment, 10), 1);\n    }\n    else {\n        delete pointerTarget.target[pointerTarget.segment];\n    }\n    return pointerTarget.object;\n}\nfunction inverse(operation, state) {\n    if (operation.op === OperationType.ADD) {\n        const op = {\n            op: OperationType.REMOVE,\n            path: operation.path\n        };\n        const test = {\n            op: OperationType.TEST,\n            path: operation.path,\n            value: operation.value\n        };\n        return [test, op];\n    }\n    else if (operation.op === OperationType.REPLACE) {\n        const value = operation.path.get(state);\n        let op;\n        if (value === undefined) {\n            op = {\n                op: OperationType.REMOVE,\n                path: operation.path\n            };\n        }\n        else {\n            op = {\n                op: OperationType.REPLACE,\n                path: operation.path,\n                value: operation.path.get(state)\n            };\n        }\n        const test = {\n            op: OperationType.TEST,\n            path: operation.path,\n            value: operation.value\n        };\n        return [test, op];\n    }\n    else {\n        return [\n            {\n                op: OperationType.ADD,\n                path: operation.path,\n                value: operation.path.get(state)\n            }\n        ];\n    }\n}\nexport class Patch {\n    constructor(operations) {\n        this._operations = Array.isArray(operations) ? operations : [operations];\n    }\n    apply(object) {\n        let undoOperations = [];\n        const patchedObject = this._operations.reduce((patchedObject, next) => {\n            let object;\n            const pointerTarget = walk(next.path.segments, patchedObject);\n            switch (next.op) {\n                case OperationType.ADD:\n                    object = add(pointerTarget, next.value);\n                    break;\n                case OperationType.REPLACE:\n                    object = replace(pointerTarget, next.value);\n                    break;\n                case OperationType.REMOVE:\n                    object = remove(pointerTarget);\n                    break;\n                case OperationType.TEST:\n                    const current = pointerTarget.target[pointerTarget.segment];\n                    if (!isEqual(current, next.value)) {\n                        const location = next.path.path;\n                        throw new Error(`Test operation failure at \"${location}\". ${getFriendlyDifferenceMessage(next.value, current)}.`);\n                    }\n                    return patchedObject;\n                default:\n                    throw new Error('Unknown operation');\n            }\n            undoOperations = [...inverse(next, patchedObject), ...undoOperations];\n            return object;\n        }, object);\n        return { object: patchedObject, undoOperations };\n    }\n}\n//# sourceMappingURL=Patch.mjs.map","import Set from '../../shim/Set';\nimport { from } from '../../shim/array';\nexport function isObject(value) {\n    return Object.prototype.toString.call(value) === '[object Object]';\n}\nexport function isEqual(a, b) {\n    if (Array.isArray(a) && Array.isArray(b)) {\n        return a.length === b.length && a.every((element, i) => isEqual(element, b[i]));\n    }\n    else if (isObject(a) && isObject(b)) {\n        const keysForA = Object.keys(a).sort();\n        const keysForB = Object.keys(b).sort();\n        return isEqual(keysForA, keysForB) && keysForA.every((key) => isEqual(a[key], b[key]));\n    }\n    else {\n        return a === b;\n    }\n}\nfunction findArrayDifference(a, b) {\n    const min = Math.min(a.length, b.length);\n    for (let i = 0; i < min; i++) {\n        if (!isEqual(a[i], b[i])) {\n            return i;\n        }\n    }\n    if (a.length !== b.length) {\n        return min;\n    }\n    return -1;\n}\nfunction findShallowObjectKeyDifference(a, b) {\n    const keys = from(new Set([...Object.keys(a), ...Object.keys(b)]).values());\n    for (let key of keys) {\n        if (!isEqual(a[key], b[key])) {\n            return key;\n        }\n    }\n}\nexport function getFriendlyDifferenceMessage(expected, actual) {\n    const actualType = getFriendlyTypeName(actual);\n    const expectedType = getFriendlyTypeName(expected);\n    if (Array.isArray(expected) && Array.isArray(actual)) {\n        const offset = findArrayDifference(expected, actual);\n        if (offset !== -1) {\n            return `Arrays differed at offset ${offset}`;\n        }\n        return 'Arrays are identical';\n    }\n    else if (isObject(expected) && isObject(actual)) {\n        const key = findShallowObjectKeyDifference(expected, actual);\n        if (key) {\n            const expectedValue = expected[key];\n            const actualValue = actual[key];\n            return `Expected \"${expectedValue}\" for object property ${key} but got \"${actualValue}\" instead`;\n        }\n        return 'Objects are identical';\n    }\n    else if (!isEqual(expected, actual)) {\n        if (actualType === expectedType) {\n            return `Expected \"${expected}\" but got \"${actual}\" instead`;\n        }\n        else {\n            return `Expected ${expectedType} \"${expected}\" but got ${actualType} \"${actual}\" instead`;\n        }\n    }\n    return 'Values are identical';\n}\nfunction getFriendlyTypeName(value) {\n    if (Array.isArray(value)) {\n        return 'array';\n    }\n    return typeof value;\n}\n//# sourceMappingURL=compare.mjs.map","import { Evented } from '../core/Evented';\nimport { Patch } from './state/Patch';\nimport { Pointer } from './state/Pointer';\nimport Map from '../shim/Map';\nfunction isString(segment) {\n    return typeof segment === 'string';\n}\nexport class DefaultState {\n    constructor() {\n        /**\n         * The private state object\n         */\n        this._state = {};\n        /**\n         * Returns the state at a specific pointer path location.\n         */\n        this.get = (path) => {\n            return path.value;\n        };\n        /**\n         * Applies store operations to state and returns the undo operations\n         */\n        this.apply = (operations) => {\n            const patch = new Patch(operations);\n            const patchResult = patch.apply(this._state);\n            this._state = patchResult.object;\n            return patchResult.undoOperations;\n        };\n        this.at = (path, index) => {\n            const array = this.get(path);\n            const value = array && array[index];\n            return {\n                path: `${path.path}/${index}`,\n                state: path.state,\n                value\n            };\n        };\n        this.path = (path, ...segments) => {\n            if (typeof path === 'string') {\n                segments = [path, ...segments];\n            }\n            else {\n                segments = [...new Pointer(path.path).segments, ...segments];\n            }\n            const stringSegments = segments.filter(isString);\n            const hasMultipleSegments = stringSegments.length > 1;\n            const pointer = new Pointer(hasMultipleSegments ? stringSegments : stringSegments[0] || '');\n            return {\n                path: pointer.path,\n                state: this._state,\n                value: pointer.get(this._state)\n            };\n        };\n    }\n}\n/**\n * Application state store\n */\nexport class Store extends Evented {\n    constructor(options) {\n        super();\n        this._adapter = new DefaultState();\n        this._changePaths = new Map();\n        this._callbackId = 0;\n        /**\n         * Returns the state at a specific pointer path location.\n         */\n        this.get = (path) => {\n            return this._adapter.get(path);\n        };\n        /**\n         * Applies store operations to state and returns the undo operations\n         */\n        this.apply = (operations, invalidate = false) => {\n            const result = this._adapter.apply(operations);\n            if (invalidate) {\n                this.invalidate();\n            }\n            return result;\n        };\n        this.at = (path, index) => {\n            return this._adapter.at(path, index);\n        };\n        this.onChange = (paths, callback) => {\n            const callbackId = this._callbackId;\n            if (!Array.isArray(paths)) {\n                paths = [paths];\n            }\n            paths.forEach((path) => this._addOnChange(path, callback, callbackId));\n            this._callbackId += 1;\n            return {\n                remove: () => {\n                    paths.forEach((path) => {\n                        const onChange = this._changePaths.get(path.path);\n                        if (onChange) {\n                            onChange.callbacks = onChange.callbacks.filter((callback) => {\n                                return callback.callbackId !== callbackId;\n                            });\n                        }\n                    });\n                }\n            };\n        };\n        this._addOnChange = (path, callback, callbackId) => {\n            let changePaths = this._changePaths.get(path.path);\n            if (!changePaths) {\n                changePaths = { callbacks: [], previousValue: this.get(path) };\n            }\n            changePaths.callbacks.push({ callbackId, callback });\n            this._changePaths.set(path.path, changePaths);\n        };\n        this.path = this._adapter.path.bind(this._adapter);\n        if (options && options.state) {\n            this._adapter = options.state;\n            this.path = this._adapter.path.bind(this._adapter);\n        }\n    }\n    _runOnChanges() {\n        const callbackIdsCalled = [];\n        this._changePaths.forEach((value, path) => {\n            const { previousValue, callbacks } = value;\n            const pointer = new Pointer(path);\n            const newValue = pointer.segments.length\n                ? this._adapter.path(pointer.segments[0], ...pointer.segments.slice(1)).value\n                : undefined;\n            if (previousValue !== newValue) {\n                this._changePaths.set(path, { callbacks, previousValue: newValue });\n                callbacks.forEach((callbackItem) => {\n                    const { callback, callbackId } = callbackItem;\n                    if (callbackIdsCalled.indexOf(callbackId) === -1) {\n                        callbackIdsCalled.push(callbackId);\n                        callback();\n                    }\n                });\n            }\n        });\n    }\n    /**\n     * Emits an invalidation event\n     */\n    invalidate() {\n        this._runOnChanges();\n        this.emit({ type: 'invalidate' });\n    }\n}\nexport default Store;\n//# sourceMappingURL=Store.mjs.map","import { OperationType } from './Patch';\nimport { Pointer } from './Pointer';\nexport function add(path, value) {\n    return {\n        op: OperationType.ADD,\n        path: new Pointer(path.path),\n        value\n    };\n}\nexport function replace(path, value) {\n    return {\n        op: OperationType.REPLACE,\n        path: new Pointer(path.path),\n        value\n    };\n}\nexport function remove(path) {\n    return {\n        op: OperationType.REMOVE,\n        path: new Pointer(path.path)\n    };\n}\nexport function test(path, value) {\n    return {\n        op: OperationType.TEST,\n        path: new Pointer(path.path),\n        value\n    };\n}\n//# sourceMappingURL=operations.mjs.map","import { isThenable } from '../shim/Promise';\nimport { replace, remove } from './state/operations';\nimport Map from '../shim/Map';\nimport has from '../core/has';\n/**\n * Creates a command factory with the specified type\n */\nexport function createCommandFactory() {\n    function commandFactory(command) {\n        return command;\n    }\n    return commandFactory;\n}\nconst processMap = new Map();\nconst valueSymbol = Symbol('value');\nexport function isStateProxy(value) {\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    return Boolean(value[valueSymbol]);\n}\nexport function getProcess(id) {\n    return processMap.get(id);\n}\nconst proxyError = 'State updates are not available on legacy browsers';\nfunction removeProxies(value) {\n    if (typeof value === 'object' && value !== null) {\n        if (value[valueSymbol]) {\n            value = value[valueSymbol];\n        }\n        const newValue = Array.isArray(value) ? [] : {};\n        const keys = Object.keys(value);\n        for (let i = 0; i < keys.length; i++) {\n            newValue[keys[i]] = removeProxies(value[keys[i]]);\n        }\n        value = newValue;\n    }\n    return value;\n}\nexport function processExecutor(id, commands, store, before, after, transformer) {\n    const { apply, get, path, at } = store;\n    function executor(process, payload, transformer) {\n        return process(store)(payload);\n    }\n    return async (executorPayload) => {\n        const operations = [];\n        const commandsCopy = [...commands];\n        let undoOperations = [];\n        let command = commandsCopy.shift();\n        let error = null;\n        const payload = transformer ? transformer(executorPayload) : executorPayload;\n        if (before) {\n            let result = before(payload, store, id);\n            if (result) {\n                await result;\n            }\n        }\n        function createProxy() {\n            const proxies = new Map();\n            const proxied = new Map();\n            const proxyOperations = [];\n            const createHandler = (partialPath) => ({\n                get(obj, prop) {\n                    const fullPath = partialPath ? path(partialPath, prop) : path(prop);\n                    const stringPath = fullPath.path;\n                    if (typeof prop === 'symbol' && prop === valueSymbol) {\n                        return proxied.get(stringPath);\n                    }\n                    let value = partialPath || obj.hasOwnProperty(prop) ? obj[prop] : get(fullPath);\n                    if (typeof value === 'object' && value !== null) {\n                        let proxiedValue;\n                        if (!proxies.has(stringPath)) {\n                            if (Array.isArray(value)) {\n                                value = value.slice();\n                            }\n                            else {\n                                value = Object.assign({}, value);\n                            }\n                            proxiedValue = new Proxy(value, createHandler(fullPath));\n                            proxies.set(stringPath, proxiedValue);\n                            proxied.set(stringPath, value);\n                        }\n                        else {\n                            proxiedValue = proxies.get(stringPath);\n                        }\n                        obj[prop] = value;\n                        return proxiedValue;\n                    }\n                    obj[prop] = value;\n                    return value;\n                },\n                set(obj, prop, value) {\n                    value = removeProxies(value);\n                    proxyOperations.push(replace(partialPath ? path(partialPath, prop) : path(prop), value));\n                    obj[prop] = value;\n                    return true;\n                },\n                deleteProperty(obj, prop) {\n                    proxyOperations.push(remove(partialPath ? path(partialPath, prop) : path(prop)));\n                    delete obj[prop];\n                    return true;\n                }\n            });\n            return { proxy: new Proxy({}, createHandler()), operations: proxyOperations };\n        }\n        try {\n            while (command) {\n                let results = [];\n                const commandArray = Array.isArray(command) ? command : [command];\n                results = commandArray.map((commandFunction) => {\n                    let state;\n                    let proxyOperations = [];\n                    if (typeof Proxy !== 'undefined') {\n                        const { operations, proxy } = createProxy();\n                        state = proxy;\n                        proxyOperations = operations;\n                    }\n                    let result = commandFunction({\n                        at,\n                        get,\n                        path,\n                        payload,\n                        get state() {\n                            if (typeof Proxy === 'undefined') {\n                                throw new Error(proxyError);\n                            }\n                            return state;\n                        }\n                    });\n                    if (isThenable(result)) {\n                        return result.then((result) => {\n                            result = result ? [...proxyOperations, ...result] : [...proxyOperations];\n                            return result;\n                        });\n                    }\n                    else {\n                        result =\n                            result && Array.isArray(result) ? [...proxyOperations, ...result] : [...proxyOperations];\n                        return result;\n                    }\n                });\n                let resolvedResults;\n                if (results.some(isThenable)) {\n                    resolvedResults = await Promise.all(results);\n                }\n                else {\n                    resolvedResults = results;\n                }\n                for (let i = 0; i < results.length; i++) {\n                    operations.push(...resolvedResults[i]);\n                    undoOperations = [...apply(resolvedResults[i]), ...undoOperations];\n                }\n                store.invalidate();\n                command = commandsCopy.shift();\n            }\n        }\n        catch (e) {\n            if (e.message === proxyError) {\n                throw e;\n            }\n            error = { error: e, command };\n        }\n        after &&\n            after(error, {\n                undoOperations,\n                store,\n                id,\n                operations,\n                apply,\n                at,\n                get,\n                path,\n                executor,\n                payload\n            });\n        return Promise.resolve({\n            store,\n            undoOperations,\n            id,\n            error,\n            operations,\n            apply,\n            at,\n            get,\n            path,\n            executor,\n            payload\n        });\n    };\n}\n/**\n * Factories a process using the provided commands and an optional callback. Returns an executor used to run the process.\n *\n * @param commands The commands for the process\n * @param callback Callback called after the process is completed\n */\nexport function createProcess(id, commands, callbacks) {\n    callbacks = Array.isArray(callbacks) ? callbacks : callbacks ? [callbacks] : [];\n    const callback = callbacks.length\n        ? callbacks.reduce((callback, nextCallback) => {\n            return combineCallbacks(nextCallback, id)(callback);\n        })\n        : undefined;\n    const { before = undefined, after = undefined } = callback ? callback() : {};\n    processMap.set(id, [id, commands, before, after]);\n    return (store, transformer) => processExecutor(id, commands, store, before, after, transformer);\n}\n/**\n * Creates a process factory that will create processes with the specified callback decorators applied.\n * @param callbacks array of process callback to be used by the returned factory.\n * @param initializers array of process initializers to be used by the returned factory.\n */\nexport function createProcessFactoryWith(callbacks) {\n    return (id, commands, callback) => {\n        return createProcess(id, commands, callback ? [...callbacks, callback] : callbacks);\n    };\n}\n/**\n * Creates a `ProcessCallbackDecorator` from a `ProcessCallback`.\n * @param processCallback the process callback to convert to a decorator.\n * @param id process id to be passed to the before callback\n */\nfunction combineCallbacks(processCallback, id) {\n    const { before, after } = processCallback();\n    return (previousCallback) => {\n        const { before: previousBefore = undefined, after: previousAfter = undefined } = previousCallback\n            ? previousCallback()\n            : {};\n        return () => ({\n            after(error, result) {\n                if (previousAfter) {\n                    previousAfter(error, result);\n                }\n                if (after) {\n                    after(error, result);\n                }\n            },\n            before(payload, store) {\n                if (previousBefore) {\n                    previousBefore(payload, store, id);\n                }\n                if (before) {\n                    before(payload, store, id);\n                }\n            }\n        });\n    };\n}\nexport function createCallbackDecorator(callback) {\n    if (has('dojo-debug')) {\n        console.warn('Process using the the legacy middleware API. Please update to use the latest API, see https://github.com/dojo/framework/blob/master/docs/V5-Migration-Guide.md for details.');\n    }\n    const convertedCallback = () => ({\n        after: callback\n    });\n    return (callbacks = []) => {\n        return [convertedCallback, ...callbacks];\n    };\n}\n//# sourceMappingURL=process.mjs.map","import { createProcess, createCommandFactory, Process } from '@dojo/framework/stores/process';\nimport { replace, remove } from '@dojo/framework/stores/state/operations';\nimport {\n\tFetcherResult,\n\tGridState,\n\tFetcherCommandPayload,\n\tPageChangeCommandPayload,\n\tSortCommandPayload,\n\tFilterCommandPayload,\n\tUpdaterCommandPayload\n} from './interfaces';\n\nconst commandFactory = createCommandFactory<GridState>();\n\nconst pageChangeCommand = commandFactory<PageChangeCommandPayload>(\n\t({ path, get, payload: { id, page } }) => {\n\t\tconst currentPage = get(path(id, 'meta', 'page'));\n\t\tif (page !== currentPage) {\n\t\t\treturn [replace(path(id, 'meta', 'page'), page)];\n\t\t}\n\t\treturn [];\n\t}\n);\n\nconst preFetcherCommand = commandFactory<PageChangeCommandPayload>(\n\t({ path, get, payload: { id, page } }) => {\n\t\tconst fetchedPages = get(path(id, 'meta', 'fetchedPages')) || [];\n\t\tif (fetchedPages.indexOf(page) === -1) {\n\t\t\treturn [replace(path(id, 'meta', 'fetchedPages'), [...fetchedPages, page])];\n\t\t}\n\t\tthrow Error('The page has already been requested');\n\t}\n);\n\nconst fetcherCommand = commandFactory<FetcherCommandPayload>(\n\tasync ({ at, path, get, payload: { id, fetcher, page, pageSize } }) => {\n\t\tlet result: FetcherResult;\n\t\tconst isSorting = get(path(id, 'meta', 'isSorting'));\n\t\tif (!isSorting) {\n\t\t\tconst sortOptions = get(path(id, 'meta', 'sort'));\n\t\t\tconst filterOptions = get(path(id, 'meta', 'filter'));\n\t\t\ttry {\n\t\t\t\tresult = await fetcher(page, pageSize, {\n\t\t\t\t\tsort: sortOptions,\n\t\t\t\t\tfilter: filterOptions\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\treturn [remove(path(id, 'data', 'pages', `page-${page}`))];\n\t\t\t}\n\t\t\treturn [\n\t\t\t\treplace(path(id, 'data', 'pages', `page-${page}`), result.data),\n\t\t\t\treplace(path(id, 'meta', 'total'), result.meta.total),\n\t\t\t\treplace(path(id, 'meta', 'pageSize'), pageSize)\n\t\t\t];\n\t\t} else {\n\t\t\tthrow Error('The grid is being sorted or filtered');\n\t\t}\n\t}\n);\n\nconst preSortCommand = commandFactory<SortCommandPayload>(\n\t({ at, path, get, payload: { id, columnId, direction } }) => {\n\t\tconst page = get(path(id, 'meta', 'page'));\n\t\treturn [\n\t\t\tremove(path(id, 'data', 'pages')),\n\t\t\treplace(path(id, 'meta', 'fetchedPages'), page === 1 ? [1] : [page, page - 1]),\n\t\t\treplace(path(id, 'meta', 'sort', 'columnId'), columnId),\n\t\t\treplace(path(id, 'meta', 'sort', 'direction'), direction),\n\t\t\treplace(path(id, 'meta', 'isSorting'), true)\n\t\t];\n\t}\n);\n\nconst preFilterCommand = commandFactory<FilterCommandPayload>(\n\t({ at, path, get, payload: { id, filterOptions } }) => {\n\t\treturn [\n\t\t\tremove(path(id, 'data', 'pages')),\n\t\t\treplace(path(id, 'meta', 'fetchedPages'), [1]),\n\t\t\treplace(path(id, 'meta', 'filter', filterOptions.columnId), filterOptions.value),\n\t\t\treplace(path(id, 'meta', 'currentFilter'), filterOptions),\n\t\t\treplace(path(id, 'meta', 'page'), 1),\n\t\t\treplace(path(id, 'meta', 'isSorting'), true)\n\t\t];\n\t}\n);\n\nconst sortCommand = commandFactory<SortCommandPayload>(\n\tasync ({ at, path, get, payload, state }) => {\n\t\tconst { id, fetcher, columnId, direction } = payload;\n\t\tconst page = get(path(id, 'meta', 'page'));\n\t\tif (page === 1) {\n\t\t\treturn sortForFirstPage({ at, get, path, payload, state });\n\t\t}\n\t\tconst pageSize = get(path(id, 'meta', 'pageSize'));\n\t\tconst filterOptions = get(path(id, 'meta', 'filter'));\n\t\tlet result: FetcherResult[];\n\t\ttry {\n\t\t\tconst options = {\n\t\t\t\tsort: { columnId, direction },\n\t\t\t\tfilter: filterOptions\n\t\t\t};\n\t\t\tconst previousPage = fetcher(page - 1, pageSize, options);\n\t\t\tconst currentPage = fetcher(page, pageSize, options);\n\t\t\tresult = await Promise.all([previousPage, currentPage]);\n\t\t} catch (err) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn [\n\t\t\treplace(path(id, 'data', 'pages', `page-${page - 1}`), result[0].data),\n\t\t\treplace(path(id, 'data', 'pages', `page-${page}`), result[1].data),\n\t\t\treplace(path(id, 'meta', 'sort', 'columnId'), columnId),\n\t\t\treplace(path(id, 'meta', 'sort', 'direction'), direction),\n\t\t\treplace(path(id, 'meta', 'total'), result[1].meta.total),\n\t\t\treplace(path(id, 'meta', 'page'), page),\n\t\t\treplace(path(id, 'meta', 'isSorting'), false)\n\t\t];\n\t}\n);\n\nconst sortForFirstPage = commandFactory<SortCommandPayload>(\n\tasync ({ at, path, get, payload: { id, fetcher, columnId, direction } }) => {\n\t\tconst pageSize = get(path(id, 'meta', 'pageSize'));\n\t\tconst filterOptions = get(path(id, 'meta', 'filter'));\n\t\tlet result: FetcherResult;\n\t\ttry {\n\t\t\tresult = await fetcher(1, pageSize, {\n\t\t\t\tsort: { columnId, direction },\n\t\t\t\tfilter: filterOptions\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn [];\n\t\t}\n\t\treturn [\n\t\t\treplace(path(id, 'data', 'pages', 'page-1'), result.data),\n\t\t\treplace(path(id, 'meta', 'sort', 'columnId'), columnId),\n\t\t\treplace(path(id, 'meta', 'sort', 'direction'), direction),\n\t\t\treplace(path(id, 'meta', 'total'), result.meta.total),\n\t\t\treplace(path(id, 'meta', 'page'), 1),\n\t\t\treplace(path(id, 'meta', 'isSorting'), false)\n\t\t];\n\t}\n);\n\nconst filterCommand = commandFactory<FilterCommandPayload>(\n\tasync ({ at, path, get, payload: { id, fetcher, filterOptions } }) => {\n\t\tconst pageSize = get(path(id, 'meta', 'pageSize'));\n\t\tconst sortOptions = get(path(id, 'meta', 'sort'));\n\t\tconst currentFilters = get(path(id, 'meta', 'filter'));\n\t\tlet result: FetcherResult;\n\t\ttry {\n\t\t\tresult = await fetcher(1, pageSize, { sort: sortOptions, filter: currentFilters });\n\t\t} catch (err) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (filterOptions !== get(path(id, 'meta', 'currentFilter'))) {\n\t\t\tthrow new Error();\n\t\t}\n\t\treturn [\n\t\t\tremove(path(id, 'data', 'pages')),\n\t\t\treplace(path(id, 'data', 'pages', 'page-1'), result.data),\n\t\t\treplace(path(id, 'meta', 'total'), result.meta.total),\n\t\t\treplace(path(id, 'meta', 'isSorting'), false)\n\t\t];\n\t}\n);\n\nconst preUpdateCommand = commandFactory<UpdaterCommandPayload>(\n\t({ at, path, get, payload: { id, updater, columnId, value, page, rowNumber } }) => {\n\t\tconst item = get(at(path(id, 'data', 'pages', `page-${page}`), rowNumber));\n\t\tconst updatedItem = { ...item, [columnId]: value };\n\n\t\treturn [\n\t\t\treplace(at(path(id, 'data', 'pages', `page-${page}`), rowNumber), updatedItem),\n\t\t\treplace(path(id, 'meta', 'editedRow', 'page'), page),\n\t\t\treplace(path(id, 'meta', 'editedRow', 'index'), rowNumber),\n\t\t\treplace(path(id, 'meta', 'editedRow', 'item'), { ...item })\n\t\t];\n\t}\n);\n\nconst updaterCommand = commandFactory<UpdaterCommandPayload>(\n\tasync ({ at, path, get, payload: { id, updater, columnId, value, page, rowNumber } }) => {\n\t\tconst item = get(at(path(id, 'data', 'pages', `page-${page}`), rowNumber));\n\t\ttry {\n\t\t\tawait updater(item);\n\t\t} catch (err) {\n\t\t\tconst previousItem = get(path(id, 'meta', 'editedRow', 'item'));\n\t\t\treturn [\n\t\t\t\treplace(at(path(id, 'data', 'pages', `page-${page}`), rowNumber), previousItem)\n\t\t\t];\n\t\t}\n\n\t\treturn [replace(path(id, 'meta', 'editedRow'), undefined)];\n\t}\n);\n\nexport const updaterProcess: Process<GridState, UpdaterCommandPayload> = createProcess(\n\t'grid-update',\n\t[preUpdateCommand, updaterCommand]\n);\nexport const fetcherProcess: Process<GridState, FetcherCommandPayload> = createProcess(\n\t'grid-fetch',\n\t[preFetcherCommand, fetcherCommand]\n);\nexport const filterProcess: Process<GridState, FilterCommandPayload> = createProcess(\n\t'grid-filter',\n\t[preFilterCommand, filterCommand]\n);\nexport const sortProcess: Process<GridState, SortCommandPayload> = createProcess('grid-sort', [\n\tpreSortCommand,\n\tsortCommand\n]);\nexport const pageChangeProcess: Process<GridState, PageChangeCommandPayload> = createProcess(\n\t'grid-page-change',\n\t[pageChangeCommand]\n);\n","import WidgetBase from '@dojo/framework/core/WidgetBase';\nimport { v, w } from '@dojo/framework/core/vdom';\nimport ThemedMixin, { theme } from '@dojo/framework/core/mixins/Themed';\nimport { ColumnConfig, SortOptions } from './interfaces';\nimport { DNode } from '@dojo/framework/core/interfaces';\nimport TextInput from '../text-input/index';\nimport Icon from '../icon/index';\n\nimport * as css from '../theme/grid-header.m.css';\nimport * as fixedCss from './styles/header.m.css';\n\nexport interface SortRenderer {\n\t(column: ColumnConfig, direction: undefined | 'asc' | 'desc', sorter: () => void): DNode;\n}\n\nexport interface FilterRenderer {\n\t(\n\t\tcolumn: ColumnConfig,\n\t\tfilterValue: string,\n\t\tdoFilter: (value: string) => void,\n\t\ttitle?: string | DNode\n\t): DNode;\n}\n\nexport interface HeaderProperties {\n\tcolumnConfig: ColumnConfig[];\n\tsorter: (columnId: string, direction: 'asc' | 'desc') => void;\n\tfilterer: (columnId: string, value: any) => void;\n\tfilter?: {\n\t\t[index: string]: string;\n\t};\n\tsort?: SortOptions;\n\tsortRenderer?: SortRenderer;\n\tfilterRenderer?: FilterRenderer;\n}\n\n@theme(css)\nexport default class Header extends ThemedMixin(WidgetBase)<HeaderProperties> {\n\tprivate _getColumnTitle(column: ColumnConfig): string | DNode {\n\t\tif (typeof column.title === 'function') {\n\t\t\treturn column.title();\n\t\t}\n\t\treturn column.title;\n\t}\n\n\tprivate _sortColumn(id: string) {\n\t\tconst { sort, sorter } = this.properties;\n\t\tconst direction = sort\n\t\t\t? sort.columnId !== id\n\t\t\t\t? 'desc'\n\t\t\t\t: sort.direction === 'desc'\n\t\t\t\t? 'asc'\n\t\t\t\t: 'desc'\n\t\t\t: 'desc';\n\t\tsorter(id, direction);\n\t}\n\n\tprivate _sortRenderer = (\n\t\tcolumn: ColumnConfig,\n\t\tdirection: undefined | 'asc' | 'desc',\n\t\tsorter: () => void\n\t) => {\n\t\tconst { theme, classes } = this.properties;\n\t\treturn v('button', { classes: this.theme(css.sort), onclick: sorter }, [\n\t\t\tw(Icon, {\n\t\t\t\ttheme,\n\t\t\t\tclasses,\n\t\t\t\ttype: direction === 'asc' ? 'upIcon' : 'downIcon',\n\t\t\t\taltText: `Sort by ${this._getColumnTitle(column)}`\n\t\t\t})\n\t\t]);\n\t};\n\n\tprivate _filterRenderer = (\n\t\tcolumnConfig: ColumnConfig,\n\t\tfilterValue: string,\n\t\tdoFilter: (value: string) => void,\n\t\ttitle?: string | DNode\n\t) => {\n\t\tconst { theme, classes } = this.properties;\n\t\treturn w(TextInput, {\n\t\t\tkey: 'filter',\n\t\t\ttheme,\n\t\t\tclasses,\n\t\t\textraClasses: { root: css.filter },\n\t\t\tlabel: `Filter by ${title}`,\n\t\t\tlabelHidden: true,\n\t\t\ttype: 'search',\n\t\t\tvalue: filterValue,\n\t\t\tonInput: doFilter\n\t\t});\n\t};\n\n\tprotected render(): DNode {\n\t\tconst {\n\t\t\tcolumnConfig,\n\t\t\tsort,\n\t\t\tfilterer,\n\t\t\tfilter = {},\n\t\t\tsortRenderer = this._sortRenderer,\n\t\t\tfilterRenderer = this._filterRenderer\n\t\t} = this.properties;\n\n\t\treturn v(\n\t\t\t'div',\n\t\t\t{ classes: [this.theme(css.root), fixedCss.rootFixed], role: 'row' },\n\t\t\tcolumnConfig.map((column) => {\n\t\t\t\tconst title = this._getColumnTitle(column);\n\t\t\t\tlet headerProperties = {};\n\t\t\t\tconst isSorted = sort && sort.columnId === column.id;\n\t\t\t\tconst isSortedAsc = Boolean(\n\t\t\t\t\tsort && sort.columnId === column.id && sort.direction === 'asc'\n\t\t\t\t);\n\t\t\t\tif (column.sortable) {\n\t\t\t\t\theaderProperties = {\n\t\t\t\t\t\tclasses: [\n\t\t\t\t\t\t\tthis.theme(css.sortable),\n\t\t\t\t\t\t\tisSorted ? this.theme(css.sorted) : null,\n\t\t\t\t\t\t\tisSorted && !isSortedAsc ? this.theme(css.desc) : null,\n\t\t\t\t\t\t\tisSortedAsc ? this.theme(css.asc) : null\n\t\t\t\t\t\t],\n\t\t\t\t\t\tonclick: () => {\n\t\t\t\t\t\t\tthis._sortColumn(column.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tconst filterKeys = Object.keys(filter);\n\t\t\t\tconst direction = !isSorted ? undefined : isSortedAsc ? 'asc' : 'desc';\n\t\t\t\tconst filterValue = filterKeys.indexOf(column.id) > -1 ? filter[column.id] : '';\n\t\t\t\tconst doFilter = (value: string) => {\n\t\t\t\t\tfilterer(column.id, value);\n\t\t\t\t};\n\n\t\t\t\treturn v(\n\t\t\t\t\t'div',\n\t\t\t\t\t{\n\t\t\t\t\t\t'aria-sort': isSorted ? (isSortedAsc ? 'ascending' : 'descending') : null,\n\t\t\t\t\t\tclasses: [this.theme(css.cell), fixedCss.cellFixed],\n\t\t\t\t\t\trole: 'columnheader'\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\tv('div', headerProperties, [\n\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\tcolumn.sortable\n\t\t\t\t\t\t\t\t? sortRenderer(column, direction, () => {\n\t\t\t\t\t\t\t\t\t\tthis._sortColumn(column.id);\n\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t]),\n\t\t\t\t\t\tcolumn.filterable\n\t\t\t\t\t\t\t? filterRenderer(column, filterValue, doFilter, title)\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t}\n}\n","import WidgetBase from '@dojo/framework/core/WidgetBase';\nimport { v } from '@dojo/framework/core/vdom';\nimport ThemedMixin, { theme } from '@dojo/framework/core/mixins/Themed';\nimport { DNode } from '@dojo/framework/core/interfaces';\nimport * as css from '../theme/grid-placeholder-row.m.css';\n\n@theme(css)\nexport default class PlaceholderRow extends ThemedMixin(WidgetBase) {\n\tprotected render(): DNode {\n\t\treturn v('div', { classes: this.theme(css.root) }, [\n\t\t\tv('div', { classes: this.theme(css.loading) })\n\t\t]);\n\t}\n}\n","import WidgetBase from '@dojo/framework/core/WidgetBase';\nimport { v, w } from '@dojo/framework/core/vdom';\nimport { FocusMixin, FocusProperties } from '@dojo/framework/core/mixins/Focus';\nimport ThemedMixin, { theme } from '@dojo/framework/core/mixins/Themed';\nimport { DNode } from '@dojo/framework/core/interfaces';\nimport { uuid } from '@dojo/framework/core/util';\nimport { Keys } from '../common/util';\nimport TextInput from '../text-input/index';\nimport Button from '../button/index';\nimport Icon from '../icon/index';\n\nimport * as fixedCss from './styles/cell.m.css';\nimport * as css from '../theme/grid-cell.m.css';\n\nexport interface CellProperties extends FocusProperties {\n\tvalue: string | DNode;\n\teditable?: boolean;\n\trawValue: string;\n\tupdater: (value: any) => void;\n}\n\n@theme(css)\nexport default class Cell extends ThemedMixin(FocusMixin(WidgetBase))<CellProperties> {\n\tprivate _editing = false;\n\tprivate _editingValue = '';\n\tprivate _focusKey!: string;\n\tprivate _idBase = uuid();\n\n\tprivate _callFocus(key: string) {\n\t\tthis._focusKey = key;\n\t\tthis.focus();\n\t}\n\n\tprivate _onEdit = () => {\n\t\tconst { editable } = this.properties;\n\t\tif (editable) {\n\t\t\tthis._editing = true;\n\t\t\tthis._callFocus('input');\n\t\t\tthis._editingValue = this.properties.rawValue;\n\t\t\tthis.invalidate();\n\t\t}\n\t};\n\n\tprivate _onBlur() {\n\t\tif (this._editing) {\n\t\t\tthis._onSave();\n\t\t}\n\t}\n\n\tprivate _onInput(value: string) {\n\t\tthis._editingValue = value;\n\t}\n\n\tprivate _onKeyDown(key: number) {\n\t\tif (key === Keys.Enter) {\n\t\t\tthis._onSave();\n\t\t\tthis._callFocus('button');\n\t\t} else if (key === Keys.Escape) {\n\t\t\tthis._editing = false;\n\t\t\tthis._callFocus('button');\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate _onSave() {\n\t\tthis._editing = false;\n\t\tthis.properties.updater(this._editingValue);\n\t\tthis.invalidate();\n\t}\n\n\tprotected renderContent(): DNode {\n\t\tconst { value } = this.properties;\n\t\treturn v(\n\t\t\t'div',\n\t\t\t{\n\t\t\t\tkey: 'content',\n\t\t\t\tid: this._idBase,\n\t\t\t\tondblclick: this._onEdit\n\t\t\t},\n\t\t\t[value]\n\t\t);\n\t}\n\n\tprotected render(): DNode {\n\t\tlet { editable, rawValue, theme, classes } = this.properties;\n\n\t\treturn v('div', { role: 'cell', classes: [this.theme(css.root), fixedCss.rootFixed] }, [\n\t\t\tthis._editing\n\t\t\t\t? w(TextInput, {\n\t\t\t\t\t\tkey: 'input',\n\t\t\t\t\t\ttheme,\n\t\t\t\t\t\tclasses,\n\t\t\t\t\t\tlabel: `Edit ${rawValue}`,\n\t\t\t\t\t\tlabelHidden: true,\n\t\t\t\t\t\textraClasses: { input: this.theme(css.input) } as any,\n\t\t\t\t\t\tfocus: this._focusKey === 'input' ? this.shouldFocus : () => false,\n\t\t\t\t\t\tvalue: this._editingValue,\n\t\t\t\t\t\tonInput: this._onInput,\n\t\t\t\t\t\tonBlur: this._onBlur,\n\t\t\t\t\t\tonKeyDown: this._onKeyDown\n\t\t\t\t  })\n\t\t\t\t: this.renderContent(),\n\t\t\teditable && !this._editing\n\t\t\t\t? w(\n\t\t\t\t\t\tButton,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'button',\n\t\t\t\t\t\t\ttheme,\n\t\t\t\t\t\t\tclasses,\n\t\t\t\t\t\t\taria: { describedby: this._idBase },\n\t\t\t\t\t\t\tfocus: this._focusKey === 'button' ? this.shouldFocus : () => false,\n\t\t\t\t\t\t\ttype: 'button',\n\t\t\t\t\t\t\textraClasses: { root: this.theme(css.edit) } as any,\n\t\t\t\t\t\t\tonClick: this._onEdit\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[w(Icon, { type: 'editIcon', altText: 'Edit', classes, theme })]\n\t\t\t\t  )\n\t\t\t\t: null\n\t\t]);\n\t}\n}\n","import WidgetBase from '@dojo/framework/core/WidgetBase';\nimport { v, w } from '@dojo/framework/core/vdom';\nimport { DNode } from '@dojo/framework/core/interfaces';\nimport ThemedMixin, { theme } from '@dojo/framework/core/mixins/Themed';\n\nimport { ColumnConfig } from './interfaces';\nimport Cell from './Cell';\nimport * as fixedCss from './styles/row.m.css';\nimport * as css from '../theme/grid-row.m.css';\n\nexport interface RowProperties {\n\tid: number;\n\titem: { [index: string]: any };\n\tcolumnConfig: ColumnConfig[];\n\tupdater: (rowNumber: number, columnId: string, value: any) => void;\n}\n\n@theme(css)\nexport default class Row extends ThemedMixin(WidgetBase)<RowProperties> {\n\tprotected render(): DNode {\n\t\tconst { item, columnConfig, id, theme, classes } = this.properties;\n\t\tlet columns = columnConfig.map(\n\t\t\t(config) => {\n\t\t\t\tlet value: string | DNode = `${item[config.id]}`;\n\t\t\t\tif (config.renderer) {\n\t\t\t\t\tvalue = config.renderer({ value });\n\t\t\t\t}\n\t\t\t\treturn w(Cell, {\n\t\t\t\t\ttheme,\n\t\t\t\t\tkey: config.id,\n\t\t\t\t\tclasses,\n\t\t\t\t\tupdater: (updatedValue: string) => {\n\t\t\t\t\t\tthis.properties.updater(id, config.id, updatedValue);\n\t\t\t\t\t},\n\t\t\t\t\tvalue,\n\t\t\t\t\teditable: config.editable,\n\t\t\t\t\trawValue: `${item[config.id]}`\n\t\t\t\t});\n\t\t\t},\n\t\t\t[] as DNode[]\n\t\t);\n\n\t\treturn v(\n\t\t\t'div',\n\t\t\t{\n\t\t\t\tclasses: [this.theme(css.root), fixedCss.rootFixed],\n\t\t\t\trole: 'row',\n\t\t\t\t'aria-rowindex': `${id + 1}`\n\t\t\t},\n\t\t\tcolumns\n\t\t);\n\t}\n}\n","import global from '@dojo/framework/shim/global';\nimport WidgetBase from '@dojo/framework/core/WidgetBase';\nimport { v, w } from '@dojo/framework/core/vdom';\nimport ThemedMixin, { theme } from '@dojo/framework/core/mixins/Themed';\nimport { DNode, VNodeProperties } from '@dojo/framework/core/interfaces';\nimport renderer from '@dojo/framework/core/vdom';\n\nimport { GridPages, ColumnConfig } from './interfaces';\nimport PlaceholderRow from './PlaceholderRow';\nimport Row from './Row';\n\nimport * as fixedCss from './styles/body.m.css';\nimport * as css from '../theme/grid-body.m.css';\nimport { diffProperty } from '@dojo/framework/core/decorators/diffProperty';\nimport { auto, reference } from '@dojo/framework/core/diff';\n\nexport interface BodyProperties<S> {\n\ttotalRows?: number;\n\tpageSize: number;\n\tpages: GridPages<S>;\n\theight: number;\n\tcolumnConfig: ColumnConfig[];\n\tplaceholderRowRenderer?: (index: number) => DNode;\n\tfetcher: (page: number, pageSize: number) => void;\n\tupdater: (page: number, rowNumber: number, columnId: string, value: string) => void;\n\tpageChange: (page: number) => void;\n\tonScroll: (value: number) => void;\n}\n\nconst offscreen = (dnode: DNode) => {\n\tconst r = renderer(() =>\n\t\tw(\n\t\t\tclass extends WidgetBase {\n\t\t\t\trender() {\n\t\t\t\t\treturn dnode;\n\t\t\t\t}\n\t\t\t},\n\t\t\t{}\n\t\t)\n\t);\n\tconst div = global.document.createElement('div');\n\tdiv.style.position = 'absolute';\n\tglobal.document.body.appendChild(div);\n\tr.mount({ domNode: div, sync: true });\n\tconst dimensions = div.getBoundingClientRect();\n\tglobal.document.body.removeChild(div);\n\treturn dimensions;\n};\n\nconst defaultPlaceholderRowRenderer = (index: number) => {\n\treturn w(PlaceholderRow, { key: index });\n};\n\n@theme(css)\n@diffProperty('pages', reference)\nexport default class Body<S> extends ThemedMixin(WidgetBase)<BodyProperties<S>> {\n\tprivate _rowHeight!: number;\n\tprivate _rowsInView!: number;\n\tprivate _renderPageSize!: number;\n\tprivate _start = 0;\n\tprivate _end = 100;\n\tprivate _resetScroll = false;\n\n\tprivate _updater(rowNumber: number, columnId: string, value: any) {\n\t\tconst page = Math.max(Math.ceil(rowNumber / this.properties.pageSize), 1);\n\t\tconst pageItemNumber = rowNumber - (page - 1) * this.properties.pageSize;\n\t\tthis.properties.updater(page, pageItemNumber, columnId, value);\n\t}\n\n\tprivate _onScroll(event: UIEvent) {\n\t\tconst { totalRows = 0 } = this.properties;\n\t\tconst scrollTop = (event.target as HTMLElement).scrollTop;\n\t\tconst scrollLeft = (event.target as HTMLElement).scrollLeft;\n\t\tconst topRow = Math.round(scrollTop / this._rowHeight);\n\t\tconst bottomRow = topRow + this._rowsInView;\n\t\tif (topRow <= this._start) {\n\t\t\tthis._start = Math.max(0, topRow - this._renderPageSize);\n\t\t\tthis._end = Math.min(totalRows, this._start + this._renderPageSize * 2);\n\t\t}\n\t\tif (bottomRow >= this._end) {\n\t\t\tthis._start = Math.min(topRow, totalRows - this._renderPageSize);\n\t\t\tthis._end = Math.min(totalRows, this._start + this._renderPageSize * 2);\n\t\t}\n\t\tthis.properties.onScroll(scrollLeft);\n\t\tthis.invalidate();\n\t}\n\n\t@diffProperty('totalRows', auto)\n\tprotected _onDiffTotalRows() {\n\t\tthis._start = 0;\n\t\tthis._end = 100;\n\t\tthis._resetScroll = true;\n\t}\n\n\tprivate _renderRows(start: number, end: number) {\n\t\tconst {\n\t\t\tpageSize,\n\t\t\tfetcher,\n\t\t\tpages,\n\t\t\tcolumnConfig,\n\t\t\tplaceholderRowRenderer = defaultPlaceholderRowRenderer,\n\t\t\tpageChange,\n\t\t\ttotalRows,\n\t\t\ttheme,\n\t\t\tclasses\n\t\t} = this.properties;\n\n\t\tconst startPage = Math.max(Math.ceil(start / pageSize), 1);\n\t\tconst endPage = Math.ceil(end / pageSize);\n\n\t\tlet data = pages[`page-${startPage}`] || [];\n\n\t\tif (!data.length && (totalRows === undefined || totalRows > 0)) {\n\t\t\tfetcher(startPage, pageSize);\n\t\t}\n\n\t\tif (startPage !== endPage) {\n\t\t\tconst endData = pages[`page-${endPage}`] || [];\n\t\t\tif (!endData.length) {\n\t\t\t\tfetcher(endPage, pageSize);\n\t\t\t}\n\t\t\tconst midScreenPage = Math.max(Math.ceil((start + this._rowsInView / 2) / pageSize), 1);\n\t\t\tpageChange(midScreenPage);\n\t\t\tdata = [...data, ...endData];\n\t\t} else {\n\t\t\tpageChange(startPage);\n\t\t}\n\n\t\tconst rows: DNode[] = [];\n\n\t\tfor (let i = start; i < end; i++) {\n\t\t\tconst offset = i - (startPage * pageSize - pageSize);\n\t\t\tconst item = data[offset];\n\t\t\tif (item) {\n\t\t\t\trows.push(\n\t\t\t\t\tw(Row, {\n\t\t\t\t\t\tid: i,\n\t\t\t\t\t\tkey: i,\n\t\t\t\t\t\ttheme,\n\t\t\t\t\t\tclasses,\n\t\t\t\t\t\titem,\n\t\t\t\t\t\tcolumnConfig,\n\t\t\t\t\t\tupdater: this._updater\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif (totalRows === undefined || (i > -1 && i < totalRows)) {\n\t\t\t\t\trows.push(placeholderRowRenderer(i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn rows;\n\t}\n\n\tprotected render(): DNode {\n\t\tconst {\n\t\t\tplaceholderRowRenderer = defaultPlaceholderRowRenderer,\n\t\t\ttotalRows = 0,\n\t\t\tpageSize,\n\t\t\theight\n\t\t} = this.properties;\n\n\t\tif (!this._rowHeight) {\n\t\t\tconst firstRow = placeholderRowRenderer(0);\n\t\t\tconst dimensions = offscreen(firstRow);\n\t\t\tthis._rowHeight = dimensions.height;\n\t\t\tthis._rowsInView = Math.ceil(height / this._rowHeight);\n\t\t\tthis._renderPageSize = this._rowsInView * 2;\n\t\t}\n\n\t\tconst rows: DNode[] = this._renderRows(this._start, this._end);\n\t\tconst topPaddingHeight = this._rowHeight * this._start;\n\t\tlet bottomPaddingHeight = 0;\n\t\tif (totalRows >= pageSize) {\n\t\t\tbottomPaddingHeight =\n\t\t\t\ttotalRows * this._rowHeight -\n\t\t\t\ttopPaddingHeight -\n\t\t\t\t(this._end - this._start) * this._rowHeight;\n\t\t}\n\n\t\tlet containerProperties: VNodeProperties = {\n\t\t\tkey: 'root',\n\t\t\tclasses: [this.theme(css.root), fixedCss.rootFixed],\n\t\t\trole: 'rowgroup',\n\t\t\tonscroll: this._onScroll,\n\t\t\tstyles: { height: `${height}px` }\n\t\t};\n\n\t\tif (this._resetScroll) {\n\t\t\tthis._resetScroll = false;\n\t\t\tcontainerProperties = {\n\t\t\t\t...containerProperties,\n\t\t\t\tscrollTop: 0\n\t\t\t};\n\t\t}\n\n\t\treturn v('div', containerProperties, [\n\t\t\tv('div', { key: 'top', styles: { height: `${topPaddingHeight}px` } }),\n\t\t\t...rows,\n\t\t\tv('div', {\n\t\t\t\tkey: 'bottom',\n\t\t\t\tstyles: { height: `${bottomPaddingHeight}px` }\n\t\t\t})\n\t\t]);\n\t}\n}\n","import WidgetBase from '@dojo/framework/core/WidgetBase';\nimport { v } from '@dojo/framework/core/vdom';\nimport ThemedMixin, { theme } from '@dojo/framework/core/mixins/Themed';\nimport { DNode } from '@dojo/framework/core/interfaces';\n\nimport * as css from '../theme/grid-footer.m.css';\n\nexport interface FooterProperties {\n\ttotal?: number;\n\tpage: number;\n\tpageSize: number;\n}\n\n@theme(css)\nexport default class Footer extends ThemedMixin(WidgetBase)<FooterProperties> {\n\tprotected render(): DNode {\n\t\tconst { total, page, pageSize } = this.properties;\n\t\tconst footer =\n\t\t\ttotal !== undefined\n\t\t\t\t? `Page ${page} of ${Math.ceil(total / pageSize)}. Total rows ${total}`\n\t\t\t\t: `Page ${page} of ?`;\n\t\treturn v('div', { classes: this.theme(css.root) }, [footer]);\n\t}\n}\n","import WidgetBase from '@dojo/framework/core/WidgetBase';\nimport { v, w } from '@dojo/framework/core/vdom';\nimport ThemedMixin, { theme, ThemedProperties } from '@dojo/framework/core/mixins/Themed';\nimport diffProperty from '@dojo/framework/core/decorators/diffProperty';\nimport { DNode } from '@dojo/framework/core/interfaces';\nimport { reference } from '@dojo/framework/core/diff';\nimport { Store } from '@dojo/framework/stores/Store';\nimport Dimensions from '@dojo/framework/core/meta/Dimensions';\nimport Resize from '@dojo/framework/core/meta/Resize';\nimport './utils';\n\nimport { Fetcher, ColumnConfig, GridState, Updater } from './interfaces';\nimport {\n\tfetcherProcess,\n\tpageChangeProcess,\n\tsortProcess,\n\tfilterProcess,\n\tupdaterProcess\n} from './processes';\n\nimport Header, { SortRenderer, FilterRenderer } from './Header';\nimport Body from './Body';\nimport Footer from './Footer';\nimport * as css from '../theme/grid.m.css';\nimport * as fixedCss from './styles/grid.m.css';\n\nconst defaultGridMeta = {\n\tpage: 1,\n\ttotal: undefined,\n\tsort: undefined,\n\tfilter: undefined,\n\tisSorting: false,\n\teditedRow: undefined\n};\n\nexport interface CustomRenderers {\n\tsortRenderer?: SortRenderer;\n\tfilterRenderer?: FilterRenderer;\n}\n\nexport interface GridProperties<S> extends ThemedProperties {\n\tcolumnConfig: ColumnConfig[];\n\tfetcher: Fetcher<S>;\n\theight: number;\n\tupdater?: Updater<S>;\n\tstore?: Store<S>;\n\tstoreId?: string;\n\tcustomRenderers?: CustomRenderers;\n}\n\n@theme(css)\nexport default class Grid<S> extends ThemedMixin(WidgetBase)<GridProperties<S>> {\n\tprivate _store = new Store<GridState<S>>();\n\tprivate _handle: any;\n\tprivate _scrollLeft = 0;\n\tprivate _pageSize = 100;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._handle = this._store.onChange(this._store.path('_grid'), this.invalidate.bind(this));\n\t}\n\n\t@diffProperty('store', reference)\n\tprotected onStoreProperty(previous: any, current: any) {\n\t\tconst { storeId = '_grid' } = current;\n\t\tthis._handle.remove();\n\t\tthis._store = current.store;\n\t\tthis._handle = this._store.onChange(this._store.path(storeId), () => {\n\t\t\tthis.invalidate();\n\t\t});\n\t}\n\n\tprivate _getProperties() {\n\t\tconst { storeId = '_grid' } = this.properties;\n\t\treturn { ...this.properties, storeId };\n\t}\n\n\tprivate _getBodyHeight(): number {\n\t\tconst { height } = this.properties;\n\t\tconst headerHeight = this.meta(Dimensions).get('header');\n\t\tconst footerHeight = this.meta(Dimensions).get('footer');\n\t\treturn height - headerHeight.size.height - footerHeight.size.height;\n\t}\n\n\tprivate _fetcher(page: number, pageSize: number) {\n\t\tconst { storeId, fetcher } = this._getProperties();\n\t\tfetcherProcess(this._store)({ id: storeId, fetcher, page, pageSize });\n\t}\n\n\tprivate _sorter(columnId: string, direction: 'asc' | 'desc') {\n\t\tconst { storeId, fetcher } = this._getProperties();\n\t\tsortProcess(this._store)({ id: storeId, fetcher, columnId, direction });\n\t}\n\n\tprivate _filterer(columnId: string, value: any) {\n\t\tconst { storeId, fetcher } = this._getProperties();\n\t\tfilterProcess(this._store)({ id: storeId, fetcher, filterOptions: { columnId, value } });\n\t}\n\n\tprivate _updater(page: number, rowNumber: number, columnId: string, value: string) {\n\t\tconst { storeId, updater } = this._getProperties();\n\t\tupdaterProcess(this._store)({ id: storeId, page, columnId, rowNumber, value, updater });\n\t}\n\n\tprivate _pageChange(page: number) {\n\t\tconst { storeId } = this._getProperties();\n\t\tpageChangeProcess(this._store)({ id: storeId, page });\n\t}\n\n\tprivate _onScroll(value: number) {\n\t\tthis._scrollLeft = value;\n\t\tthis.invalidate();\n\t}\n\n\tprotected render(): DNode {\n\t\tconst {\n\t\t\tcolumnConfig,\n\t\t\tstoreId,\n\t\t\ttheme,\n\t\t\tclasses,\n\t\t\tcustomRenderers = {}\n\t\t} = this._getProperties();\n\t\tconst { sortRenderer, filterRenderer } = customRenderers;\n\n\t\tif (!columnConfig || !this.properties.fetcher) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst meta = this._store.get(this._store.path(storeId, 'meta')) || defaultGridMeta;\n\t\tconst pages = this._store.get(this._store.path(storeId, 'data', 'pages')) || {};\n\t\tconst hasFilters = columnConfig.some((config) => !!config.filterable);\n\t\tconst bodyHeight = this._getBodyHeight();\n\t\tthis.meta(Resize).get('root');\n\n\t\tif (bodyHeight <= 0) {\n\t\t\treturn v('div', {\n\t\t\t\tkey: 'root',\n\t\t\t\tclasses: [this.theme(css.root), fixedCss.rootFixed],\n\t\t\t\trole: 'table'\n\t\t\t});\n\t\t}\n\n\t\treturn v(\n\t\t\t'div',\n\t\t\t{\n\t\t\t\tkey: 'root',\n\t\t\t\tclasses: [this.theme(css.root), fixedCss.rootFixed],\n\t\t\t\trole: 'table',\n\t\t\t\t'aria-rowcount': meta.total ? `${meta.total}` : null\n\t\t\t},\n\t\t\t[\n\t\t\t\tv(\n\t\t\t\t\t'div',\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: 'header',\n\t\t\t\t\t\tscrollLeft: this._scrollLeft,\n\t\t\t\t\t\tclasses: [\n\t\t\t\t\t\t\tthis.theme(css.header),\n\t\t\t\t\t\t\tfixedCss.headerFixed,\n\t\t\t\t\t\t\thasFilters ? this.theme(css.filterGroup) : null\n\t\t\t\t\t\t],\n\t\t\t\t\t\trow: 'rowgroup'\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\tw(Header, {\n\t\t\t\t\t\t\tkey: 'header-row',\n\t\t\t\t\t\t\ttheme,\n\t\t\t\t\t\t\tclasses,\n\t\t\t\t\t\t\tcolumnConfig,\n\t\t\t\t\t\t\tsorter: this._sorter,\n\t\t\t\t\t\t\tsort: meta.sort,\n\t\t\t\t\t\t\tfilter: meta.filter,\n\t\t\t\t\t\t\tfilterer: this._filterer,\n\t\t\t\t\t\t\tsortRenderer,\n\t\t\t\t\t\t\tfilterRenderer\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t\t\tw(Body, {\n\t\t\t\t\tkey: 'body',\n\t\t\t\t\ttheme,\n\t\t\t\t\tclasses,\n\t\t\t\t\tpages,\n\t\t\t\t\ttotalRows: meta.total,\n\t\t\t\t\tpageSize: this._pageSize,\n\t\t\t\t\tcolumnConfig,\n\t\t\t\t\tfetcher: this._fetcher,\n\t\t\t\t\tpageChange: this._pageChange,\n\t\t\t\t\tupdater: this._updater,\n\t\t\t\t\tonScroll: this._onScroll,\n\t\t\t\t\theight: bodyHeight\n\t\t\t\t}),\n\t\t\t\tv('div', { key: 'footer' }, [\n\t\t\t\t\tw(Footer, {\n\t\t\t\t\t\tkey: 'footer-row',\n\t\t\t\t\t\ttheme,\n\t\t\t\t\t\tclasses,\n\t\t\t\t\t\ttotal: meta.total,\n\t\t\t\t\t\tpage: meta.page,\n\t\t\t\t\t\tpageSize: this._pageSize\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t]\n\t\t);\n\t}\n}\n"],"sourceRoot":""}