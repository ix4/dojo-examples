{"version":3,"sources":["webpack://realworld_app/Outlet.ts","webpack://realworld_app/./src/widgets/Header.tsx","webpack://realworld_app/./src/widgets/Footer.tsx","webpack://realworld_app/./src/App.tsx","webpack://realworld_app/./src/main.tsx","webpack://realworld_app/WeakMap.ts","webpack://realworld_app/diff.ts","webpack://realworld_app/RegistryHandler.ts","webpack://realworld_app/vdom.ts","webpack://realworld_app/Store.ts","webpack://realworld_app/store.ts","webpack://realworld_app/HashHistory.ts","webpack://realworld_app/Router.ts","webpack://realworld_app/./src/processes/tagProcesses.ts","webpack://realworld_app/./src/processes/routeProcesses.ts","webpack://realworld_app/./src/store.ts","webpack://realworld_app/RouterInjector.ts","webpack://realworld_app/./src/routes.ts","webpack://realworld_app/process.ts","webpack://realworld_app/operations.ts","webpack://realworld_app/./src/processes/utils.ts","webpack://realworld_app/Link.ts","webpack://realworld_app/./src/config.ts","webpack://realworld_app/object.ts","webpack://realworld_app/Map.ts","webpack://realworld_app/Registry.ts","webpack://realworld_app/injector.ts","webpack://realworld_app/./src/processes/loginProcesses.ts","webpack://realworld_app/Destroyable.ts","webpack://realworld_app/Evented.ts","webpack://realworld_app/Pointer.ts","webpack://realworld_app/cache.ts","webpack://realworld_app/./src/widgets/ErrorList.tsx","webpack://realworld_app/icache.ts","webpack://realworld_app/./src/processes/feedProcesses.ts","webpack://realworld_app/Set.ts","webpack://realworld_app/ActiveLink.ts","webpack://realworld_app/./src/widgets/FeedPagination.tsx","webpack://realworld_app/util.ts","webpack://realworld_app/array.ts","webpack://realworld_app/Patch.ts","webpack://realworld_app/compare.ts","webpack://realworld_app/./src/widgets/ArticlePreview.tsx","webpack://realworld_app/./src/widgets/FeedList.tsx","webpack://realworld_app/./src/processes/editorProcesses.ts","webpack://realworld_app/./src/widgets/Editor.tsx"],"names":["Outlet","Object","vdom","cache","injector","diffProperty","invalidator","properties","factory","middleware","renderer","id","routerKey","get","handle","subscribe","set","current","next","currentRouterKey","currentHandle","router","outletContext","getOutlet","queryParams","params","type","isError","isExact","result","widgets_Header","store","src_store","Header_factory","path","isAuthenticated","loggedInUser","classes","ActiveLink","activeClasses","to","username","widgets_Footer","Footer_factory","href","App_App","App_factory","Loadable__","__autoRegistryItem","label","registryItem","__autoRegistryItems","Login","Register","details","Profile","Editor","slug","Article","Settings","Home","mount","domNode","document","getElementById","registry","shim_WeakMap","global","WeakMap","isObjectOrArray","value","prototype","toString","call","Array","isArray","reference","previousProperty","newProperty","changed","auto","_type","Registry","ignore","shallow","depth","validOldProperty","validNewProperty","previousKeys","keys","newKeys","length","some","key","core_RegistryHandler","Evented","[object Object]","super","this","_registry","_registryWidgetLabelMap","Map","_registryInjectorLabelMap","own","destroy","baseRegistry","delete","undefined","base","widget","define","defineInjector","has","Boolean","hasInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","i","item","registeredLabels","indexOf","on","event","action","emit","EMPTY_ARRAY","nodeOperations","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","WNODE","VNODE","DOMVNODE","isTextNode","nodeType","isWNodeWrapper","child","isWNode","node","isVNodeWrapper","isVNode","isVirtualWrapper","tag","isBodyWrapper","wrapper","isDomVNode","w","widgetConstructorOrNode","children","assign","widgetConstructor","v","propertiesOrChildren","deferredPropertiesCallback","styles","newProperties","__rest","_a","nodeClasses","nodeStyles","nodeProperties","REGISTRY_ITEM","FromRegistry","spreadChildren","reduce","tsx","name","buildPreviousProperties","diffType","attributes","deferredProperties","events","forEach","propName","attrName","getAttribute","props","property","same","dnode1","dnode2","widgetConstructor1","widgetConstructor2","instance","findIndexOfChild","sameAs","start","createClassPropValue","classNames","className","updateAttribute","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","arrayFrom","arr","slice","createFactory","callback","middlewares","isWidget","isFactory","create","returns","widgetInstanceMap","widgetMetaMap","requestedDomNodes","Set","wrapperId","metaId","addNodeToMap","widgetMeta","nodeMap","destroyHandles","destroyMap","clear","vdom_invalidator","widgetId","split","add","propertyName","diff","customDiffMap","customDiffProperties","propertyDiffMap","vdom_destroy","destroyFunction","getRegistry","registryHandler","isDeferred","deferRefs","vdom_renderer","_renderScheduled","parentInvalidate","_mountOptions","sync","merge","transition","body","_invalidationQueue","_processQueue","_deferredProcessQueue","_applicationQueue","_eventMap","_idToWrapperMap","_wrapperSiblingMap","_idToChildrenWrappers","_insertBeforeMap","_nodeToWrapperMap","_idleCallbacks","_deferredRenderCallbacks","_allMergedNodes","nodeOperation","propValue","previousValue","push","updateEvent","eventName","currentValue","previousEvent","removeEventListener","evt","target","addEventListener","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","eventCallback","resolveRegistryItem","owningNode","instanceData","registryLabel","isLazyDefine","renderedToWrapper","rendered","parent","currentParent","requiresInsertBefore","hasPreviousSiblings","wrappedRendered","hasParentWNode","hasVirtualParentNode","hasCurrentParentChildren","insertBefore","previousItem","nodes","pop","mapNodeToInstance","renderedItem","text","order","parentId","exitAnimation","hasAnimations","nextParent","owningId","runDeferredProperties","processProperties","findInsertBefore","searchNode","nextSibling","childDomWrapperId","childWrapper","parentNode","setValue","domValue","onInputValue","onSelectValue","setProperties","currentProperties","nextWrapper","includesEventsAndAttributes","propNames","propCount","previousClassString","currentClassString","merged","domClasses","styleNames","styleCount","j","styleName","newStyleValue","style","tagName","lastIndexOf","previousAttributes","attrNames","attrCount","updateAttributes","_schedule","_runInvalidationQueue","requestAnimationFrame","getWNodeWrapper","invalidationQueue","previouslyRendered","sort","a","b","_runProcessQueue","sibling","_updateWidget","_runDomInstructionQueue","_cleanUpMergedNodes","_runCallbacks","mergedNode","removeChild","setDomNodeOnParentWrapper","meta","_process","reverse","parentDomNode","onAttach","parentElement","enterAnimation","enterAnimationActive","enter","owningWrapper","nodeHandler","inserted","currentDomNode","replaceChild","exitAnimationActive","exit","attached","addRoot","onDetach","callbacks","run","shift","requestIdleCallback","setTimeout","runAfterRenderCallbacks","runDeferredRenderCallbacks","createKeyMap","wrappers","mergeNodes","oldIndex","newIndex","currentLength","nextLength","instructions","replace","currentKeys","nextKeys","currentWrapper","domElement","toUpperCase","mergeNodeIndex","splice","_processMergeNodes","_processOne","dom","currentNode","parentWrapper","findParentDomNode","isVirtual","isBody","data","createTextNode","childNodes","createElementNS","createElement","_createDom","invalidate","Constructor","dirty","rendering","__setProperties__","__setChildren__","__render__","resolveMiddleware","results","uniqueId","payload","resolvedMiddleware","_createWidget","currentChildren","_updateDom","remove","bodyIds","wrapperChildren","_removeDom","processResult","_removeWidget","didRender","size","diffMap","runDiffs","ignoreProperties","propertyNames","propertiesDiff","values","nextChildren","mountOptions","renderResult","wrapNodes","siblingId","isString","segment","Store_DefaultState","_state","apply","operations","patchResult","Patch","object","undoOperations","at","index","array","state","segments","stringSegments","Pointer","filter","hasMultipleSegments","pointer","stores_Store","options","_adapter","_changePaths","_callbackId","onChange","paths","callbackId","_addOnChange","changePaths","bind","callbackIdsCalled","newValue","callbackItem","_runOnChanges","createStoreMiddleware","initial","initialized","handles","injectedStore","registeredPaths","executor","process","HashHistory_HashHistory","window","_onChange","normalizePath","_window","location","hash","_current","_onChangeFunction","prefix","PARAM","paramRegExp","RegExp","ROUTE_SEGMENT_SCORE","DYNAMIC_SEGMENT_PENALTY","matchingParams","previousParams","every","Router_Router","config","_routes","_outletMap","_matchedOutlets","_currentParams","_currentQueryParams","requestedPath","_stripLeadingSlash","previousMatchedOutlets","queryParamString","_getQueryParams","routeConfig","routeConfigs","map","route","matchedRoutes","segmentIndex","paramIndex","routeMatch","childRoute","matchedOutletName","matchedRoute","match","score","outlet","matchedOutlet","previousMatchedOutlet","errorOutlet","previousMatchedOutletKeys","context","_options","_register","autostart","_history","HistoryManager","_defaultOutlet","link","setPath","linkPath","fullPath","fullQueryParams","param","defaultParams","fullParams","outletIdentifier","currentParams","routes","parentRoute","defaultRoute","parsedPath","test","queryParam","queryParameters","getTagsCommand","utils","async","response","fetch","src_config","json","state_operations","tags","getTagsProcess","isProfile","currentOutlet","outlets","changeRouteCommand","changeRouteProcess","__webpack_require__","d","__webpack_exports__","store_registry","store_router","routerOptions","Error","registerRouterInjector","store_store","session","onRouteChange","sessionStorage","getItem","loginProcesses","JSON","parse","createCommandFactory","createProcess","_shim_Promise__WEBPACK_IMPORTED_MODULE_0__","_state_operations__WEBPACK_IMPORTED_MODULE_1__","_shim_Map__WEBPACK_IMPORTED_MODULE_2__","command","processMap","valueSymbol","Symbol","proxyError","processExecutor","commands","before","after","transformer","executorPayload","commandsCopy","error","createProxy","proxies","proxied","proxyOperations","createHandler","partialPath","obj","prop","stringPath","hasOwnProperty","proxiedValue","Proxy","removeProxies","deleteProperty","proxy","resolvedResults","commandFunction","then","Promise","all","e","message","resolve","nextCallback","processCallback","previousCallback","previousBefore","previousAfter","combineCallbacks","_Patch__WEBPACK_IMPORTED_MODULE_0__","_Pointer__WEBPACK_IMPORTED_MODULE_1__","op","ADD","REPLACE","REMOVE","getHeaders","commandFactory","_dojo_framework_stores_process__WEBPACK_IMPORTED_MODULE_0__","token","headers","Content-Type","Link","_core_vdom__WEBPACK_IMPORTED_MODULE_0__","_core_middleware_injector__WEBPACK_IMPORTED_MODULE_1__","isOutlet","onClick","linkProps","onclick","defaultPrevented","button","metaKey","ctrlKey","preventDefault","baseUrl","object_assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","is","getOwnPropertyDescriptors","entries","WIDGET_BASE_TYPE","isWidgetBaseConstructor","isWidgetFunction","isWNodeFactory","_shim_Map__WEBPACK_IMPORTED_MODULE_1__","_core_Evented__WEBPACK_IMPORTED_MODULE_2__","widgetLabel","_widgetRegistry","widgetCtor","emitLoadedEvent","injectorFactory","_injectorRegistry","injectorItem","promise","default","isWidgetConstructorDefaultExport","_vdom__WEBPACK_IMPORTED_MODULE_0__","getInjector","loginProcess","registerProcess","setSessionProcess","logoutProcess","_dojo_framework_shim_global__WEBPACK_IMPORTED_MODULE_0__","_dojo_framework_stores_process__WEBPACK_IMPORTED_MODULE_1__","_dojo_framework_stores_state_operations__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","_config__WEBPACK_IMPORTED_MODULE_4__","startLoginCommand","startRegisterCommand","setSessionCommand","loginCommand","requestPayload","user","email","password","method","stringify","ok","setItem","errors","registerCommand","logoutCommand","removeItem","noop","destroyed","Destroyable_Destroyable","_handles","Evented_Evented","regexMap","listenersMap","methods","globString","targetString","regex","isGlobMatch","listener","_addListener","listeners","decode","encode","walk","clone","continueOnUndefined","pointerTarget","String","nextSegment","isNaN","parseInt","_segments","join","cacheMap","_dojo_framework_core_vdom__WEBPACK_IMPORTED_MODULE_0__","ErrorList","errorCategories","errorList","_cache__WEBPACK_IMPORTED_MODULE_1__","icache","cachedValue","status","fetchFeedProcess","favoriteFeedArticleProcess","_dojo_framework_stores_state_operations__WEBPACK_IMPORTED_MODULE_1__","_utils__WEBPACK_IMPORTED_MODULE_2__","_config__WEBPACK_IMPORTED_MODULE_3__","startFetchingFeedCommand","page","fetchFeedCommand","offset","url","articles","articlesCount","clearFeedCommand","favoriteFeedArticleCommand","favorited","feedPath","items","getItemIndex","article","_global__WEBPACK_IMPORTED_MODULE_0__","_core_middleware_cache__WEBPACK_IMPORTED_MODULE_2__","isActive","linkParams","contextParams","paramsEqual","_Link__WEBPACK_IMPORTED_MODULE_3__","FeedPagination","total","currentPage","fetchFeed","pageNumbers","Math","ceil","wrapNative","nativeFunction","args","from","of","copyWithin","fill","find","findIndex","includes","OperationType","isObject","isEqual","element","keysForA","getFriendlyDifferenceMessage","expected","actual","actualType","getFriendlyTypeName","expectedType","min","findArrayDifference","findShallowObjectKeyDifference","inverse","operation","TEST","Patch_Patch","_operations","patchedObject","ArticlePreview_ArticlePreview","favoriteArticle","author","buttonClasses","src","image","Date","createdAt","toDateString","favoritesCount","title","description","FeedList","FeedList_factory","feedProcesses","titleInputCommand","descriptionInputCommand","bodyInputCommand","tagInputCommand","addTagCommand","clearTagInputCommand","removeTagCommand","getArticleForEditorCommand","clearEditorCommand","startPublishCommand","publishArticleCommand","titleInputProcess","descInputProcess","bodyInputProcess","tagInputProcess","addTagProcess","removeTagProcess","getEditorArticleProcess","publishArticleProcess","Editor_Editor","isLoading","oninput","placeholder","rows","onkeydown","keyCode","tagList","disabled","isLoaded"],"mappings":"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","file":"main.098bc37731419d7cc0a2.bundle.js","sourcesContent":["import { create, diffProperty, invalidator } from '../core/vdom';\nimport injector from '../core/middleware/injector';\nimport cache from '../core/middleware/cache';\nimport { DNode } from '../core/interfaces';\nimport { MatchDetails } from './interfaces';\nimport Router from './Router';\n\nexport interface OutletProperties {\n\trenderer: (matchDetails: MatchDetails) => DNode | DNode[];\n\tid: string;\n\trouterKey?: string;\n}\n\nconst factory = create({ cache, injector, diffProperty, invalidator }).properties<OutletProperties>();\n\nexport const Outlet = factory(function Outlet({\n\tmiddleware: { cache, injector, diffProperty, invalidator },\n\tproperties\n}) {\n\tconst { renderer, id, routerKey = 'router' } = properties();\n\tconst currentHandle = cache.get<Function>('handle');\n\tif (!currentHandle) {\n\t\tconst handle = injector.subscribe(routerKey);\n\t\tif (handle) {\n\t\t\tcache.set('handle', handle);\n\t\t}\n\t}\n\tdiffProperty('routerKey', (current: OutletProperties, next: OutletProperties) => {\n\t\tconst { routerKey: currentRouterKey = 'router' } = current;\n\t\tconst { routerKey = 'router' } = next;\n\t\tif (routerKey !== currentRouterKey) {\n\t\t\tconst currentHandle = cache.get<Function>('handle');\n\t\t\tif (currentHandle) {\n\t\t\t\tcurrentHandle();\n\t\t\t}\n\t\t\tconst handle = injector.subscribe(routerKey);\n\t\t\tif (handle) {\n\t\t\t\tcache.set('handle', handle);\n\t\t\t}\n\t\t}\n\t\tinvalidator();\n\t});\n\tconst router = injector.get<Router>(routerKey);\n\n\tif (router) {\n\t\tconst outletContext = router.getOutlet(id);\n\t\tif (outletContext) {\n\t\t\tconst { queryParams, params, type, isError, isExact } = outletContext;\n\t\t\tconst result = renderer({ queryParams, params, type, isError, isExact, router });\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n});\n\nexport default Outlet;\n","import { create, tsx } from \"@dojo/framework/core/vdom\";\nimport ActiveLink from \"@dojo/framework/routing/ActiveLink\";\nimport store from \"../store\";\n\nconst factory = create({ store }).properties();\n\nexport const Header = factory(function Factory({ middleware: { store } }) {\n\tconst { get, path } = store;\n\tconst isAuthenticated = !!get(path(\"session\", \"token\"));\n\tconst loggedInUser = get(path(\"session\", \"username\"));\n\n\treturn (\n\t\t<nav classes={[\"navbar\", \"navbar-light\"]}>\n\t\t\t<div classes={[\"container\"]}>\n\t\t\t\t<a classes={[\"navbar-brand\"]}>conduit</a>\n\t\t\t\t<ul classes={[\"nav\", \"navbar-nav pull-xs-right\"]}>\n\t\t\t\t\t<li classes={[\"nav-item\"]}>\n\t\t\t\t\t\t<ActiveLink classes={[\"nav-link\"]} activeClasses={[\"active\"]} to=\"home\">\n\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t</ActiveLink>\n\t\t\t\t\t</li>\n\t\t\t\t\t{isAuthenticated && (\n\t\t\t\t\t\t<li classes={[\"nav-item\"]}>\n\t\t\t\t\t\t\t<ActiveLink classes={[\"nav-link\"]} activeClasses={[\"active\"]} to=\"new-post\">\n\t\t\t\t\t\t\t\tNew Post\n\t\t\t\t\t\t\t\t<i classes={[\"ion-compose\"]} />\n\t\t\t\t\t\t\t</ActiveLink>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t\t{isAuthenticated && (\n\t\t\t\t\t\t<li classes={[\"nav-item\"]}>\n\t\t\t\t\t\t\t<ActiveLink classes={[\"nav-link\"]} activeClasses={[\"active\"]} to=\"settings\">\n\t\t\t\t\t\t\t\tSettings\n\t\t\t\t\t\t\t\t<i classes={[\"ion-gear\"]} />\n\t\t\t\t\t\t\t</ActiveLink>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t\t{isAuthenticated && (\n\t\t\t\t\t\t<li classes={[\"nav-item\"]}>\n\t\t\t\t\t\t\t<ActiveLink\n\t\t\t\t\t\t\t\tclasses={[\"nav-link\"]}\n\t\t\t\t\t\t\t\tactiveClasses={[\"active\"]}\n\t\t\t\t\t\t\t\tto=\"user\"\n\t\t\t\t\t\t\t\tparams={{ username: loggedInUser }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{loggedInUser}\n\t\t\t\t\t\t\t\t<i classes={[\"ion-gear\"]} />\n\t\t\t\t\t\t\t</ActiveLink>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t\t{!isAuthenticated && (\n\t\t\t\t\t\t<li classes={[\"nav-item\"]}>\n\t\t\t\t\t\t\t<ActiveLink classes={[\"nav-link\"]} activeClasses={[\"active\"]} to=\"login\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</ActiveLink>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t\t{!isAuthenticated && (\n\t\t\t\t\t\t<li classes={[\"nav-item\"]}>\n\t\t\t\t\t\t\t<ActiveLink classes={[\"nav-link\"]} activeClasses={[\"active\"]} to=\"register\">\n\t\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t\t</ActiveLink>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t);\n});\n\nexport default Header;\n","import { create, tsx } from \"@dojo/framework/core/vdom\";\n\nconst factory = create();\n\nexport const Footer = factory(function Footer() {\n\treturn (\n\t\t<footer>\n\t\t\t<div classes={[\"container\"]}>\n\t\t\t\t<a href=\"/\" classes={[\"logo-font\"]}>\n\t\t\t\t\tconduit\n\t\t\t\t</a>\n\t\t\t\t<span classes={[\"attribution\"]}>\n\t\t\t\t\tAn interactive learning project from <a href=\"https://thinkster.io\">Thinkster</a> Code & design\n\t\t\t\t\tlicensed under MIT.\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</footer>\n\t);\n});\n\nexport default Footer;\n","import { create, tsx } from \"@dojo/framework/core/vdom\";\nimport { Outlet } from \"@dojo/framework/routing/Outlet\";\n\nimport Header from \"./widgets/Header\";\nimport Settings from \"./widgets/Settings\";\nimport Login from \"./widgets/Login\";\nimport Register from \"./widgets/Register\";\nimport Profile from \"./widgets/Profile\";\nimport Editor from \"./widgets/Editor\";\nimport Article from \"./widgets/Article\";\nimport Home from \"./widgets/Home\";\nimport Footer from \"./widgets/Footer\";\n\nconst factory = create();\n\nexport const App = factory(function App() {\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\t\t\t<Outlet id=\"login\" renderer={() => <Login />} />\n\t\t\t<Outlet id=\"register\" renderer={() => <Register />} />\n\t\t\t<Outlet\n\t\t\t\tid=\"user\"\n\t\t\t\trenderer={(details) => {\n\t\t\t\t\tif (details.isExact()) {\n\t\t\t\t\t\treturn <Profile type=\"user\" username={details.params.username} />;\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Outlet\n\t\t\t\tid=\"favorites\"\n\t\t\t\trenderer={(details) => <Profile type=\"favorites\" username={details.params.username} />}\n\t\t\t/>\n\t\t\t<Outlet id=\"edit-post\" renderer={(details) => <Editor slug={details.params.slug} />} />\n\t\t\t<Outlet\n\t\t\t\tid=\"new-post\"\n\t\t\t\trenderer={(details) => {\n\t\t\t\t\tif (details.isExact()) {\n\t\t\t\t\t\treturn <Editor />;\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Outlet id=\"article\" renderer={(details) => <Article slug={details.params.slug} />} />\n\t\t\t<Outlet id=\"settings\" renderer={() => <Settings />} />\n\t\t\t<Outlet id=\"home\" renderer={() => <Home />} />\n\t\t\t<Footer />\n\t\t</div>\n\t);\n});\n\nexport default App;\n","import { renderer, tsx } from \"@dojo/framework/core/vdom\";\nimport { registry } from \"./store\";\n\nimport { App } from \"./App\";\n\nconst r = renderer(() => <App />);\nr.mount({ domNode: document.getElementById(\"app\")!, registry });\n","import global from './global';\n`!has('es6-iterator')`;\nimport { isArrayLike, Iterable } from './iterator';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface WeakMap<K extends object, V> {\n\t/**\n\t * Remove a `key` from the map\n\t *\n\t * @param key The key to remove\n\t * @return `true` if the value was removed, otherwise `false`\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Retrieve the value, based on the supplied `key`\n\t *\n\t * @param key The key to retrieve the `value` for\n\t * @return the `value` based on the `key` if found, otherwise `false`\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Determines if a `key` is present in the map\n\t *\n\t * @param key The `key` to check\n\t * @return `true` if the key is part of the map, otherwise `false`.\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Set a `value` for a particular `key`.\n\t *\n\t * @param key The `key` to set the `value` for\n\t * @param value The `value` to set\n\t * @return the instances\n\t */\n\tset(key: K, value: V): this;\n\n\treadonly [Symbol.toStringTag]: 'WeakMap';\n}\n\nexport interface WeakMapConstructor {\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t */\n\tnew (): WeakMap<object, any>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable?: [K, V][]): WeakMap<K, V>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable: Iterable<[K, V]>): WeakMap<K, V>;\n\n\treadonly prototype: WeakMap<object, any>;\n}\n\nexport let WeakMap: WeakMapConstructor = global.WeakMap;\n\ninterface Entry<K, V> {\n\tkey: K;\n\tvalue: V;\n}\n\nif (!has('es6-weakmap')) {\n\tconst DELETED: any = {};\n\n\tconst getUID = function getUID(): number {\n\t\treturn Math.floor(Math.random() * 100000000);\n\t};\n\n\tconst generateName = (function() {\n\t\tlet startId = Math.floor(Date.now() % 100000000);\n\n\t\treturn function generateName(): string {\n\t\t\treturn '__wm' + getUID() + (startId++ + '__');\n\t\t};\n\t})();\n\n\tWeakMap = global.WeakMap = class WeakMap<K, V> {\n\t\tprivate readonly _name: string;\n\t\tprivate readonly _frozenEntries: Entry<K, V>[];\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tthis._name = generateName();\n\n\t\t\tthis._frozenEntries = [];\n\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst item = iterable[i];\n\t\t\t\t\t\tthis.set(item[0], item[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const [key, value] of iterable) {\n\t\t\t\t\t\tthis.set(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _getFrozenEntryIndex(key: any): number {\n\t\t\tfor (let i = 0; i < this._frozenEntries.length; i++) {\n\t\t\t\tif (this._frozenEntries[i].key === key) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t}\n\n\t\tdelete(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\tentry.value = DELETED;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\tthis._frozenEntries.splice(frozenIndex, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tget(key: any): V | undefined {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\treturn entry.value;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn this._frozenEntries[frozenIndex].value;\n\t\t\t}\n\t\t}\n\n\t\thas(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tset(key: any, value?: any): this {\n\t\t\tif (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n\t\t\t\tthrow new TypeError('Invalid value used as weak map key');\n\t\t\t}\n\t\t\tlet entry: Entry<K, V> = key[this._name];\n\t\t\tif (!entry || entry.key !== key) {\n\t\t\t\tentry = Object.create(null, {\n\t\t\t\t\tkey: { value: key }\n\t\t\t\t});\n\n\t\t\t\tif (Object.isFrozen(key)) {\n\t\t\t\t\tthis._frozenEntries.push(entry);\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty(key, this._name, {\n\t\t\t\t\t\tvalue: entry\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tentry.value = value;\n\t\t\treturn this;\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'WeakMap' = 'WeakMap';\n\t};\n}\n\nexport default WeakMap;\n","import { PropertyChangeRecord } from './interfaces';\nimport { WIDGET_BASE_TYPE } from './Registry';\n\nfunction isObjectOrArray(value: any): boolean {\n\treturn Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\n\nexport function always(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: true,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function ignore(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: false,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function reference(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: previousProperty !== newProperty,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function shallow(previousProperty: any, newProperty: any, depth = 0): PropertyChangeRecord {\n\tlet changed = false;\n\n\tconst validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n\tconst validNewProperty = newProperty && isObjectOrArray(newProperty);\n\n\tif (!validOldProperty || !validNewProperty) {\n\t\treturn {\n\t\t\tchanged: true,\n\t\t\tvalue: newProperty\n\t\t};\n\t}\n\n\tconst previousKeys = Object.keys(previousProperty);\n\tconst newKeys = Object.keys(newProperty);\n\n\tif (previousKeys.length !== newKeys.length) {\n\t\tchanged = true;\n\t} else {\n\t\tchanged = newKeys.some((key) => {\n\t\t\tif (depth > 0) {\n\t\t\t\treturn shallow(newProperty[key], previousProperty[key], depth - 1).changed;\n\t\t\t}\n\t\t\treturn newProperty[key] !== previousProperty[key];\n\t\t});\n\t}\n\treturn {\n\t\tchanged,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function auto(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\tlet result;\n\tif (typeof newProperty === 'function') {\n\t\tif (newProperty._type === WIDGET_BASE_TYPE) {\n\t\t\tresult = reference(previousProperty, newProperty);\n\t\t} else {\n\t\t\tresult = ignore(previousProperty, newProperty);\n\t\t}\n\t} else if (isObjectOrArray(newProperty)) {\n\t\tresult = shallow(previousProperty, newProperty);\n\t} else {\n\t\tresult = reference(previousProperty, newProperty);\n\t}\n\treturn result;\n}\n","import { Map } from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport { Constructor, InjectorFactory, InjectorItem, RegistryLabel, WidgetBaseInterface } from './interfaces';\nimport { Registry, RegistryEventObject, RegistryItem } from './Registry';\n\nexport type RegistryHandlerEventMap = {\n\tinvalidate: EventObject<'invalidate'>;\n};\n\nexport class RegistryHandler extends Evented<RegistryHandlerEventMap> {\n\tprivate _registry = new Registry();\n\tprivate _registryWidgetLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprivate _registryInjectorLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprotected baseRegistry!: Registry;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.own(this._registry);\n\t\tconst destroy = () => {\n\t\t\tif (this.baseRegistry) {\n\t\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis.baseRegistry = undefined as any;\n\t\t\t}\n\t\t};\n\t\tthis.own({ destroy });\n\t}\n\n\tpublic set base(baseRegistry: Registry) {\n\t\tif (this.baseRegistry) {\n\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t}\n\t\tthis.baseRegistry = baseRegistry;\n\t}\n\n\tpublic get base(): Registry {\n\t\treturn this.baseRegistry;\n\t}\n\n\tpublic define(label: RegistryLabel, widget: RegistryItem): void {\n\t\tthis._registry.define(label, widget);\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injector: InjectorFactory): void {\n\t\tthis._registry.defineInjector(label, injector);\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean = false\n\t): Constructor<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel, globalPrecedence: boolean = false): InjectorItem<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n\t}\n\n\tprivate _get(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean,\n\t\tgetFunctionName: 'getInjector' | 'get',\n\t\tlabelMap: Map<Registry, RegistryLabel[]>\n\t): any {\n\t\tconst registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n\t\tfor (let i = 0; i < registries.length; i++) {\n\t\t\tconst registry: any = registries[i];\n\t\t\tif (!registry) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst item = registry[getFunctionName](label);\n\t\t\tconst registeredLabels = labelMap.get(registry) || [];\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t} else if (registeredLabels.indexOf(label) === -1) {\n\t\t\t\tconst handle = registry.on(label, (event: RegistryEventObject) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.action === 'loaded' &&\n\t\t\t\t\t\t(this as any)[getFunctionName](label, globalPrecedence) === event.item\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.emit({ type: 'invalidate' });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.own(handle);\n\t\t\t\tlabelMap.set(registry, [...registeredLabels, label]);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default RegistryHandler;\n","import global from '../shim/global';\nimport has from '../core/has';\nimport WeakMap from '../shim/WeakMap';\nimport Set from '../shim/Set';\nimport Map from '../shim/Map';\nimport {\n\tWNode,\n\tVNode,\n\tDNode,\n\tVNodeProperties,\n\tTransitionStrategy,\n\tSupportedClassName,\n\tDomVNode,\n\tLazyDefine,\n\tConstructor,\n\tRenderResult,\n\tWidgetBaseInterface,\n\tCallback,\n\tMiddlewareMap,\n\tWNodeFactory,\n\tUnionToIntersection,\n\tWidgetProperties,\n\tMiddlewareResultFactory,\n\tWidgetBaseTypes,\n\tRegistryLabel,\n\tDeferredVirtualProperties,\n\tDomOptions\n} from './interfaces';\nimport { Registry, isWidget, isWidgetBaseConstructor, isWidgetFunction, isWNodeFactory } from './Registry';\nimport { auto } from './diff';\nimport RegistryHandler from './RegistryHandler';\nimport { NodeHandler } from './NodeHandler';\n\ndeclare global {\n\tnamespace JSX {\n\t\ttype Element = WNode;\n\t\tinterface ElementAttributesProperty {\n\t\t\tproperties: {};\n\t\t}\n\t\tinterface IntrinsicElements {\n\t\t\t[key: string]: VNodeProperties;\n\t\t}\n\t}\n}\n\nexport interface BaseNodeWrapper {\n\tid: string;\n\towningId: string;\n\tnode: WNode<any> | VNode;\n\tdomNode?: Node;\n\tdepth: number;\n\torder: number;\n\trequiresInsertBefore?: boolean;\n\thasPreviousSiblings?: boolean;\n\thasParentWNode?: boolean;\n\tnamespace?: string;\n\thasAnimations?: boolean;\n\tparentId: string;\n\tchildDomWrapperId?: string;\n}\n\nexport interface WNodeWrapper extends BaseNodeWrapper {\n\tnode: WNode<any>;\n\tinstance?: any;\n\tmergeNodes?: Node[];\n\tnodeHandlerCalled?: boolean;\n\tregistryItem?: Callback<any, any, RenderResult> | Constructor<any> | null;\n\tproperties: any;\n}\n\nexport interface WidgetMeta {\n\tdirty: boolean;\n\tinvalidator: () => void;\n\tmiddleware?: any;\n\tregistryHandler?: RegistryHandler;\n\tregistry: Registry;\n\tproperties: any;\n\tchildren?: DNode[];\n\trendering: boolean;\n\tnodeMap?: Map<string | number, HTMLElement>;\n\tdestroyMap?: Map<string, () => void>;\n\tdeferRefs: number;\n\tcustomDiffProperties?: Set<string>;\n\tcustomDiffMap?: Map<string, Map<string, (current: any, next: any) => void>>;\n}\n\nexport interface WidgetData {\n\tonDetach: () => void;\n\tonAttach: () => void;\n\tdirty: boolean;\n\tnodeHandler: NodeHandler;\n\tinvalidate?: Function;\n\trendering: boolean;\n\tinputProperties: any;\n\tregistry: RegistryHandler;\n}\n\nexport interface VNodeWrapper extends BaseNodeWrapper {\n\tnode: VNode | DomVNode;\n\tmerged?: boolean;\n\tinserted?: boolean;\n\tdeferredProperties?: VNodeProperties;\n}\n\nexport type DNodeWrapper = VNodeWrapper | WNodeWrapper;\n\nexport interface MountOptions {\n\tsync: boolean;\n\tmerge: boolean;\n\ttransition?: TransitionStrategy;\n\tdomNode: HTMLElement;\n\tregistry: Registry;\n}\n\nexport interface Renderer {\n\tinvalidate(): void;\n\tmount(mountOptions?: Partial<MountOptions>): void;\n}\n\ninterface ProcessItem {\n\tcurrent?: (WNodeWrapper | VNodeWrapper)[];\n\tnext?: (WNodeWrapper | VNodeWrapper)[];\n\tmeta: ProcessMeta;\n}\n\ninterface ProcessResult {\n\titem?: ProcessItem;\n\twidget?: AttachApplication | DetachApplication;\n\tdom?: ApplicationInstruction;\n}\n\ninterface ProcessMeta {\n\tmergeNodes?: Node[];\n\toldIndex?: number;\n\tnewIndex?: number;\n}\n\ninterface InvalidationQueueItem {\n\tid: string;\n\tdepth: number;\n\torder: number;\n}\n\ninterface Instruction {\n\tcurrent: undefined | DNodeWrapper;\n\tnext: undefined | DNodeWrapper;\n}\n\ninterface CreateWidgetInstruction {\n\tnext: WNodeWrapper;\n}\n\ninterface UpdateWidgetInstruction {\n\tcurrent: WNodeWrapper;\n\tnext: WNodeWrapper;\n}\n\ninterface RemoveWidgetInstruction {\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomInstruction {\n\tnext: VNodeWrapper;\n}\n\ninterface UpdateDomInstruction {\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface RemoveDomInstruction {\n\tcurrent: VNodeWrapper;\n}\n\ninterface AttachApplication {\n\ttype: 'attach';\n\tid: string;\n\tinstance?: WidgetBaseInterface;\n\tattached?: boolean;\n}\n\ninterface DetachApplication {\n\ttype: 'detach';\n\tcurrent: WNodeWrapper;\n\tinstance?: WidgetBaseInterface;\n}\n\ninterface CreateDomApplication {\n\ttype: 'create';\n\tcurrent?: VNodeWrapper;\n\tnext: VNodeWrapper;\n\tparentDomNode: Node;\n}\n\ninterface DeleteDomApplication {\n\ttype: 'delete';\n\tcurrent: VNodeWrapper;\n}\n\ninterface UpdateDomApplication {\n\ttype: 'update';\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface PreviousProperties {\n\tproperties: any;\n\tattributes?: any;\n\tevents?: any;\n}\n\ntype ApplicationInstruction =\n\t| CreateDomApplication\n\t| UpdateDomApplication\n\t| DeleteDomApplication\n\t| Required<AttachApplication>\n\t| DetachApplication;\n\nconst EMPTY_ARRAY: DNodeWrapper[] = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\nconst WNODE = '__WNODE_TYPE';\nconst VNODE = '__VNODE_TYPE';\nconst DOMVNODE = '__DOMVNODE_TYPE';\n\nexport function isTextNode(item: any): item is Text {\n\treturn item && item.nodeType === 3;\n}\n\nfunction isLazyDefine(item: any): item is LazyDefine<any> {\n\treturn Boolean(item && item.label);\n}\n\nfunction isWNodeWrapper(child: DNodeWrapper): child is WNodeWrapper {\n\treturn child && isWNode(child.node);\n}\n\nfunction isVNodeWrapper(child?: DNodeWrapper | null): child is VNodeWrapper {\n\treturn !!child && isVNode(child.node);\n}\n\nfunction isVirtualWrapper(child?: DNodeWrapper | null): boolean {\n\treturn isVNodeWrapper(child) && child.node.tag === 'virtual';\n}\n\nfunction isBodyWrapper(wrapper?: DNodeWrapper): boolean {\n\treturn isVNodeWrapper(wrapper) && wrapper.node.tag === 'body';\n}\n\nfunction isAttachApplication(value: any): value is AttachApplication | DetachApplication {\n\treturn !!value.type;\n}\n\nexport function isWNode<W extends WidgetBaseTypes = any>(child: any): child is WNode<W> {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === WNODE);\n}\n\nexport function isVNode(child: DNode): child is VNode {\n\treturn Boolean(\n\t\tchild && child !== true && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE)\n\t);\n}\n\nexport function isDomVNode(child: DNode): child is DomVNode {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === DOMVNODE);\n}\n\nexport function isElementNode(value: any): value is Element {\n\treturn !!value.tagName;\n}\n\nfunction toTextVNode(data: any): VNode {\n\treturn {\n\t\ttag: '',\n\t\tproperties: {},\n\t\tchildren: undefined,\n\t\ttext: `${data}`,\n\t\ttype: VNODE\n\t};\n}\n\nfunction updateAttributes(\n\tdomNode: Element,\n\tpreviousAttributes: { [index: string]: string | undefined },\n\tattributes: { [index: string]: string | undefined },\n\tnamespace?: string\n) {\n\tconst attrNames = Object.keys(attributes);\n\tconst attrCount = attrNames.length;\n\tfor (let i = 0; i < attrCount; i++) {\n\t\tconst attrName = attrNames[i];\n\t\tconst attrValue = attributes[attrName];\n\t\tconst previousAttrValue = previousAttributes[attrName];\n\t\tif (attrValue !== previousAttrValue) {\n\t\t\tupdateAttribute(domNode, attrName, attrValue, namespace);\n\t\t}\n\t}\n}\n\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w<W extends WidgetBaseTypes>(\n\tnode: WNode<W>,\n\tproperties: Partial<W['properties']>,\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseTypes>(\n\twidgetConstructor: Constructor<W> | RegistryLabel | WNodeFactory<W> | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseTypes>(\n\twidgetConstructorOrNode:\n\t\t| Constructor<W>\n\t\t| RegistryLabel\n\t\t| WNodeFactory<W>\n\t\t| WNode<W>\n\t\t| LazyDefine<W>\n\t\t| Callback<any, any, RenderResult>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W> {\n\tif (isWNodeFactory<W>(widgetConstructorOrNode)) {\n\t\treturn widgetConstructorOrNode(properties, children);\n\t}\n\n\tif (isWNode<W>(widgetConstructorOrNode)) {\n\t\tproperties = { ...(widgetConstructorOrNode.properties as any), ...(properties as any) };\n\t\tchildren = children ? children : widgetConstructorOrNode.children;\n\t\twidgetConstructorOrNode = widgetConstructorOrNode.widgetConstructor;\n\t}\n\n\treturn {\n\t\tchildren: children || [],\n\t\twidgetConstructor: widgetConstructorOrNode,\n\t\tproperties,\n\t\ttype: WNODE\n\t};\n}\n\n/**\n * Wrapper function for calls to create VNodes.\n */\nexport function v(node: VNode, properties: VNodeProperties, children: undefined | DNode[]): VNode;\nexport function v(node: VNode, properties: VNodeProperties): VNode;\nexport function v(tag: string, children: undefined | DNode[]): VNode;\nexport function v<K extends keyof HTMLElementTagNameMap>(\n\ttag: K,\n\tproperties: DeferredVirtualProperties | VNodeProperties<HTMLElementTagNameMap[K]>,\n\tchildren?: DNode[]\n): VNode;\nexport function v(tag: string, properties: DeferredVirtualProperties | VNodeProperties, children?: DNode[]): VNode;\nexport function v(tag: string): VNode;\nexport function v(\n\ttag: string | VNode,\n\tpropertiesOrChildren: VNodeProperties | DeferredVirtualProperties | DNode[] = {},\n\tchildren: undefined | DNode[] = undefined\n): VNode {\n\tlet properties: VNodeProperties | DeferredVirtualProperties = propertiesOrChildren;\n\tlet deferredPropertiesCallback;\n\n\tif (Array.isArray(propertiesOrChildren)) {\n\t\tchildren = propertiesOrChildren;\n\t\tproperties = {};\n\t}\n\n\tif (typeof properties === 'function') {\n\t\tdeferredPropertiesCallback = properties;\n\t\tproperties = {};\n\t}\n\n\tif (isVNode(tag)) {\n\t\tlet { classes = [], styles = {}, ...newProperties } = properties;\n\t\tlet { classes: nodeClasses = [], styles: nodeStyles = {}, ...nodeProperties } = tag.properties;\n\t\tnodeClasses = Array.isArray(nodeClasses) ? nodeClasses : [nodeClasses];\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tstyles = { ...nodeStyles, ...styles };\n\t\tproperties = { ...nodeProperties, ...newProperties, classes: [...nodeClasses, ...classes], styles };\n\t\tchildren = children ? children : tag.children;\n\t\ttag = tag.tag;\n\t}\n\n\treturn {\n\t\ttag,\n\t\tdeferredPropertiesCallback,\n\t\tchildren,\n\t\tproperties,\n\t\ttype: VNODE\n\t};\n}\n\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom(\n\t{ node, attrs = {}, props = {}, on = {}, diffType = 'none', onAttach }: DomOptions,\n\tchildren?: DNode[]\n): DomVNode {\n\treturn {\n\t\ttag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n\t\tproperties: props,\n\t\tattributes: attrs,\n\t\tevents: on,\n\t\tchildren,\n\t\ttype: DOMVNODE,\n\t\tdomNode: node,\n\t\ttext: isElementNode(node) ? undefined : node.data,\n\t\tdiffType,\n\t\tonAttach\n\t};\n}\n\nexport const REGISTRY_ITEM = '__registry_item';\n\nexport class FromRegistry<P> {\n\tstatic type = REGISTRY_ITEM;\n\tproperties: P = {} as P;\n\tname: string | undefined;\n}\n\nexport function fromRegistry<P>(tag: string): Constructor<FromRegistry<P>> {\n\treturn class extends FromRegistry<P> {\n\t\tproperties: P = {} as P;\n\t\tstatic type = REGISTRY_ITEM;\n\t\tname = tag;\n\t};\n}\n\nfunction spreadChildren(children: any[], child: any): any[] {\n\tif (Array.isArray(child)) {\n\t\treturn child.reduce(spreadChildren, children);\n\t} else {\n\t\treturn [...children, child];\n\t}\n}\n\nexport function tsx(tag: any, properties = {}, ...children: any[]): DNode {\n\tchildren = children.reduce(spreadChildren, []);\n\tproperties = properties === null ? {} : properties;\n\tif (typeof tag === 'string') {\n\t\treturn v(tag, properties, children);\n\t} else if (tag.type === 'registry' && (properties as any).__autoRegistryItem) {\n\t\tconst name = (properties as any).__autoRegistryItem;\n\t\tdelete (properties as any).__autoRegistryItem;\n\t\treturn w(name, properties, children);\n\t} else if (tag.type === REGISTRY_ITEM) {\n\t\tconst registryItem = new tag();\n\t\treturn w(registryItem.name, properties, children);\n\t} else {\n\t\treturn w(tag, properties, children);\n\t}\n}\n\nexport function propertiesDiff(current: any, next: any, invalidator: () => void, ignoreProperties: string[]) {\n\tconst propertyNames = [...Object.keys(current), ...Object.keys(next)];\n\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\tif (ignoreProperties.indexOf(propertyNames[i]) > -1) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst result = auto(current[propertyNames[i]], next[propertyNames[i]]);\n\t\tif (result.changed) {\n\t\t\tinvalidator();\n\t\t\tbreak;\n\t\t}\n\t\tignoreProperties.push(propertyNames[i]);\n\t}\n}\n\nfunction buildPreviousProperties(domNode: any, current: VNodeWrapper) {\n\tconst {\n\t\tnode: { diffType, properties, attributes }\n\t} = current;\n\tif (!diffType || diffType === 'vdom') {\n\t\treturn {\n\t\t\tproperties: current.deferredProperties\n\t\t\t\t? { ...current.deferredProperties, ...current.node.properties }\n\t\t\t\t: current.node.properties,\n\t\t\tattributes: current.node.attributes,\n\t\t\tevents: current.node.events\n\t\t};\n\t} else if (diffType === 'none') {\n\t\treturn {\n\t\t\tproperties: {},\n\t\t\tattributes: current.node.attributes ? {} : undefined,\n\t\t\tevents: current.node.events\n\t\t};\n\t}\n\tlet newProperties: any = {\n\t\tproperties: {}\n\t};\n\tif (attributes) {\n\t\tnewProperties.attributes = {};\n\t\tnewProperties.events = current.node.events;\n\t\tObject.keys(properties).forEach((propName) => {\n\t\t\tnewProperties.properties[propName] = domNode[propName];\n\t\t});\n\t\tObject.keys(attributes).forEach((attrName) => {\n\t\t\tnewProperties.attributes[attrName] = domNode.getAttribute(attrName);\n\t\t});\n\t\treturn newProperties;\n\t}\n\tnewProperties.properties = Object.keys(properties).reduce(\n\t\t(props, property) => {\n\t\t\tprops[property] = domNode.getAttribute(property) || domNode[property];\n\t\t\treturn props;\n\t\t},\n\t\t{} as any\n\t);\n\treturn newProperties;\n}\n\nfunction checkDistinguishable(wrappers: DNodeWrapper[], index: number, parentWNodeWrapper?: WNodeWrapper) {\n\tconst wrapperToCheck = wrappers[index];\n\tif (isVNodeWrapper(wrapperToCheck) && !wrapperToCheck.node.tag) {\n\t\treturn;\n\t}\n\tconst { key } = wrapperToCheck.node.properties;\n\tlet parentName = 'unknown';\n\tif (parentWNodeWrapper) {\n\t\tconst {\n\t\t\tnode: { widgetConstructor }\n\t\t} = parentWNodeWrapper;\n\t\tparentName = (widgetConstructor as any).name || 'unknown';\n\t}\n\n\tif (key === undefined || key === null) {\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tif (i !== index) {\n\t\t\t\tconst wrapper = wrappers[i];\n\t\t\t\tif (same(wrapper, wrapperToCheck)) {\n\t\t\t\t\tlet nodeIdentifier: string;\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\tnodeIdentifier = (wrapper.node.widgetConstructor as any).name || 'unknown';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodeIdentifier = wrapper.node.tag;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`A widget (${parentName}) has had a child added or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction same(dnode1: DNodeWrapper, dnode2: DNodeWrapper): boolean {\n\tif (isVNodeWrapper(dnode1) && isVNodeWrapper(dnode2)) {\n\t\tif (isDomVNode(dnode1.node) && isDomVNode(dnode2.node)) {\n\t\t\tif (dnode1.node.domNode !== dnode2.node.domNode) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (dnode1.node.tag !== dnode2.node.tag) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t} else if (isWNodeWrapper(dnode1) && isWNodeWrapper(dnode2)) {\n\t\tconst widgetConstructor1 = dnode1.registryItem || dnode1.node.widgetConstructor;\n\t\tconst widgetConstructor2 = dnode2.registryItem || dnode2.node.widgetConstructor;\n\t\tif (dnode1.instance === undefined && typeof widgetConstructor2 === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (widgetConstructor1 !== widgetConstructor2) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction findIndexOfChild(children: DNodeWrapper[], sameAs: DNodeWrapper, start: number) {\n\tfor (let i = start; i < children.length; i++) {\n\t\tif (same(children[i], sameAs)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction createClassPropValue(classes: SupportedClassName | SupportedClassName[] = []) {\n\tlet classNames = '';\n\tif (Array.isArray(classes)) {\n\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\tlet className = classes[i];\n\t\t\tif (className && className !== true) {\n\t\t\t\tclassNames = classNames ? `${classNames} ${className}` : className;\n\t\t\t}\n\t\t}\n\t\treturn classNames;\n\t}\n\tif (classes && classes !== true) {\n\t\tclassNames = classes;\n\t}\n\treturn classNames;\n}\n\nfunction updateAttribute(domNode: Element, attrName: string, attrValue: string | undefined, namespace?: string) {\n\tif (namespace === NAMESPACE_SVG && attrName === 'href' && attrValue) {\n\t\tdomNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n\t} else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n\t\tdomNode.removeAttribute(attrName);\n\t} else {\n\t\tdomNode.setAttribute(attrName, attrValue);\n\t}\n}\n\nfunction arrayFrom(arr: any) {\n\treturn Array.prototype.slice.call(arr);\n}\n\nfunction createFactory(callback: any, middlewares: any): any {\n\tconst factory = (properties: any, children?: any) => {\n\t\tif (properties) {\n\t\t\tconst result = w(callback, properties, children);\n\t\t\tcallback.isWidget = true;\n\t\t\tcallback.middlewares = middlewares;\n\t\t\treturn result;\n\t\t}\n\t\treturn {\n\t\t\tmiddlewares,\n\t\t\tcallback\n\t\t};\n\t};\n\tfactory.isFactory = true;\n\treturn factory;\n}\n\nexport function create<T extends MiddlewareMap, MiddlewareProps = ReturnType<T[keyof T]>['properties']>(\n\tmiddlewares: T = {} as T\n) {\n\tfunction properties<Props extends {}>() {\n\t\tfunction returns<ReturnValue>(\n\t\t\tcallback: Callback<WidgetProperties & Props & UnionToIntersection<MiddlewareProps>, T, ReturnValue>\n\t\t): ReturnValue extends RenderResult\n\t\t\t? WNodeFactory<{\n\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\tchildren: DNode[];\n\t\t\t  }>\n\t\t\t: MiddlewareResultFactory<WidgetProperties & Props & UnionToIntersection<MiddlewareProps>, T, ReturnValue> {\n\t\t\treturn createFactory(callback, middlewares);\n\t\t}\n\t\treturn returns;\n\t}\n\n\tfunction returns<ReturnValue>(\n\t\tcallback: Callback<WidgetProperties & UnionToIntersection<MiddlewareProps>, T, ReturnValue>\n\t): ReturnValue extends RenderResult\n\t\t? WNodeFactory<{\n\t\t\t\tproperties: WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\tchildren: DNode[];\n\t\t  }>\n\t\t: MiddlewareResultFactory<WidgetProperties & UnionToIntersection<MiddlewareProps>, T, ReturnValue> {\n\t\treturn createFactory(callback, middlewares);\n\t}\n\treturns.properties = properties;\n\treturn returns;\n}\n\nconst factory = create();\n\nfunction wrapNodes(renderer: () => RenderResult) {\n\tconst result = renderer();\n\tconst isWNodeWrapper = isWNode(result);\n\tconst callback = () => {\n\t\treturn result;\n\t};\n\tcallback.isWNodeWrapper = isWNodeWrapper;\n\treturn factory(callback);\n}\n\nexport const widgetInstanceMap = new WeakMap<WidgetBaseInterface, WidgetData>();\nconst widgetMetaMap = new Map<string, WidgetMeta>();\nconst requestedDomNodes = new Set();\nlet wrapperId = 0;\nlet metaId = 0;\n\nfunction addNodeToMap(id: string, key: string | number, node: HTMLElement) {\n\tconst widgetMeta = widgetMetaMap.get(id);\n\tif (widgetMeta) {\n\t\twidgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n\t\tconst existingNode = widgetMeta.nodeMap.get(key);\n\t\tif (!existingNode) {\n\t\t\twidgetMeta.nodeMap.set(key, node);\n\t\t}\n\t\tif (requestedDomNodes.has(`${id}-${key}`)) {\n\t\t\twidgetMeta.invalidator();\n\t\t\trequestedDomNodes.delete(`${id}-${key}`);\n\t\t}\n\t}\n}\n\nfunction destroyHandles(destroyMap: Map<string, () => void>) {\n\tdestroyMap.forEach((destroy) => destroy());\n\tdestroyMap.clear();\n}\n\nfunction runDiffs(meta: WidgetMeta, current: any, next: any) {\n\tmeta.customDiffMap = meta.customDiffMap || new Map();\n\tif (meta.customDiffMap.size) {\n\t\tmeta.customDiffMap.forEach((diffMap) => {\n\t\t\tdiffMap.forEach((diff) => diff({ ...current }, { ...next }));\n\t\t});\n\t}\n}\n\nexport const invalidator = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\treturn () => {\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\treturn widgetMeta.invalidator();\n\t\t}\n\t};\n});\n\nexport const node = factory(({ id }) => {\n\treturn {\n\t\tget(key: string | number): HTMLElement | null {\n\t\t\tconst [widgetId] = id.split('-');\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n\t\t\t\tconst node = widgetMeta.nodeMap.get(key);\n\t\t\t\tif (node) {\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t\trequestedDomNodes.add(`${widgetId}-${key}`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n});\n\nexport const diffProperty = factory(({ id }) => {\n\treturn (propertyName: string, diff: (current: any, next: any) => void) => {\n\t\tconst [widgetId] = id.split('-');\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\twidgetMeta.customDiffMap = widgetMeta.customDiffMap || new Map();\n\t\t\twidgetMeta.customDiffProperties = widgetMeta.customDiffProperties || new Set();\n\t\t\tconst propertyDiffMap = widgetMeta.customDiffMap.get(id) || new Map();\n\t\t\tif (!propertyDiffMap.has(propertyName)) {\n\t\t\t\tpropertyDiffMap.set(propertyName, diff);\n\t\t\t\twidgetMeta.customDiffProperties.add(propertyName);\n\t\t\t}\n\t\t\twidgetMeta.customDiffMap.set(id, propertyDiffMap);\n\t\t}\n\t};\n});\n\nexport const destroy = factory(({ id }) => {\n\treturn (destroyFunction: () => void): void => {\n\t\tconst [widgetId] = id.split('-');\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\twidgetMeta.destroyMap = widgetMeta.destroyMap || new Map();\n\t\t\tif (!widgetMeta.destroyMap.has(id)) {\n\t\t\t\twidgetMeta.destroyMap.set(id, destroyFunction);\n\t\t\t}\n\t\t}\n\t};\n});\n\nexport const getRegistry = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\treturn (): RegistryHandler | null => {\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\tif (!widgetMeta.registryHandler) {\n\t\t\t\twidgetMeta.registryHandler = new RegistryHandler();\n\t\t\t\twidgetMeta.registryHandler.base = widgetMeta.registry;\n\t\t\t\twidgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n\t\t\t}\n\t\t\twidgetMeta.registryHandler = widgetMeta.registryHandler || new RegistryHandler();\n\t\t\treturn widgetMeta.registryHandler;\n\t\t}\n\t\treturn null;\n\t};\n});\n\nexport const defer = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\tlet isDeferred = false;\n\treturn {\n\t\tpause() {\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (!isDeferred && widgetMeta) {\n\t\t\t\twidgetMeta.deferRefs = widgetMeta.deferRefs + 1;\n\t\t\t\tisDeferred = true;\n\t\t\t}\n\t\t},\n\t\tresume() {\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (isDeferred && widgetMeta) {\n\t\t\t\twidgetMeta.deferRefs = widgetMeta.deferRefs - 1;\n\t\t\t\tisDeferred = false;\n\t\t\t}\n\t\t}\n\t};\n});\n\nexport function renderer(renderer: () => RenderResult): Renderer {\n\tlet _mountOptions: MountOptions = {\n\t\tsync: false,\n\t\tmerge: true,\n\t\ttransition: undefined,\n\t\tdomNode: global.document.body,\n\t\tregistry: new Registry()\n\t};\n\tlet _invalidationQueue: InvalidationQueueItem[] = [];\n\tlet _processQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _deferredProcessQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _applicationQueue: ApplicationInstruction[] = [];\n\tlet _eventMap = new WeakMap<Function, EventListener>();\n\tlet _idToWrapperMap = new Map<string, DNodeWrapper>();\n\tlet _wrapperSiblingMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _idToChildrenWrappers = new Map<string, DNodeWrapper[]>();\n\tlet _insertBeforeMap: undefined | WeakMap<DNodeWrapper, Node> = new WeakMap<DNodeWrapper, Node>();\n\tlet _nodeToWrapperMap = new WeakMap<VNode | WNode<any>, WNodeWrapper>();\n\tlet _renderScheduled: number | undefined;\n\tlet _idleCallbacks: Function[] = [];\n\tlet _deferredRenderCallbacks: Function[] = [];\n\tlet parentInvalidate: () => void;\n\tlet _allMergedNodes: Node[] = [];\n\n\tfunction nodeOperation(\n\t\tpropName: string,\n\t\tpropValue: (() => boolean) | boolean,\n\t\tpreviousValue: boolean,\n\t\tdomNode: HTMLElement & { [index: string]: any }\n\t): void {\n\t\tlet result = propValue && !previousValue;\n\t\tif (typeof propValue === 'function') {\n\t\t\tresult = propValue();\n\t\t}\n\t\tif (result === true) {\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tdomNode[propName]();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction updateEvent(\n\t\tdomNode: Node,\n\t\teventName: string,\n\t\tcurrentValue: (event: Event) => void,\n\t\tpreviousValue?: Function\n\t) {\n\t\tif (previousValue) {\n\t\t\tconst previousEvent = _eventMap.get(previousValue);\n\t\t\tpreviousEvent && domNode.removeEventListener(eventName, previousEvent);\n\t\t}\n\n\t\tlet callback = currentValue;\n\n\t\tif (eventName === 'input') {\n\t\t\tcallback = function(this: any, evt: Event) {\n\t\t\t\tcurrentValue.call(this, evt);\n\t\t\t\t(evt.target as any)['oninput-value'] = (evt.target as HTMLInputElement).value;\n\t\t\t};\n\t\t}\n\n\t\tdomNode.addEventListener(eventName, callback);\n\t\t_eventMap.set(currentValue, callback);\n\t}\n\n\tfunction removeOrphanedEvents(\n\t\tdomNode: Element,\n\t\tpreviousProperties: VNodeProperties,\n\t\tproperties: VNodeProperties,\n\t\tonlyEvents: boolean = false\n\t) {\n\t\tObject.keys(previousProperties).forEach((propName) => {\n\t\t\tconst isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n\t\t\tconst eventName = onlyEvents ? propName : propName.substr(2);\n\t\t\tif (isEvent && !properties[propName]) {\n\t\t\t\tconst eventCallback = _eventMap.get(previousProperties[propName]);\n\t\t\t\tif (eventCallback) {\n\t\t\t\t\tdomNode.removeEventListener(eventName, eventCallback);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction resolveRegistryItem(wrapper: WNodeWrapper, instance?: any, id?: string) {\n\t\tif (!isWidget(wrapper.node.widgetConstructor)) {\n\t\t\tconst owningNode = _nodeToWrapperMap.get(wrapper.node);\n\t\t\tif (owningNode) {\n\t\t\t\tif (owningNode.instance) {\n\t\t\t\t\tinstance = owningNode.instance;\n\t\t\t\t} else {\n\t\t\t\t\tid = owningNode.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet registry: RegistryHandler | undefined;\n\t\t\tif (instance) {\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance);\n\t\t\t\tif (instanceData) {\n\t\t\t\t\tregistry = instanceData.registry;\n\t\t\t\t}\n\t\t\t} else if (id !== undefined) {\n\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\tif (widgetMeta) {\n\t\t\t\t\tif (!widgetMeta.registryHandler) {\n\t\t\t\t\t\twidgetMeta.registryHandler = new RegistryHandler();\n\t\t\t\t\t\twidgetMeta.registryHandler.base = widgetMeta.registry;\n\t\t\t\t\t\twidgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n\t\t\t\t\t}\n\t\t\t\t\tregistry = widgetMeta.registryHandler;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (registry) {\n\t\t\t\tlet registryLabel: symbol | string;\n\t\t\t\tif (isLazyDefine(wrapper.node.widgetConstructor)) {\n\t\t\t\t\tconst { label, registryItem } = wrapper.node.widgetConstructor;\n\t\t\t\t\tif (!registry.has(label)) {\n\t\t\t\t\t\tregistry.define(label, registryItem);\n\t\t\t\t\t}\n\t\t\t\t\tregistryLabel = label;\n\t\t\t\t} else {\n\t\t\t\t\tregistryLabel = wrapper.node.widgetConstructor as any;\n\t\t\t\t}\n\t\t\t\tlet item = registry.get(registryLabel) as any;\n\t\t\t\tif (isWNodeFactory(item)) {\n\t\t\t\t\tconst node = item(wrapper.node.properties, wrapper.node.children);\n\t\t\t\t\tif (isWidgetFunction(node.widgetConstructor)) {\n\t\t\t\t\t\twrapper.registryItem = node.widgetConstructor;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twrapper.registryItem = item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction mapNodeToInstance(nodes: DNode[], wrapper: WNodeWrapper) {\n\t\twhile (nodes.length) {\n\t\t\tlet node = nodes.pop();\n\t\t\tif (isWNode(node) || isVNode(node)) {\n\t\t\t\tif (!_nodeToWrapperMap.has(node)) {\n\t\t\t\t\t_nodeToWrapperMap.set(node, wrapper);\n\t\t\t\t\tif (node.children && node.children.length) {\n\t\t\t\t\t\tnodes = [...nodes, ...node.children];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction renderedToWrapper(\n\t\trendered: DNode[],\n\t\tparent: DNodeWrapper,\n\t\tcurrentParent: DNodeWrapper | null\n\t): DNodeWrapper[] {\n\t\tconst { requiresInsertBefore, hasPreviousSiblings, namespace, depth } = parent;\n\t\tconst wrappedRendered: DNodeWrapper[] = [];\n\t\tconst hasParentWNode = isWNodeWrapper(parent);\n\t\tconst hasVirtualParentNode = isVirtualWrapper(parent);\n\t\tconst currentParentChildren =\n\t\t\t(isVNodeWrapper(currentParent) && _idToChildrenWrappers.get(currentParent.id)) || [];\n\t\tconst hasCurrentParentChildren = currentParentChildren.length > 0;\n\t\tconst insertBefore =\n\t\t\t((requiresInsertBefore || hasPreviousSiblings !== false) && (hasParentWNode || hasVirtualParentNode)) ||\n\t\t\t(hasCurrentParentChildren && rendered.length > 1);\n\t\tlet previousItem: DNodeWrapper | undefined;\n\t\tif (isWNodeWrapper(parent) && rendered.length) {\n\t\t\tmapNodeToInstance([...rendered], parent);\n\t\t}\n\t\tfor (let i = 0; i < rendered.length; i++) {\n\t\t\tlet renderedItem = rendered[i];\n\t\t\tif (!renderedItem || renderedItem === true) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof renderedItem === 'string') {\n\t\t\t\trenderedItem = toTextVNode(renderedItem);\n\t\t\t}\n\t\t\tconst owningNode = _nodeToWrapperMap.get(renderedItem);\n\t\t\tconst wrapper: DNodeWrapper = {\n\t\t\t\tnode: renderedItem,\n\t\t\t\tdepth: depth + 1,\n\t\t\t\torder: i,\n\t\t\t\tparentId: parent.id,\n\t\t\t\trequiresInsertBefore: insertBefore,\n\t\t\t\thasParentWNode,\n\t\t\t\tnamespace: namespace\n\t\t\t} as DNodeWrapper;\n\t\t\tif (isVNode(renderedItem)) {\n\t\t\t\tif (renderedItem.deferredPropertiesCallback) {\n\t\t\t\t\t(wrapper as VNodeWrapper).deferredProperties = renderedItem.deferredPropertiesCallback(false);\n\t\t\t\t}\n\t\t\t\tif (renderedItem.properties.exitAnimation) {\n\t\t\t\t\tparent.hasAnimations = true;\n\t\t\t\t\tlet nextParent = _idToWrapperMap.get(parent.parentId);\n\t\t\t\t\twhile (nextParent) {\n\t\t\t\t\t\tif (nextParent.hasAnimations) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextParent.hasAnimations = true;\n\t\t\t\t\t\tnextParent = _idToWrapperMap.get(nextParent.parentId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (owningNode) {\n\t\t\t\twrapper.owningId = owningNode.id;\n\t\t\t}\n\t\t\tif (isWNode(renderedItem)) {\n\t\t\t\tresolveRegistryItem(wrapper as WNodeWrapper, (parent as any).instance, (parent as any).id);\n\t\t\t}\n\t\t\tif (previousItem) {\n\t\t\t\t_wrapperSiblingMap.set(previousItem, wrapper);\n\t\t\t}\n\t\t\twrappedRendered.push(wrapper);\n\t\t\tpreviousItem = wrapper;\n\t\t}\n\t\treturn wrappedRendered;\n\t}\n\n\tfunction findParentDomNode(currentNode: DNodeWrapper): Node | undefined {\n\t\tlet parentDomNode: Node | undefined;\n\t\tlet parentWrapper = _idToWrapperMap.get(currentNode.parentId);\n\n\t\twhile (!parentDomNode && parentWrapper) {\n\t\t\tif (\n\t\t\t\t!parentDomNode &&\n\t\t\t\tisVNodeWrapper(parentWrapper) &&\n\t\t\t\t!isVirtualWrapper(parentWrapper) &&\n\t\t\t\tparentWrapper.domNode\n\t\t\t) {\n\t\t\t\tparentDomNode = parentWrapper.domNode;\n\t\t\t}\n\t\t\tparentWrapper = _idToWrapperMap.get(parentWrapper.parentId);\n\t\t}\n\t\treturn parentDomNode;\n\t}\n\n\tfunction runDeferredProperties(next: VNodeWrapper) {\n\t\tconst { deferredPropertiesCallback } = next.node;\n\t\tif (deferredPropertiesCallback) {\n\t\t\tconst properties = next.node.properties;\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tif (_idToWrapperMap.has(next.owningId)) {\n\t\t\t\t\tconst deferredProperties = next.deferredProperties;\n\t\t\t\t\tnext.deferredProperties = deferredPropertiesCallback(true);\n\t\t\t\t\tprocessProperties(next, {\n\t\t\t\t\t\tproperties: { ...deferredProperties, ...properties }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction findInsertBefore(next: DNodeWrapper) {\n\t\tlet insertBefore: Node | null = null;\n\t\tlet searchNode: DNodeWrapper | undefined = next;\n\t\twhile (!insertBefore) {\n\t\t\tconst nextSibling = _wrapperSiblingMap.get(searchNode);\n\t\t\tif (nextSibling) {\n\t\t\t\tlet domNode = nextSibling.domNode;\n\t\t\t\tif ((isWNodeWrapper(nextSibling) || isVirtualWrapper(nextSibling)) && nextSibling.childDomWrapperId) {\n\t\t\t\t\tconst childWrapper = _idToWrapperMap.get(nextSibling.childDomWrapperId);\n\t\t\t\t\tif (childWrapper) {\n\t\t\t\t\t\tdomNode = childWrapper.domNode;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (domNode && domNode.parentNode) {\n\t\t\t\t\tinsertBefore = domNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsearchNode = nextSibling;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsearchNode = searchNode && _idToWrapperMap.get(searchNode.parentId);\n\t\t\tif (!searchNode || (isVNodeWrapper(searchNode) && !isVirtualWrapper(searchNode))) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn insertBefore;\n\t}\n\n\tfunction setValue(domNode: any, propValue?: any, previousValue?: any) {\n\t\tconst domValue = domNode.value;\n\t\tconst onInputValue = domNode['oninput-value'];\n\t\tconst onSelectValue = domNode['select-value'];\n\n\t\tif (onSelectValue && domValue !== onSelectValue) {\n\t\t\tdomNode.value = onSelectValue;\n\t\t\tif (domNode.value === onSelectValue) {\n\t\t\t\tdomNode['select-value'] = undefined;\n\t\t\t}\n\t\t} else if ((onInputValue && domValue === onInputValue) || propValue !== previousValue) {\n\t\t\tdomNode.value = propValue;\n\t\t\tdomNode['oninput-value'] = undefined;\n\t\t}\n\t}\n\n\tfunction setProperties(\n\t\tdomNode: HTMLElement,\n\t\tcurrentProperties: VNodeProperties = {},\n\t\tnextWrapper: VNodeWrapper,\n\t\tincludesEventsAndAttributes = true\n\t): void {\n\t\tconst properties = nextWrapper.deferredProperties\n\t\t\t? { ...nextWrapper.deferredProperties, ...nextWrapper.node.properties }\n\t\t\t: nextWrapper.node.properties;\n\t\tconst propNames = Object.keys(properties);\n\t\tconst propCount = propNames.length;\n\t\tif (propNames.indexOf('classes') === -1 && currentProperties.classes) {\n\t\t\tdomNode.removeAttribute('class');\n\t\t}\n\n\t\tincludesEventsAndAttributes && removeOrphanedEvents(domNode, currentProperties, properties);\n\n\t\tfor (let i = 0; i < propCount; i++) {\n\t\t\tconst propName = propNames[i];\n\t\t\tlet propValue = properties[propName];\n\t\t\tconst previousValue = currentProperties[propName];\n\t\t\tif (propName === 'classes') {\n\t\t\t\tconst previousClassString = createClassPropValue(previousValue);\n\t\t\t\tlet currentClassString = createClassPropValue(propValue);\n\t\t\t\tif (previousClassString !== currentClassString) {\n\t\t\t\t\tif (currentClassString) {\n\t\t\t\t\t\tif (nextWrapper.merged) {\n\t\t\t\t\t\t\tconst domClasses = (domNode.getAttribute('class') || '').split(' ');\n\t\t\t\t\t\t\tfor (let i = 0; i < domClasses.length; i++) {\n\t\t\t\t\t\t\t\tif (currentClassString.indexOf(domClasses[i]) === -1) {\n\t\t\t\t\t\t\t\t\tcurrentClassString = `${domClasses[i]} ${currentClassString}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdomNode.setAttribute('class', currentClassString);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdomNode.removeAttribute('class');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (nodeOperations.indexOf(propName) !== -1) {\n\t\t\t\tnodeOperation(propName, propValue, previousValue, domNode);\n\t\t\t} else if (propName === 'styles') {\n\t\t\t\tconst styleNames = Object.keys(propValue);\n\t\t\t\tconst styleCount = styleNames.length;\n\t\t\t\tfor (let j = 0; j < styleCount; j++) {\n\t\t\t\t\tconst styleName = styleNames[j];\n\t\t\t\t\tconst newStyleValue = propValue[styleName];\n\t\t\t\t\tconst oldStyleValue = previousValue && previousValue[styleName];\n\t\t\t\t\tif (newStyleValue === oldStyleValue) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t(domNode.style as any)[styleName] = newStyleValue || '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!propValue && typeof previousValue === 'string') {\n\t\t\t\t\tpropValue = '';\n\t\t\t\t}\n\t\t\t\tif (propName === 'value') {\n\t\t\t\t\tif ((domNode as HTMLElement).tagName === 'SELECT') {\n\t\t\t\t\t\t(domNode as any)['select-value'] = propValue;\n\t\t\t\t\t}\n\t\t\t\t\tsetValue(domNode, propValue, previousValue);\n\t\t\t\t} else if (propName !== 'key' && propValue !== previousValue) {\n\t\t\t\t\tconst type = typeof propValue;\n\t\t\t\t\tif (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateEvent(domNode, propName.substr(2), propValue, previousValue);\n\t\t\t\t\t} else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateAttribute(domNode, propName, propValue, nextWrapper.namespace);\n\t\t\t\t\t} else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n\t\t\t\t\t\tif ((domNode as any)[propName] !== propValue) {\n\t\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runDeferredRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _deferredRenderCallbacks;\n\t\t_deferredRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tglobal.requestAnimationFrame(run);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runAfterRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _idleCallbacks;\n\t\t_idleCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tif (global.requestIdleCallback) {\n\t\t\t\t\tglobal.requestIdleCallback(run);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(run);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction processProperties(next: VNodeWrapper, previousProperties: PreviousProperties) {\n\t\tif (next.node.attributes && next.node.events) {\n\t\t\tupdateAttributes(\n\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\tpreviousProperties.attributes || {},\n\t\t\t\tnext.node.attributes,\n\t\t\t\tnext.namespace\n\t\t\t);\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next, false);\n\t\t\tconst events = next.node.events || {};\n\t\t\tif (previousProperties.events) {\n\t\t\t\tremoveOrphanedEvents(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tpreviousProperties.events || {},\n\t\t\t\t\tnext.node.events,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t\tpreviousProperties.events = previousProperties.events || {};\n\t\t\tObject.keys(events).forEach((event) => {\n\t\t\t\tupdateEvent(next.domNode as HTMLElement, event, events[event], previousProperties.events[event]);\n\t\t\t});\n\t\t} else {\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next);\n\t\t}\n\t}\n\n\tfunction mount(mountOptions: Partial<MountOptions> = {}) {\n\t\t_mountOptions = { ..._mountOptions, ...mountOptions };\n\t\tconst { domNode } = _mountOptions;\n\t\tconst renderResult = wrapNodes(renderer)({});\n\t\tconst nextWrapper = {\n\t\t\tid: `${wrapperId++}`,\n\t\t\tnode: renderResult,\n\t\t\torder: 0,\n\t\t\tdepth: 1,\n\t\t\towningId: '-1',\n\t\t\tparentId: '-1',\n\t\t\tsiblingId: '-1',\n\t\t\tproperties: {}\n\t\t};\n\t\t_idToWrapperMap.set('-1', {\n\t\t\tid: `-1`,\n\t\t\tdepth: 0,\n\t\t\torder: 0,\n\t\t\towningId: '',\n\t\t\tdomNode,\n\t\t\tnode: v('fake'),\n\t\t\tparentId: '-1'\n\t\t});\n\t\t_processQueue.push({\n\t\t\tcurrent: [],\n\t\t\tnext: [nextWrapper],\n\t\t\tmeta: { mergeNodes: arrayFrom(domNode.childNodes) }\n\t\t});\n\t\t_runProcessQueue();\n\t\t_runDomInstructionQueue();\n\t\t_cleanUpMergedNodes();\n\t\t_insertBeforeMap = undefined;\n\t\t_runCallbacks();\n\t}\n\n\tfunction invalidate() {\n\t\tparentInvalidate && parentInvalidate();\n\t}\n\n\tfunction _schedule(): void {\n\t\tconst { sync } = _mountOptions;\n\t\tif (sync) {\n\t\t\t_runInvalidationQueue();\n\t\t} else if (!_renderScheduled) {\n\t\t\t_renderScheduled = global.requestAnimationFrame(() => {\n\t\t\t\t_runInvalidationQueue();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction getWNodeWrapper(id: string) {\n\t\tconst wrapper = _idToWrapperMap.get(id);\n\t\tif (wrapper && isWNodeWrapper(wrapper)) {\n\t\t\treturn wrapper;\n\t\t}\n\t}\n\n\tfunction _runInvalidationQueue() {\n\t\t_renderScheduled = undefined;\n\t\tlet invalidationQueue = [..._invalidationQueue];\n\t\tconst previouslyRendered = [];\n\t\t_invalidationQueue = [];\n\t\tinvalidationQueue.sort((a, b) => {\n\t\t\tlet result = b.depth - a.depth;\n\t\t\tif (result === 0) {\n\t\t\t\tresult = b.order - a.order;\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t\tif (_deferredProcessQueue.length) {\n\t\t\t_processQueue = [..._deferredProcessQueue];\n\t\t\t_deferredProcessQueue = [];\n\t\t\t_runProcessQueue();\n\t\t\tif (_deferredProcessQueue.length) {\n\t\t\t\t_invalidationQueue = [...invalidationQueue];\n\t\t\t\tinvalidationQueue = [];\n\t\t\t}\n\t\t}\n\t\tlet item: InvalidationQueueItem | undefined;\n\t\twhile ((item = invalidationQueue.pop())) {\n\t\t\tlet { id } = item;\n\t\t\tconst current = getWNodeWrapper(id);\n\t\t\tif (!current || previouslyRendered.indexOf(id) !== -1 || !_idToWrapperMap.has(current.parentId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpreviouslyRendered.push(id);\n\t\t\tconst sibling = _wrapperSiblingMap.get(current);\n\t\t\tconst next = {\n\t\t\t\tnode: {\n\t\t\t\t\ttype: WNODE,\n\t\t\t\t\twidgetConstructor: current.node.widgetConstructor,\n\t\t\t\t\tproperties: current.properties || {},\n\t\t\t\t\tchildren: current.node.children || []\n\t\t\t\t},\n\t\t\t\tinstance: current.instance,\n\t\t\t\tid: current.id,\n\t\t\t\tproperties: current.properties,\n\t\t\t\tdepth: current.depth,\n\t\t\t\torder: current.order,\n\t\t\t\towningId: current.owningId,\n\t\t\t\tparentId: current.parentId,\n\t\t\t\tregistryItem: current.registryItem\n\t\t\t};\n\n\t\t\tsibling && _wrapperSiblingMap.set(next, sibling);\n\t\t\tconst result = _updateWidget({ current, next });\n\t\t\tif (result && result.item) {\n\t\t\t\t_processQueue.push(result.item);\n\t\t\t\t_idToWrapperMap.set(id, next);\n\t\t\t\t_runProcessQueue();\n\t\t\t}\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_cleanUpMergedNodes();\n\t\t_runCallbacks();\n\t}\n\n\tfunction _cleanUpMergedNodes() {\n\t\tif (_deferredProcessQueue.length === 0) {\n\t\t\tlet mergedNode: Node | undefined;\n\t\t\twhile ((mergedNode = _allMergedNodes.pop())) {\n\t\t\t\tmergedNode.parentNode && mergedNode.parentNode.removeChild(mergedNode);\n\t\t\t}\n\t\t\t_mountOptions.merge = false;\n\t\t}\n\t}\n\n\tfunction _runProcessQueue() {\n\t\tlet item: DetachApplication | AttachApplication | ProcessItem | undefined;\n\t\twhile ((item = _processQueue.pop())) {\n\t\t\tif (isAttachApplication(item)) {\n\t\t\t\titem.type === 'attach' && setDomNodeOnParentWrapper(item.id);\n\t\t\t\tif (item.instance) {\n\t\t\t\t\t_applicationQueue.push(item as any);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst { current, next, meta } = item;\n\t\t\t\t_process(current || EMPTY_ARRAY, next || EMPTY_ARRAY, meta);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runDomInstructionQueue(): void {\n\t\t_applicationQueue.reverse();\n\t\tlet item: ApplicationInstruction | undefined;\n\t\twhile ((item = _applicationQueue.pop())) {\n\t\t\tif (item.type === 'create') {\n\t\t\t\tconst {\n\t\t\t\t\tparentDomNode,\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode, merged, requiresInsertBefore, node }\n\t\t\t\t} = item;\n\n\t\t\t\tprocessProperties(next, { properties: {} });\n\t\t\t\trunDeferredProperties(next);\n\t\t\t\tif (!merged) {\n\t\t\t\t\tlet insertBefore: any;\n\t\t\t\t\tif (requiresInsertBefore) {\n\t\t\t\t\t\tinsertBefore = findInsertBefore(next);\n\t\t\t\t\t} else if (_insertBeforeMap) {\n\t\t\t\t\t\tinsertBefore = _insertBeforeMap.get(next);\n\t\t\t\t\t}\n\t\t\t\t\tparentDomNode.insertBefore(domNode!, insertBefore);\n\t\t\t\t\tif (isDomVNode(next.node) && next.node.onAttach) {\n\t\t\t\t\t\tnext.node.onAttach();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((domNode as HTMLElement).tagName === 'OPTION' && domNode!.parentElement) {\n\t\t\t\t\tsetValue(domNode!.parentElement);\n\t\t\t\t}\n\t\t\t\tconst { enterAnimation, enterAnimationActive } = node.properties;\n\t\t\t\tif (_mountOptions.transition && enterAnimation && enterAnimation !== true) {\n\t\t\t\t\t_mountOptions.transition.enter(domNode as HTMLElement, enterAnimation, enterAnimationActive);\n\t\t\t\t}\n\t\t\t\tconst owningWrapper = _nodeToWrapperMap.get(next.node);\n\t\t\t\tif (owningWrapper && node.properties.key != null) {\n\t\t\t\t\tif (owningWrapper.instance) {\n\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(owningWrapper.instance);\n\t\t\t\t\t\tinstanceData && instanceData.nodeHandler.add(domNode as HTMLElement, `${node.properties.key}`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddNodeToMap(owningWrapper.id, node.properties.key, domNode as HTMLElement);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\titem.next.inserted = true;\n\t\t\t} else if (item.type === 'update') {\n\t\t\t\tconst {\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode },\n\t\t\t\t\tcurrent,\n\t\t\t\t\tcurrent: { domNode: currentDomNode }\n\t\t\t\t} = item;\n\t\t\t\tif (isTextNode(domNode) && isTextNode(currentDomNode) && domNode !== currentDomNode) {\n\t\t\t\t\tcurrentDomNode.parentNode && currentDomNode.parentNode.replaceChild(domNode, currentDomNode);\n\t\t\t\t} else {\n\t\t\t\t\tconst previousProperties = buildPreviousProperties(domNode, current);\n\t\t\t\t\tprocessProperties(next, previousProperties);\n\t\t\t\t\trunDeferredProperties(next);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'delete') {\n\t\t\t\tconst { current } = item;\n\t\t\t\tconst { exitAnimation, exitAnimationActive } = current.node.properties;\n\t\t\t\tif (_mountOptions.transition && exitAnimation && exitAnimation !== true) {\n\t\t\t\t\t_mountOptions.transition.exit(current.domNode as HTMLElement, exitAnimation, exitAnimationActive);\n\t\t\t\t} else {\n\t\t\t\t\tcurrent.domNode!.parentNode!.removeChild(current.domNode!);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'attach') {\n\t\t\t\tconst { instance, attached } = item;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance);\n\t\t\t\tif (instanceData) {\n\t\t\t\t\tinstanceData.nodeHandler.addRoot();\n\t\t\t\t\tattached && instanceData.onAttach();\n\t\t\t\t}\n\t\t\t} else if (item.type === 'detach') {\n\t\t\t\tif (item.current.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(item.current.instance);\n\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t}\n\t\t\t\titem.current.instance = undefined;\n\t\t\t}\n\t\t}\n\t\tif (_deferredProcessQueue.length === 0) {\n\t\t\t_nodeToWrapperMap = new WeakMap();\n\t\t}\n\t}\n\n\tfunction _runCallbacks() {\n\t\trunAfterRenderCallbacks();\n\t\trunDeferredRenderCallbacks();\n\t}\n\n\tfunction _processMergeNodes(next: DNodeWrapper, mergeNodes: Node[]) {\n\t\tconst { merge } = _mountOptions;\n\t\tif (merge && mergeNodes.length) {\n\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\tlet {\n\t\t\t\t\tnode: { tag }\n\t\t\t\t} = next;\n\t\t\t\tfor (let i = 0; i < mergeNodes.length; i++) {\n\t\t\t\t\tconst domElement = mergeNodes[i] as Element;\n\t\t\t\t\tconst tagName = domElement.tagName || '';\n\t\t\t\t\tif (tag.toUpperCase() === tagName.toUpperCase()) {\n\t\t\t\t\t\tconst mergeNodeIndex = _allMergedNodes.indexOf(domElement);\n\t\t\t\t\t\tif (mergeNodeIndex !== -1) {\n\t\t\t\t\t\t\t_allMergedNodes.splice(mergeNodeIndex, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmergeNodes.splice(i, 1);\n\t\t\t\t\t\tnext.domNode = domElement;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnext.mergeNodes = mergeNodes;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction registerDistinguishableCallback(childNodes: DNodeWrapper[], index: number) {\n\t\t_idleCallbacks.push(() => {\n\t\t\tconst parentWNodeWrapper = getWNodeWrapper(childNodes[index].owningId);\n\t\t\tcheckDistinguishable(childNodes, index, parentWNodeWrapper);\n\t\t});\n\t}\n\n\tfunction createKeyMap(wrappers: DNodeWrapper[]): (string | number)[] | false {\n\t\tconst keys: (string | number)[] = [];\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tconst wrapper = wrappers[i];\n\t\t\tif (wrapper.node.properties.key != null) {\n\t\t\t\tkeys.push(wrapper.node.properties.key);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn keys;\n\t}\n\n\tfunction _process(current: DNodeWrapper[], next: DNodeWrapper[], meta: ProcessMeta = {}): void {\n\t\tlet { mergeNodes = [], oldIndex = 0, newIndex = 0 } = meta;\n\t\tconst currentLength = current.length;\n\t\tconst nextLength = next.length;\n\t\tconst hasPreviousSiblings = currentLength > 1 || (currentLength > 0 && currentLength < nextLength);\n\t\tlet instructions: Instruction[] = [];\n\t\tlet replace = false;\n\t\tif (oldIndex === 0 && newIndex === 0 && currentLength) {\n\t\t\tconst currentKeys = createKeyMap(current);\n\t\t\tif (currentKeys) {\n\t\t\t\tconst nextKeys = createKeyMap(next);\n\t\t\t\tif (nextKeys) {\n\t\t\t\t\tfor (let i = 0; i < currentKeys.length; i++) {\n\t\t\t\t\t\tif (nextKeys.indexOf(currentKeys[i]) !== -1) {\n\t\t\t\t\t\t\tinstructions = [];\n\t\t\t\t\t\t\treplace = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplace = true;\n\t\t\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (replace || (currentLength === 0 && !_mountOptions.merge)) {\n\t\t\tfor (let i = 0; i < next.length; i++) {\n\t\t\t\tinstructions.push({ current: undefined, next: next[i] });\n\t\t\t}\n\t\t} else {\n\t\t\tif (newIndex < nextLength) {\n\t\t\t\tlet currentWrapper = oldIndex < currentLength ? current[oldIndex] : undefined;\n\t\t\t\tconst nextWrapper = next[newIndex];\n\t\t\t\tnextWrapper.hasPreviousSiblings = hasPreviousSiblings;\n\n\t\t\t\t_processMergeNodes(nextWrapper, mergeNodes);\n\n\t\t\t\tif (currentWrapper && same(currentWrapper, nextWrapper)) {\n\t\t\t\t\toldIndex++;\n\t\t\t\t\tnewIndex++;\n\t\t\t\t\tif (isVNodeWrapper(currentWrapper) && isVNodeWrapper(nextWrapper)) {\n\t\t\t\t\t\tnextWrapper.inserted = currentWrapper.inserted;\n\t\t\t\t\t}\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: nextWrapper });\n\t\t\t\t} else if (!currentWrapper || findIndexOfChild(current, nextWrapper, oldIndex + 1) === -1) {\n\t\t\t\t\thas('dojo-debug') && current.length && registerDistinguishableCallback(next, newIndex);\n\t\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\t\tnewIndex++;\n\t\t\t\t} else if (findIndexOfChild(next, currentWrapper, newIndex + 1) === -1) {\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\t\toldIndex++;\n\t\t\t\t} else {\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(next, newIndex);\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\t\toldIndex++;\n\t\t\t\t\tnewIndex++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newIndex < nextLength) {\n\t\t\t\t_processQueue.push({ current, next, meta: { mergeNodes, oldIndex, newIndex } });\n\t\t\t}\n\t\t\tif (currentLength > oldIndex && newIndex >= nextLength) {\n\t\t\t\tfor (let i = oldIndex; i < currentLength; i++) {\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, i);\n\t\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < instructions.length; i++) {\n\t\t\tconst result = _processOne(instructions[i]);\n\t\t\tif (result === false) {\n\t\t\t\tif (_mountOptions.merge && mergeNodes.length) {\n\t\t\t\t\tif (newIndex < nextLength) {\n\t\t\t\t\t\t_processQueue.pop();\n\t\t\t\t\t}\n\t\t\t\t\t_processQueue.push({ next, current, meta });\n\t\t\t\t\t_deferredProcessQueue = _processQueue;\n\t\t\t\t\t_processQueue = [];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst { widget, item, dom } = result;\n\t\t\twidget && _processQueue.push(widget);\n\t\t\titem && _processQueue.push(item);\n\t\t\tdom && _applicationQueue.push(dom);\n\t\t}\n\t}\n\n\tfunction _processOne({ current, next }: Instruction): ProcessResult | false {\n\t\tif (current !== next) {\n\t\t\tif (!current && next) {\n\t\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\t\treturn _createDom({ next });\n\t\t\t\t} else {\n\t\t\t\t\treturn _createWidget({ next });\n\t\t\t\t}\n\t\t\t} else if (current && next) {\n\t\t\t\tif (isVNodeWrapper(current) && isVNodeWrapper(next)) {\n\t\t\t\t\treturn _updateDom({ current, next });\n\t\t\t\t} else if (isWNodeWrapper(current) && isWNodeWrapper(next)) {\n\t\t\t\t\treturn _updateWidget({ current, next });\n\t\t\t\t}\n\t\t\t} else if (current && !next) {\n\t\t\t\tif (isVNodeWrapper(current)) {\n\t\t\t\t\treturn _removeDom({ current });\n\t\t\t\t} else if (isWNodeWrapper(current)) {\n\t\t\t\t\treturn _removeWidget({ current });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t}\n\n\tfunction resolveMiddleware(middlewares: any, id: string): any {\n\t\tconst keys = Object.keys(middlewares);\n\t\tconst results: any = {};\n\t\tconst uniqueId = `${id}-${metaId++}`;\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst middleware = middlewares[keys[i]]();\n\t\t\tconst payload: any = {\n\t\t\t\tid: uniqueId,\n\t\t\t\tproperties: () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\treturn { ...widgetMeta.properties };\n\t\t\t\t\t}\n\t\t\t\t\treturn {};\n\t\t\t\t},\n\t\t\t\tchildren: () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\treturn widgetMeta.children;\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (middleware.middlewares) {\n\t\t\t\tconst resolvedMiddleware = resolveMiddleware(middleware.middlewares, id);\n\t\t\t\tpayload.middleware = resolvedMiddleware;\n\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t} else {\n\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\tfunction _createWidget({ next }: CreateWidgetInstruction): ProcessResult | false {\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tlet { registry } = _mountOptions;\n\t\tlet Constructor = next.registryItem || widgetConstructor;\n\t\tif (!isWidget(Constructor)) {\n\t\t\tresolveRegistryItem(next);\n\t\t\tif (!next.registryItem) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tConstructor = next.registryItem;\n\t\t}\n\n\t\tlet rendered: RenderResult;\n\t\tlet invalidate: () => void;\n\t\tnext.properties = next.node.properties;\n\t\tnext.id = next.id || `${wrapperId++}`;\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tconst { id, depth, order } = next;\n\t\tif (!isWidgetBaseConstructor(Constructor)) {\n\t\t\tlet widgetMeta = widgetMetaMap.get(id);\n\t\t\tif (!widgetMeta) {\n\t\t\t\tinvalidate = () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t\t\tif (!widgetMeta.rendering && _idToWrapperMap.has(id)) {\n\t\t\t\t\t\t\t_invalidationQueue.push({ id, depth, order });\n\t\t\t\t\t\t\t_schedule();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\twidgetMeta = {\n\t\t\t\t\tdirty: false,\n\t\t\t\t\tinvalidator: invalidate,\n\t\t\t\t\tproperties: next.node.properties,\n\t\t\t\t\tchildren: next.node.children,\n\t\t\t\t\tdeferRefs: 0,\n\t\t\t\t\trendering: true,\n\t\t\t\t\tregistry: _mountOptions.registry\n\t\t\t\t};\n\n\t\t\t\twidgetMetaMap.set(next.id, widgetMeta);\n\t\t\t\twidgetMeta.middleware = (Constructor as any).middlewares\n\t\t\t\t\t? resolveMiddleware((Constructor as any).middlewares, id)\n\t\t\t\t\t: {};\n\t\t\t} else {\n\t\t\t\tinvalidate = widgetMeta.invalidator;\n\t\t\t}\n\n\t\t\trendered = Constructor({\n\t\t\t\tid,\n\t\t\t\tproperties: () => next.node.properties,\n\t\t\t\tchildren: () => next.node.children,\n\t\t\t\tmiddleware: widgetMeta.middleware\n\t\t\t});\n\t\t\twidgetMeta.rendering = false;\n\t\t\tif (widgetMeta.deferRefs > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tlet instance = new Constructor() as WidgetBaseInterface & {\n\t\t\t\tinvalidate: any;\n\t\t\t\tregistry: any;\n\t\t\t};\n\t\t\tinstance.registry.base = registry;\n\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\tinvalidate = () => {\n\t\t\t\tinstanceData.dirty = true;\n\t\t\t\tif (!instanceData.rendering && _idToWrapperMap.has(id)) {\n\t\t\t\t\t_invalidationQueue.push({ id, depth, order });\n\t\t\t\t\t_schedule();\n\t\t\t\t}\n\t\t\t};\n\t\t\tinstanceData.invalidate = invalidate;\n\t\t\tinstanceData.rendering = true;\n\t\t\tinstance.__setProperties__(next.node.properties);\n\t\t\tinstance.__setChildren__(next.node.children);\n\t\t\tnext.instance = instance;\n\t\t\trendered = instance.__render__();\n\t\t\tinstanceData.rendering = false;\n\t\t}\n\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tchildren = renderedToWrapper(rendered, next, null);\n\t\t\t_idToChildrenWrappers.set(id, children);\n\t\t}\n\n\t\tif (!parentInvalidate && !(Constructor as any).isWNodeWrapper) {\n\t\t\tparentInvalidate = invalidate;\n\t\t}\n\n\t\treturn {\n\t\t\titem: {\n\t\t\t\tnext: children,\n\t\t\t\tmeta: { mergeNodes: next.mergeNodes }\n\t\t\t},\n\t\t\twidget: { type: 'attach', instance: next.instance, id, attached: true }\n\t\t};\n\t}\n\n\tfunction _updateWidget({ current, next }: UpdateWidgetInstruction): ProcessResult {\n\t\tcurrent = getWNodeWrapper(current.id) || current;\n\t\tconst { instance, domNode, hasAnimations } = current;\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tconst Constructor = next.registryItem || widgetConstructor;\n\n\t\tif (!isWidget(Constructor)) {\n\t\t\treturn {};\n\t\t}\n\t\tlet rendered: RenderResult;\n\t\tlet processResult: ProcessResult = {};\n\t\tlet didRender = false;\n\t\tlet currentChildren = _idToChildrenWrappers.get(current.id);\n\t\tnext.hasAnimations = hasAnimations;\n\t\tnext.id = current.id;\n\t\tnext.childDomWrapperId = current.childDomWrapperId;\n\t\tnext.properties = next.node.properties;\n\t\t_wrapperSiblingMap.delete(current);\n\t\tif (domNode && domNode.parentNode) {\n\t\t\tnext.domNode = domNode;\n\t\t}\n\n\t\tif (!isWidgetBaseConstructor(Constructor)) {\n\t\t\tconst widgetMeta = widgetMetaMap.get(next.id);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.properties = next.properties;\n\t\t\t\twidgetMeta.rendering = true;\n\t\t\t\trunDiffs(widgetMeta, current.properties, next.properties);\n\t\t\t\tif (current.node.children.length > 0 || next.node.children.length > 0) {\n\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t}\n\t\t\t\tif (!widgetMeta.dirty) {\n\t\t\t\t\tpropertiesDiff(\n\t\t\t\t\t\tcurrent.properties,\n\t\t\t\t\t\tnext.properties,\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidgetMeta.customDiffProperties ? [...widgetMeta.customDiffProperties.values()] : []\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (widgetMeta.dirty) {\n\t\t\t\t\t_idToChildrenWrappers.delete(next.id);\n\t\t\t\t\tdidRender = true;\n\t\t\t\t\twidgetMeta.dirty = false;\n\t\t\t\t\trendered = Constructor({\n\t\t\t\t\t\tid: next.id,\n\t\t\t\t\t\tproperties: () => next.node.properties,\n\t\t\t\t\t\tchildren: () => next.node.children,\n\t\t\t\t\t\tmiddleware: widgetMeta.middleware\n\t\t\t\t\t});\n\t\t\t\t\tif (widgetMeta.deferRefs > 0) {\n\t\t\t\t\t\trendered = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twidgetMeta.rendering = false;\n\t\t\t}\n\t\t} else {\n\t\t\tconst instanceData = widgetInstanceMap.get(instance!)!;\n\t\t\tnext.instance = instance;\n\t\t\tinstanceData.rendering = true;\n\t\t\tinstance!.__setProperties__(next.node.properties);\n\t\t\tinstance!.__setChildren__(next.node.children);\n\t\t\tif (instanceData.dirty) {\n\t\t\t\tdidRender = true;\n\t\t\t\t_idToChildrenWrappers.delete(next.id);\n\t\t\t\trendered = instance!.__render__();\n\t\t\t}\n\t\t\tinstanceData.rendering = false;\n\t\t}\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tprocessResult.widget = { type: 'attach', instance, id: next.id, attached: false };\n\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tchildren = renderedToWrapper(rendered, next, current);\n\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t}\n\n\t\tif (didRender) {\n\t\t\tprocessResult.item = {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tnext: children,\n\t\t\t\tmeta: {}\n\t\t\t};\n\t\t}\n\t\treturn processResult;\n\t}\n\n\tfunction _removeWidget({ current }: RemoveWidgetInstruction): ProcessResult {\n\t\tcurrent = getWNodeWrapper(current.id) || current;\n\t\t_idToWrapperMap.delete(current.id);\n\t\tconst meta = widgetMetaMap.get(current.id);\n\t\tlet currentChildren = _idToChildrenWrappers.get(current.id);\n\t\t_idToChildrenWrappers.delete(current.id);\n\t\t_wrapperSiblingMap.delete(current);\n\t\tlet processResult: ProcessResult = {\n\t\t\titem: {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tmeta: {}\n\t\t\t}\n\t\t};\n\t\tif (meta) {\n\t\t\tmeta.registryHandler && meta.registryHandler.destroy();\n\t\t\tmeta.destroyMap && destroyHandles(meta.destroyMap);\n\t\t\twidgetMetaMap.delete(current.id);\n\t\t} else {\n\t\t\tprocessResult.widget = { type: 'detach', current, instance: current.instance };\n\t\t}\n\n\t\treturn processResult;\n\t}\n\n\tfunction setDomNodeOnParentWrapper(id: string) {\n\t\tlet wrapper = _idToWrapperMap.get(id)!;\n\t\tlet children = [...(_idToChildrenWrappers.get(id) || [])];\n\t\tlet child: DNodeWrapper | undefined;\n\t\twhile (children.length && !wrapper.domNode) {\n\t\t\tchild = children.shift();\n\t\t\tif (child) {\n\t\t\t\tif (child.domNode) {\n\t\t\t\t\twrapper.childDomWrapperId = child.id;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet nextChildren = _idToChildrenWrappers.get(child.id);\n\t\t\t\tif (nextChildren) {\n\t\t\t\t\tchildren = [...nextChildren, ...children];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _createDom({ next }: CreateDomInstruction): ProcessResult {\n\t\tconst parentDomNode = findParentDomNode(next)!;\n\t\tconst isVirtual = isVirtualWrapper(next);\n\t\tconst isBody = isBodyWrapper(next);\n\t\tlet mergeNodes: Node[] = [];\n\t\tnext.id = `${wrapperId++}`;\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tif (!next.domNode) {\n\t\t\tif ((next.node as any).domNode) {\n\t\t\t\tnext.domNode = (next.node as any).domNode;\n\t\t\t} else {\n\t\t\t\tif (next.node.tag === 'svg') {\n\t\t\t\t\tnext.namespace = NAMESPACE_SVG;\n\t\t\t\t}\n\t\t\t\tif (isBody) {\n\t\t\t\t\tnext.domNode = global.document.body;\n\t\t\t\t} else if (next.node.tag && !isVirtual) {\n\t\t\t\t\tif (next.namespace) {\n\t\t\t\t\t\tnext.domNode = global.document.createElementNS(next.namespace, next.node.tag);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext.domNode = global.document.createElement(next.node.tag);\n\t\t\t\t\t}\n\t\t\t\t} else if (next.node.text != null) {\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_insertBeforeMap && _allMergedNodes.length) {\n\t\t\t\tif (parentDomNode === _allMergedNodes[0].parentNode) {\n\t\t\t\t\t_insertBeforeMap.set(next, _allMergedNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (_mountOptions.merge) {\n\t\t\tnext.merged = true;\n\t\t\tif (isTextNode(next.domNode)) {\n\t\t\t\tif (next.domNode.data !== next.node.text) {\n\t\t\t\t\t_allMergedNodes = [next.domNode, ..._allMergedNodes];\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t\tnext.merged = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmergeNodes = arrayFrom(next.domNode.childNodes);\n\t\t\t\t_allMergedNodes = [..._allMergedNodes, ...mergeNodes];\n\t\t\t}\n\t\t}\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (next.domNode || isVirtual) {\n\t\t\tif (next.node.children && next.node.children.length) {\n\t\t\t\tchildren = renderedToWrapper(next.node.children, next, null);\n\t\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t\t}\n\t\t}\n\t\tconst dom: ApplicationInstruction | undefined =\n\t\t\tisVirtual || isBody\n\t\t\t\t? undefined\n\t\t\t\t: {\n\t\t\t\t\t\tnext: next!,\n\t\t\t\t\t\tparentDomNode: parentDomNode,\n\t\t\t\t\t\ttype: 'create'\n\t\t\t\t  };\n\t\tif (children) {\n\t\t\treturn {\n\t\t\t\titem: {\n\t\t\t\t\tcurrent: [],\n\t\t\t\t\tnext: children,\n\t\t\t\t\tmeta: { mergeNodes }\n\t\t\t\t},\n\t\t\t\tdom,\n\t\t\t\twidget: isVirtual ? { type: 'attach', id: (next as any).id, attached: false } : undefined\n\t\t\t};\n\t\t}\n\t\treturn { dom };\n\t}\n\n\tfunction _updateDom({ current, next }: UpdateDomInstruction): ProcessResult {\n\t\tnext.domNode = current.domNode;\n\t\tnext.namespace = current.namespace;\n\t\tnext.id = current.id;\n\t\tnext.childDomWrapperId = current.childDomWrapperId;\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tlet currentChildren = _idToChildrenWrappers.get(next.id);\n\t\tif (next.node.text != null && next.node.text !== current.node.text) {\n\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t} else if (next.node.children) {\n\t\t\tchildren = renderedToWrapper(next.node.children, next, current);\n\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t}\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_idToWrapperMap.set(next.id, next);\n\t\treturn {\n\t\t\titem: {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tnext: children,\n\t\t\t\tmeta: {}\n\t\t\t},\n\t\t\tdom: { type: 'update', next, current }\n\t\t};\n\t}\n\n\tfunction _removeDom({ current }: RemoveDomInstruction): ProcessResult {\n\t\tconst isVirtual = isVirtualWrapper(current);\n\t\tconst isBody = isBodyWrapper(current);\n\t\tconst children = _idToChildrenWrappers.get(current.id);\n\t\t_idToChildrenWrappers.delete(current.id);\n\t\t_idToWrapperMap.delete(current.id);\n\t\t_wrapperSiblingMap.delete(current);\n\t\tif (current.node.properties.key) {\n\t\t\tconst widgetMeta = widgetMetaMap.get(current.owningId);\n\t\t\tconst parentWrapper = getWNodeWrapper(current.owningId);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.nodeMap && widgetMeta.nodeMap.delete(current.node.properties.key);\n\t\t\t} else if (parentWrapper && parentWrapper.instance) {\n\t\t\t\tconst instanceData = widgetInstanceMap.get(parentWrapper.instance);\n\t\t\t\tinstanceData && instanceData.nodeHandler.remove(current.node.properties.key);\n\t\t\t}\n\t\t}\n\t\tif (current.hasAnimations || isVirtual || isBody) {\n\t\t\treturn {\n\t\t\t\titem: { current: children, meta: {} },\n\t\t\t\tdom: isVirtual || isBody ? undefined : { type: 'delete', current }\n\t\t\t};\n\t\t}\n\n\t\tif (children) {\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tlet wrappers = children || [];\n\t\t\t\tlet wrapper: DNodeWrapper | undefined;\n\t\t\t\tlet bodyIds = [];\n\t\t\t\twhile ((wrapper = wrappers.pop())) {\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\twrapper = getWNodeWrapper(wrapper.id) || wrapper;\n\t\t\t\t\t\tif (wrapper.instance) {\n\t\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(wrapper.instance);\n\t\t\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t\t\t\twrapper.instance = undefined;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst meta = widgetMetaMap.get(wrapper.id);\n\t\t\t\t\t\t\tif (meta) {\n\t\t\t\t\t\t\t\tmeta.registryHandler && meta.registryHandler.destroy();\n\t\t\t\t\t\t\t\tmeta.destroyMap && destroyHandles(meta.destroyMap);\n\t\t\t\t\t\t\t\twidgetMetaMap.delete(wrapper.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet wrapperChildren = _idToChildrenWrappers.get(wrapper.id);\n\t\t\t\t\tif (wrapperChildren) {\n\t\t\t\t\t\twrappers.push(...wrapperChildren);\n\t\t\t\t\t}\n\t\t\t\t\tif (isBodyWrapper(wrapper)) {\n\t\t\t\t\t\tbodyIds.push(wrapper.id);\n\t\t\t\t\t} else if (bodyIds.indexOf(wrapper.parentId) !== -1) {\n\t\t\t\t\t\tif (isWNodeWrapper(wrapper) || isVirtualWrapper(wrapper)) {\n\t\t\t\t\t\t\tbodyIds.push(wrapper.id);\n\t\t\t\t\t\t} else if (wrapper.domNode && wrapper.domNode.parentNode) {\n\t\t\t\t\t\t\twrapper.domNode.parentNode.removeChild(wrapper.domNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t_idToChildrenWrappers.delete(wrapper.id);\n\t\t\t\t\t_idToWrapperMap.delete(wrapper.id);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tdom: { type: 'delete', current }\n\t\t};\n\t}\n\n\treturn {\n\t\tmount,\n\t\tinvalidate\n\t};\n}\n\nexport default renderer;\n","import { Evented } from '../core/Evented';\nimport { Patch, PatchOperation } from './state/Patch';\nimport { Pointer } from './state/Pointer';\nimport Map from '../shim/Map';\n\n/**\n * The \"path\" to a value of type T on and object of type M. The path string is a JSON Pointer to the location of\n * `value` within `state`.\n *\n */\nexport interface Path<M, T> {\n\tpath: string;\n\tstate: M;\n\tvalue: T;\n}\n\n/**\n * An interface that enables typed traversal of an arbitrary type M. `path` and `at` can be used to generate\n * `Path`s that allow access to properties within M via the `get` method. The returned `Path`s can also be passed to the\n * utility methods `add`, `replace`, and `delete` in order to generate typed operations for modifying the state of a store.\n */\nexport interface State<M> {\n\tget<S>(path: Path<M, S>): S;\n\tat<S extends Path<M, Array<any>>>(path: S, index: number): Path<M, S['value'][0]>;\n\tpath: StatePaths<M>;\n}\n\nexport interface StatePaths<M> {\n\t<T, P0 extends keyof Required<T>>(path: Path<M, T>, a: P0): Path<M, Required<T>[P0]>;\n\t<T, P0 extends keyof T, P1 extends keyof Required<T>[P0]>(path: Path<M, T>, a: P0, b: P1): Path<\n\t\tM,\n\t\tRequired<Required<T>[P0]>[P1]\n\t>;\n\t<T, P0 extends keyof T, P1 extends keyof Required<T>[P0], P2 extends keyof Required<Required<T>[P0]>[P1]>(\n\t\tpath: Path<M, T>,\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2\n\t): Path<M, Required<Required<Required<T>[P0]>[P1]>[P2]>;\n\t<\n\t\tT,\n\t\tP0 extends keyof T,\n\t\tP1 extends keyof Required<T>[P0],\n\t\tP2 extends keyof Required<Required<T>[P0]>[P1],\n\t\tP3 extends keyof Required<Required<Required<T>[P0]>[P1]>[P2]\n\t>(\n\t\tpath: Path<M, T>,\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2,\n\t\td: P3\n\t): Path<M, Required<Required<Required<Required<T>[P0]>[P1]>[P2]>[P3]>;\n\t<\n\t\tT,\n\t\tP0 extends keyof T,\n\t\tP1 extends keyof Required<T>[P0],\n\t\tP2 extends keyof Required<Required<T>[P0]>[P1],\n\t\tP3 extends keyof Required<Required<Required<T>[P0]>[P1]>[P2],\n\t\tP4 extends keyof Required<Required<Required<Required<T>[P0]>[P1]>[P2]>[P3]\n\t>(\n\t\tpath: Path<M, T>,\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2,\n\t\td: P3,\n\t\te: P4\n\t): Path<M, Required<Required<Required<Required<Required<T>[P0]>[P1]>[P2]>[P3]>[P4]>;\n\t<P0 extends keyof M>(a: P0): Path<M, Required<M>[P0]>;\n\t<P0 extends keyof M, P1 extends keyof Required<M>[P0]>(a: P0, b: P1): Path<M, Required<Required<M>[P0]>[P1]>;\n\t<P0 extends keyof M, P1 extends keyof Required<M>[P0], P2 extends keyof Required<Required<M>[P0]>[P1]>(\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2\n\t): Path<M, Required<Required<Required<M>[P0]>[P1]>[P2]>;\n\t<\n\t\tP0 extends keyof M,\n\t\tP1 extends keyof Required<M>[P0],\n\t\tP2 extends keyof Required<Required<M>[P0]>[P1],\n\t\tP3 extends keyof Required<Required<Required<M>[P0]>[P1]>[P2]\n\t>(\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2,\n\t\td: P3\n\t): Path<M, Required<Required<Required<Required<M>[P0]>[P1]>[P2]>[P3]>;\n\t<\n\t\tP0 extends keyof M,\n\t\tP1 extends keyof Required<M>[P0],\n\t\tP2 extends keyof Required<Required<M>[P0]>[P1],\n\t\tP3 extends keyof Required<Required<Required<M>[P0]>[P1]>[P2],\n\t\tP4 extends keyof Required<Required<Required<Required<M>[P0]>[P1]>[P2]>[P3]\n\t>(\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2,\n\t\td: P3,\n\t\te: P4\n\t): Path<M, Required<Required<Required<Required<Required<M>[P0]>[P1]>[P2]>[P3]>[P4]>;\n}\n\ninterface OnChangeCallback {\n\tcallbackId: number;\n\tcallback: () => void;\n}\n\ninterface OnChangeValue {\n\tcallbacks: OnChangeCallback[];\n\tpreviousValue: any;\n}\n\nfunction isString(segment?: string): segment is string {\n\treturn typeof segment === 'string';\n}\n\nexport interface MutableState<T = any> extends State<T> {\n\t/**\n\t * Applies store operations to state and returns the undo operations\n\t */\n\tapply(operations: PatchOperation<T>[]): PatchOperation<T>[];\n}\n\nexport class DefaultState<T = any> implements MutableState<T> {\n\t/**\n\t * The private state object\n\t */\n\tprivate _state = {} as T;\n\n\t/**\n\t * Returns the state at a specific pointer path location.\n\t */\n\tpublic get = <U = any>(path: Path<T, U>): U => {\n\t\treturn path.value;\n\t};\n\n\t/**\n\t * Applies store operations to state and returns the undo operations\n\t */\n\tpublic apply = (operations: PatchOperation<T>[]): PatchOperation<T>[] => {\n\t\tconst patch = new Patch(operations);\n\t\tconst patchResult = patch.apply(this._state);\n\t\tthis._state = patchResult.object;\n\t\treturn patchResult.undoOperations;\n\t};\n\n\tpublic at = <U = any>(path: Path<T, Array<U>>, index: number): Path<T, U> => {\n\t\tconst array = this.get(path);\n\t\tconst value = array && array[index];\n\n\t\treturn {\n\t\t\tpath: `${path.path}/${index}`,\n\t\t\tstate: path.state,\n\t\t\tvalue\n\t\t};\n\t};\n\n\tpublic path: State<T>['path'] = (path: string | Path<T, any>, ...segments: (string | undefined)[]) => {\n\t\tif (typeof path === 'string') {\n\t\t\tsegments = [path, ...segments];\n\t\t} else {\n\t\t\tsegments = [...new Pointer(path.path).segments, ...segments];\n\t\t}\n\n\t\tconst stringSegments = segments.filter<string>(isString);\n\t\tconst hasMultipleSegments = stringSegments.length > 1;\n\t\tconst pointer = new Pointer(hasMultipleSegments ? stringSegments : stringSegments[0] || '');\n\n\t\treturn {\n\t\t\tpath: pointer.path,\n\t\t\tstate: this._state,\n\t\t\tvalue: pointer.get(this._state)\n\t\t};\n\t};\n}\n\n/**\n * Application state store\n */\nexport class Store<T = any> extends Evented implements MutableState<T> {\n\tprivate _adapter: MutableState<T> = new DefaultState<T>();\n\n\tprivate _changePaths = new Map<string, OnChangeValue>();\n\n\tprivate _callbackId = 0;\n\n\t/**\n\t * Returns the state at a specific pointer path location.\n\t */\n\tpublic get = <U = any>(path: Path<T, U>): U => {\n\t\treturn this._adapter.get(path);\n\t};\n\n\tconstructor(options?: { state?: MutableState<T> }) {\n\t\tsuper();\n\t\tif (options && options.state) {\n\t\t\tthis._adapter = options.state;\n\t\t\tthis.path = this._adapter.path.bind(this._adapter);\n\t\t}\n\t}\n\n\t/**\n\t * Applies store operations to state and returns the undo operations\n\t */\n\tpublic apply = (operations: PatchOperation<T>[], invalidate: boolean = false): PatchOperation<T>[] => {\n\t\tconst result = this._adapter.apply(operations);\n\n\t\tif (invalidate) {\n\t\t\tthis.invalidate();\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tpublic at = <U = any>(path: Path<T, Array<U>>, index: number): Path<T, U> => {\n\t\treturn this._adapter.at(path, index);\n\t};\n\n\tpublic onChange = <U = any>(paths: Path<T, U> | Path<T, U>[], callback: () => void) => {\n\t\tconst callbackId = this._callbackId;\n\t\tif (!Array.isArray(paths)) {\n\t\t\tpaths = [paths];\n\t\t}\n\t\tpaths.forEach((path) => this._addOnChange(path, callback, callbackId));\n\t\tthis._callbackId += 1;\n\t\treturn {\n\t\t\tremove: () => {\n\t\t\t\t(paths as Path<T, U>[]).forEach((path) => {\n\t\t\t\t\tconst onChange = this._changePaths.get(path.path);\n\t\t\t\t\tif (onChange) {\n\t\t\t\t\t\tonChange.callbacks = onChange.callbacks.filter((callback) => {\n\t\t\t\t\t\t\treturn callback.callbackId !== callbackId;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n\n\tprivate _addOnChange = <U = any>(path: Path<T, U>, callback: () => void, callbackId: number): void => {\n\t\tlet changePaths = this._changePaths.get(path.path);\n\t\tif (!changePaths) {\n\t\t\tchangePaths = { callbacks: [], previousValue: this.get(path) };\n\t\t}\n\t\tchangePaths.callbacks.push({ callbackId, callback });\n\t\tthis._changePaths.set(path.path, changePaths);\n\t};\n\n\tprivate _runOnChanges() {\n\t\tconst callbackIdsCalled: number[] = [];\n\t\tthis._changePaths.forEach((value: OnChangeValue, path: string) => {\n\t\t\tconst { previousValue, callbacks } = value;\n\t\t\tconst pointer = new Pointer(path);\n\t\t\tconst newValue = pointer.segments.length\n\t\t\t\t? (this._adapter as any).path(pointer.segments[0] as keyof T, ...pointer.segments.slice(1)).value\n\t\t\t\t: undefined;\n\t\t\tif (previousValue !== newValue) {\n\t\t\t\tthis._changePaths.set(path, { callbacks, previousValue: newValue });\n\t\t\t\tcallbacks.forEach((callbackItem) => {\n\t\t\t\t\tconst { callback, callbackId } = callbackItem;\n\t\t\t\t\tif (callbackIdsCalled.indexOf(callbackId) === -1) {\n\t\t\t\t\t\tcallbackIdsCalled.push(callbackId);\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Emits an invalidation event\n\t */\n\tpublic invalidate(): any {\n\t\tthis._runOnChanges();\n\t\tthis.emit({ type: 'invalidate' });\n\t}\n\n\tpublic path: State<T>['path'] = this._adapter.path.bind(this._adapter);\n}\n\nexport default Store;\n","import { destroy, invalidator, create } from '../vdom';\nimport injector from '../middleware/injector';\nimport Store, { StatePaths, Path } from '../../stores/Store';\nimport { Process } from '../../stores/process';\n\nconst factory = create({ destroy, invalidator, injector });\n\nexport const createStoreMiddleware = <S = any>(initial?: (store: Store<S>) => void) => {\n\tlet store = new Store<S>();\n\tlet initialized = false;\n\tinitial && initial(store);\n\tconst storeMiddleware = factory(({ middleware: { destroy, invalidator, injector } }) => {\n\t\tconst handles: any[] = [];\n\t\tdestroy(() => {\n\t\t\tlet handle: any;\n\t\t\twhile ((handle = handles.pop())) {\n\t\t\t\thandle();\n\t\t\t}\n\t\t});\n\t\tif (!initialized) {\n\t\t\tconst injectedStore = injector.get<Store<S>>('state');\n\t\t\tif (injectedStore) {\n\t\t\t\tstore = injectedStore;\n\t\t\t}\n\t\t\tinitialized = true;\n\t\t}\n\t\tconst registeredPaths: string[] = [];\n\t\tconst path: StatePaths<S> = (path: any, ...segments: any) => {\n\t\t\treturn (store as any).path(path, ...segments);\n\t\t};\n\t\treturn {\n\t\t\tget<U = any>(path: Path<S, U>): U {\n\t\t\t\tif (registeredPaths.indexOf(path.path) === -1) {\n\t\t\t\t\tconst handle = store.onChange(path, () => {\n\t\t\t\t\t\tinvalidator();\n\t\t\t\t\t});\n\t\t\t\t\thandles.push(() => handle.remove());\n\t\t\t\t\tregisteredPaths.push(path.path);\n\t\t\t\t}\n\t\t\t\treturn store.get(path);\n\t\t\t},\n\t\t\tpath,\n\t\t\tat<U = any>(path: Path<S, U[]>, index: number) {\n\t\t\t\treturn store.at(path, index);\n\t\t\t},\n\t\t\texecutor<T extends Process<any, any>>(process: T): ReturnType<T> {\n\t\t\t\treturn process(store) as any;\n\t\t\t}\n\t\t};\n\t});\n\treturn storeMiddleware;\n};\n\nexport default createStoreMiddleware;\n","import global from '../../shim/global';\nimport { History, HistoryOptions, OnChangeFunction } from './../interfaces';\n\nexport class HashHistory implements History {\n\tprivate _onChangeFunction: OnChangeFunction;\n\tprivate _current: string;\n\tprivate _window: Window;\n\n\tconstructor({ window = global.window, onChange }: HistoryOptions) {\n\t\tthis._onChangeFunction = onChange;\n\t\tthis._window = window;\n\t\tthis._window.addEventListener('hashchange', this._onChange, false);\n\t\tthis._current = this.normalizePath(this._window.location.hash);\n\t\tthis._onChangeFunction(this._current);\n\t}\n\n\tpublic normalizePath(path: string): string {\n\t\treturn path.replace('#', '');\n\t}\n\n\tpublic prefix(path: string) {\n\t\tif (path[0] !== '#') {\n\t\t\treturn `#${path}`;\n\t\t}\n\t\treturn path;\n\t}\n\n\tpublic set(path: string) {\n\t\tthis._window.location.hash = this.prefix(path);\n\t\tthis._onChange();\n\t}\n\n\tpublic get current(): string {\n\t\treturn this._current;\n\t}\n\n\tpublic destroy() {\n\t\tthis._window.removeEventListener('hashchange', this._onChange);\n\t}\n\n\tprivate _onChange = () => {\n\t\tconst path = this.normalizePath(this._window.location.hash);\n\t\tif (path !== this._current) {\n\t\t\tthis._current = path;\n\t\t\tthis._onChangeFunction(this._current);\n\t\t}\n\t};\n}\n\nexport default HashHistory;\n","import Evented from '../core/Evented';\nimport { RouteConfig, History, OutletContext, Params, RouterInterface, Route, RouterOptions } from './interfaces';\nimport { HashHistory } from './history/HashHistory';\nimport { EventObject } from '../core/Evented';\n\nconst PARAM = '__PARAM__';\n\nconst paramRegExp = new RegExp(/^{.+}$/);\n\ninterface RouteWrapper {\n\troute: Route;\n\tsegments: string[];\n\tparent?: RouteWrapper;\n\ttype?: string;\n\tparams: Params;\n}\n\nexport interface NavEvent extends EventObject<string> {\n\toutlet?: string;\n\tcontext?: OutletContext;\n}\n\nexport interface OutletEvent extends EventObject<string> {\n\toutlet: OutletContext;\n\taction: 'enter' | 'exit';\n}\n\nconst ROUTE_SEGMENT_SCORE = 7;\nconst DYNAMIC_SEGMENT_PENALTY = 2;\n\nfunction matchingParams({ params: previousParams }: OutletContext, { params }: OutletContext) {\n\tconst matching = Object.keys(previousParams).every((key) => previousParams[key] === params[key]);\n\tif (!matching) {\n\t\treturn false;\n\t}\n\treturn Object.keys(params).every((key) => previousParams[key] === params[key]);\n}\n\nexport class Router extends Evented<{ nav: NavEvent; outlet: OutletEvent }> implements RouterInterface {\n\tprivate _routes: Route[] = [];\n\tprivate _outletMap: { [index: string]: Route } = Object.create(null);\n\tprivate _matchedOutlets: { [index: string]: OutletContext } = Object.create(null);\n\tprivate _currentParams: Params = {};\n\tprivate _currentQueryParams: Params = {};\n\tprivate _defaultOutlet: string | undefined;\n\tprivate _history!: History;\n\tprivate _options: RouterOptions;\n\n\tconstructor(config: RouteConfig[], options: RouterOptions = {}) {\n\t\tsuper();\n\t\tthis._options = options;\n\t\tthis._register(config);\n\t\tif (options.autostart || true) {\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\t/**\n\t * Sets the path against the registered history manager\n\t *\n\t * @param path The path to set on the history manager\n\t */\n\tpublic setPath(path: string): void {\n\t\tthis._history.set(path);\n\t}\n\n\tpublic start() {\n\t\tconst { HistoryManager = HashHistory, base, window } = this._options;\n\t\tthis._history = new HistoryManager({ onChange: this._onChange, base, window });\n\t\tif (this._matchedOutlets.errorOutlet && this._defaultOutlet) {\n\t\t\tconst path = this.link(this._defaultOutlet);\n\t\t\tif (path) {\n\t\t\t\tthis.setPath(path);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Generate a link for a given outlet identifier and optional params.\n\t *\n\t * @param outlet The outlet to generate a link for\n\t * @param params Optional Params for the generated link\n\t */\n\tpublic link(outlet: string, params: Params = {}): string | undefined {\n\t\tconst { _outletMap, _currentParams, _currentQueryParams } = this;\n\t\tlet route = _outletMap[outlet];\n\t\tif (route === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet linkPath: string | undefined = route.fullPath;\n\t\tif (route.fullQueryParams.length > 0) {\n\t\t\tlet queryString = route.fullQueryParams.reduce((queryParamString, param, index) => {\n\t\t\t\tif (index > 0) {\n\t\t\t\t\treturn `${queryParamString}&${param}={${param}}`;\n\t\t\t\t}\n\t\t\t\treturn `?${param}={${param}}`;\n\t\t\t}, '');\n\t\t\tlinkPath = `${linkPath}${queryString}`;\n\t\t}\n\t\tparams = { ...route.defaultParams, ..._currentQueryParams, ..._currentParams, ...params };\n\n\t\tif (Object.keys(params).length === 0 && route.fullParams.length > 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst fullParams = [...route.fullParams, ...route.fullQueryParams];\n\t\tfor (let i = 0; i < fullParams.length; i++) {\n\t\t\tconst param = fullParams[i];\n\t\t\tif (params[param]) {\n\t\t\t\tlinkPath = linkPath.replace(`{${param}}`, params[param]);\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t\treturn this._history.prefix(linkPath);\n\t}\n\n\t/**\n\t * Returns the outlet context for the outlet identifier if one has been matched\n\t *\n\t * @param outletIdentifier The outlet identifer\n\t */\n\tpublic getOutlet(outletIdentifier: string): OutletContext | undefined {\n\t\treturn this._matchedOutlets[outletIdentifier];\n\t}\n\n\t/**\n\t * Returns all the params for the current matched outlets\n\t */\n\tpublic get currentParams() {\n\t\treturn this._currentParams;\n\t}\n\n\t/**\n\t * Strips the leading slash on a path if one exists\n\t *\n\t * @param path The path to strip a leading slash\n\t */\n\tprivate _stripLeadingSlash(path: string): string {\n\t\tif (path[0] === '/') {\n\t\t\treturn path.slice(1);\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * Registers the routing configuration\n\t *\n\t * @param config The configuration\n\t * @param routes The routes\n\t * @param parentRoute The parent route\n\t */\n\tprivate _register(config: RouteConfig[], routes?: Route[], parentRoute?: Route): void {\n\t\troutes = routes ? routes : this._routes;\n\t\tfor (let i = 0; i < config.length; i++) {\n\t\t\tlet { path, outlet, children, defaultRoute = false, defaultParams = {} } = config[i];\n\t\t\tlet [parsedPath, queryParamString] = path.split('?');\n\t\t\tlet queryParams: string[] = [];\n\t\t\tparsedPath = this._stripLeadingSlash(parsedPath);\n\n\t\t\tconst segments: string[] = parsedPath.split('/');\n\t\t\tconst route: Route = {\n\t\t\t\tparams: [],\n\t\t\t\toutlet,\n\t\t\t\tpath: parsedPath,\n\t\t\t\tsegments,\n\t\t\t\tdefaultParams: parentRoute ? { ...parentRoute.defaultParams, ...defaultParams } : defaultParams,\n\t\t\t\tchildren: [],\n\t\t\t\tfullPath: parentRoute ? `${parentRoute.fullPath}/${parsedPath}` : parsedPath,\n\t\t\t\tfullParams: [],\n\t\t\t\tfullQueryParams: [],\n\t\t\t\tscore: parentRoute ? parentRoute.score : 0\n\t\t\t};\n\t\t\tif (defaultRoute) {\n\t\t\t\tthis._defaultOutlet = outlet;\n\t\t\t}\n\t\t\tfor (let i = 0; i < segments.length; i++) {\n\t\t\t\tconst segment = segments[i];\n\t\t\t\troute.score += ROUTE_SEGMENT_SCORE;\n\t\t\t\tif (paramRegExp.test(segment)) {\n\t\t\t\t\troute.score -= DYNAMIC_SEGMENT_PENALTY;\n\t\t\t\t\troute.params.push(segment.replace('{', '').replace('}', ''));\n\t\t\t\t\tsegments[i] = PARAM;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (queryParamString) {\n\t\t\t\tqueryParams = queryParamString.split('&').map((queryParam) => {\n\t\t\t\t\treturn queryParam.replace('{', '').replace('}', '');\n\t\t\t\t});\n\t\t\t}\n\t\t\troute.fullQueryParams = parentRoute ? [...parentRoute.fullQueryParams, ...queryParams] : queryParams;\n\n\t\t\troute.fullParams = parentRoute ? [...parentRoute.fullParams, ...route.params] : route.params;\n\n\t\t\tif (children && children.length > 0) {\n\t\t\t\tthis._register(children, route.children, route);\n\t\t\t}\n\t\t\tthis._outletMap[outlet] = route;\n\t\t\troutes.push(route);\n\t\t}\n\t}\n\n\t/**\n\t * Returns an object of query params\n\t *\n\t * @param queryParamString The string of query params, e.g `paramOne=one&paramTwo=two`\n\t */\n\tprivate _getQueryParams(queryParamString?: string): { [index: string]: string } {\n\t\tconst queryParams: { [index: string]: string } = {};\n\t\tif (queryParamString) {\n\t\t\tconst queryParameters = queryParamString.split('&');\n\t\t\tfor (let i = 0; i < queryParameters.length; i++) {\n\t\t\t\tconst [key, value] = queryParameters[i].split('=');\n\t\t\t\tqueryParams[key] = value;\n\t\t\t}\n\t\t}\n\t\treturn queryParams;\n\t}\n\n\t/**\n\t * Called on change of the route by the the registered history manager. Matches the path against\n\t * the registered outlets.\n\t *\n\t * @param requestedPath The path of the requested route\n\t */\n\tprivate _onChange = (requestedPath: string): void => {\n\t\trequestedPath = this._stripLeadingSlash(requestedPath);\n\t\tconst previousMatchedOutlets = this._matchedOutlets;\n\t\tthis._matchedOutlets = Object.create(null);\n\t\tconst [path, queryParamString] = requestedPath.split('?');\n\t\tthis._currentQueryParams = this._getQueryParams(queryParamString);\n\t\tconst segments = path.split('/');\n\t\tlet routeConfigs: RouteWrapper[] = this._routes.map((route) => ({\n\t\t\troute,\n\t\t\tsegments: [...segments],\n\t\t\tparent: undefined,\n\t\t\tparams: {}\n\t\t}));\n\t\tlet routeConfig: RouteWrapper | undefined;\n\t\tlet matchedRoutes: RouteWrapper[] = [];\n\t\twhile ((routeConfig = routeConfigs.pop())) {\n\t\t\tconst { route, parent, segments, params } = routeConfig;\n\t\t\tlet segmentIndex = 0;\n\t\t\tlet type = 'index';\n\t\t\tlet paramIndex = 0;\n\t\t\tlet routeMatch = true;\n\t\t\tif (segments.length < route.segments.length) {\n\t\t\t\trouteMatch = false;\n\t\t\t} else {\n\t\t\t\twhile (segments.length > 0) {\n\t\t\t\t\tif (route.segments[segmentIndex] === undefined) {\n\t\t\t\t\t\ttype = 'partial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst segment = segments.shift()!;\n\t\t\t\t\tif (route.segments[segmentIndex] === PARAM) {\n\t\t\t\t\t\tparams[route.params[paramIndex++]] = segment;\n\t\t\t\t\t\tthis._currentParams = { ...this._currentParams, ...params };\n\t\t\t\t\t} else if (route.segments[segmentIndex] !== segment) {\n\t\t\t\t\t\trouteMatch = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tsegmentIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (routeMatch) {\n\t\t\t\trouteConfig.type = type;\n\t\t\t\tmatchedRoutes.push({ route, parent, type, params, segments: [] });\n\t\t\t\tif (segments.length) {\n\t\t\t\t\trouteConfigs = [\n\t\t\t\t\t\t...routeConfigs,\n\t\t\t\t\t\t...route.children.map((childRoute) => ({\n\t\t\t\t\t\t\troute: childRoute,\n\t\t\t\t\t\t\tsegments: [...segments],\n\t\t\t\t\t\t\tparent: routeConfig,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tparams: { ...params }\n\t\t\t\t\t\t}))\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet matchedOutletName: string | undefined = undefined;\n\t\tlet matchedRoute: any = matchedRoutes.reduce((match: any, matchedRoute: any) => {\n\t\t\tif (!match) {\n\t\t\t\treturn matchedRoute;\n\t\t\t}\n\t\t\tif (match.route.score > matchedRoute.route.score) {\n\t\t\t\treturn match;\n\t\t\t}\n\t\t\treturn matchedRoute;\n\t\t}, undefined);\n\n\t\tif (matchedRoute) {\n\t\t\tif (matchedRoute.type === 'partial') {\n\t\t\t\tmatchedRoute.type = 'error';\n\t\t\t}\n\t\t\tmatchedOutletName = matchedRoute.route.outlet;\n\t\t\twhile (matchedRoute) {\n\t\t\t\tlet { type, params, parent, route } = matchedRoute;\n\t\t\t\tconst matchedOutlet = {\n\t\t\t\t\tid: route.outlet,\n\t\t\t\t\tqueryParams: this._currentQueryParams,\n\t\t\t\t\tparams,\n\t\t\t\t\ttype,\n\t\t\t\t\tisError: () => type === 'error',\n\t\t\t\t\tisExact: () => type === 'index'\n\t\t\t\t};\n\t\t\t\tconst previousMatchedOutlet = previousMatchedOutlets[route.outlet];\n\t\t\t\tthis._matchedOutlets[route.outlet] = matchedOutlet;\n\t\t\t\tif (!previousMatchedOutlet || !matchingParams(previousMatchedOutlet, matchedOutlet)) {\n\t\t\t\t\tthis.emit({ type: 'outlet', outlet: matchedOutlet, action: 'enter' });\n\t\t\t\t}\n\t\t\t\tmatchedRoute = parent;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._matchedOutlets.errorOutlet = {\n\t\t\t\tid: 'errorOutlet',\n\t\t\t\tqueryParams: {},\n\t\t\t\tparams: {},\n\t\t\t\tisError: () => true,\n\t\t\t\tisExact: () => false,\n\t\t\t\ttype: 'error'\n\t\t\t};\n\t\t}\n\n\t\tconst previousMatchedOutletKeys = Object.keys(previousMatchedOutlets);\n\t\tfor (let i = 0; i < previousMatchedOutletKeys.length; i++) {\n\t\t\tconst key = previousMatchedOutletKeys[i];\n\t\t\tconst matchedOutlet = this._matchedOutlets[key];\n\t\t\tif (!matchedOutlet || !matchingParams(previousMatchedOutlets[key], matchedOutlet)) {\n\t\t\t\tthis.emit({ type: 'outlet', outlet: previousMatchedOutlets[key], action: 'exit' });\n\t\t\t}\n\t\t}\n\t\tthis.emit({\n\t\t\ttype: 'nav',\n\t\t\toutlet: matchedOutletName,\n\t\t\tcontext: matchedOutletName ? this._matchedOutlets[matchedOutletName] : undefined\n\t\t});\n\t};\n}\n\nexport default Router;\n","import { createProcess } from \"@dojo/framework/stores/process\";\nimport { replace } from \"@dojo/framework/stores/state/operations\";\nimport { commandFactory } from \"./utils\";\nimport { baseUrl } from \"../config\";\n\nconst getTagsCommand = commandFactory(async ({ path }) => {\n\tconst response = await fetch(`${baseUrl}/tags`);\n\tconst json = await response.json();\n\n\treturn [replace(path(\"tags\"), json.tags)];\n});\n\nexport const getTagsProcess = createProcess(\"get-tags\", [getTagsCommand]);\n","import { createProcess } from \"@dojo/framework/stores/process\";\nimport { replace } from \"@dojo/framework/stores/state/operations\";\nimport { commandFactory } from \"./utils\";\nimport { ChangeRoutePayload } from \"./interfaces\";\n\nfunction isProfile(currentOutlet: string, outlet: string) {\n\tconst outlets = [\"user\", \"favorites\"];\n\treturn outlets.indexOf(currentOutlet) > -1 && outlets.indexOf(outlet) > -1;\n}\n\nconst changeRouteCommand = commandFactory<ChangeRoutePayload>(({ get, path, payload: { outlet, context } }) => {\n\tconst currentOutlet = get(path(\"routing\", \"outlet\"));\n\treturn [\n\t\treplace(path(\"routing\", \"outlet\"), outlet),\n\t\treplace(path(\"routing\", \"params\"), context.params),\n\t\treplace(path(\"settings\"), undefined),\n\t\treplace(path(\"editor\"), undefined),\n\t\tisProfile(currentOutlet, outlet) ? replace(path(\"profile\", \"feed\"), {}) : replace(path(\"profile\"), undefined),\n\t\treplace(path(\"feed\"), undefined),\n\t\treplace(path(\"errors\"), {})\n\t];\n});\nexport const changeRouteProcess = createProcess(\"change-route\", [changeRouteCommand]);\n","import has from \"@dojo/framework/core/has\";\nimport global from \"@dojo/framework/shim/global\";\nimport { createStoreMiddleware } from \"@dojo/framework/core/middleware/store\";\nimport { registerRouterInjector } from \"@dojo/framework/routing/RouterInjector\";\n\nimport { getTagsProcess } from \"./processes/tagProcesses\";\nimport { setSessionProcess } from \"./processes/loginProcesses\";\nimport { State } from \"./interfaces\";\nimport Store from \"@dojo/framework/stores/Store\";\nimport config from \"./routes\";\nimport Registry from \"@dojo/framework/core/Registry\";\nimport { changeRouteProcess } from \"./processes/routeProcesses\";\n\nexport const registry = new Registry();\nconst router = registerRouterInjector(config, registry);\n\nconst store = createStoreMiddleware<State>((store: Store) => {\n\tlet session: any;\n\tif (!has(\"build-time-render\") && !has(\"test\")) {\n\t\tsession = global.sessionStorage.getItem(\"conduit-session\");\n\t}\n\tif (session) {\n\t\tsetSessionProcess(store)({ session: JSON.parse(session) });\n\t}\n\tgetTagsProcess(store)({});\n\trouter.on(\"nav\", ({ outlet, context }: any) => {\n\t\tchangeRouteProcess(store)({ outlet, context });\n\t});\n\n\tfunction onRouteChange() {\n\t\tconst outlet = store.get(store.path(\"routing\", \"outlet\"));\n\t\tconst params = store.get(store.path(\"routing\", \"params\"));\n\t\tif (outlet) {\n\t\t\tconst link = router.link(outlet, params);\n\t\t\tif (link !== undefined) {\n\t\t\t\trouter.setPath(link);\n\t\t\t}\n\t\t}\n\t}\n\n\tstore.onChange(store.path(\"routing\", \"outlet\"), onRouteChange);\n\tstore.onChange(store.path(\"routing\", \"params\"), onRouteChange);\n});\n\nexport default store;\n","import { Registry } from '../core/Registry';\nimport { RegistryLabel } from '../core/interfaces';\n\nimport { Router } from './Router';\nimport { RouteConfig, RouterOptions } from './interfaces';\n\n/**\n * Router Injector Options\n *\n */\nexport interface RouterInjectorOptions extends RouterOptions {\n\tkey?: RegistryLabel;\n}\n\n/**\n * Creates a router instance for a specific History manager (default is `HashHistory`) and registers\n * the route configuration.\n *\n * @param config The route config to register for the router\n * @param registry An optional registry that defaults to the global registry\n * @param options The router injector options\n */\nexport function registerRouterInjector(\n\tconfig: RouteConfig[],\n\tregistry: Registry,\n\toptions: RouterInjectorOptions = {}\n): Router {\n\tconst { key = 'router', ...routerOptions } = options;\n\n\tif (registry.hasInjector(key)) {\n\t\tthrow new Error('Router has already been defined');\n\t}\n\tconst router = new Router(config, routerOptions);\n\tregistry.defineInjector(key, (invalidator: () => void) => {\n\t\trouter.on('nav', () => invalidator());\n\t\treturn () => router;\n\t});\n\treturn router;\n}\n","export default [\n\t{\n\t\tpath: \"login\",\n\t\toutlet: \"login\"\n\t},\n\t{\n\t\tpath: \"register\",\n\t\toutlet: \"register\"\n\t},\n\t{\n\t\tpath: \"user/{username}\",\n\t\toutlet: \"user\"\n\t},\n\t{\n\t\tpath: \"user/{username}/favorites\",\n\t\toutlet: \"favorites\"\n\t},\n\t{\n\t\tpath: \"article/{slug}\",\n\t\toutlet: \"article\"\n\t},\n\t{\n\t\tpath: \"settings\",\n\t\toutlet: \"settings\"\n\t},\n\t{\n\t\tpath: \"editor\",\n\t\toutlet: \"new-post\",\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: \"editor/{slug}\",\n\t\t\t\toutlet: \"edit-post\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tpath: \"home\",\n\t\toutlet: \"home\",\n\t\tdefaultRoute: true\n\t}\n];\n","import { isThenable } from '../shim/Promise';\nimport { PatchOperation } from './state/Patch';\nimport { replace, remove } from './state/operations';\nimport { Path, State, Store } from './Store';\nimport Map from '../shim/Map';\nimport has from '../core/has';\n\n/**\n * Default Payload interface\n */\nexport interface DefaultPayload {\n\t[index: string]: any;\n}\n\n/**\n * The arguments passed to a `Command`\n */\nexport interface CommandRequest<T = any, P extends object = DefaultPayload> extends State<T> {\n\tpayload: P;\n\tstate: T;\n}\n\n/**\n * A command factory interface. Returns the passed command. This provides a way to automatically infer and/or\n * verify the type of multiple commands without explicitly specifying the generic for each command\n */\nexport interface CommandFactory<T = any, P extends object = DefaultPayload> {\n\t<R extends object = P>(command: AsyncCommandWithOps<T, R>): AsyncCommandWithOps<T, R>;\n\t<R extends object = P>(command: SyncCommandWithOps<T, R>): SyncCommandWithOps<T, R>;\n\t<R extends object = P>(command: AsyncCommand<T, R>): AsyncCommand<T, R>;\n\t<R extends object = P>(command: SyncCommand<T, R>): SyncCommand<T, R>;\n}\n\nexport interface AsyncCommandWithOps<T = any, P extends object = DefaultPayload> {\n\t(request: CommandRequest<T, P>): Promise<PatchOperation<T>[]>;\n}\n\nexport interface SyncCommandWithOps<T = any, P extends object = DefaultPayload> {\n\t(request: CommandRequest<T, P>): PatchOperation<T>[];\n}\n\nexport interface AsyncCommand<T = any, P extends object = DefaultPayload> {\n\t(request: CommandRequest<T, P>): Promise<void>;\n}\n\nexport interface SyncCommand<T = any, P extends object = DefaultPayload> {\n\t(request: CommandRequest<T, P>): void;\n}\n\n/**\n * Command that returns patch operations based on the command request\n */\nexport type Command<T = any, P extends object = DefaultPayload> =\n\t| SyncCommand<T, P>\n\t| AsyncCommand<T, P>\n\t| SyncCommandWithOps<T, P>\n\t| AsyncCommandWithOps<T, P>;\n\n/**\n * Transformer function\n */\nexport interface Transformer<P extends object = DefaultPayload, R extends object = DefaultPayload> {\n\t(payload: R): P;\n}\n\n/**\n * A process that returns an executor using a Store and Transformer\n */\nexport interface Process<T = any, P extends object = DefaultPayload> {\n\t<R extends object = DefaultPayload>(store: Store<T>, transformer: Transformer<P, R>): ProcessExecutor<T, P, R>;\n\t(store: Store<T>): ProcessExecutor<T, P, P>;\n}\n\n/**\n * Represents an error from a ProcessExecutor\n */\nexport interface ProcessError<T = any> {\n\terror: Error | null;\n\tcommand?: Command<T, any>[] | Command<T, any>;\n}\n\nexport interface ProcessResultExecutor<T = any> {\n\t<P extends object = DefaultPayload, R extends object = DefaultPayload>(\n\t\tprocess: Process<T, P>,\n\t\tpayload: R,\n\t\ttransformer: Transformer<P, R>\n\t): Promise<ProcessResult<T, P> | ProcessError<T>>;\n\t<P extends object = object>(process: Process<T, P>, payload: P): Promise<ProcessResult<T, P> | ProcessError<T>>;\n}\n\n/**\n * Represents a successful result from a ProcessExecutor\n */\nexport interface ProcessResult<T = any, P extends object = DefaultPayload> extends State<T> {\n\texecutor: ProcessResultExecutor<T>;\n\tstore: Store<T>;\n\toperations: PatchOperation<T>[];\n\tundoOperations: PatchOperation<T>[];\n\tapply: (operations: PatchOperation<T>[], invalidate?: boolean) => PatchOperation<T>[];\n\tpayload: P;\n\tid: string;\n\terror?: ProcessError<T> | null;\n}\n\n/**\n * Runs a process for the given arguments.\n */\nexport interface ProcessExecutor<T = any, P extends object = DefaultPayload, R extends object = DefaultPayload> {\n\t(payload: R): Promise<ProcessResult<T, P>>;\n}\n\nexport interface ProcessCallback<T = any, P extends object = DefaultPayload> {\n\t(): {\n\t\tbefore?: ProcessCallbackBefore<T, P>;\n\t\tafter?: ProcessCallbackAfter<T>;\n\t};\n}\n\n/**\n * Callback for a process, returns an error as the first argument\n */\nexport interface ProcessCallbackAfter<T = any> {\n\t(error: ProcessError<T> | null, result: ProcessResult<T>): void;\n}\n\nexport interface ProcessCallbackBefore<T = any, P extends object = DefaultPayload> {\n\t(payload: P, store: Store<T>, id: string): void | Promise<void>;\n}\n\n/**\n * Function for undoing operations\n */\nexport interface Undo {\n\t(): void;\n}\n\n/**\n * ProcessCallbackDecorator callback\n */\ninterface ProcessCallbackDecorator {\n\t(callback?: ProcessCallback): ProcessCallback;\n}\n\n/**\n * CreateProcess factory interface\n */\nexport interface CreateProcess<T = any, P extends object = DefaultPayload> {\n\t(id: string, commands: (Command<T, P>[] | Command<T, P>)[], callback?: ProcessCallback<T>): Process<T, P>;\n}\n\n/**\n * Creates a command factory with the specified type\n */\nexport function createCommandFactory<T, P extends object = DefaultPayload>(): CommandFactory<T, P> {\n\tfunction commandFactory<R extends object = P>(command: AsyncCommand<T, R>): AsyncCommand<T, R>;\n\tfunction commandFactory<R extends object = P>(command: SyncCommand<T, R>): SyncCommand<T, R>;\n\tfunction commandFactory<R extends object = P>(command: AsyncCommandWithOps<T, R>): AsyncCommandWithOps<T, R>;\n\tfunction commandFactory<R extends object = P>(command: SyncCommandWithOps<T, R>): SyncCommandWithOps<T, R>;\n\tfunction commandFactory<R extends object = P>(command: Command<T, R>): Command<T, R> {\n\t\treturn command;\n\t}\n\treturn commandFactory;\n}\n\n/**\n * Commands that can be passed to a process\n */\nexport type Commands<T = any, P extends object = DefaultPayload> = (Command<T, P>[] | Command<T, P>)[];\n\nconst processMap = new Map();\nconst valueSymbol = Symbol('value');\n\nexport function isStateProxy(value: any) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\treturn Boolean(value[valueSymbol]);\n}\n\nexport function getProcess(id: string) {\n\treturn processMap.get(id);\n}\n\nconst proxyError = 'State updates are not available on legacy browsers';\n\nfunction removeProxies(value: any) {\n\tif (typeof value === 'object' && value !== null) {\n\t\tif (value[valueSymbol]) {\n\t\t\tvalue = value[valueSymbol];\n\t\t}\n\n\t\tconst newValue: typeof value = Array.isArray(value) ? [] : {};\n\t\tconst keys = Object.keys(value);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tnewValue[keys[i]] = removeProxies(value[keys[i]]);\n\t\t}\n\n\t\tvalue = newValue;\n\t}\n\n\treturn value;\n}\n\nexport function processExecutor<T = any, P extends object = DefaultPayload>(\n\tid: string,\n\tcommands: Commands<T, P>,\n\tstore: Store<T>,\n\tbefore: ProcessCallbackBefore | undefined,\n\tafter: ProcessCallbackAfter | undefined,\n\ttransformer: Transformer<P> | undefined\n): ProcessExecutor<T, any, any> {\n\tconst { apply, get, path, at } = store;\n\tfunction executor(\n\t\tprocess: Process,\n\t\tpayload: any,\n\t\ttransformer?: Transformer\n\t): Promise<ProcessResult | ProcessError> {\n\t\treturn process(store)(payload);\n\t}\n\n\treturn async (executorPayload: P): Promise<ProcessResult<T, P>> => {\n\t\tconst operations: PatchOperation[] = [];\n\t\tconst commandsCopy = [...commands];\n\t\tlet undoOperations: PatchOperation[] = [];\n\t\tlet command = commandsCopy.shift();\n\t\tlet error: ProcessError | null = null;\n\t\tconst payload = transformer ? transformer(executorPayload) : executorPayload;\n\n\t\tif (before) {\n\t\t\tlet result = before(payload, store, id);\n\t\t\tif (result) {\n\t\t\t\tawait result;\n\t\t\t}\n\t\t}\n\n\t\tfunction createProxy() {\n\t\t\tconst proxies = new Map<string, any>();\n\t\t\tconst proxied = new Map<string, any>();\n\n\t\t\tconst proxyOperations: PatchOperation[] = [];\n\t\t\tconst createHandler = (partialPath?: Path<T, any>) => ({\n\t\t\t\tget(obj: any, prop: string): any {\n\t\t\t\t\tconst fullPath = partialPath ? path(partialPath, prop) : path(prop as keyof T);\n\t\t\t\t\tconst stringPath = fullPath.path;\n\n\t\t\t\t\tif (typeof prop === 'symbol' && prop === valueSymbol) {\n\t\t\t\t\t\treturn proxied.get(stringPath);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet value = partialPath || obj.hasOwnProperty(prop) ? obj[prop] : get(fullPath);\n\n\t\t\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t\t\tlet proxiedValue;\n\t\t\t\t\t\tif (!proxies.has(stringPath)) {\n\t\t\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\t\t\tvalue = value.slice();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvalue = { ...value };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tproxiedValue = new Proxy(value, createHandler(fullPath));\n\t\t\t\t\t\t\tproxies.set(stringPath, proxiedValue);\n\t\t\t\t\t\t\tproxied.set(stringPath, value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tproxiedValue = proxies.get(stringPath);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobj[prop] = value;\n\t\t\t\t\t\treturn proxiedValue;\n\t\t\t\t\t}\n\n\t\t\t\t\tobj[prop] = value;\n\t\t\t\t\treturn value;\n\t\t\t\t},\n\n\t\t\t\tset(obj: any, prop: string, value: any) {\n\t\t\t\t\tvalue = removeProxies(value);\n\n\t\t\t\t\tproxyOperations.push(replace(partialPath ? path(partialPath, prop) : path(prop as keyof T), value));\n\t\t\t\t\tobj[prop] = value;\n\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\n\t\t\t\tdeleteProperty(obj: any, prop: string) {\n\t\t\t\t\tproxyOperations.push(remove(partialPath ? path(partialPath, prop) : path(prop as keyof T)));\n\t\t\t\t\tdelete obj[prop];\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn { proxy: new Proxy({}, createHandler()) as T, operations: proxyOperations };\n\t\t}\n\n\t\ttry {\n\t\t\twhile (command) {\n\t\t\t\tlet results = [];\n\t\t\t\tconst commandArray = Array.isArray(command) ? command : [command];\n\n\t\t\t\tresults = commandArray.map((commandFunction: Command<T, P>) => {\n\t\t\t\t\tlet state: T;\n\t\t\t\t\tlet proxyOperations: PatchOperation[] = [];\n\t\t\t\t\tif (typeof Proxy !== 'undefined') {\n\t\t\t\t\t\tconst { operations, proxy } = createProxy();\n\t\t\t\t\t\tstate = proxy;\n\t\t\t\t\t\tproxyOperations = operations;\n\t\t\t\t\t}\n\t\t\t\t\tlet result = commandFunction({\n\t\t\t\t\t\tat,\n\t\t\t\t\t\tget,\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tpayload,\n\t\t\t\t\t\tget state() {\n\t\t\t\t\t\t\tif (typeof Proxy === 'undefined') {\n\t\t\t\t\t\t\t\tthrow new Error(proxyError);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn state;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (isThenable(result)) {\n\t\t\t\t\t\treturn result.then((result) => {\n\t\t\t\t\t\t\tresult = result ? [...proxyOperations, ...result] : [...proxyOperations];\n\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult =\n\t\t\t\t\t\t\tresult && Array.isArray(result) ? [...proxyOperations, ...result] : [...proxyOperations];\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tlet resolvedResults: PatchOperation[][];\n\t\t\t\tif (results.some(isThenable)) {\n\t\t\t\t\tresolvedResults = await Promise.all(results);\n\t\t\t\t} else {\n\t\t\t\t\tresolvedResults = results as PatchOperation[][];\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < results.length; i++) {\n\t\t\t\t\toperations.push(...resolvedResults[i]);\n\t\t\t\t\tundoOperations = [...apply(resolvedResults[i]), ...undoOperations];\n\t\t\t\t}\n\n\t\t\t\tstore.invalidate();\n\t\t\t\tcommand = commandsCopy.shift();\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (e.message === proxyError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terror = { error: e, command };\n\t\t}\n\n\t\tafter &&\n\t\t\tafter(error, {\n\t\t\t\tundoOperations,\n\t\t\t\tstore,\n\t\t\t\tid,\n\t\t\t\toperations,\n\t\t\t\tapply,\n\t\t\t\tat,\n\t\t\t\tget,\n\t\t\t\tpath,\n\t\t\t\texecutor,\n\t\t\t\tpayload\n\t\t\t});\n\t\treturn Promise.resolve({\n\t\t\tstore,\n\t\t\tundoOperations,\n\t\t\tid,\n\t\t\terror,\n\t\t\toperations,\n\t\t\tapply,\n\t\t\tat,\n\t\t\tget,\n\t\t\tpath,\n\t\t\texecutor,\n\t\t\tpayload\n\t\t});\n\t};\n}\n/**\n * Factories a process using the provided commands and an optional callback. Returns an executor used to run the process.\n *\n * @param commands The commands for the process\n * @param callback Callback called after the process is completed\n */\nexport function createProcess<T = any, P extends object = DefaultPayload>(\n\tid: string,\n\tcommands: Commands<T, P>,\n\tcallbacks?: ProcessCallback | ProcessCallback[]\n): Process<T, P> {\n\tcallbacks = Array.isArray(callbacks) ? callbacks : callbacks ? [callbacks] : [];\n\n\tconst callback = callbacks.length\n\t\t? callbacks.reduce((callback, nextCallback) => {\n\t\t\t\treturn combineCallbacks(nextCallback, id)(callback);\n\t\t  })\n\t\t: undefined;\n\n\tconst { before = undefined, after = undefined } = callback ? callback() : {};\n\n\tprocessMap.set(id, [id, commands, before, after]);\n\treturn (store: Store<T>, transformer?: Transformer<P>) =>\n\t\tprocessExecutor(id, commands, store, before, after, transformer);\n}\n\n/**\n * Creates a process factory that will create processes with the specified callback decorators applied.\n * @param callbacks array of process callback to be used by the returned factory.\n * @param initializers array of process initializers to be used by the returned factory.\n */\nexport function createProcessFactoryWith(callbacks: ProcessCallback[]) {\n\treturn <S, P extends object>(\n\t\tid: string,\n\t\tcommands: (Command<S, P>[] | Command<S, P>)[],\n\t\tcallback?: ProcessCallback<S>\n\t): Process<S, P> => {\n\t\treturn createProcess(id, commands, callback ? [...callbacks, callback] : callbacks);\n\t};\n}\n\n/**\n * Creates a `ProcessCallbackDecorator` from a `ProcessCallback`.\n * @param processCallback the process callback to convert to a decorator.\n * @param id process id to be passed to the before callback\n */\nfunction combineCallbacks(processCallback: ProcessCallback, id: string): ProcessCallbackDecorator {\n\tconst { before, after } = processCallback();\n\treturn (previousCallback?: ProcessCallback) => {\n\t\tconst { before: previousBefore = undefined, after: previousAfter = undefined } = previousCallback\n\t\t\t? previousCallback()\n\t\t\t: {};\n\t\treturn () => ({\n\t\t\tafter(error: ProcessError | null, result: ProcessResult) {\n\t\t\t\tif (previousAfter) {\n\t\t\t\t\tpreviousAfter(error, result);\n\t\t\t\t}\n\n\t\t\t\tif (after) {\n\t\t\t\t\tafter(error, result);\n\t\t\t\t}\n\t\t\t},\n\t\t\tbefore(payload: DefaultPayload, store: Store<any>) {\n\t\t\t\tif (previousBefore) {\n\t\t\t\t\tpreviousBefore(payload, store, id);\n\t\t\t\t}\n\n\t\t\t\tif (before) {\n\t\t\t\t\tbefore(payload, store, id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n}\n\nexport function createCallbackDecorator(\n\tcallback: ProcessCallbackAfter\n): (callbacks?: ProcessCallback[]) => ProcessCallback[] {\n\tif (has('dojo-debug')) {\n\t\tconsole.warn(\n\t\t\t'Process using the the legacy middleware API. Please update to use the latest API, see https://github.com/dojo/framework/blob/master/docs/V5-Migration-Guide.md for details.'\n\t\t);\n\t}\n\tconst convertedCallback = () => ({\n\t\tafter: callback\n\t});\n\treturn (callbacks: ProcessCallback[] = []) => {\n\t\treturn [convertedCallback, ...callbacks];\n\t};\n}\n","import {\n\tRemovePatchOperation,\n\tReplacePatchOperation,\n\tAddPatchOperation,\n\tTestPatchOperation,\n\tOperationType\n} from './Patch';\nimport { Pointer } from './Pointer';\nimport { Path } from '../Store';\n\nexport function add<T = any, U = any>(path: Path<T, U>, value: U): AddPatchOperation<T, U> {\n\treturn {\n\t\top: OperationType.ADD,\n\t\tpath: new Pointer(path.path),\n\t\tvalue\n\t};\n}\n\nexport function replace<T = any, U = any>(path: Path<T, U>, value: U): ReplacePatchOperation<T, U> {\n\treturn {\n\t\top: OperationType.REPLACE,\n\t\tpath: new Pointer(path.path),\n\t\tvalue\n\t};\n}\n\nexport function remove<T = any, U = any>(path: Path<T, U>): RemovePatchOperation<T, U> {\n\treturn {\n\t\top: OperationType.REMOVE,\n\t\tpath: new Pointer(path.path)\n\t};\n}\n\nexport function test<T = any, U = any>(path: Path<T, U>, value: U): TestPatchOperation<T, U> {\n\treturn {\n\t\top: OperationType.TEST,\n\t\tpath: new Pointer(path.path),\n\t\tvalue\n\t};\n}\n","import { createCommandFactory } from \"@dojo/framework/stores/process\";\nimport { State } from \"../interfaces\";\n\nexport function getHeaders(token?: string): any {\n\tconst headers: { [key: string]: string } = {\n\t\t\"Content-Type\": \"application/json\"\n\t};\n\tif (token) {\n\t\theaders[\"Authorization\"] = `Token ${token}`;\n\t}\n\treturn headers;\n}\n\nexport const commandFactory = createCommandFactory<State>();\n","import { create, v } from '../core/vdom';\nimport injector from '../core/middleware/injector';\nimport { VNodeProperties } from '../core/interfaces';\nimport { Params } from './interfaces';\nimport Router from './Router';\n\nexport interface LinkProperties extends VNodeProperties {\n\tkey?: string;\n\trouterKey?: string;\n\tisOutlet?: boolean;\n\tparams?: Params;\n\tonClick?: (event: MouseEvent) => void;\n\tto: string;\n}\n\nconst factory = create({ injector }).properties<LinkProperties>();\n\nexport const Link = factory(function Link({ middleware: { injector }, properties, children }) {\n\tlet { routerKey = 'router', to, isOutlet = true, target, params = {}, onClick, ...props } = properties();\n\tconst router = injector.get<Router>(routerKey);\n\tlet href: string | undefined = to;\n\n\tlet linkProps: VNodeProperties;\n\tif (router) {\n\t\tif (isOutlet) {\n\t\t\thref = router.link(href, params);\n\t\t}\n\t\tconst onclick = (event: MouseEvent) => {\n\t\t\tonClick && onClick(event);\n\n\t\t\tif (!event.defaultPrevented && event.button === 0 && !event.metaKey && !event.ctrlKey && !target) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\thref !== undefined && router.setPath(href);\n\t\t\t}\n\t\t};\n\t\tlinkProps = { ...props, onclick, href };\n\t} else {\n\t\tlinkProps = { ...props, href };\n\t}\n\treturn v('a', linkProps, children());\n});\n\nexport default Link;\n","export const baseUrl = \"https://conduit.productionready.io/api\";\n","import has from '../core/has';\n\nexport interface ObjectAssign {\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source The source object from which to copy properties.\n\t */\n\t<T, U>(target: T, source: U): T & U;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t */\n\t<T, U, V>(target: T, source1: U, source2: V): T & U & V;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t * @param source3 The third source object from which to copy properties.\n\t */\n\t<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param sources One or more source objects from which to copy properties\n\t */\n\t(target: object, ...sources: any[]): any;\n}\n\nexport interface ObjectEnteries {\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T extends { [key: string]: any }, K extends keyof T>(o: T): [keyof T, T[K]][];\n\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): [string, any][];\n}\n\nexport interface ObjectGetOwnPropertyDescriptors {\n\t<T>(o: T): { [K in keyof T]: PropertyDescriptor };\n\t(o: any): { [key: string]: PropertyDescriptor };\n}\n\nexport interface ObjectValues {\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T>(o: { [s: string]: T }): T[];\n\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): any[];\n}\n\nexport let assign: ObjectAssign;\n\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor: <T, K extends keyof T>(o: T, propertyKey: K) => PropertyDescriptor | undefined;\n\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames: (o: any) => string[];\n\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols: (o: any) => symbol[];\n\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is: (value1: any, value2: any) => boolean;\n\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys: (o: object) => string[];\n\n/* ES7 Object static methods */\n\nexport let getOwnPropertyDescriptors: ObjectGetOwnPropertyDescriptors;\n\nexport let entries: ObjectEnteries;\n\nexport let values: ObjectValues;\n\nif (!has('es6-object')) {\n\tconst keys = Object.keys.bind(Object);\n\tObject.keys = function symbolAwareKeys(o: object): string[] {\n\t\treturn keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tObject.assign = function assign(target: any, ...sources: any[]) {\n\t\tif (target == null) {\n\t\t\t// TypeError if undefined or null\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t}\n\n\t\tconst to = Object(target);\n\t\tsources.forEach((nextSource) => {\n\t\t\tif (nextSource) {\n\t\t\t\t// Skip over if undefined or null\n\t\t\t\tkeys(nextSource).forEach((nextKey) => {\n\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn to;\n\t};\n\n\tconst getOwnPropertyNames = Object.getOwnPropertyNames.bind(Object);\n\tObject.getOwnPropertyNames = function symbolAwareGetOwnPropertyNames(o: any): string[] {\n\t\treturn getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tObject.getOwnPropertySymbols = function getOwnPropertySymbols(o: any): symbol[] {\n\t\treturn getOwnPropertyNames(o)\n\t\t\t.filter((key) => Boolean(key.match(/^@@.+/)))\n\t\t\t.map((key) => Symbol.for(key.substring(2)));\n\t};\n\n\tObject.is = function is(value1: any, value2: any): boolean {\n\t\tif (value1 === value2) {\n\t\t\treturn value1 !== 0 || 1 / value1 === 1 / value2; // -0\n\t\t}\n\t\treturn value1 !== value1 && value2 !== value2; // NaN\n\t};\n}\n\nif (!has('es2017-object')) {\n\tObject.getOwnPropertyDescriptors = function getOwnPropertyDescriptors<T>(\n\t\to: T\n\t): { [P in keyof T]: TypedPropertyDescriptor<T[P]> } & { [x: string]: PropertyDescriptor } {\n\t\treturn Object.getOwnPropertyNames(o).reduce(\n\t\t\t(previous, key) => {\n\t\t\t\tprevious[key] = Object.getOwnPropertyDescriptor(o, key)!;\n\t\t\t\treturn previous;\n\t\t\t},\n\t\t\t{} as { [P in keyof T]: TypedPropertyDescriptor<T[P]> } & { [x: string]: PropertyDescriptor }\n\t\t);\n\t};\n\n\tObject.entries = function entries(o: any): [string, any][] {\n\t\treturn keys(o).map((key) => [key, o[key]] as [string, any]);\n\t};\n\n\tObject.values = function values(o: any): any[] {\n\t\treturn keys(o).map((key) => o[key]);\n\t};\n}\n\nassign = Object.assign;\ngetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\ngetOwnPropertyNames = Object.getOwnPropertyNames;\ngetOwnPropertySymbols = Object.getOwnPropertySymbols;\nis = Object.is;\nkeys = Object.keys;\ngetOwnPropertyDescriptors = Object.getOwnPropertyDescriptors;\nentries = Object.entries;\nvalues = Object.values;\n\nexport default Object;\n","`!has('es6-iterator')`;\nimport { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface Map<K, V> {\n\t/**\n\t * Deletes all keys and their associated values.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Deletes a given key and its associated value.\n\t *\n\t * @param key The key to delete\n\t * @return true if the key exists, false if it does not\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Returns an iterator that yields each key/value pair as an array.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[K, V]>;\n\n\t/**\n\t * Executes a given function for each map entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated Map instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;\n\n\t/**\n\t * Returns the value associated with a given key.\n\t *\n\t * @param key The key to look up\n\t * @return The value if one exists or undefined\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Returns an iterator that yields each key in the map.\n\t *\n\t * @return An iterator containing the instance's keys.\n\t */\n\tkeys(): IterableIterator<K>;\n\n\t/**\n\t * Checks for the presence of a given key.\n\t *\n\t * @param key The key to check for\n\t * @return true if the key exists, false if it does not\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Sets the value associated with a given key.\n\t *\n\t * @param key The key to define a value to\n\t * @param value The value to assign\n\t * @return The Map instance\n\t */\n\tset(key: K, value: V): this;\n\n\t/**\n\t * Returns the number of key / value pairs in the Map.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterator that yields each value in the map.\n\t *\n\t * @return An iterator containing the instance's values.\n\t */\n\tvalues(): IterableIterator<V>;\n\n\t/** Returns an iterable of entries in the map. */\n\t[Symbol.iterator](): IterableIterator<[K, V]>;\n\n\treadonly [Symbol.toStringTag]: string;\n}\n\nexport interface MapConstructor {\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t */\n\tnew (): Map<any, any>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator?: [K, V][]): Map<K, V>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator: Iterable<[K, V]>): Map<K, V>;\n\n\treadonly prototype: Map<any, any>;\n\n\treadonly [Symbol.species]: MapConstructor;\n}\n\nexport let Map: MapConstructor = global.Map;\n\nif (!has('es6-map')) {\n\tMap = global.Map = class Map<K, V> {\n\t\tprotected readonly _keys: K[] = [];\n\t\tprotected readonly _values: V[] = [];\n\n\t\t/**\n\t\t * An alternative to Array.prototype.indexOf using Object.is\n\t\t * to check for equality. See http://mzl.la/1zuKO2V\n\t\t */\n\t\tprotected _indexOfKey(keys: K[], key: K): number {\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tif (objectIs(keys[i], key)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\tstatic [Symbol.species] = Map;\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst value = iterable[i];\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._keys.length;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._keys.length = this._values.length = 0;\n\t\t}\n\n\t\tdelete(key: K): boolean {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\tif (index < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._keys.splice(index, 1);\n\t\t\tthis._values.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[K, V]> {\n\t\t\tconst values = this._keys.map(\n\t\t\t\t(key: K, i: number): [K, V] => {\n\t\t\t\t\treturn [key, this._values[i]];\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn new ShimIterator(values);\n\t\t}\n\n\t\tforEach(callback: (value: V, key: K, mapInstance: Map<K, V>) => any, context?: {}) {\n\t\t\tconst keys = this._keys;\n\t\t\tconst values = this._values;\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tcallback.call(context, values[i], keys[i], this);\n\t\t\t}\n\t\t}\n\n\t\tget(key: K): V | undefined {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\treturn index < 0 ? undefined : this._values[index];\n\t\t}\n\n\t\thas(key: K): boolean {\n\t\t\treturn this._indexOfKey(this._keys, key) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<K> {\n\t\t\treturn new ShimIterator(this._keys);\n\t\t}\n\n\t\tset(key: K, value: V): Map<K, V> {\n\t\t\tlet index = this._indexOfKey(this._keys, key);\n\t\t\tindex = index < 0 ? this._keys.length : index;\n\t\t\tthis._keys[index] = key;\n\t\t\tthis._values[index] = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tvalues(): IterableIterator<V> {\n\t\t\treturn new ShimIterator(this._values);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\t\treturn this.entries();\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Map' = 'Map';\n\t};\n}\n\nexport default Map;\n","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport {\n\tConstructor,\n\tInjectorFactory,\n\tInjectorItem,\n\tRegistryLabel,\n\tWidgetBaseConstructor,\n\tWidgetBaseInterface,\n\tESMDefaultWidgetBase,\n\tWidgetBaseConstructorFunction,\n\tESMDefaultWidgetBaseFunction,\n\tCallback,\n\tWNodeFactory,\n\tRenderResult,\n\tWidgetBaseTypes\n} from './interfaces';\n\nexport type RegistryItem =\n\t| WidgetBaseConstructor\n\t| WNodeFactory<any>\n\t| Promise<WidgetBaseConstructor | WNodeFactory<any>>\n\t| WidgetBaseConstructorFunction\n\t| ESMDefaultWidgetBaseFunction;\n\n/**\n * Widget base type\n */\nexport const WIDGET_BASE_TYPE = '__widget_base_type';\n\nexport interface RegistryEventObject extends EventObject<RegistryLabel> {\n\taction: string;\n\titem: WNodeFactory<any> | WidgetBaseConstructor | InjectorItem;\n}\n/**\n * Widget Registry Interface\n */\nexport interface RegistryInterface {\n\t/**\n\t * Define a WidgetRegistryItem against a label\n\t *\n\t * @param label The label of the widget to register\n\t * @param registryItem The registry item to define\n\t */\n\tdefine(label: RegistryLabel, registryItem: RegistryItem): void;\n\n\t/**\n\t * Return a RegistryItem for the given label, null if an entry doesn't exist\n\t *\n\t * @param widgetLabel The label of the widget to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tget(label: RegistryLabel): WNodeFactory<any> | Callback<any, any, RenderResult> | Constructor<any> | null;\n\tget<T extends WNodeFactory<any>>(label: RegistryLabel): T | null;\n\tget<T extends Callback<any, any, RenderResult>>(label: RegistryLabel): T | null;\n\tget<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\n\t/**\n\t * Returns a boolean if an entry for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a widget registry item exists\n\t */\n\thas(label: RegistryLabel): boolean;\n\n\t/**\n\t * Define an Injector against a label\n\t *\n\t * @param label The label of the injector to register\n\t * @param registryItem The injector factory\n\t */\n\tdefineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void;\n\n\t/**\n\t * Return an Injector registry item for the given label, null if an entry doesn't exist\n\t *\n\t * @param label The label of the injector to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tgetInjector<T>(label: RegistryLabel): InjectorItem<T> | null;\n\n\t/**\n\t * Returns a boolean if an injector for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a injector registry item exists\n\t */\n\thasInjector(label: RegistryLabel): boolean;\n}\n\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor<T extends WidgetBaseInterface = any>(item: any): item is Constructor<T> {\n\treturn Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\n\nexport function isWidgetFunction(item: any): item is Callback<any, any, RenderResult> {\n\treturn Boolean(item && item.isWidget);\n}\n\nexport function isWNodeFactory<W extends WidgetBaseTypes>(node: any): node is WNodeFactory<W> {\n\tif (typeof node === 'function' && node.isFactory) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function isWidget<T extends WidgetBaseInterface = any>(\n\titem: any\n): item is Constructor<T> | Callback<any, any, RenderResult> {\n\treturn isWidgetBaseConstructor(item) || isWidgetFunction(item);\n}\n\nexport function isWidgetConstructorDefaultExport<T extends WidgetBaseTypes>(\n\titem: any\n): item is ESMDefaultWidgetBase<T> {\n\treturn Boolean(\n\t\titem &&\n\t\t\titem.hasOwnProperty('__esModule') &&\n\t\t\titem.hasOwnProperty('default') &&\n\t\t\t(isWidget(item.default) || isWNodeFactory(item.default))\n\t);\n}\n\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented<{}, RegistryLabel, RegistryEventObject> implements RegistryInterface {\n\t/**\n\t * internal map of labels and RegistryItem\n\t */\n\tprivate _widgetRegistry: Map<RegistryLabel, RegistryItem> | undefined;\n\n\tprivate _injectorRegistry: Map<RegistryLabel, InjectorItem> | undefined;\n\n\t/**\n\t * Emit loaded event for registry label\n\t */\n\tprivate emitLoadedEvent(\n\t\twidgetLabel: RegistryLabel,\n\t\titem: WNodeFactory<any> | WidgetBaseConstructor | InjectorItem\n\t): void {\n\t\tthis.emit({\n\t\t\ttype: widgetLabel,\n\t\t\taction: 'loaded',\n\t\t\titem\n\t\t});\n\t}\n\n\tpublic define(label: RegistryLabel, item: RegistryItem): void {\n\t\tif (this._widgetRegistry === undefined) {\n\t\t\tthis._widgetRegistry = new Map();\n\t\t}\n\n\t\tif (this._widgetRegistry.has(label)) {\n\t\t\tthrow new Error(`widget has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tthis._widgetRegistry.set(label, item);\n\n\t\tif (item instanceof Promise) {\n\t\t\titem.then(\n\t\t\t\t(widgetCtor) => {\n\t\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\t\treturn widgetCtor;\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (isWidgetBaseConstructor(item)) {\n\t\t\tthis.emitLoadedEvent(label, item);\n\t\t}\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void {\n\t\tif (this._injectorRegistry === undefined) {\n\t\t\tthis._injectorRegistry = new Map();\n\t\t}\n\n\t\tif (this._injectorRegistry.has(label)) {\n\t\t\tthrow new Error(`injector has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tconst invalidator = new Evented();\n\n\t\tconst injectorItem: InjectorItem = {\n\t\t\tinjector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n\t\t\tinvalidator\n\t\t};\n\n\t\tthis._injectorRegistry.set(label, injectorItem);\n\t\tthis.emitLoadedEvent(label, injectorItem);\n\t}\n\n\tpublic get(label: RegistryLabel): WNodeFactory<any> | Callback<any, any, RenderResult> | Constructor<any> | null;\n\tpublic get<T extends WNodeFactory<any>>(label: RegistryLabel): T | null;\n\tpublic get<T extends Callback<any, any, RenderResult>>(label: RegistryLabel): T | null;\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel\n\t): WNodeFactory<T> | Callback<any, any, RenderResult> | Constructor<T> | null {\n\t\tif (!this._widgetRegistry || !this.has(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst item = this._widgetRegistry.get(label);\n\n\t\tif (isWidget<T>(item) || isWNodeFactory(item)) {\n\t\t\treturn item;\n\t\t}\n\n\t\tif (item instanceof Promise) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst promise = (<WidgetBaseConstructorFunction>item)();\n\t\tthis._widgetRegistry.set(label, promise);\n\n\t\tpromise.then(\n\t\t\t(widgetCtor) => {\n\t\t\t\tif (isWidgetConstructorDefaultExport<T>(widgetCtor)) {\n\t\t\t\t\twidgetCtor = widgetCtor.default;\n\t\t\t\t}\n\n\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\treturn widgetCtor;\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t);\n\n\t\treturn null;\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel): InjectorItem<T> | null {\n\t\tif (!this._injectorRegistry || !this.hasInjector(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._injectorRegistry.get(label)!;\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n\t}\n}\n\nexport default Registry;\n","import { create, getRegistry, invalidator, destroy } from '../vdom';\nimport { RegistryLabel } from '../interfaces';\nimport { Handle } from '../Destroyable';\n\nconst injectorFactory = create({ getRegistry, invalidator, destroy });\n\nexport const injector = injectorFactory(({ middleware: { getRegistry, invalidator, destroy } }) => {\n\tconst handles: Handle[] = [];\n\tdestroy(() => {\n\t\tlet handle: Handle | undefined;\n\t\twhile ((handle = handles.pop())) {\n\t\t\thandle.destroy();\n\t\t}\n\t});\n\tconst registry = getRegistry();\n\treturn {\n\t\tsubscribe(label: RegistryLabel, callback: Function = invalidator) {\n\t\t\tif (registry) {\n\t\t\t\tconst item = registry.getInjector(label);\n\t\t\t\tif (item) {\n\t\t\t\t\tconst handle = item.invalidator.on('invalidate', () => {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t});\n\t\t\t\t\thandles.push(handle);\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tconst index = handles.indexOf(handle);\n\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\thandles.splice(index, 1);\n\t\t\t\t\t\t\thandle.destroy();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tget<T>(label: RegistryLabel): T | null {\n\t\t\tif (registry) {\n\t\t\t\tconst item = registry.getInjector<T>(label);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item.injector();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n});\n\nexport default injector;\n","import global from \"@dojo/framework/shim/global\";\nimport { createProcess } from \"@dojo/framework/stores/process\";\nimport { replace } from \"@dojo/framework/stores/state/operations\";\nimport { getHeaders, commandFactory } from \"./utils\";\nimport { baseUrl } from \"../config\";\nimport { SetSessionPayload } from \"./interfaces\";\n\nconst startLoginCommand = commandFactory(({ path }) => {\n\treturn [replace(path(\"login\", \"isLoading\"), true)];\n});\n\nconst startRegisterCommand = commandFactory(({ path }) => {\n\treturn [replace(path(\"register\", \"isLoading\"), true)];\n});\n\nconst setSessionCommand = commandFactory<SetSessionPayload>(({ path, payload: { session } }) => {\n\treturn [replace(path(\"session\"), session)];\n});\n\nconst loginCommand = commandFactory<{ email: string; password: string }>(async ({ path, payload }) => {\n\tconst requestPayload = {\n\t\tuser: {\n\t\t\temail: payload.email,\n\t\t\tpassword: payload.password\n\t\t}\n\t};\n\n\tconst response = await fetch(`${baseUrl}/users/login`, {\n\t\tmethod: \"post\",\n\t\tbody: JSON.stringify(requestPayload),\n\t\theaders: getHeaders()\n\t});\n\n\tconst json = await response.json();\n\tif (!response.ok) {\n\t\treturn [\n\t\t\treplace(path(\"login\", \"isLoading\"), true),\n\t\t\treplace(path(\"errors\"), json.errors),\n\t\t\treplace(path(\"session\"), {})\n\t\t];\n\t}\n\n\tglobal.sessionStorage.setItem(\"conduit-session\", JSON.stringify(json.user));\n\n\treturn [\n\t\treplace(path(\"routing\", \"outlet\"), \"home\"),\n\t\treplace(path(\"login\", \"isLoading\"), false),\n\t\treplace(path(\"errors\"), undefined),\n\t\treplace(path(\"session\"), json.user)\n\t];\n});\n\nconst registerCommand = commandFactory<{ username: string; email: string; password: string }>(\n\tasync ({ path, payload: { username, email, password } }) => {\n\t\tconst requestPayload = {\n\t\t\tuser: {\n\t\t\t\tusername,\n\t\t\t\temail,\n\t\t\t\tpassword\n\t\t\t}\n\t\t};\n\n\t\tconst response = await fetch(`${baseUrl}/users`, {\n\t\t\tmethod: \"post\",\n\t\t\tbody: JSON.stringify(requestPayload),\n\t\t\theaders: getHeaders()\n\t\t});\n\t\tconst json = await response.json();\n\t\tif (!response.ok) {\n\t\t\treturn [\n\t\t\t\treplace(path(\"register\", \"isLoading\"), false),\n\t\t\t\treplace(path(\"errors\"), json.errors),\n\t\t\t\treplace(path(\"session\"), {})\n\t\t\t];\n\t\t}\n\n\t\tglobal.sessionStorage.setItem(\"conduit-session\", JSON.stringify(json.user));\n\n\t\treturn [\n\t\t\treplace(path(\"routing\", \"outlet\"), \"home\"),\n\t\t\treplace(path(\"register\", \"isLoading\"), false),\n\t\t\treplace(path(\"errors\"), undefined),\n\t\t\treplace(path(\"session\"), json.user)\n\t\t];\n\t}\n);\n\nconst logoutCommand = commandFactory(({ path }) => {\n\tglobal.sessionStorage.removeItem(\"conduit-session\");\n\treturn [replace(path(\"session\"), {}), replace(path(\"routing\", \"outlet\"), \"home\")];\n});\n\nexport const loginProcess = createProcess(\"login\", [startLoginCommand, loginCommand]);\nexport const registerProcess = createProcess(\"register\", [startRegisterCommand, registerCommand]);\nexport const setSessionProcess = createProcess(\"set-session\", [setSessionCommand]);\nexport const logoutProcess = createProcess(\"logout\", [logoutCommand]);\n","import Promise from '../shim/Promise';\n\n/**\n * Used through the toolkit as a consistent API to manage how callers can \"cleanup\"\n * when doing a function.\n */\nexport interface Handle {\n\t/**\n\t * Perform the destruction/cleanup logic associated with this Handle\n\t */\n\tdestroy(): void;\n}\n\n/**\n * No op function used to replace a Destroyable instance's `destroy` method, once the instance has been destroyed\n */\nfunction noop(): Promise<boolean> {\n\treturn Promise.resolve(false);\n}\n\n/**\n * No op function used to replace a Destroyable instance's `own` method, once the instance has been destroyed\n */\nfunction destroyed(): never {\n\tthrow new Error('Call made to destroyed method');\n}\n\nexport class Destroyable {\n\t/**\n\t * The instance's handles\n\t */\n\tprivate handles: Handle[];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.handles = [];\n\t}\n\n\t/**\n\t * Register handles for the instance that will be destroyed when `this.destroy` is called\n\t *\n\t * @param {Handle} handle The handle to add for the instance\n\t * @returns {Handle} A wrapper Handle. When the wrapper Handle's `destroy` method is invoked, the original handle is\n\t *                   removed from the instance, and its `destroy` method is invoked.\n\t */\n\town(handle: Handle): Handle {\n\t\tconst { handles: _handles } = this;\n\t\t_handles.push(handle);\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\t_handles.splice(_handles.indexOf(handle));\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Destroys all handlers registered for the instance\n\t *\n\t * @returns {Promise<any} A Promise that resolves once all handles have been destroyed\n\t */\n\tdestroy(): Promise<any> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.handles.forEach((handle) => {\n\t\t\t\thandle && handle.destroy && handle.destroy();\n\t\t\t});\n\t\t\tthis.destroy = noop;\n\t\t\tthis.own = destroyed;\n\t\t\tresolve(true);\n\t\t});\n\t}\n}\n\nexport default Destroyable;\n","import Map from '../shim/Map';\nimport { Destroyable, Handle } from './Destroyable';\n\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map<string, RegExp>();\n\nexport type EventType = string | symbol;\n\n/**\n * The base event object, which provides a `type` property\n */\nexport interface EventObject<T = EventType> {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: T;\n}\n\n/**\n * Determines if the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString: string | symbol, targetString: string | symbol): boolean {\n\tif (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n\t\tlet regex: RegExp;\n\t\tif (regexMap.has(globString)) {\n\t\t\tregex = regexMap.get(globString)!;\n\t\t} else {\n\t\t\tregex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n\t\t\tregexMap.set(globString, regex);\n\t\t}\n\t\treturn regex.test(targetString);\n\t} else {\n\t\treturn globString === targetString;\n\t}\n}\n\nexport type EventedCallback<T = EventType, E extends EventObject<T> = EventObject<T>> = {\n\t/**\n\t * A callback that takes an `event` argument\n\t *\n\t * @param event The event object\n\t */\n\n\t(event: E): boolean | void;\n};\n\nexport interface CustomEventTypes<T extends EventObject<any> = EventObject<any>> {\n\t[index: string]: T;\n}\n\n/**\n * A type which is either a targeted event listener or an array of listeners\n * @template T The type of target for the events\n * @template E The event type for the events\n */\nexport type EventedCallbackOrArray<T = EventType, E extends EventObject<T> = EventObject<T>> =\n\t| EventedCallback<T, E>\n\t| EventedCallback<T, E>[];\n\n/**\n * Event Class\n */\nexport class Evented<\n\tM extends CustomEventTypes = {},\n\tT = EventType,\n\tO extends EventObject<T> = EventObject<T>\n> extends Destroyable {\n\t// The following member is purely so TypeScript remembers the type of `M` when extending so\n\t// that the utilities in `on.ts` will work https://github.com/Microsoft/TypeScript/issues/20348\n\t// tslint:disable-next-line\n\tprotected __typeMap__?: M;\n\t/**\n\t * map of listeners keyed by event type\n\t */\n\tprotected listenersMap: Map<T | keyof M, EventedCallback<T, O>[]> = new Map();\n\n\t/**\n\t * Emits the event object for the specified type\n\t *\n\t * @param event the event to emit\n\t */\n\temit<K extends keyof M>(event: M[K]): void;\n\temit(event: O): void;\n\temit(event: any): void {\n\t\tthis.listenersMap.forEach((methods, type) => {\n\t\t\tif (isGlobMatch(type as any, event.type)) {\n\t\t\t\t[...methods].forEach((method) => {\n\t\t\t\t\tmethod.call(this, event);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Catch all handler for various call signatures. The signatures are defined in\n\t * `BaseEventedEvents`.  You can add your own event type -> handler types by extending\n\t * `BaseEventedEvents`.  See example for details.\n\t *\n\t * @param args\n\t *\n\t * @example\n\t *\n\t * interface WidgetBaseEvents extends BaseEventedEvents {\n\t *     (type: 'properties:changed', handler: PropertiesChangedHandler): Handle;\n\t * }\n\t * class WidgetBase extends Evented {\n\t *    on: WidgetBaseEvents;\n\t * }\n\t *\n\t * @return {any}\n\t */\n\ton<K extends keyof M>(type: K, listener: EventedCallbackOrArray<K, M[K]>): Handle;\n\ton(type: T, listener: EventedCallbackOrArray<T, O>): Handle;\n\ton(type: any, listener: EventedCallbackOrArray<any, any>): Handle {\n\t\tif (Array.isArray(listener)) {\n\t\t\tconst handles = listener.map((listener) => this._addListener(type, listener));\n\t\t\treturn {\n\t\t\t\tdestroy() {\n\t\t\t\t\thandles.forEach((handle) => handle.destroy());\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn this._addListener(type, listener);\n\t}\n\n\tprivate _addListener(type: T | keyof M, listener: EventedCallback<T, O>) {\n\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\tlisteners.push(listener);\n\t\tthis.listenersMap.set(type, listeners);\n\t\treturn {\n\t\t\tdestroy: () => {\n\t\t\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport default Evented;\n","export function decode(segment: string) {\n\treturn segment.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n\nfunction encode(segment: string) {\n\treturn segment.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\nexport interface PointerTarget {\n\tobject: any;\n\ttarget: any;\n\tsegment: string;\n}\n\nexport function walk(segments: string[], object: any, clone = true, continueOnUndefined = true): PointerTarget {\n\tif (clone) {\n\t\tobject = { ...object };\n\t}\n\tconst pointerTarget: PointerTarget = {\n\t\tobject,\n\t\ttarget: object,\n\t\tsegment: ''\n\t};\n\n\treturn segments.reduce((pointerTarget, segment, index) => {\n\t\tif (pointerTarget.target === undefined) {\n\t\t\treturn pointerTarget;\n\t\t}\n\t\tif (Array.isArray(pointerTarget.target) && segment === '-') {\n\t\t\tsegment = String(pointerTarget.target.length - 1);\n\t\t}\n\t\tif (index + 1 < segments.length) {\n\t\t\tconst nextSegment: any = segments[index + 1];\n\t\t\tlet target = pointerTarget.target[segment];\n\n\t\t\tif (target === undefined && !continueOnUndefined) {\n\t\t\t\tpointerTarget.target = undefined;\n\t\t\t\treturn pointerTarget;\n\t\t\t}\n\n\t\t\tif (clone || target === undefined) {\n\t\t\t\tif (Array.isArray(target)) {\n\t\t\t\t\ttarget = [...target];\n\t\t\t\t} else if (typeof target === 'object') {\n\t\t\t\t\ttarget = { ...target };\n\t\t\t\t} else if (isNaN(nextSegment) || isNaN(parseInt(nextSegment, 0))) {\n\t\t\t\t\ttarget = {};\n\t\t\t\t} else {\n\t\t\t\t\ttarget = [];\n\t\t\t\t}\n\t\t\t\tpointerTarget.target[segment] = target;\n\t\t\t\tpointerTarget.target = target;\n\t\t\t} else {\n\t\t\t\tpointerTarget.target = target;\n\t\t\t}\n\t\t} else {\n\t\t\tpointerTarget.segment = segment;\n\t\t}\n\t\treturn pointerTarget;\n\t}, pointerTarget);\n}\n\nexport class Pointer<T = any, U = any> {\n\tprivate readonly _segments: string[];\n\n\tconstructor(segments: string | string[]) {\n\t\tif (Array.isArray(segments)) {\n\t\t\tthis._segments = segments;\n\t\t} else {\n\t\t\tthis._segments = (segments[0] === '/' ? segments : `/${segments}`).split('/');\n\t\t\tthis._segments.shift();\n\t\t}\n\t\tif (segments.length === 0 || ((segments.length === 1 && segments[0] === '/') || segments[0] === '')) {\n\t\t\tthrow new Error('Access to the root is not supported.');\n\t\t}\n\t\tthis._segments = this._segments.map(decode);\n\t}\n\n\tpublic get segments(): string[] {\n\t\treturn this._segments;\n\t}\n\n\tpublic get path(): string {\n\t\treturn `/${this._segments.map(encode).join('/')}`;\n\t}\n\n\tget(object: T): U {\n\t\tconst pointerTarget: PointerTarget = walk(this.segments, object, false, false);\n\t\tif (pointerTarget.target === undefined) {\n\t\t\treturn undefined as any;\n\t\t}\n\t\treturn pointerTarget.target[pointerTarget.segment];\n\t}\n\n\ttoJSON(): string {\n\t\treturn this.toString();\n\t}\n\n\ttoString(): string {\n\t\treturn this.path;\n\t}\n}\n","import { create, destroy } from '../vdom';\nimport Map from '../../shim/Map';\n\nconst factory = create({ destroy });\n\nexport const cache = factory(({ middleware: { destroy } }) => {\n\tconst cacheMap = new Map<string, any>();\n\tdestroy(() => {\n\t\tcacheMap.clear();\n\t});\n\treturn {\n\t\tget<T = any>(key: any): T | undefined {\n\t\t\treturn cacheMap.get(key);\n\t\t},\n\t\tset<T = any>(key: any, value: T): void {\n\t\t\tcacheMap.set(key, value);\n\t\t},\n\t\tclear(): void {\n\t\t\tcacheMap.clear();\n\t\t}\n\t};\n});\n\nexport default cache;\n","import { create, tsx } from \"@dojo/framework/core/vdom\";\nimport { Errors } from \"../interfaces\";\n\ninterface ErrorListProperties {\n\terrors: Errors;\n}\n\nconst factory = create({}).properties<ErrorListProperties>();\n\nexport const ErrorList = factory(function ErrorList({ properties }) {\n\tconst { errors } = properties();\n\tconst errorCategories = Object.keys(errors);\n\tlet errorList: string[] = [];\n\tfor (let i = 0; i < errorCategories.length; i++) {\n\t\terrorList = [\n\t\t\t...errorList,\n\t\t\t...errors[errorCategories[i]].map((error: string) => `${errorCategories[i]} ${error}`)\n\t\t];\n\t}\n\terrorList;\n\n\treturn (\n\t\t<ul classes={[\"error-messages\"]}>\n\t\t\t{errorList.map((error: string) => (\n\t\t\t\t<li>{error}</li>\n\t\t\t))}\n\t\t</ul>\n\t);\n});\n\nexport default ErrorList;\n","import { create, invalidator } from '../vdom';\nimport cache from './cache';\n\nconst factory = create({ cache, invalidator });\n\ninterface CacheWrapper<T = any> {\n\tstatus: 'pending' | 'resolved';\n\tvalue: T;\n}\n\nexport interface IcacheResult {\n\tgetOrSet: {\n\t\t<T>(key: any, value: () => Promise<T>): undefined | T;\n\t\t<T>(key: any, value: () => T): T;\n\t\t<T>(key: any, value: T): T;\n\t};\n\tget<T = any>(key: any): T | undefined;\n\tset(key: any, value: any): void;\n\tclear(): void;\n}\n\nexport const icache = factory(\n\t({ middleware: { invalidator, cache } }): IcacheResult => {\n\t\treturn {\n\t\t\tgetOrSet<T = any>(key: any, value: any): T | undefined {\n\t\t\t\tlet cachedValue = cache.get<CacheWrapper<T>>(key);\n\t\t\t\tif (!cachedValue) {\n\t\t\t\t\tthis.set(key, value);\n\t\t\t\t}\n\t\t\t\tcachedValue = cache.get<CacheWrapper<T>>(key);\n\t\t\t\tif (!cachedValue || cachedValue.status === 'pending') {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn cachedValue.value;\n\t\t\t},\n\t\t\tget<T = any>(key: any): T | undefined {\n\t\t\t\tconst cachedValue = cache.get<CacheWrapper<T>>(key);\n\t\t\t\tif (!cachedValue || cachedValue.status === 'pending') {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn cachedValue.value;\n\t\t\t},\n\t\t\tset(key: any, value: any): void {\n\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\tvalue = value();\n\t\t\t\t\tif (value && typeof value.then === 'function') {\n\t\t\t\t\t\tcache.set(key, {\n\t\t\t\t\t\t\tstatus: 'pending',\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvalue.then((result: any) => {\n\t\t\t\t\t\t\tconst cachedValue = cache.get<CacheWrapper<any>>(key);\n\t\t\t\t\t\t\tif (cachedValue && cachedValue.value === value) {\n\t\t\t\t\t\t\t\tcache.set(key, {\n\t\t\t\t\t\t\t\t\tstatus: 'resolved',\n\t\t\t\t\t\t\t\t\tvalue: result\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tinvalidator();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcache.set(key, {\n\t\t\t\t\tstatus: 'resolved',\n\t\t\t\t\tvalue\n\t\t\t\t});\n\t\t\t\tinvalidator();\n\t\t\t},\n\t\t\tclear(): void {\n\t\t\t\tcache.clear();\n\t\t\t}\n\t\t};\n\t}\n);\n\nexport default icache;\n","import { createProcess } from \"@dojo/framework/stores/process\";\nimport { replace } from \"@dojo/framework/stores/state/operations\";\nimport { ArticleItem } from \"./../interfaces\";\nimport { getHeaders, commandFactory } from \"./utils\";\nimport { baseUrl } from \"../config\";\nimport { FavoriteArticlePayload, FetchFeedPayload } from \"./interfaces\";\n\nfunction getItemIndex(items: ArticleItem[], id: string) {\n\tlet index = -1;\n\tfor (let i = 0; i < items.length; i++) {\n\t\tif (items[i].slug === id) {\n\t\t\tindex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn index;\n}\n\nconst startFetchingFeedCommand = commandFactory<FetchFeedPayload>(({ path, payload: { type, filter, page } }) => {\n\treturn [\n\t\treplace(path(\"feed\", \"isLoading\"), true),\n\t\treplace(path(\"feed\", \"isLoaded\"), false),\n\t\treplace(path(\"feed\", \"category\"), type),\n\t\treplace(path(\"feed\", \"filter\"), filter),\n\t\treplace(path(\"feed\", \"tagName\"), type === \"tag\" ? filter : undefined),\n\t\treplace(path(\"feed\", \"page\"), page),\n\t\treplace(path(\"feed\", \"items\"), undefined)\n\t];\n});\n\nexport const fetchFeedCommand = commandFactory<FetchFeedPayload>(\n\tasync ({ get, path, payload: { type, page, filter } }) => {\n\t\tconst token = get(path(\"session\", \"token\"));\n\t\tconst offset = page * 10;\n\t\tlet url: string;\n\n\t\tswitch (type) {\n\t\t\tcase \"feed\":\n\t\t\t\turl = `${baseUrl}/articles/feed?`;\n\t\t\t\tbreak;\n\t\t\tcase \"tag\":\n\t\t\t\turl = `${baseUrl}/articles?tag=${filter}&`;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\turl = `${baseUrl}/articles/?`;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst response = await fetch(`${url}limit=10&offset=${offset}`, { headers: getHeaders(token) });\n\t\tconst json = await response.json();\n\t\treturn [\n\t\t\treplace(path(\"feed\", \"items\"), json.articles),\n\t\t\treplace(path(\"feed\", \"total\"), json.articlesCount),\n\t\t\treplace(path(\"feed\", \"offset\"), offset),\n\t\t\treplace(path(\"feed\", \"page\"), page),\n\t\t\treplace(path(\"feed\", \"category\"), type),\n\t\t\treplace(path(\"feed\", \"filter\"), filter),\n\t\t\treplace(path(\"feed\", \"isLoading\"), false),\n\t\t\treplace(path(\"feed\", \"isLoaded\"), true)\n\t\t];\n\t}\n);\n\nconst clearFeedCommand = commandFactory(({ path }) => {\n\treturn [replace(path(\"feed\"), undefined)];\n});\n\nconst favoriteFeedArticleCommand = commandFactory<FavoriteArticlePayload>(\n\tasync ({ get, path, payload: { slug, favorited, type } }) => {\n\t\tconst token = get(path(\"session\", \"token\"));\n\t\tconst response = await fetch(`${baseUrl}/articles/${slug}/favorite`, {\n\t\t\tmethod: favorited ? \"delete\" : \"post\",\n\t\t\theaders: getHeaders(token)\n\t\t});\n\t\tconst json = await response.json();\n\t\tlet feedPath = path(\"feed\", \"items\");\n\t\tif (type === \"favorites\" || type === \"user\") {\n\t\t\tfeedPath = path(\"profile\", \"feed\", \"items\");\n\t\t}\n\t\tlet articles = get(feedPath);\n\n\t\tconst index = getItemIndex(articles, slug);\n\t\tarticles = [...articles];\n\t\tarticles[index] = json.article;\n\n\t\tif (index !== -1) {\n\t\t\tif (type === \"favorites\") {\n\t\t\t\tarticles.splice(index, 1);\n\t\t\t\treturn [replace(feedPath, articles)];\n\t\t\t}\n\t\t\tarticles[index] = json.article;\n\t\t\treturn [replace(feedPath, articles)];\n\t\t}\n\t\treturn [];\n\t}\n);\n\nexport const fetchFeedProcess = createProcess(\"fetch-feed\", [startFetchingFeedCommand, fetchFeedCommand]);\nexport const clearFeedProcess = createProcess(\"clear-feed\", [clearFeedCommand]);\nexport const favoriteFeedArticleProcess = createProcess(\"fav-feed-article\", [favoriteFeedArticleCommand]);\n","import global from './global';\n`!has('es6-iterator')`;\nimport { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface Set<T> {\n\t/**\n\t * Adds a `value` to the `Set`\n\t *\n\t * @param value The value to add to the set\n\t * @returns The instance of the `Set`\n\t */\n\tadd(value: T): this;\n\n\t/**\n\t * Removes all the values from the `Set`.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Removes a `value` from the set\n\t *\n\t * @param value The value to be removed\n\t * @returns `true` if the value was removed\n\t */\n\tdelete(value: T): boolean;\n\n\t/**\n\t * Returns an iterator that yields each entry.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[T, T]>;\n\n\t/**\n\t * Executes a given function for each set entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated `Set` instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void;\n\n\t/**\n\t * Identifies if a value is part of the set.\n\t *\n\t * @param value The value to check\n\t * @returns `true` if the value is part of the set otherwise `false`\n\t */\n\thas(value: T): boolean;\n\n\t/**\n\t * Despite its name, returns an iterable of the values in the set,\n\t */\n\tkeys(): IterableIterator<T>;\n\n\t/**\n\t * Returns the number of values in the `Set`.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterable of values in the set.\n\t */\n\tvalues(): IterableIterator<T>;\n\n\t/** Iterates over values in the set. */\n\t[Symbol.iterator](): IterableIterator<T>;\n\n\treadonly [Symbol.toStringTag]: 'Set';\n}\n\nexport interface SetConstructor {\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t */\n\tnew (): Set<any>;\n\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t *\n\t * @param iterator The iterable structure to initialize the set with\n\t */\n\tnew <T>(iterator?: T[]): Set<T>;\n\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t *\n\t * @param iterator The iterable structure to initialize the set with\n\t */\n\tnew <T>(iterator: Iterable<T>): Set<T>;\n\n\treadonly prototype: Set<any>;\n}\n\nexport let Set: SetConstructor = global.Set;\n\nif (!has('es6-set')) {\n\tSet = global.Set = class Set<T> {\n\t\tprivate readonly _setData: T[] = [];\n\n\t\tstatic [Symbol.species] = Set;\n\n\t\tconstructor(iterable?: ArrayLike<T> | Iterable<T>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tthis.add(iterable[i]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tadd(value: T): this {\n\t\t\tif (this.has(value)) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis._setData.push(value);\n\t\t\treturn this;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._setData.length = 0;\n\t\t}\n\n\t\tdelete(value: T): boolean {\n\t\t\tconst idx = this._setData.indexOf(value);\n\t\t\tif (idx === -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._setData.splice(idx, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[T, T]> {\n\t\t\treturn new ShimIterator<[any, any]>(this._setData.map<[any, any]>((value) => [value, value]));\n\t\t}\n\n\t\tforEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void {\n\t\t\tconst iterator = this.values();\n\t\t\tlet result = iterator.next();\n\t\t\twhile (!result.done) {\n\t\t\t\tcallbackfn.call(thisArg, result.value, result.value, this);\n\t\t\t\tresult = iterator.next();\n\t\t\t}\n\t\t}\n\n\t\thas(value: T): boolean {\n\t\t\treturn this._setData.indexOf(value) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._setData.length;\n\t\t}\n\n\t\tvalues(): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Set' = 'Set';\n\t};\n}\n\nexport default Set;\n","import { create, diffProperty, invalidator, w } from '../core/vdom';\nimport { Handle } from '../core/Destroyable';\nimport injector from '../core/middleware/injector';\nimport cache from '../core/middleware/cache';\nimport { SupportedClassName } from '../core/interfaces';\nimport Link, { LinkProperties } from './Link';\nimport Router from './Router';\n\nexport interface ActiveLinkProperties extends LinkProperties {\n\tactiveClasses: SupportedClassName[];\n}\n\nfunction paramsEqual(linkParams: any = {}, contextParams: any = {}) {\n\treturn Object.keys(linkParams).every((key) => linkParams[key] === contextParams[key]);\n}\n\nconst factory = create({ injector, diffProperty, cache, invalidator }).properties<ActiveLinkProperties>();\n\nexport const ActiveLink = factory(function ActiveLink({\n\tmiddleware: { diffProperty, injector, cache, invalidator },\n\tproperties,\n\tchildren\n}) {\n\tconst { to, routerKey = 'router', params } = properties();\n\tlet { activeClasses, classes = [], ...props } = properties();\n\n\tdiffProperty('to', (current: ActiveLinkProperties, next: ActiveLinkProperties) => {\n\t\tif (current.to !== next.to) {\n\t\t\tconst router = injector.get<Router>(routerKey);\n\t\t\tconst currentHandle = cache.get<Handle>('handle');\n\t\t\tif (currentHandle) {\n\t\t\t\tcurrentHandle.destroy();\n\t\t\t}\n\t\t\tif (router) {\n\t\t\t\tconst handle = router.on('outlet', ({ outlet }) => {\n\t\t\t\t\tif (outlet.id === to) {\n\t\t\t\t\t\tinvalidator();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tcache.set('handle', handle);\n\t\t\t}\n\t\t\tinvalidator();\n\t\t}\n\t});\n\n\tconst router = injector.get<Router>(routerKey);\n\tif (router) {\n\t\tif (!cache.get('handle')) {\n\t\t\tconst handle = router.on('outlet', ({ outlet }) => {\n\t\t\t\tif (outlet.id === to) {\n\t\t\t\t\tinvalidator();\n\t\t\t\t}\n\t\t\t});\n\t\t\tcache.set('handle', handle);\n\t\t}\n\t\tconst context = router.getOutlet(to);\n\t\tconst isActive = context && paramsEqual(params, context.params);\n\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tif (isActive) {\n\t\t\tclasses = [...classes, ...activeClasses];\n\t\t}\n\t\tprops = { ...props, classes };\n\t}\n\treturn w(Link, props, children());\n});\n\nexport default ActiveLink;\n","import { create, tsx } from \"@dojo/framework/core/vdom\";\nimport { DNode } from \"@dojo/framework/core/interfaces\";\n\ninterface FeedPaginationProperties {\n\ttotal: number;\n\tcurrentPage: number;\n\tfetchFeed: (page: number) => void;\n}\n\nconst factory = create({}).properties<FeedPaginationProperties>();\n\nexport const FeedPagination = factory(function({ properties }) {\n\tconst { total, currentPage, fetchFeed } = properties();\n\n\tlet pageNumbers: DNode[] = [];\n\tfor (let page = 0; page < Math.ceil(total / 10); page++) {\n\t\tconst isActive = currentPage === page;\n\t\tconst onclick = (event: MouseEvent) => {\n\t\t\tevent.preventDefault();\n\t\t\tif (page !== currentPage) {\n\t\t\t\tfetchFeed(page);\n\t\t\t}\n\t\t};\n\t\tpageNumbers.push(\n\t\t\t<li key={page} classes={[\"page-item\", isActive && \"active\"]}>\n\t\t\t\t<a href=\"\" onclick={onclick} classes={[\"page-link\"]}>\n\t\t\t\t\t{`${page + 1}`}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t);\n\t}\n\n\treturn (\n\t\t<nav>\n\t\t\t<ul classes={[\"pagination\"]}>{pageNumbers}</ul>\n\t\t</nav>\n\t);\n});\n\nexport default FeedPagination;\n","/**\n * Helper function to generate a value property descriptor\n *\n * @param value        The value the property descriptor should be set to\n * @param enumerable   If the property should be enumberable, defaults to false\n * @param writable     If the property should be writable, defaults to true\n * @param configurable If the property should be configurable, defaults to true\n * @return             The property descriptor object\n */\nexport function getValueDescriptor<T>(\n\tvalue: T,\n\tenumerable: boolean = false,\n\twritable: boolean = true,\n\tconfigurable: boolean = true\n): TypedPropertyDescriptor<T> {\n\treturn {\n\t\tvalue: value,\n\t\tenumerable: enumerable,\n\t\twritable: writable,\n\t\tconfigurable: configurable\n\t};\n}\n\n/**\n * A helper function which wraps a function where the first argument becomes the scope\n * of the call\n *\n * @param nativeFunction The source function to be wrapped\n */\nexport function wrapNative<T, U, R>(nativeFunction: (arg1: U) => R): (target: T, arg1: U) => R;\nexport function wrapNative<T, U, V, R>(nativeFunction: (arg1: U, arg2: V) => R): (target: T, arg1: U, arg2: V) => R;\nexport function wrapNative<T, U, V, W, R>(\n\tnativeFunction: (arg1: U, arg2: V, arg3: W) => R\n): (target: T, arg1: U, arg2: V, arg3: W) => R;\nexport function wrapNative<T, U, V, W, X, R>(\n\tnativeFunction: (arg1: U, arg2: V, arg3: W) => R\n): (target: T, arg1: U, arg2: V, arg3: W) => R;\nexport function wrapNative<T, U, V, W, X, Y, R>(\n\tnativeFunction: (arg1: U, arg2: V, arg3: W, arg4: Y) => R\n): (target: T, arg1: U, arg2: V, arg3: W, arg4: Y) => R;\nexport function wrapNative(nativeFunction: (...args: any[]) => any): (target: any, ...args: any[]) => any {\n\treturn function(target: any, ...args: any[]): any {\n\t\treturn nativeFunction.apply(target, args);\n\t};\n}\n","`!has('es6-iterator')`;\nimport { isArrayLike, isIterable, Iterable } from './iterator';\nimport has from '../core/has';\nimport { wrapNative } from './support/util';\n\nexport interface MapCallback<T, U> {\n\t/**\n\t * A callback function when mapping\n\t *\n\t * @param element The element that is currently being mapped\n\t * @param index The current index of the element\n\t */\n\t(element: T, index: number): U;\n}\n\nexport interface FindCallback<T> {\n\t/**\n\t * A callback function when using find\n\t *\n\t * @param element The element that is currenty being analysed\n\t * @param index The current index of the element that is being analysed\n\t * @param array The source array\n\t */\n\t(element: T, index: number, array: ArrayLike<T>): boolean;\n}\n\n/* ES6 Array static methods */\n\nexport interface From {\n\t/**\n\t * The Array.from() method creates a new Array instance from an array-like or iterable object.\n\t *\n\t * @param source An array-like or iterable object to convert to an array\n\t * @param mapFunction A map function to call on each element in the array\n\t * @param thisArg The execution context for the map function\n\t * @return The new Array\n\t */\n\t<T, U>(source: ArrayLike<T> | Iterable<T>, mapFunction: MapCallback<T, U>, thisArg?: any): Array<U>;\n\n\t/**\n\t * The Array.from() method creates a new Array instance from an array-like or iterable object.\n\t *\n\t * @param source An array-like or iterable object to convert to an array\n\t * @return The new Array\n\t */\n\t<T>(source: ArrayLike<T> | Iterable<T>): Array<T>;\n}\n\nexport let from: From;\n\n/**\n * Creates a new array from the function parameters.\n *\n * @param arguments Any number of arguments for the array\n * @return An array from the given arguments\n */\nexport let of: <T>(...items: T[]) => Array<T>;\n\n/* ES6 Array instance methods */\n\n/**\n * Copies data internally within an array or array-like object.\n *\n * @param target The target array-like object\n * @param offset The index to start copying values to; if negative, it counts backwards from length\n * @param start The first (inclusive) index to copy; if negative, it counts backwards from length\n * @param end The last (exclusive) index to copy; if negative, it counts backwards from length\n * @return The target\n */\nexport let copyWithin: <T>(target: ArrayLike<T>, offset: number, start: number, end?: number) => ArrayLike<T>;\n\n/**\n * Fills elements of an array-like object with the specified value.\n *\n * @param target The target to fill\n * @param value The value to fill each element of the target with\n * @param start The first index to fill\n * @param end The (exclusive) index at which to stop filling\n * @return The filled target\n */\nexport let fill: <T>(target: ArrayLike<T>, value: T, start?: number, end?: number) => ArrayLike<T>;\n\n/**\n * Finds and returns the first instance matching the callback or undefined if one is not found.\n *\n * @param target An array-like object\n * @param callback A function returning if the current value matches a criteria\n * @param thisArg The execution context for the find function\n * @return The first element matching the callback, or undefined if one does not exist\n */\nexport let find: <T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}) => T | undefined;\n\n/**\n * Performs a linear search and returns the first index whose value satisfies the passed callback,\n * or -1 if no values satisfy it.\n *\n * @param target An array-like object\n * @param callback A function returning true if the current value satisfies its criteria\n * @param thisArg The execution context for the find function\n * @return The first index whose value satisfies the passed callback, or -1 if no values satisfy it\n */\nexport let findIndex: <T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}) => number;\n\n/* ES7 Array instance methods */\n\n/**\n * Determines whether an array includes a given value\n *\n * @param target the target array-like object\n * @param searchElement the item to search for\n * @param fromIndex the starting index to search from\n * @return `true` if the array includes the element, otherwise `false`\n */\nexport let includes: <T>(target: ArrayLike<T>, searchElement: T, fromIndex?: number) => boolean;\n\n// Util functions for filled implementations\n\nlet toLength: any;\nlet toInteger: any;\nlet normalizeOffset: any;\n\nif (!has('es6-array') || !has('es6-array-fill') || !has('es7-array')) {\n\tconst MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n\t/**\n\t * Ensures a non-negative, non-infinite, safe integer.\n\t *\n\t * @param length The number to validate\n\t * @return A proper length\n\t */\n\ttoLength = function toLength(length: number): number {\n\t\tif (isNaN(length)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlength = Number(length);\n\t\tif (isFinite(length)) {\n\t\t\tlength = Math.floor(length);\n\t\t}\n\t\t// Ensure a non-negative, real, safe integer\n\t\treturn Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n\t};\n\n\t/**\n\t * From ES6 7.1.4 ToInteger()\n\t *\n\t * @param value A value to convert\n\t * @return An integer\n\t */\n\ttoInteger = function toInteger(value: any): number {\n\t\tvalue = Number(value);\n\t\tif (isNaN(value)) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (value === 0 || !isFinite(value)) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn (value > 0 ? 1 : -1) * Math.floor(Math.abs(value));\n\t};\n\n\t/**\n\t * Normalizes an offset against a given length, wrapping it if negative.\n\t *\n\t * @param value The original offset\n\t * @param length The total length to normalize against\n\t * @return If negative, provide a distance from the end (length); otherwise provide a distance from 0\n\t */\n\tnormalizeOffset = function normalizeOffset(value: number, length: number): number {\n\t\treturn value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n\t};\n}\n\nif (!has('es6-array')) {\n\tArray.from = function from(\n\t\tthis: ArrayConstructor,\n\t\tarrayLike: Iterable<any> | ArrayLike<any>,\n\t\tmapFunction?: MapCallback<any, any>,\n\t\tthisArg?: any\n\t): Array<any> {\n\t\tif (arrayLike == null) {\n\t\t\tthrow new TypeError('from: requires an array-like object');\n\t\t}\n\n\t\tif (mapFunction && thisArg) {\n\t\t\tmapFunction = mapFunction.bind(thisArg);\n\t\t}\n\n\t\t/* tslint:disable-next-line:variable-name */\n\t\tconst Constructor = this;\n\t\tconst length: number = toLength((arrayLike as any).length);\n\n\t\t// Support extension\n\t\tconst array: any[] =\n\t\t\ttypeof Constructor === 'function' ? <any[]>Object(new Constructor(length)) : new Array(length);\n\n\t\tif (!isArrayLike(arrayLike) && !isIterable(arrayLike)) {\n\t\t\treturn array;\n\t\t}\n\n\t\t// if this is an array and the normalized length is 0, just return an empty array. this prevents a problem\n\t\t// with the iteration on IE when using a NaN array length.\n\t\tif (isArrayLike(arrayLike)) {\n\t\t\tif (length === 0) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < arrayLike.length; i++) {\n\t\t\t\tarray[i] = mapFunction ? mapFunction(arrayLike[i], i) : arrayLike[i];\n\t\t\t}\n\t\t} else {\n\t\t\tlet i = 0;\n\t\t\tfor (const value of arrayLike) {\n\t\t\t\tarray[i] = mapFunction ? mapFunction(value, i) : value;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\tif ((arrayLike as any).length !== undefined) {\n\t\t\tarray.length = length;\n\t\t}\n\n\t\treturn array;\n\t};\n\n\tArray.of = function of<T>(...items: T[]): Array<T> {\n\t\treturn Array.prototype.slice.call(items);\n\t};\n\n\tArray.prototype.copyWithin = function copyWithin(offset: number, start: number, end?: number) {\n\t\tif (this == null) {\n\t\t\tthrow new TypeError('copyWithin: target must be an array-like object');\n\t\t}\n\n\t\tconst length = toLength(this.length);\n\t\toffset = normalizeOffset(toInteger(offset), length);\n\t\tstart = normalizeOffset(toInteger(start), length);\n\t\tend = normalizeOffset(end === undefined ? length : toInteger(end), length);\n\t\tlet count = Math.min(end! - start, length - offset);\n\n\t\tlet direction = 1;\n\t\tif (offset > start && offset < start + count) {\n\t\t\tdirection = -1;\n\t\t\tstart += count - 1;\n\t\t\toffset += count - 1;\n\t\t}\n\n\t\twhile (count > 0) {\n\t\t\tif (start in this) {\n\t\t\t\tthis[offset] = this[start];\n\t\t\t} else {\n\t\t\t\tdelete this[offset];\n\t\t\t}\n\n\t\t\toffset += direction;\n\t\t\tstart += direction;\n\t\t\tcount--;\n\t\t}\n\n\t\treturn this;\n\t};\n\n\ttype Predicate = (this: void, value: any, index: number, obj: any[]) => boolean;\n\n\tArray.prototype.find = function find(callback: Predicate, thisArg?: {}) {\n\t\tconst index = this.findIndex(callback, thisArg);\n\t\treturn index !== -1 ? this[index] : undefined;\n\t};\n\n\tArray.prototype.findIndex = function findIndex(callback: Predicate, thisArg?: {}): number {\n\t\tconst length = toLength(this.length);\n\n\t\tif (!callback) {\n\t\t\tthrow new TypeError('find: second argument must be a function');\n\t\t}\n\n\t\tif (thisArg) {\n\t\t\tcallback = callback.bind(thisArg);\n\t\t}\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tif (callback(this[i], i, this)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t};\n}\n\nif (!has('es6-array-fill')) {\n\tArray.prototype.fill = function fill(value: any, start?: number, end?: number) {\n\t\tconst length = toLength(this.length);\n\t\tlet i = normalizeOffset(toInteger(start), length);\n\t\tend = normalizeOffset(end === undefined ? length : toInteger(end), length);\n\n\t\twhile (i < (end || 0)) {\n\t\t\tthis[i++] = value;\n\t\t}\n\n\t\treturn this;\n\t};\n}\n\nif (!has('es7-array')) {\n\tArray.prototype.includes = function includes(searchElement, fromIndex = 0) {\n\t\tlet len = toLength(this.length);\n\n\t\tfor (let i = fromIndex; i < len; ++i) {\n\t\t\tconst currentElement = this[i];\n\t\t\tif (\n\t\t\t\tsearchElement === currentElement ||\n\t\t\t\t(searchElement !== searchElement && currentElement !== currentElement)\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n}\n\nfrom = Array.from;\nof = Array.of;\ncopyWithin = wrapNative(Array.prototype.copyWithin);\nfill = wrapNative(Array.prototype.fill);\nfind = wrapNative(Array.prototype.find);\nfindIndex = wrapNative(Array.prototype.findIndex);\nincludes = wrapNative(Array.prototype.includes);\n\nexport default Array;\n","import { Pointer, walk, PointerTarget } from './Pointer';\nimport { getFriendlyDifferenceMessage, isEqual } from './compare';\n\nexport enum OperationType {\n\tADD = 'add',\n\tREMOVE = 'remove',\n\tREPLACE = 'replace',\n\tTEST = 'test'\n}\n\nexport interface BaseOperation<T = any, U = any> {\n\top: OperationType;\n\tpath: Pointer<T, U>;\n}\n\nexport interface AddPatchOperation<T = any, U = any> extends BaseOperation<T, U> {\n\top: OperationType.ADD;\n\tvalue: U;\n}\n\nexport interface RemovePatchOperation<T = any, U = any> extends BaseOperation<T, U> {\n\top: OperationType.REMOVE;\n}\n\nexport interface ReplacePatchOperation<T = any, U = any> extends BaseOperation<T, U> {\n\top: OperationType.REPLACE;\n\tvalue: U;\n}\n\nexport interface TestPatchOperation<T = any, U = any> extends BaseOperation<T, U> {\n\top: OperationType.TEST;\n\tvalue: U;\n}\n\nexport type PatchOperation<T = any, U = any> =\n\t| AddPatchOperation<T, U>\n\t| RemovePatchOperation<T, U>\n\t| ReplacePatchOperation<T, U>\n\t| TestPatchOperation<T, U>;\n\nexport interface PatchResult<T = any, U = any> {\n\tobject: T;\n\tundoOperations: PatchOperation<T, U>[];\n}\n\nfunction add(pointerTarget: PointerTarget, value: any): any {\n\tlet index = parseInt(pointerTarget.segment, 10);\n\tif (Array.isArray(pointerTarget.target) && !isNaN(index)) {\n\t\tpointerTarget.target.splice(index, 0, value);\n\t} else {\n\t\tpointerTarget.target[pointerTarget.segment] = value;\n\t}\n\treturn pointerTarget.object;\n}\n\nfunction replace(pointerTarget: PointerTarget, value: any): any {\n\tlet index = parseInt(pointerTarget.segment, 10);\n\tif (Array.isArray(pointerTarget.target) && !isNaN(index)) {\n\t\tpointerTarget.target.splice(index, 1, value);\n\t} else {\n\t\tpointerTarget.target[pointerTarget.segment] = value;\n\t}\n\treturn pointerTarget.object;\n}\n\nfunction remove(pointerTarget: PointerTarget): any {\n\tif (Array.isArray(pointerTarget.target)) {\n\t\tpointerTarget.target.splice(parseInt(pointerTarget.segment, 10), 1);\n\t} else {\n\t\tdelete pointerTarget.target[pointerTarget.segment];\n\t}\n\treturn pointerTarget.object;\n}\n\nfunction inverse(operation: PatchOperation, state: any): PatchOperation[] {\n\tif (operation.op === OperationType.ADD) {\n\t\tconst op: RemovePatchOperation = {\n\t\t\top: OperationType.REMOVE,\n\t\t\tpath: operation.path\n\t\t};\n\t\tconst test: TestPatchOperation = {\n\t\t\top: OperationType.TEST,\n\t\t\tpath: operation.path,\n\t\t\tvalue: operation.value\n\t\t};\n\t\treturn [test, op];\n\t} else if (operation.op === OperationType.REPLACE) {\n\t\tconst value = operation.path.get(state);\n\t\tlet op: RemovePatchOperation | ReplacePatchOperation;\n\t\tif (value === undefined) {\n\t\t\top = {\n\t\t\t\top: OperationType.REMOVE,\n\t\t\t\tpath: operation.path\n\t\t\t};\n\t\t} else {\n\t\t\top = {\n\t\t\t\top: OperationType.REPLACE,\n\t\t\t\tpath: operation.path,\n\t\t\t\tvalue: operation.path.get(state)\n\t\t\t};\n\t\t}\n\t\tconst test: TestPatchOperation = {\n\t\t\top: OperationType.TEST,\n\t\t\tpath: operation.path,\n\t\t\tvalue: operation.value\n\t\t};\n\t\treturn [test, op];\n\t} else {\n\t\treturn [\n\t\t\t{\n\t\t\t\top: OperationType.ADD,\n\t\t\t\tpath: operation.path,\n\t\t\t\tvalue: operation.path.get(state)\n\t\t\t}\n\t\t];\n\t}\n}\n\nexport class Patch<T = any> {\n\tprivate _operations: PatchOperation<T>[];\n\n\tconstructor(operations: PatchOperation<T> | PatchOperation<T>[]) {\n\t\tthis._operations = Array.isArray(operations) ? operations : [operations];\n\t}\n\n\tpublic apply(object: any): PatchResult<T> {\n\t\tlet undoOperations: PatchOperation<T>[] = [];\n\t\tconst patchedObject = this._operations.reduce((patchedObject, next) => {\n\t\t\tlet object;\n\t\t\tconst pointerTarget = walk(next.path.segments, patchedObject);\n\t\t\tswitch (next.op) {\n\t\t\t\tcase OperationType.ADD:\n\t\t\t\t\tobject = add(pointerTarget, next.value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase OperationType.REPLACE:\n\t\t\t\t\tobject = replace(pointerTarget, next.value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase OperationType.REMOVE:\n\t\t\t\t\tobject = remove(pointerTarget);\n\t\t\t\t\tbreak;\n\t\t\t\tcase OperationType.TEST:\n\t\t\t\t\tconst current = pointerTarget.target[pointerTarget.segment];\n\t\t\t\t\tif (!isEqual(current, next.value)) {\n\t\t\t\t\t\tconst location = next.path.path;\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Test operation failure at \"${location}\". ${getFriendlyDifferenceMessage(\n\t\t\t\t\t\t\t\tnext.value,\n\t\t\t\t\t\t\t\tcurrent\n\t\t\t\t\t\t\t)}.`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn patchedObject;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unknown operation');\n\t\t\t}\n\t\t\tundoOperations = [...inverse(next, patchedObject), ...undoOperations];\n\t\t\treturn object;\n\t\t}, object);\n\t\treturn { object: patchedObject, undoOperations };\n\t}\n}\n","import Set from '../../shim/Set';\nimport { from } from '../../shim/array';\n\nexport function isObject(value: any): value is Object {\n\treturn Object.prototype.toString.call(value) === '[object Object]';\n}\n\nexport function isEqual(a: any, b: any): boolean {\n\tif (Array.isArray(a) && Array.isArray(b)) {\n\t\treturn a.length === b.length && a.every((element: any, i: number) => isEqual(element, b[i]));\n\t} else if (isObject(a) && isObject(b)) {\n\t\tconst keysForA = Object.keys(a).sort();\n\t\tconst keysForB = Object.keys(b).sort();\n\t\treturn isEqual(keysForA, keysForB) && keysForA.every((key) => isEqual(a[key], b[key]));\n\t} else {\n\t\treturn a === b;\n\t}\n}\n\nfunction findArrayDifference(a: any[], b: any[]): number {\n\tconst min = Math.min(a.length, b.length);\n\tfor (let i = 0; i < min; i++) {\n\t\tif (!isEqual(a[i], b[i])) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tif (a.length !== b.length) {\n\t\treturn min;\n\t}\n\n\treturn -1;\n}\n\nfunction findShallowObjectKeyDifference(a: { [key: string]: any }, b: { [key: string]: any }): string | undefined {\n\tconst keys = from(new Set([...Object.keys(a), ...Object.keys(b)]).values());\n\n\tfor (let key of keys) {\n\t\tif (!isEqual(a[key], b[key])) {\n\t\t\treturn key;\n\t\t}\n\t}\n}\n\nexport function getFriendlyDifferenceMessage(expected: any, actual: any): string {\n\tconst actualType = getFriendlyTypeName(actual);\n\tconst expectedType = getFriendlyTypeName(expected);\n\n\tif (Array.isArray(expected) && Array.isArray(actual)) {\n\t\tconst offset = findArrayDifference(expected, actual);\n\n\t\tif (offset !== -1) {\n\t\t\treturn `Arrays differed at offset ${offset}`;\n\t\t}\n\t\treturn 'Arrays are identical';\n\t} else if (isObject(expected) && isObject(actual)) {\n\t\tconst key = findShallowObjectKeyDifference(expected, actual);\n\n\t\tif (key) {\n\t\t\tconst expectedValue = expected[key];\n\t\t\tconst actualValue = actual[key];\n\t\t\treturn `Expected \"${expectedValue}\" for object property ${key} but got \"${actualValue}\" instead`;\n\t\t}\n\t\treturn 'Objects are identical';\n\t} else if (!isEqual(expected, actual)) {\n\t\tif (actualType === expectedType) {\n\t\t\treturn `Expected \"${expected}\" but got \"${actual}\" instead`;\n\t\t} else {\n\t\t\treturn `Expected ${expectedType} \"${expected}\" but got ${actualType} \"${actual}\" instead`;\n\t\t}\n\t}\n\n\treturn 'Values are identical';\n}\n\nfunction getFriendlyTypeName(value: any): string {\n\tif (Array.isArray(value)) {\n\t\treturn 'array';\n\t}\n\treturn typeof value;\n}\n","import { create, tsx } from \"@dojo/framework/core/vdom\";\nimport { Link } from \"@dojo/framework/routing/Link\";\n\nimport { ArticleItem } from \"../interfaces\";\n\nexport interface ArticlePreviewProperties {\n\tarticle: ArticleItem;\n\tfavoriteArticle: () => void;\n}\n\nconst factory = create({}).properties<ArticlePreviewProperties>();\n\nexport const ArticlePreview = factory(function ArticlePreview({ properties }) {\n\tconst {\n\t\tfavoriteArticle,\n\t\tarticle,\n\t\tarticle: { author, favorited, slug }\n\t} = properties();\n\n\tlet buttonClasses = [\"btn\", \"btn-outline-primary\", \"btn-sm\", \"pull-xs-right\"];\n\tif (favorited) {\n\t\tbuttonClasses = [\"btn\", \"btn-primary\", \"btn-sm\", \"pull-xs-right\"];\n\t}\n\n\treturn (\n\t\t<div classes={[\"article-preview\"]}>\n\t\t\t<div classes={[\"article-meta\"]}>\n\t\t\t\t<Link to=\"user\" params={{ username: author.username }}>\n\t\t\t\t\t<img src={author.image} />\n\t\t\t\t</Link>\n\t\t\t\t<div classes={[\"info\"]}>\n\t\t\t\t\t<Link classes={[\"author\"]} to=\"user\" params={{ username: author.username }}>\n\t\t\t\t\t\t{author.username}\n\t\t\t\t\t</Link>\n\t\t\t\t\t<span classes={[\"date\"]}>{new Date(article.createdAt).toDateString()}</span>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tonclick={() => {\n\t\t\t\t\t\tfavoriteArticle();\n\t\t\t\t\t}}\n\t\t\t\t\tclasses={buttonClasses}\n\t\t\t\t>\n\t\t\t\t\t<i classes={[\"ion-heart\"]} />\n\t\t\t\t\t<span>{` ${article.favoritesCount}`}</span>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<Link classes={[\"preview-link\"]} to=\"article\" params={{ slug }}>\n\t\t\t\t<h1>{article.title}</h1>\n\t\t\t\t<p>{article.description}</p>\n\t\t\t\t<span>Read more...</span>\n\t\t\t</Link>\n\t\t</div>\n\t);\n});\n\nexport default ArticlePreview;\n","import { create, tsx } from \"@dojo/framework/core/vdom\";\nimport store from \"../store\";\n\nimport { favoriteFeedArticleProcess } from \"./../processes/feedProcesses\";\nimport { ArticlePreview } from \"./ArticlePreview\";\nimport { ArticleItem } from \"../interfaces\";\n\ninterface FeedListProperties {\n\ttype: string;\n\tarticles: ArticleItem[];\n}\n\nconst factory = create({ store }).properties<FeedListProperties>();\n\nexport const FeedList = factory(function Tab({ middleware: { store }, properties }) {\n\tconst { executor } = store;\n\tconst { articles, type } = properties();\n\tif (articles.length) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{articles.map((article) => (\n\t\t\t\t\t<ArticlePreview\n\t\t\t\t\t\tkey={article.slug}\n\t\t\t\t\t\tarticle={article}\n\t\t\t\t\t\tfavoriteArticle={() => {\n\t\t\t\t\t\t\texecutor(favoriteFeedArticleProcess)({\n\t\t\t\t\t\t\t\tslug: article.slug,\n\t\t\t\t\t\t\t\tfavorited: article.favorited,\n\t\t\t\t\t\t\t\ttype\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn <div classes={[\"article-preview\"]}>No articles here, yet!</div>;\n});\n\nexport default FeedList;\n","import { createProcess } from \"@dojo/framework/stores/process\";\nimport { replace, add, remove } from \"@dojo/framework/stores/state/operations\";\nimport { getHeaders, commandFactory } from \"./utils\";\nimport { baseUrl } from \"../config\";\nimport { TitlePayload, DescriptionPayload, BodyPayload, TagPayload, SlugPayload } from \"./interfaces\";\n\nconst titleInputCommand = commandFactory<TitlePayload>(({ path, payload: { title } }) => {\n\treturn [replace(path(\"editor\", \"title\"), title)];\n});\n\nconst descriptionInputCommand = commandFactory<DescriptionPayload>(({ path, payload: { description } }) => {\n\treturn [replace(path(\"editor\", \"description\"), description)];\n});\n\nconst bodyInputCommand = commandFactory<BodyPayload>(({ path, payload: { body } }) => {\n\treturn [replace(path(\"editor\", \"body\"), body)];\n});\n\nconst tagInputCommand = commandFactory<TagPayload>(({ path, payload: { tag } }) => {\n\treturn [replace(path(\"editor\", \"tag\"), tag)];\n});\n\nconst addTagCommand = commandFactory<TagPayload>(({ get, at, path, payload: { tag } }) => {\n\tconst length = (get(path(\"editor\", \"tagList\")) || []).length;\n\treturn [add(at(path(\"editor\", \"tagList\"), length), tag)];\n});\n\nconst clearTagInputCommand = commandFactory(({ path }) => {\n\treturn [replace(path(\"editor\", \"tag\"), \"\")];\n});\n\nconst removeTagCommand = commandFactory<TagPayload>(({ get, at, path, payload: { tag } }) => {\n\tconst tags = get(path(\"editor\", \"tagList\"));\n\tconst index = tags.indexOf(tag);\n\tif (index !== -1) {\n\t\treturn [remove(at(path(\"editor\", \"tagList\"), index))];\n\t}\n\treturn [];\n});\n\nconst getArticleForEditorCommand = commandFactory<SlugPayload>(async ({ path, payload: { slug } }) => {\n\tconst response = await fetch(`${baseUrl}/articles/${slug}`);\n\tconst json = await response.json();\n\treturn [replace(path(\"editor\"), json.article)];\n});\n\nconst clearEditorCommand = commandFactory(({ path }) => {\n\treturn [replace(path(\"editor\"), {})];\n});\n\nconst startPublishCommand = commandFactory(({ path }) => {\n\treturn [replace(path(\"editor\", \"isLoading\"), true)];\n});\n\nconst publishArticleCommand = commandFactory(async ({ get, path }) => {\n\tconst token = get(path(\"session\", \"token\"));\n\tconst slug = get(path(\"editor\", \"slug\"));\n\tconst requestPayload = {\n\t\tarticle: get(path(\"editor\"))\n\t};\n\n\tconst url = slug ? `${baseUrl}/articles/${slug}` : `${baseUrl}/articles`;\n\tconst response = await fetch(url, {\n\t\tmethod: slug ? \"put\" : \"post\",\n\t\theaders: getHeaders(token),\n\t\tbody: JSON.stringify(requestPayload)\n\t});\n\tconst json = await response.json();\n\n\tif (!response.ok) {\n\t\treturn [replace(path(\"editor\", \"isLoading\"), false), replace(path(\"errors\"), json.errors)];\n\t}\n\n\treturn [\n\t\treplace(path(\"article\", slug, \"item\"), json.article),\n\t\treplace(path(\"article\", slug, \"isLoading\"), true),\n\t\treplace(path(\"editor\"), undefined)\n\t];\n});\n\nexport const titleInputProcess = createProcess(\"title-input\", [titleInputCommand]);\nexport const descInputProcess = createProcess(\"desc-input\", [descriptionInputCommand]);\nexport const bodyInputProcess = createProcess(\"body-input\", [bodyInputCommand]);\nexport const tagInputProcess = createProcess(\"tag-input\", [tagInputCommand]);\nexport const addTagProcess = createProcess(\"add-tag\", [addTagCommand, clearTagInputCommand]);\nexport const removeTagProcess = createProcess(\"remove-tag\", [removeTagCommand]);\nexport const getEditorArticleProcess = createProcess(\"get-editor-article\", [getArticleForEditorCommand]);\nexport const publishArticleProcess = createProcess(\"publish-article\", [startPublishCommand, publishArticleCommand]);\nexport const clearEditorProcess = createProcess(\"clear-editor\", [clearEditorCommand]);\n","import { create, tsx } from \"@dojo/framework/core/vdom\";\nimport store from \"../store\";\nimport {\n\tgetEditorArticleProcess,\n\ttitleInputProcess,\n\tdescInputProcess,\n\tbodyInputProcess,\n\ttagInputProcess,\n\taddTagProcess,\n\tremoveTagProcess,\n\tpublishArticleProcess\n} from \"../processes/editorProcesses\";\nimport ErrorList from \"./ErrorList\";\n\nexport interface EditorProperties {\n\tslug?: string;\n}\n\nconst factory = create({ store }).properties<EditorProperties>();\n\nexport const Editor = factory(function Editor({ middleware: { store }, properties }) {\n\tconst { get, path, executor } = store;\n\tconst article = get(path(\"editor\")) || {};\n\tconst errors = get(path(\"errors\"));\n\tconst { slug } = properties();\n\n\tif (slug && (!article || (article.slug !== slug && !article.isLoading))) {\n\t\texecutor(getEditorArticleProcess)({ slug });\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div classes={[\"editor-page\"]}>\n\t\t\t<div classes={[\"container\", \"page\"]}>\n\t\t\t\t<div classes={[\"row\"]}>\n\t\t\t\t\t<div classes={[\"col-md-10\", \"offset-md-1\", \"col-xs-12\"]}>\n\t\t\t\t\t\t{errors && <ErrorList errors={errors} />}\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t\t<fieldset classes={[\"form-group\"]}>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tvalue={article.title}\n\t\t\t\t\t\t\t\t\t\toninput={(event: KeyboardEvent) => {\n\t\t\t\t\t\t\t\t\t\t\tconst target = event.target as HTMLInputElement;\n\t\t\t\t\t\t\t\t\t\t\texecutor(titleInputProcess)({ title: target.value });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Article Title\"\n\t\t\t\t\t\t\t\t\t\tclasses={[\"form-control\", \"form-control-lg\"]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t<fieldset classes={[\"form-group\"]}>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tvalue={article.description}\n\t\t\t\t\t\t\t\t\t\toninput={(event: KeyboardEvent) => {\n\t\t\t\t\t\t\t\t\t\t\tconst target = event.target as HTMLInputElement;\n\t\t\t\t\t\t\t\t\t\t\texecutor(descInputProcess)({ description: target.value });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"What's this article about?\"\n\t\t\t\t\t\t\t\t\t\tclasses={[\"form-control\", \"form-control-lg\"]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t<fieldset classes={[\"form-group\"]}>\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tvalue={article.body}\n\t\t\t\t\t\t\t\t\t\toninput={(event: KeyboardEvent) => {\n\t\t\t\t\t\t\t\t\t\t\tconst target = event.target as HTMLInputElement;\n\t\t\t\t\t\t\t\t\t\t\texecutor(bodyInputProcess)({ body: target.value });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\trows={8}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Write your article (in markdown)\"\n\t\t\t\t\t\t\t\t\t\tclasses={[\"form-control\"]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t<fieldset classes={[\"form-group\"]}>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tonkeydown={(event: KeyboardEvent) => {\n\t\t\t\t\t\t\t\t\t\t\tif (event.keyCode === 13) {\n\t\t\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\tconst target = event.target as HTMLInputElement;\n\t\t\t\t\t\t\t\t\t\t\t\texecutor(addTagProcess)({ tag: target.value });\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\toninput={(event: KeyboardEvent) => {\n\t\t\t\t\t\t\t\t\t\t\tconst target = event.target as HTMLInputElement;\n\t\t\t\t\t\t\t\t\t\t\texecutor(tagInputProcess)({ tag: target.value });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tvalue={article.tag}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter Tag\"\n\t\t\t\t\t\t\t\t\t\tclasses={[\"form-control\"]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div classes={[\"tag-list\"]}>\n\t\t\t\t\t\t\t\t\t\t{article.tagList &&\n\t\t\t\t\t\t\t\t\t\t\tarticle.tagList.map((tag) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<span classes={[\"tag-default\", \"tag-pill\"]}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonclick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texecutor(removeTagProcess)({ tag });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses={[\"ion-close-round\"]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tdisabled={article.isLoaded && article.isLoading}\n\t\t\t\t\t\t\t\t\tonclick={(event: MouseEvent) => {\n\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t\texecutor(publishArticleProcess)({});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclasses={[\"btn\", \"btn-lg\", \"pull-xs-right\", \"btn-primary\"]}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tPublish Article\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n});\n\nexport default Editor;\n"],"sourceRoot":""}