{"version":3,"sources":["webpack://realworld_app/./src/processes/settingsProcesses.ts","webpack://realworld_app/./src/widgets/Settings.tsx"],"names":["emailInputCommand","Object","utils","payload","email","path","operations","passwordInputCommand","password","usernameInputCommand","username","bioInputCommand","bio","imageUrlInputCommand","imageUrl","startUserSettingsCommand","isLoaded","isLoading","getUserSettingsCommand","get","updateUserSettingsCommand","async","token","requestPayload","response","fetch","config","method","headers","body","JSON","stringify","json","user","undefined","getUserSettingsProcess","process","updateUserSettingsProcess","usernameInputProcess","emailInputProcess","passwordInputProcess","bioInputProcess","imageUrlInputProcess","__webpack_require__","d","__webpack_exports__","Settings_Settings","vdom","store","src_store","factory","middleware","executor","settings","classes","value","image","oninput","event","target","placeholder","rows","type","onclick","preventDefault","loginProcesses"],"mappings":"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","file":"src/widgets/Settings.6307a817628ec0f78a12.bundle.js","sourcesContent":["import { createProcess } from \"@dojo/framework/stores/process\";\nimport { replace } from \"@dojo/framework/stores/state/operations\";\nimport { getHeaders, commandFactory } from \"./utils\";\nimport { baseUrl } from \"../config\";\nimport { EmailPayload, PasswordPayload, UsernamePayload, ImagePayload, BioPayload } from \"./interfaces\";\n\nconst emailInputCommand = commandFactory<EmailPayload>(({ payload: { email }, path }) => {\n\treturn [replace(path(\"settings\", \"email\"), email)];\n});\n\nconst passwordInputCommand = commandFactory<PasswordPayload>(({ payload: { password }, path }) => {\n\treturn [replace(path(\"settings\", \"password\"), password)];\n});\n\nconst usernameInputCommand = commandFactory<UsernamePayload>(({ payload: { username }, path }) => {\n\treturn [replace(path(\"settings\", \"username\"), username)];\n});\n\nconst bioInputCommand = commandFactory<BioPayload>(({ payload: { bio }, path }) => {\n\treturn [replace(path(\"settings\", \"bio\"), bio)];\n});\n\nconst imageUrlInputCommand = commandFactory<ImagePayload>(({ payload: { imageUrl }, path }) => {\n\treturn [replace(path(\"settings\", \"image\"), imageUrl)];\n});\n\nconst startUserSettingsCommand = commandFactory(({ path }) => {\n\treturn [replace(path(\"settings\"), { isLoaded: false, isLoading: false })];\n});\n\nconst getUserSettingsCommand = commandFactory(({ path, get }) => {\n\treturn [replace(path(\"settings\"), get(path(\"session\")))];\n});\n\nconst updateUserSettingsCommand = commandFactory(async ({ path, get }) => {\n\tconst token = get(path(\"session\", \"token\"));\n\tconst requestPayload = get(path(\"settings\"));\n\tconst response = await fetch(`${baseUrl}/user`, {\n\t\tmethod: \"put\",\n\t\theaders: getHeaders(token),\n\t\tbody: JSON.stringify(requestPayload)\n\t});\n\n\tconst json = await response.json();\n\n\treturn [\n\t\treplace(path(\"session\"), json.user),\n\t\treplace(path(\"settings\"), undefined),\n\t\treplace(path(\"routing\", \"outlet\"), \"user\"),\n\t\treplace(path(\"routing\", \"params\"), { username: get(path(\"settings\", \"username\")) })\n\t];\n});\n\nexport const getUserSettingsProcess = createProcess(\"user-settings\", [\n\tstartUserSettingsCommand,\n\tgetUserSettingsCommand\n]);\nexport const updateUserSettingsProcess = createProcess(\"update-user-settings\", [updateUserSettingsCommand]);\nexport const usernameInputProcess = createProcess(\"username-input\", [usernameInputCommand]);\nexport const emailInputProcess = createProcess(\"email-input\", [emailInputCommand]);\nexport const passwordInputProcess = createProcess(\"password-input\", [passwordInputCommand]);\nexport const bioInputProcess = createProcess(\"bio-input\", [bioInputCommand]);\nexport const imageUrlInputProcess = createProcess(\"image-url-input\", [imageUrlInputCommand]);\n","import { create, tsx } from \"@dojo/framework/core/vdom\";\nimport store from \"../store\";\nimport {\n\tbioInputProcess,\n\temailInputProcess,\n\tpasswordInputProcess,\n\timageUrlInputProcess,\n\tgetUserSettingsProcess,\n\tusernameInputProcess,\n\tupdateUserSettingsProcess\n} from \"./../processes/settingsProcesses\";\nimport { logoutProcess } from \"../processes/loginProcesses\";\n\nconst factory = create({ store });\n\nexport const Settings = factory(function Settings({ middleware: { store } }) {\n\tconst { get, path, executor } = store;\n\tconst settings = get(path(\"settings\"));\n\n\tif (!settings) {\n\t\texecutor(getUserSettingsProcess)({});\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div classes={[\"editor-page\"]}>\n\t\t\t<div classes={[\"container\", \"page\"]}>\n\t\t\t\t<div classes={[\"row\"]}>\n\t\t\t\t\t<div classes={[\"col-md-10\", \"offset-md-1\", \"col-xs-12\"]}>\n\t\t\t\t\t\t<h1 classes={[\"text-xs-center\"]}>Your Settings</h1>\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t\t<fieldset classes={[\"form-group\"]}>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tvalue={settings.image}\n\t\t\t\t\t\t\t\t\t\toninput={(event: KeyboardEvent) => {\n\t\t\t\t\t\t\t\t\t\t\tconst target = event.target as HTMLInputElement;\n\t\t\t\t\t\t\t\t\t\t\texecutor(imageUrlInputProcess)({ imageUrl: target.value });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\t\tclasses={[\"form-control\", \"form-control-lg\"]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t<fieldset classes={[\"form-group\"]}>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tvalue={settings.username}\n\t\t\t\t\t\t\t\t\t\toninput={(event: KeyboardEvent) => {\n\t\t\t\t\t\t\t\t\t\t\tconst target = event.target as HTMLInputElement;\n\t\t\t\t\t\t\t\t\t\t\texecutor(usernameInputProcess)({ username: target.value });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Your Name\"\n\t\t\t\t\t\t\t\t\t\tclasses={[\"form-control\", \"form-control-lg\"]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t<fieldset classes={[\"form-group\"]}>\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\trows={8}\n\t\t\t\t\t\t\t\t\t\tvalue={settings.bio}\n\t\t\t\t\t\t\t\t\t\toninput={(event: KeyboardEvent) => {\n\t\t\t\t\t\t\t\t\t\t\tconst target = event.target as HTMLTextAreaElement;\n\t\t\t\t\t\t\t\t\t\t\texecutor(bioInputProcess)({ bio: target.value });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Short bio about you\"\n\t\t\t\t\t\t\t\t\t\tclasses={[\"form-control\", \"form-control-lg\"]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t<fieldset classes={[\"form-group\"]}>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tvalue={settings.email}\n\t\t\t\t\t\t\t\t\t\toninput={(event: KeyboardEvent) => {\n\t\t\t\t\t\t\t\t\t\t\tconst target = event.target as HTMLInputElement;\n\t\t\t\t\t\t\t\t\t\t\texecutor(emailInputProcess)({ email: target.value });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\t\t\tclasses={[\"form-control\", \"form-control-lg\"]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t<fieldset classes={[\"form-group\"]}>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tvalue={settings.password}\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\toninput={(event: KeyboardEvent) => {\n\t\t\t\t\t\t\t\t\t\t\tconst target = event.target as HTMLInputElement;\n\t\t\t\t\t\t\t\t\t\t\texecutor(passwordInputProcess)({ password: target.value });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\t\tclasses={[\"form-control\", \"form-control-lg\"]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tonclick={(event: MouseEvent) => {\n\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t\texecutor(updateUserSettingsProcess)({});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tclasses={[\"btn\", \"btn-lg\", \"btn-primary\", \"pull-xs-right\"]}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tUpdate Settings\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonclick={() => {\n\t\t\t\t\t\t\t\texecutor(logoutProcess)({});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclasses={[\"btn\", \"btn-outline-danger\"]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tOr click here to logout\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n});\n\nexport default Settings;\n"],"sourceRoot":""}